"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[7914],{4311:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-737b2a2a",path:"/blogs/JavaScript/MDN-JavaScript.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"MDN-JavaScript",slug:"mdn-javascript",children:[{level:3,title:"前导",slug:"前导",children:[]},{level:3,title:"Promise",slug:"promise",children:[]},{level:3,title:"客户端网页API",slug:"客户端网页api",children:[]},{level:3,title:"DOM操作",slug:"dom操作",children:[]},{level:3,title:"AJAX",slug:"ajax",children:[]}]}],git:{},filePathRelative:"blogs/JavaScript/MDN-JavaScript.md"}},7395:(n,a,s)=>{s.r(a),s.d(a,{default:()=>L});var e=s(6252);const t=(0,e._)("h2",{id:"mdn-javascript",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#mdn-javascript","aria-hidden":"true"},"#"),(0,e.Uk)(" MDN-JavaScript")],-1),p=(0,e._)("h3",{id:"前导",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#前导","aria-hidden":"true"},"#"),(0,e.Uk)(" 前导")],-1),o=(0,e._)("strong",null,"JavaScript (",-1),r=(0,e.Uk)(),l=(0,e._)("strong",null,"JS",-1),c=(0,e.Uk)(" ) 是一种具有"),i={href:"https://developer.mozilla.org/zh-CN/docs/Glossary/First-class_Function",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("函数优先"),k=(0,e.Uk)("的轻量级，解释型或即时编译型的编程语言"),d=(0,e.Uk)("JavaScript的标准是"),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Language_Resources",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("ECMAScript"),b=(0,e.uE)('<p><strong>异步编程：</strong></p><p><strong>并行</strong>，指同一时刻内多任务同时进行。边煮饭，边烧水，可以同时进行 。<strong>并发</strong>，指在同一时间段内，多任务同时进行着，但是某一时刻，只有某一 任务执行。边吃饭边喝水，同一时间点只能喝水和吃饭。</p><p><strong>堆（heap）</strong>：内存中某一未被阻止的区域，通常存储对象（引用类型）；</p><p><strong>栈（stack）</strong>：后进先出的顺序存储数据结构，通常存储函数参数和基本类 型值变量（按值访问）；</p><p><strong>队列（queue）</strong>：先进先出顺序存储数据结构。</p><h4 id="事件循环" tabindex="-1"><a class="header-anchor" href="#事件循环" aria-hidden="true">#</a> 事件循环</h4><p>JavaScript 引擎负责解析，执行 JavaScript 代码，但它并不能单独运行，通常都得有一个宿主环境，一般如浏览器或 Node 服务器，前文说到的单线程是指在这些宿主环境创建单一线程，提供一种机制，调用 JavaScript 引擎完成多个 JavaScript 代码块的调度，执行（是的，JavaScript 代码都是按块执行的），这种机制就称为事件循环（Event Loop）。 JavaScript 执行环境中存在的两个结构需要了解：</p><p>​ 消息队列(message queue)，也叫任务队列（task queue）：存储待处理消 息及对应的回调函数或事件处理程序； 执行栈(execution context stack)，也可以叫执行上下文栈：JavaScript 执行栈，顾名思义，是由执行上下文组成，当函数调用时，创建并插入一个执 行上下文，通常称为执行栈帧（frame），存储着函数参数和局部变量， 当该函数执行结束时，弹出该执行栈帧； 注：关于全局代码，由于所有的代码都是在全局上下文执行，所以执行栈 顶总是全局上下文就很容易理解，直到所有代码执行完毕，全局上下文退 出执行栈，栈清空了；也即是全局上下文是第一个入栈，最后一个出栈。</p><p>​ 任务：分析事件循环流程前，先阐述两个概念，有助于理解事件循环：同步任务 和异步任务。 任务很好理解，JavaScript 代码执行就是在完成任务，所谓任务就是一个 函数或一个代码块，通常以功能或目的划分，比如完成一次加法计算，完 成一次 ajax 请求；很自然的就分为同步任务和异步任务。同步任务是连续的，阻塞的；而异步任务则是不连续，非阻塞的，包含异步事件及其回调， 当我们谈及执行异步任务时，通常指执行其回调函数。</p><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h3><ul><li>链式传递</li><li>严格按照它们放置的事件队列的顺序调用</li><li>错误处理一步到位</li></ul><h3 id="客户端网页api" tabindex="-1"><a class="header-anchor" href="#客户端网页api" aria-hidden="true">#</a> 客户端网页API</h3>',12),g=(0,e.Uk)("window是载入浏览器的标签，在JavaScript中用"),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("Window"),_=(0,e.Uk)("对象来表示，使用这个对象的可用方法，你可以返回窗口的大小（参见"),x={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/innerWidth",target:"_blank",rel:"noopener noreferrer"},S=(0,e.Uk)("Window.innerWidth"),w=(0,e.Uk)("和"),W={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/innerHeight",target:"_blank",rel:"noopener noreferrer"},U=(0,e.Uk)("Window.innerHeight"),J=(0,e.Uk)("），操作载入窗口的文档，存储客户端上文档的特殊数据（例如使用本地数据库或其他存储设备），为当前窗口绑定"),y={href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#a_series_of_fortunate_events",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Uk)("event handler"),C=(0,e.Uk)("，等等。"),N=(0,e.Uk)("navigator表示浏览器存在于web上的状态和标识（即用户代理）。在JavaScript中，用"),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Navigator",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("Navigator"),I=(0,e.Uk)("来表示。你可以用这个对象获取一些信息，比如来自用户摄像头的地理信息、用户偏爱的语言、多媒体流等等。"),E=(0,e.Uk)("document（在浏览器中用DOM表示）是载入窗口的实际页面，在JavaScript中用"),P={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Document",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("Document"),H=(0,e.Uk)(" 对象表示，你可以用这个对象来返回和操作文档中HTML和CSS上的信息。例如获取DOM中一个元素的引用，修改其文本内容，并应用新的样式，创建新的元素并添加为当前元素的子元素，甚至把他们一起删除。"),M=(0,e.uE)('<h3 id="dom操作" tabindex="-1"><a class="header-anchor" href="#dom操作" aria-hidden="true">#</a> DOM操作</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 创建节点 先选中节点</span>\n<span class="token keyword">var</span> sect <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;section&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> para <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\npara<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 选择节点</span>\n<span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> xxx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token keyword">var</span> xxx <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByTagName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 删除节点</span>\nsect<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>linkPara<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 操作CSS</span>\npara<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">;</span> <span class="token comment">// not that BLACK;</span>\npara<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;class&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;highlight&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// window总体</span>\n<span class="token keyword">let</span> <span class="token constant">WIDTH</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token constant">HEIGHT</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWeight<span class="token punctuation">;</span>\nwindow<span class="token punctuation">.</span><span class="token function-variable function">onresize</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    xxx<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token constant">WIDTH</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>\n    xxx<span class="token punctuation">.</span>style<span class="token punctuation">.</span>weight <span class="token operator">=</span> <span class="token constant">WEIGHT</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> AJAX</h3>',3),q={},L=(0,s(3744).Z)(q,[["render",function(n,a){const s=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,p,(0,e._)("p",null,[o,r,l,c,(0,e._)("a",i,[u,(0,e.Wm)(s)]),k]),(0,e._)("blockquote",null,[(0,e._)("p",null,[d,(0,e._)("a",h,[m,(0,e.Wm)(s)])])]),b,(0,e._)("ul",null,[(0,e._)("li",null,[g,(0,e._)("a",v,[f,(0,e.Wm)(s)]),_,(0,e._)("a",x,[S,(0,e.Wm)(s)]),w,(0,e._)("a",W,[U,(0,e.Wm)(s)]),J,(0,e._)("a",y,[z,(0,e.Wm)(s)]),C]),(0,e._)("li",null,[N,(0,e._)("a",A,[D,(0,e.Wm)(s)]),I]),(0,e._)("li",null,[E,(0,e._)("a",P,[j,(0,e.Wm)(s)]),H])]),M],64)}]])}}]);