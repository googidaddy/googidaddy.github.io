"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[6719],{936:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"}},9488:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6252);const p=(0,e._)("p",null,[(0,e._)("strong",null,"本文阅读大概需要3分钟")],-1),t=(0,e._)("h2",{id:"简介",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),(0,e.Uk)(" 简介")],-1),o={href:"https://github.com/Delgan/loguru",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("loguru"),r=(0,e.Uk)("是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。"),c=(0,e.uE)('<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>初步体验：</p><p><strong>loguru封装好了logger，全局使用</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;可以用了!&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p><p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;error.txt&#39;</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">&#39;10MB&#39;</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">&#39;zip&#39;</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;调试消息&#39;</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;普通消息&#39;</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">&#39;警告消息&#39;</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">&#39;错误消息&#39;</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">&#39;严重错误消息&#39;</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">&#39;成功调用&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p><ul><li><p><code>roration</code>限制日志的大小或者以时间单位更新</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;file_1.log&quot;</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">&quot;500 MB&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;file_2.log&quot;</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">&quot;12:00&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;file_3.log&quot;</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">&quot;1 week&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><code>encoding</code> 编码形式</p></li><li><p><code>enqueue=True</code> 运行异步</p></li><li><p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p></li><li><p><strong><code>比较重要的filter</code></strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;logs/jobs-info-{time:YYYY-MM-DD}.log&quot;</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">&quot;INFO&quot;</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">&#39;level&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;logs/jobs-error-{time:YYYY-MM-DD}.log&quot;</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">&quot;ERROR&quot;</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">&#39;level&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件 ERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p></li><li><p>时间格式</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>from loguru import logger\n\nlogger.add(&#39;file.log&#39;, format=&#39;{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}&#39;, encoding=&#39;utf-8&#39;)\nlogger.debug(&#39;调试消息&#39;)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>装饰器</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == &#39;__main__&#39;:\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>loguru规范好，还是很好用和维护的。</p>',14),u={},i=(0,a(3744).Z)(u,[["render",function(n,s){const a=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,t,(0,e._)("p",null,[(0,e._)("a",o,[l,(0,e.Wm)(a)]),r]),c],64)}]])}}]);