"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[6226],{1214:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"}},4396:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<p><strong>远程开发真的太好了</strong></p><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3><p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p><p>原理：利用SSH链接远程服务器交互数据</p><p>流程</p><ul><li>在远程服务器创建docker container</li><li>在远程服务器配置ssh</li><li><code>Pycharm</code>链接远程服务器</li><li><code>Pycharm</code>链接远程服务器的container</li></ul><h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3><p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p><blockquote><p>-p 8022:22</p></blockquote><h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3><p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">&#39;s/PermitRootLogin prohibit-password/PermitRootLogin yes/&#39;</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">&#39;s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g&#39;</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;export VISIBLE=now&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3><p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p><p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p><p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p><h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3><p>在容器/服务器内找到python</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>',29),r={},p=(0,a(3744).Z)(r,[["render",function(s,n){return e}]])}}]);