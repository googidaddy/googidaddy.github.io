/*! For license information please see 3769.cb625991.js.LICENSE.txt */
(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[3769],{2262:(n,s,e)=>{"use strict";e.d(s,{Bj:()=>o,qq:()=>b,Fl:()=>On,X3:()=>xn,PG:()=>vn,dq:()=>En,Xl:()=>yn,Jd:()=>f,WL:()=>Bn,qj:()=>gn,OT:()=>kn,iH:()=>Pn,lk:()=>y,Um:()=>mn,XI:()=>jn,IU:()=>fn,BK:()=>Ln,j:()=>M,X$:()=>S,SU:()=>Rn});var a=e(3577);let t;const r=[];class o{constructor(n=!1){this.active=!0,this.effects=[],this.cleanups=[],!n&&t&&(this.parent=t,this.index=(t.scopes||(t.scopes=[])).push(this)-1)}run(n){if(this.active)try{return this.on(),n()}finally{this.off()}}on(){this.active&&(r.push(this),t=this)}off(){this.active&&(r.pop(),t=r[r.length-1])}stop(n){if(this.active){if(this.effects.forEach((n=>n.stop())),this.cleanups.forEach((n=>n())),this.scopes&&this.scopes.forEach((n=>n.stop(!0))),this.parent&&!n){const n=this.parent.scopes.pop();n&&n!==this&&(this.parent.scopes[this.index]=n,n.index=this.index)}this.active=!1}}}const p=n=>{const s=new Set(n);return s.w=0,s.n=0,s},l=n=>(n.w&d)>0,i=n=>(n.n&d)>0,c=new WeakMap;let u=0,d=1;const h=[];let g;const m=Symbol(""),k=Symbol("");class b{constructor(n,s=null,e){this.fn=n,this.scheduler=s,this.active=!0,this.deps=[],function(n,s){(s=s||t)&&s.active&&s.effects.push(n)}(this,e)}run(){if(!this.active)return this.fn();if(!h.includes(this))try{return h.push(g=this),x.push(w),w=!0,d=1<<++u,u<=30?(({deps:n})=>{if(n.length)for(let s=0;s<n.length;s++)n[s].w|=d})(this):v(this),this.fn()}finally{u<=30&&(n=>{const{deps:s}=n;if(s.length){let e=0;for(let a=0;a<s.length;a++){const t=s[a];l(t)&&!i(t)?t.delete(n):s[e++]=t,t.w&=~d,t.n&=~d}s.length=e}})(this),d=1<<--u,y(),h.pop();const n=h.length;g=n>0?h[n-1]:void 0}}stop(){this.active&&(v(this),this.onStop&&this.onStop(),this.active=!1)}}function v(n){const{deps:s}=n;if(s.length){for(let e=0;e<s.length;e++)s[e].delete(n);s.length=0}}let w=!0;const x=[];function f(){x.push(w),w=!1}function y(){const n=x.pop();w=void 0===n||n}function M(n,s,e){if(!_())return;let a=c.get(n);a||c.set(n,a=new Map);let t=a.get(e);t||a.set(e,t=p()),C(t)}function _(){return w&&void 0!==g}function C(n,s){let e=!1;u<=30?i(n)||(n.n|=d,e=!l(n)):e=!n.has(g),e&&(n.add(g),g.deps.push(n))}function S(n,s,e,t,r,o){const l=c.get(n);if(!l)return;let i=[];if("clear"===s)i=[...l.values()];else if("length"===e&&(0,a.kJ)(n))l.forEach(((n,s)=>{("length"===s||s>=t)&&i.push(n)}));else switch(void 0!==e&&i.push(l.get(e)),s){case"add":(0,a.kJ)(n)?(0,a.S0)(e)&&i.push(l.get("length")):(i.push(l.get(m)),(0,a._N)(n)&&i.push(l.get(k)));break;case"delete":(0,a.kJ)(n)||(i.push(l.get(m)),(0,a._N)(n)&&i.push(l.get(k)));break;case"set":(0,a._N)(n)&&i.push(l.get(m))}if(1===i.length)i[0]&&E(i[0]);else{const n=[];for(const s of i)s&&n.push(...s);E(p(n))}}function E(n,s){for(const s of(0,a.kJ)(n)?n:[...n])(s!==g||s.allowRecurse)&&(s.scheduler?s.scheduler():s.run())}const P=(0,a.fY)("__proto__,__v_isRef,__isVue"),j=new Set(Object.getOwnPropertyNames(Symbol).map((n=>Symbol[n])).filter(a.yk)),A=L(),D=L(!1,!0),R=L(!0),F=B();function B(){const n={};return["includes","indexOf","lastIndexOf"].forEach((s=>{n[s]=function(...n){const e=fn(this);for(let n=0,s=this.length;n<s;n++)M(e,0,n+"");const a=e[s](...n);return-1===a||!1===a?e[s](...n.map(fn)):a}})),["push","pop","shift","unshift","splice"].forEach((s=>{n[s]=function(...n){f();const e=fn(this)[s].apply(this,n);return y(),e}})),n}function L(n=!1,s=!1){return function(e,t,r){if("__v_isReactive"===t)return!n;if("__v_isReadonly"===t)return n;if("__v_raw"===t&&r===(n?s?hn:dn:s?un:cn).get(e))return e;const o=(0,a.kJ)(e);if(!n&&o&&(0,a.RI)(F,t))return Reflect.get(F,t,r);const p=Reflect.get(e,t,r);return((0,a.yk)(t)?j.has(t):P(t))?p:(n||M(e,0,t),s?p:En(p)?o&&(0,a.S0)(t)?p:p.value:(0,a.Kn)(p)?n?kn(p):gn(p):p)}}const T=N(),I=N(!0);function N(n=!1){return function(s,e,t,r){let o=s[e];if(!n&&!wn(t)&&(t=fn(t),o=fn(o),!(0,a.kJ)(s)&&En(o)&&!En(t)))return o.value=t,!0;const p=(0,a.kJ)(s)&&(0,a.S0)(e)?Number(e)<s.length:(0,a.RI)(s,e),l=Reflect.set(s,e,t,r);return s===fn(r)&&(p?(0,a.aU)(t,o)&&S(s,"set",e,t):S(s,"add",e,t)),l}}const O={get:A,set:T,deleteProperty:function(n,s){const e=(0,a.RI)(n,s),t=(n[s],Reflect.deleteProperty(n,s));return t&&e&&S(n,"delete",s,void 0),t},has:function(n,s){const e=Reflect.has(n,s);return(0,a.yk)(s)&&j.has(s)||M(n,0,s),e},ownKeys:function(n){return M(n,0,(0,a.kJ)(n)?"length":m),Reflect.ownKeys(n)}},V={get:R,set:(n,s)=>!0,deleteProperty:(n,s)=>!0},Z=(0,a.l7)({},O,{get:D,set:I}),H=n=>n,U=n=>Reflect.getPrototypeOf(n);function z(n,s,e=!1,a=!1){const t=fn(n=n.__v_raw),r=fn(s);s!==r&&!e&&M(t,0,s),!e&&M(t,0,r);const{has:o}=U(t),p=a?H:e?_n:Mn;return o.call(t,s)?p(n.get(s)):o.call(t,r)?p(n.get(r)):void(n!==t&&n.get(s))}function q(n,s=!1){const e=this.__v_raw,a=fn(e),t=fn(n);return n!==t&&!s&&M(a,0,n),!s&&M(a,0,t),n===t?e.has(n):e.has(n)||e.has(t)}function $(n,s=!1){return n=n.__v_raw,!s&&M(fn(n),0,m),Reflect.get(n,"size",n)}function K(n){n=fn(n);const s=fn(this);return U(s).has.call(s,n)||(s.add(n),S(s,"add",n,n)),this}function Y(n,s){s=fn(s);const e=fn(this),{has:t,get:r}=U(e);let o=t.call(e,n);o||(n=fn(n),o=t.call(e,n));const p=r.call(e,n);return e.set(n,s),o?(0,a.aU)(s,p)&&S(e,"set",n,s):S(e,"add",n,s),this}function W(n){const s=fn(this),{has:e,get:a}=U(s);let t=e.call(s,n);t||(n=fn(n),t=e.call(s,n)),a&&a.call(s,n);const r=s.delete(n);return t&&S(s,"delete",n,void 0),r}function G(){const n=fn(this),s=0!==n.size,e=n.clear();return s&&S(n,"clear",void 0,void 0),e}function J(n,s){return function(e,a){const t=this,r=t.__v_raw,o=fn(r),p=s?H:n?_n:Mn;return!n&&M(o,0,m),r.forEach(((n,s)=>e.call(a,p(n),p(s),t)))}}function X(n,s,e){return function(...t){const r=this.__v_raw,o=fn(r),p=(0,a._N)(o),l="entries"===n||n===Symbol.iterator&&p,i="keys"===n&&p,c=r[n](...t),u=e?H:s?_n:Mn;return!s&&M(o,0,i?k:m),{next(){const{value:n,done:s}=c.next();return s?{value:n,done:s}:{value:l?[u(n[0]),u(n[1])]:u(n),done:s}},[Symbol.iterator](){return this}}}}function Q(n){return function(...s){return"delete"!==n&&this}}function nn(){const n={get(n){return z(this,n)},get size(){return $(this)},has:q,add:K,set:Y,delete:W,clear:G,forEach:J(!1,!1)},s={get(n){return z(this,n,!1,!0)},get size(){return $(this)},has:q,add:K,set:Y,delete:W,clear:G,forEach:J(!1,!0)},e={get(n){return z(this,n,!0)},get size(){return $(this,!0)},has(n){return q.call(this,n,!0)},add:Q("add"),set:Q("set"),delete:Q("delete"),clear:Q("clear"),forEach:J(!0,!1)},a={get(n){return z(this,n,!0,!0)},get size(){return $(this,!0)},has(n){return q.call(this,n,!0)},add:Q("add"),set:Q("set"),delete:Q("delete"),clear:Q("clear"),forEach:J(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach((t=>{n[t]=X(t,!1,!1),e[t]=X(t,!0,!1),s[t]=X(t,!1,!0),a[t]=X(t,!0,!0)})),[n,e,s,a]}const[sn,en,an,tn]=nn();function rn(n,s){const e=s?n?tn:an:n?en:sn;return(s,t,r)=>"__v_isReactive"===t?!n:"__v_isReadonly"===t?n:"__v_raw"===t?s:Reflect.get((0,a.RI)(e,t)&&t in s?e:s,t,r)}const on={get:rn(!1,!1)},pn={get:rn(!1,!0)},ln={get:rn(!0,!1)},cn=new WeakMap,un=new WeakMap,dn=new WeakMap,hn=new WeakMap;function gn(n){return n&&n.__v_isReadonly?n:bn(n,!1,O,on,cn)}function mn(n){return bn(n,!1,Z,pn,un)}function kn(n){return bn(n,!0,V,ln,dn)}function bn(n,s,e,t,r){if(!(0,a.Kn)(n))return n;if(n.__v_raw&&(!s||!n.__v_isReactive))return n;const o=r.get(n);if(o)return o;const p=(l=n).__v_skip||!Object.isExtensible(l)?0:function(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}((0,a.W7)(l));var l;if(0===p)return n;const i=new Proxy(n,2===p?t:e);return r.set(n,i),i}function vn(n){return wn(n)?vn(n.__v_raw):!(!n||!n.__v_isReactive)}function wn(n){return!(!n||!n.__v_isReadonly)}function xn(n){return vn(n)||wn(n)}function fn(n){const s=n&&n.__v_raw;return s?fn(s):n}function yn(n){return(0,a.Nj)(n,"__v_skip",!0),n}const Mn=n=>(0,a.Kn)(n)?gn(n):n,_n=n=>(0,a.Kn)(n)?kn(n):n;function Cn(n){_()&&((n=fn(n)).dep||(n.dep=p()),C(n.dep))}function Sn(n,s){(n=fn(n)).dep&&E(n.dep)}function En(n){return Boolean(n&&!0===n.__v_isRef)}function Pn(n){return An(n,!1)}function jn(n){return An(n,!0)}function An(n,s){return En(n)?n:new Dn(n,s)}class Dn{constructor(n,s){this._shallow=s,this.dep=void 0,this.__v_isRef=!0,this._rawValue=s?n:fn(n),this._value=s?n:Mn(n)}get value(){return Cn(this),this._value}set value(n){n=this._shallow?n:fn(n),(0,a.aU)(n,this._rawValue)&&(this._rawValue=n,this._value=this._shallow?n:Mn(n),Sn(this))}}function Rn(n){return En(n)?n.value:n}const Fn={get:(n,s,e)=>Rn(Reflect.get(n,s,e)),set:(n,s,e,a)=>{const t=n[s];return En(t)&&!En(e)?(t.value=e,!0):Reflect.set(n,s,e,a)}};function Bn(n){return vn(n)?n:new Proxy(n,Fn)}function Ln(n){const s=(0,a.kJ)(n)?new Array(n.length):{};for(const e in n)s[e]=In(n,e);return s}class Tn{constructor(n,s,e){this._object=n,this._key=s,this._defaultValue=e,this.__v_isRef=!0}get value(){const n=this._object[this._key];return void 0===n?this._defaultValue:n}set value(n){this._object[this._key]=n}}function In(n,s,e){const a=n[s];return En(a)?a:new Tn(n,s,e)}class Nn{constructor(n,s,e,a){this._setter=s,this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this.effect=new b(n,(()=>{this._dirty||(this._dirty=!0,Sn(this))})),this.effect.active=!a,this.__v_isReadonly=e}get value(){const n=fn(this);return Cn(n),n._dirty&&(n._dirty=!1,n._value=n.effect.run()),n._value}set value(n){this._setter(n)}}function On(n,s,e=!1){let t,r;const o=(0,a.mf)(n);return o?(t=n,r=a.dG):(t=n.get,r=n.set),new Nn(t,r,o||!r,e)}Promise.resolve()},6252:(n,s,e)=>{"use strict";e.d(s,{P$:()=>J,HY:()=>gs,$d:()=>o,Fl:()=>re,j4:()=>Cs,kq:()=>Ts,iD:()=>_s,_:()=>Ds,Eo:()=>rs,uE:()=>Ls,Uk:()=>Bs,Wm:()=>Rs,RC:()=>on,aZ:()=>tn,FN:()=>Js,Q6:()=>an,h:()=>oe,f3:()=>H,dG:()=>Vs,Y3:()=>f,Jd:()=>xn,bv:()=>bn,Ah:()=>fn,ic:()=>wn,wg:()=>xs,JJ:()=>Z,Ko:()=>Hs,WI:()=>Us,up:()=>is,LL:()=>us,U2:()=>Q,nK:()=>en,Y8:()=>W,YP:()=>z,w5:()=>L,wy:()=>Yn});var a=e(2262),t=e(3577);function r(n,s,e,a){let t;try{t=a?n(...a):n()}catch(n){p(n,s,e)}return t}function o(n,s,e,a){if((0,t.mf)(n)){const o=r(n,s,e,a);return o&&(0,t.tI)(o)&&o.catch((n=>{p(n,s,e)})),o}const l=[];for(let t=0;t<n.length;t++)l.push(o(n[t],s,e,a));return l}function p(n,s,e,a=!0){if(s&&s.vnode,s){let a=s.parent;const t=s.proxy,o=e;for(;a;){const s=a.ec;if(s)for(let e=0;e<s.length;e++)if(!1===s[e](n,t,o))return;a=a.parent}const p=s.appContext.config.errorHandler;if(p)return void r(p,null,10,[n,t,o])}!function(n,s,e,a=!0){console.error(n)}(n,0,0,a)}let l=!1,i=!1;const c=[];let u=0;const d=[];let h=null,g=0;const m=[];let k=null,b=0;const v=Promise.resolve();let w=null,x=null;function f(n){const s=w||v;return n?s.then(this?n.bind(this):n):s}function y(n){c.length&&c.includes(n,l&&n.allowRecurse?u+1:u)||n===x||(null==n.id?c.push(n):c.splice(function(n){let s=u+1,e=c.length;for(;s<e;){const a=s+e>>>1;E(c[a])<n?s=a+1:e=a}return s}(n.id),0,n),M())}function M(){l||i||(i=!0,w=v.then(P))}function _(n,s,e,a){(0,t.kJ)(n)?e.push(...n):s&&s.includes(n,n.allowRecurse?a+1:a)||e.push(n),M()}function C(n,s=null){if(d.length){for(x=s,h=[...new Set(d)],d.length=0,g=0;g<h.length;g++)h[g]();h=null,g=0,x=null,C(n,s)}}function S(n){if(m.length){const n=[...new Set(m)];if(m.length=0,k)return void k.push(...n);for(k=n,k.sort(((n,s)=>E(n)-E(s))),b=0;b<k.length;b++)k[b]();k=null,b=0}}const E=n=>null==n.id?1/0:n.id;function P(n){i=!1,l=!0,C(n),c.sort(((n,s)=>E(n)-E(s))),t.dG;try{for(u=0;u<c.length;u++){const n=c[u];n&&!1!==n.active&&r(n,null,14)}}finally{u=0,c.length=0,S(),l=!1,w=null,(c.length||d.length||m.length)&&P(n)}}function j(n,s,...e){const a=n.vnode.props||t.kT;let r=e;const p=s.startsWith("update:"),l=p&&s.slice(7);if(l&&l in a){const n=`${"modelValue"===l?"model":l}Modifiers`,{number:s,trim:o}=a[n]||t.kT;o?r=e.map((n=>n.trim())):s&&(r=e.map(t.He))}let i,c=a[i=(0,t.hR)(s)]||a[i=(0,t.hR)((0,t._A)(s))];!c&&p&&(c=a[i=(0,t.hR)((0,t.rs)(s))]),c&&o(c,n,6,r);const u=a[i+"Once"];if(u){if(n.emitted){if(n.emitted[i])return}else n.emitted={};n.emitted[i]=!0,o(u,n,6,r)}}function A(n,s,e=!1){const a=s.emitsCache,r=a.get(n);if(void 0!==r)return r;const o=n.emits;let p={},l=!1;if(!(0,t.mf)(n)){const a=n=>{const e=A(n,s,!0);e&&(l=!0,(0,t.l7)(p,e))};!e&&s.mixins.length&&s.mixins.forEach(a),n.extends&&a(n.extends),n.mixins&&n.mixins.forEach(a)}return o||l?((0,t.kJ)(o)?o.forEach((n=>p[n]=null)):(0,t.l7)(p,o),a.set(n,p),p):(a.set(n,null),null)}function D(n,s){return!(!n||!(0,t.F7)(s))&&(s=s.slice(2).replace(/Once$/,""),(0,t.RI)(n,s[0].toLowerCase()+s.slice(1))||(0,t.RI)(n,(0,t.rs)(s))||(0,t.RI)(n,s))}new Set,new Map;let R=null,F=null;function B(n){const s=R;return R=n,F=n&&n.type.__scopeId||null,s}function L(n,s=R,e){if(!s)return n;if(n._n)return n;const a=(...e)=>{a._d&&ys(-1);const t=B(s),r=n(...e);return B(t),a._d&&ys(1),r};return a._n=!0,a._c=!0,a._d=!0,a}function T(n){const{type:s,vnode:e,proxy:a,withProxy:r,props:o,propsOptions:[l],slots:i,attrs:c,emit:u,render:d,renderCache:h,data:g,setupState:m,ctx:k,inheritAttrs:b}=n;let v,w;const x=B(n);try{if(4&e.shapeFlag){const n=r||a;v=Is(d.call(n,n,h,o,m,g,k)),w=c}else{const n=s;v=Is(n.length>1?n(o,{attrs:c,slots:i,emit:u}):n(o,null)),w=s.props?c:I(c)}}catch(s){vs.length=0,p(s,n,1),v=Rs(ks)}let f=v;if(w&&!1!==b){const n=Object.keys(w),{shapeFlag:s}=f;n.length&&7&s&&(l&&n.some(t.tR)&&(w=N(w,l)),f=Fs(f,w))}return e.dirs&&(f.dirs=f.dirs?f.dirs.concat(e.dirs):e.dirs),e.transition&&(f.transition=e.transition),v=f,B(x),v}const I=n=>{let s;for(const e in n)("class"===e||"style"===e||(0,t.F7)(e))&&((s||(s={}))[e]=n[e]);return s},N=(n,s)=>{const e={};for(const a in n)(0,t.tR)(a)&&a.slice(9)in s||(e[a]=n[a]);return e};function O(n,s,e){const a=Object.keys(s);if(a.length!==Object.keys(n).length)return!0;for(let t=0;t<a.length;t++){const r=a[t];if(s[r]!==n[r]&&!D(e,r))return!0}return!1}function V(n,s){s&&s.pendingBranch?(0,t.kJ)(n)?s.effects.push(...n):s.effects.push(n):_(n,k,m,b)}function Z(n,s){if(Gs){let e=Gs.provides;const a=Gs.parent&&Gs.parent.provides;a===e&&(e=Gs.provides=Object.create(a)),e[n]=s}}function H(n,s,e=!1){const a=Gs||R;if(a){const r=null==a.parent?a.vnode.appContext&&a.vnode.appContext.provides:a.parent.provides;if(r&&n in r)return r[n];if(arguments.length>1)return e&&(0,t.mf)(s)?s.call(a.proxy):s}}const U={};function z(n,s,e){return q(n,s,e)}function q(n,s,{immediate:e,deep:p,flush:l,onTrack:i,onTrigger:c}=t.kT){const u=Gs;let m,k,b=!1,v=!1;if((0,a.dq)(n)?(m=()=>n.value,b=!!n._shallow):(0,a.PG)(n)?(m=()=>n,p=!0):(0,t.kJ)(n)?(v=!0,b=n.some(a.PG),m=()=>n.map((n=>(0,a.dq)(n)?n.value:(0,a.PG)(n)?Y(n):(0,t.mf)(n)?r(n,u,2):void 0))):m=(0,t.mf)(n)?s?()=>r(n,u,2):()=>{if(!u||!u.isUnmounted)return k&&k(),o(n,u,3,[w])}:t.dG,s&&p){const n=m;m=()=>Y(n())}let w=n=>{k=M.onStop=()=>{r(n,u,4)}};if(se)return w=t.dG,s?e&&o(s,u,3,[m(),v?[]:void 0,w]):m(),t.dG;let x=v?[]:U;const f=()=>{if(M.active)if(s){const n=M.run();(p||b||(v?n.some(((n,s)=>(0,t.aU)(n,x[s]))):(0,t.aU)(n,x)))&&(k&&k(),o(s,u,3,[n,x===U?void 0:x,w]),x=n)}else M.run()};let y;f.allowRecurse=!!s,y="sync"===l?f:"post"===l?()=>ts(f,u&&u.suspense):()=>{!u||u.isMounted?function(n){_(n,h,d,g)}(f):f()};const M=new a.qq(m,y);return s?e?f():x=M.run():"post"===l?ts(M.run.bind(M),u&&u.suspense):M.run(),()=>{M.stop(),u&&u.scope&&(0,t.Od)(u.scope.effects,M)}}function $(n,s,e){const a=this.proxy,r=(0,t.HD)(n)?n.includes(".")?K(a,n):()=>a[n]:n.bind(a,a);let o;(0,t.mf)(s)?o=s:(o=s.handler,e=s);const p=Gs;Xs(this);const l=q(r,o.bind(a),e);return p?Xs(p):Qs(),l}function K(n,s){const e=s.split(".");return()=>{let s=n;for(let n=0;n<e.length&&s;n++)s=s[e[n]];return s}}function Y(n,s){if(!(0,t.Kn)(n)||n.__v_skip)return n;if((s=s||new Set).has(n))return n;if(s.add(n),(0,a.dq)(n))Y(n.value,s);else if((0,t.kJ)(n))for(let e=0;e<n.length;e++)Y(n[e],s);else if((0,t.DM)(n)||(0,t._N)(n))n.forEach((n=>{Y(n,s)}));else if((0,t.PO)(n))for(const e in n)Y(n[e],s);return n}function W(){const n={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return bn((()=>{n.isMounted=!0})),xn((()=>{n.isUnmounting=!0})),n}const G=[Function,Array],J={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:G,onEnter:G,onAfterEnter:G,onEnterCancelled:G,onBeforeLeave:G,onLeave:G,onAfterLeave:G,onLeaveCancelled:G,onBeforeAppear:G,onAppear:G,onAfterAppear:G,onAppearCancelled:G},setup(n,{slots:s}){const e=Js(),t=W();let r;return()=>{const o=s.default&&an(s.default(),!0);if(!o||!o.length)return;const p=(0,a.IU)(n),{mode:l}=p,i=o[0];if(t.isLeaving)return nn(i);const c=sn(i);if(!c)return nn(i);const u=Q(c,p,t,e);en(c,u);const d=e.subTree,h=d&&sn(d);let g=!1;const{getTransitionKey:m}=c.type;if(m){const n=m();void 0===r?r=n:n!==r&&(r=n,g=!0)}if(h&&h.type!==ks&&(!Es(c,h)||g)){const n=Q(h,p,t,e);if(en(h,n),"out-in"===l)return t.isLeaving=!0,n.afterLeave=()=>{t.isLeaving=!1,e.update()},nn(i);"in-out"===l&&c.type!==ks&&(n.delayLeave=(n,s,e)=>{X(t,h)[String(h.key)]=h,n._leaveCb=()=>{s(),n._leaveCb=void 0,delete u.delayedLeave},u.delayedLeave=e})}return i}}};function X(n,s){const{leavingVNodes:e}=n;let a=e.get(s.type);return a||(a=Object.create(null),e.set(s.type,a)),a}function Q(n,s,e,a){const{appear:t,mode:r,persisted:p=!1,onBeforeEnter:l,onEnter:i,onAfterEnter:c,onEnterCancelled:u,onBeforeLeave:d,onLeave:h,onAfterLeave:g,onLeaveCancelled:m,onBeforeAppear:k,onAppear:b,onAfterAppear:v,onAppearCancelled:w}=s,x=String(n.key),f=X(e,n),y=(n,s)=>{n&&o(n,a,9,s)},M={mode:r,persisted:p,beforeEnter(s){let a=l;if(!e.isMounted){if(!t)return;a=k||l}s._leaveCb&&s._leaveCb(!0);const r=f[x];r&&Es(n,r)&&r.el._leaveCb&&r.el._leaveCb(),y(a,[s])},enter(n){let s=i,a=c,r=u;if(!e.isMounted){if(!t)return;s=b||i,a=v||c,r=w||u}let o=!1;const p=n._enterCb=s=>{o||(o=!0,y(s?r:a,[n]),M.delayedLeave&&M.delayedLeave(),n._enterCb=void 0)};s?(s(n,p),s.length<=1&&p()):p()},leave(s,a){const t=String(n.key);if(s._enterCb&&s._enterCb(!0),e.isUnmounting)return a();y(d,[s]);let r=!1;const o=s._leaveCb=e=>{r||(r=!0,a(),y(e?m:g,[s]),s._leaveCb=void 0,f[t]===n&&delete f[t])};f[t]=n,h?(h(s,o),h.length<=1&&o()):o()},clone:n=>Q(n,s,e,a)};return M}function nn(n){if(ln(n))return(n=Fs(n)).children=null,n}function sn(n){return ln(n)?n.children?n.children[0]:void 0:n}function en(n,s){6&n.shapeFlag&&n.component?en(n.component.subTree,s):128&n.shapeFlag?(n.ssContent.transition=s.clone(n.ssContent),n.ssFallback.transition=s.clone(n.ssFallback)):n.transition=s}function an(n,s=!1){let e=[],a=0;for(let t=0;t<n.length;t++){const r=n[t];r.type===gs?(128&r.patchFlag&&a++,e=e.concat(an(r.children,s))):(s||r.type!==ks)&&e.push(r)}if(a>1)for(let n=0;n<e.length;n++)e[n].patchFlag=-2;return e}function tn(n){return(0,t.mf)(n)?{setup:n,name:n.name}:n}const rn=n=>!!n.type.__asyncLoader;function on(n){(0,t.mf)(n)&&(n={loader:n});const{loader:s,loadingComponent:e,errorComponent:r,delay:o=200,timeout:l,suspensible:i=!0,onError:c}=n;let u,d=null,h=0;const g=()=>{let n;return d||(n=d=s().catch((n=>{if(n=n instanceof Error?n:new Error(String(n)),c)return new Promise(((s,e)=>{c(n,(()=>s((h++,d=null,g()))),(()=>e(n)),h+1)}));throw n})).then((s=>n!==d&&d?d:(s&&(s.__esModule||"Module"===s[Symbol.toStringTag])&&(s=s.default),u=s,s))))};return tn({name:"AsyncComponentWrapper",__asyncLoader:g,get __asyncResolved(){return u},setup(){const n=Gs;if(u)return()=>pn(u,n);const s=s=>{d=null,p(s,n,13,!r)};if(i&&n.suspense||se)return g().then((s=>()=>pn(s,n))).catch((n=>(s(n),()=>r?Rs(r,{error:n}):null)));const t=(0,a.iH)(!1),c=(0,a.iH)(),h=(0,a.iH)(!!o);return o&&setTimeout((()=>{h.value=!1}),o),null!=l&&setTimeout((()=>{if(!t.value&&!c.value){const n=new Error(`Async component timed out after ${l}ms.`);s(n),c.value=n}}),l),g().then((()=>{t.value=!0,n.parent&&ln(n.parent.vnode)&&y(n.parent.update)})).catch((n=>{s(n),c.value=n})),()=>t.value&&u?pn(u,n):c.value&&r?Rs(r,{error:c.value}):e&&!h.value?Rs(e):void 0}})}function pn(n,{vnode:{ref:s,props:e,children:a}}){const t=Rs(n,e,a);return t.ref=s,t}const ln=n=>n.type.__isKeepAlive;function cn(n,s){dn(n,"a",s)}function un(n,s){dn(n,"da",s)}function dn(n,s,e=Gs){const a=n.__wdc||(n.__wdc=()=>{let s=e;for(;s;){if(s.isDeactivated)return;s=s.parent}return n()});if(gn(s,a,e),e){let n=e.parent;for(;n&&n.parent;)ln(n.parent.vnode)&&hn(a,s,e,n),n=n.parent}}function hn(n,s,e,a){const r=gn(s,n,a,!0);fn((()=>{(0,t.Od)(a[s],r)}),e)}function gn(n,s,e=Gs,t=!1){if(e){const r=e[n]||(e[n]=[]),p=s.__weh||(s.__weh=(...t)=>{if(e.isUnmounted)return;(0,a.Jd)(),Xs(e);const r=o(s,e,n,t);return Qs(),(0,a.lk)(),r});return t?r.unshift(p):r.push(p),p}}RegExp,RegExp;const mn=n=>(s,e=Gs)=>(!se||"sp"===n)&&gn(n,s,e),kn=mn("bm"),bn=mn("m"),vn=mn("bu"),wn=mn("u"),xn=mn("bum"),fn=mn("um"),yn=mn("sp"),Mn=mn("rtg"),_n=mn("rtc");function Cn(n,s=Gs){gn("ec",n,s)}let Sn=!0;function En(n,s,e){o((0,t.kJ)(n)?n.map((n=>n.bind(s.proxy))):n.bind(s.proxy),s,e)}function Pn(n,s,e,a){const r=a.includes(".")?K(e,a):()=>e[a];if((0,t.HD)(n)){const e=s[n];(0,t.mf)(e)&&z(r,e)}else if((0,t.mf)(n))z(r,n.bind(e));else if((0,t.Kn)(n))if((0,t.kJ)(n))n.forEach((n=>Pn(n,s,e,a)));else{const a=(0,t.mf)(n.handler)?n.handler.bind(e):s[n.handler];(0,t.mf)(a)&&z(r,a,n)}}function jn(n){const s=n.type,{mixins:e,extends:a}=s,{mixins:t,optionsCache:r,config:{optionMergeStrategies:o}}=n.appContext,p=r.get(s);let l;return p?l=p:t.length||e||a?(l={},t.length&&t.forEach((n=>An(l,n,o,!0))),An(l,s,o)):l=s,r.set(s,l),l}function An(n,s,e,a=!1){const{mixins:t,extends:r}=s;r&&An(n,r,e,!0),t&&t.forEach((s=>An(n,s,e,!0)));for(const t in s)if(a&&"expose"===t);else{const a=Dn[t]||e&&e[t];n[t]=a?a(n[t],s[t]):s[t]}return n}const Dn={data:Rn,props:Ln,emits:Ln,methods:Ln,computed:Ln,beforeCreate:Bn,created:Bn,beforeMount:Bn,mounted:Bn,beforeUpdate:Bn,updated:Bn,beforeDestroy:Bn,beforeUnmount:Bn,destroyed:Bn,unmounted:Bn,activated:Bn,deactivated:Bn,errorCaptured:Bn,serverPrefetch:Bn,components:Ln,directives:Ln,watch:function(n,s){if(!n)return s;if(!s)return n;const e=(0,t.l7)(Object.create(null),n);for(const a in s)e[a]=Bn(n[a],s[a]);return e},provide:Rn,inject:function(n,s){return Ln(Fn(n),Fn(s))}};function Rn(n,s){return s?n?function(){return(0,t.l7)((0,t.mf)(n)?n.call(this,this):n,(0,t.mf)(s)?s.call(this,this):s)}:s:n}function Fn(n){if((0,t.kJ)(n)){const s={};for(let e=0;e<n.length;e++)s[n[e]]=n[e];return s}return n}function Bn(n,s){return n?[...new Set([].concat(n,s))]:s}function Ln(n,s){return n?(0,t.l7)((0,t.l7)(Object.create(null),n),s):s}function Tn(n,s,e,r){const[o,p]=n.propsOptions;let l,i=!1;if(s)for(let a in s){if((0,t.Gg)(a))continue;const c=s[a];let u;o&&(0,t.RI)(o,u=(0,t._A)(a))?p&&p.includes(u)?(l||(l={}))[u]=c:e[u]=c:D(n.emitsOptions,a)||a in r&&c===r[a]||(r[a]=c,i=!0)}if(p){const s=(0,a.IU)(e),r=l||t.kT;for(let a=0;a<p.length;a++){const l=p[a];e[l]=In(o,s,l,r[l],n,!(0,t.RI)(r,l))}}return i}function In(n,s,e,a,r,o){const p=n[e];if(null!=p){const n=(0,t.RI)(p,"default");if(n&&void 0===a){const n=p.default;if(p.type!==Function&&(0,t.mf)(n)){const{propsDefaults:t}=r;e in t?a=t[e]:(Xs(r),a=t[e]=n.call(null,s),Qs())}else a=n}p[0]&&(o&&!n?a=!1:!p[1]||""!==a&&a!==(0,t.rs)(e)||(a=!0))}return a}function Nn(n,s,e=!1){const a=s.propsCache,r=a.get(n);if(r)return r;const o=n.props,p={},l=[];let i=!1;if(!(0,t.mf)(n)){const a=n=>{i=!0;const[e,a]=Nn(n,s,!0);(0,t.l7)(p,e),a&&l.push(...a)};!e&&s.mixins.length&&s.mixins.forEach(a),n.extends&&a(n.extends),n.mixins&&n.mixins.forEach(a)}if(!o&&!i)return a.set(n,t.Z6),t.Z6;if((0,t.kJ)(o))for(let n=0;n<o.length;n++){const s=(0,t._A)(o[n]);On(s)&&(p[s]=t.kT)}else if(o)for(const n in o){const s=(0,t._A)(n);if(On(s)){const e=o[n],a=p[s]=(0,t.kJ)(e)||(0,t.mf)(e)?{type:e}:e;if(a){const n=Hn(Boolean,a.type),e=Hn(String,a.type);a[0]=n>-1,a[1]=e<0||n<e,(n>-1||(0,t.RI)(a,"default"))&&l.push(s)}}}const c=[p,l];return a.set(n,c),c}function On(n){return"$"!==n[0]}function Vn(n){const s=n&&n.toString().match(/^\s*function (\w+)/);return s?s[1]:null===n?"null":""}function Zn(n,s){return Vn(n)===Vn(s)}function Hn(n,s){return(0,t.kJ)(s)?s.findIndex((s=>Zn(s,n))):(0,t.mf)(s)&&Zn(s,n)?0:-1}const Un=n=>"_"===n[0]||"$stable"===n,zn=n=>(0,t.kJ)(n)?n.map(Is):[Is(n)],qn=(n,s,e)=>{const a=L(((...n)=>zn(s(...n))),e);return a._c=!1,a},$n=(n,s,e)=>{const a=n._ctx;for(const e in n){if(Un(e))continue;const r=n[e];if((0,t.mf)(r))s[e]=qn(0,r,a);else if(null!=r){const n=zn(r);s[e]=()=>n}}},Kn=(n,s)=>{const e=zn(s);n.slots.default=()=>e};function Yn(n,s){if(null===R)return n;const e=R.proxy,a=n.dirs||(n.dirs=[]);for(let n=0;n<s.length;n++){let[r,o,p,l=t.kT]=s[n];(0,t.mf)(r)&&(r={mounted:r,updated:r}),r.deep&&Y(o),a.push({dir:r,instance:e,value:o,oldValue:void 0,arg:p,modifiers:l})}return n}function Wn(n,s,e,t){const r=n.dirs,p=s&&s.dirs;for(let l=0;l<r.length;l++){const i=r[l];p&&(i.oldValue=p[l].value);let c=i.dir[t];c&&((0,a.Jd)(),o(c,e,8,[n.el,i,n,s]),(0,a.lk)())}}function Gn(){return{app:null,config:{isNativeTag:t.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Jn=0;function Xn(n,s){return function(e,a=null){null==a||(0,t.Kn)(a)||(a=null);const r=Gn(),o=new Set;let p=!1;const l=r.app={_uid:Jn++,_component:e,_props:a,_container:null,_context:r,_instance:null,version:pe,get config(){return r.config},set config(n){},use:(n,...s)=>(o.has(n)||(n&&(0,t.mf)(n.install)?(o.add(n),n.install(l,...s)):(0,t.mf)(n)&&(o.add(n),n(l,...s))),l),mixin:n=>(r.mixins.includes(n)||r.mixins.push(n),l),component:(n,s)=>s?(r.components[n]=s,l):r.components[n],directive:(n,s)=>s?(r.directives[n]=s,l):r.directives[n],mount(t,o,i){if(!p){const c=Rs(e,a);return c.appContext=r,o&&s?s(c,t):n(c,t,i),p=!0,l._container=t,t.__vue_app__=l,te(c.component)||c.component.proxy}},unmount(){p&&(n(null,l._container),delete l._container.__vue_app__)},provide:(n,s)=>(r.provides[n]=s,l)};return l}}function Qn(n,s,e,o,p=!1){if((0,t.kJ)(n))return void n.forEach(((n,a)=>Qn(n,s&&((0,t.kJ)(s)?s[a]:s),e,o,p)));if(rn(o)&&!p)return;const l=4&o.shapeFlag?te(o.component)||o.component.proxy:o.el,i=p?null:l,{i:c,r:u}=n,d=s&&s.r,h=c.refs===t.kT?c.refs={}:c.refs,g=c.setupState;if(null!=d&&d!==u&&((0,t.HD)(d)?(h[d]=null,(0,t.RI)(g,d)&&(g[d]=null)):(0,a.dq)(d)&&(d.value=null)),(0,t.mf)(u))r(u,c,12,[i,h]);else{const s=(0,t.HD)(u),r=(0,a.dq)(u);if(s||r){const r=()=>{if(n.f){const e=s?h[u]:u.value;p?(0,t.kJ)(e)&&(0,t.Od)(e,l):(0,t.kJ)(e)?e.includes(l)||e.push(l):s?h[u]=[l]:(u.value=[l],n.k&&(h[n.k]=u.value))}else s?(h[u]=i,(0,t.RI)(g,u)&&(g[u]=i)):(0,a.dq)(u)&&(u.value=i,n.k&&(h[n.k]=i))};i?(r.id=-1,ts(r,e)):r()}}}let ns=!1;const ss=n=>/svg/.test(n.namespaceURI)&&"foreignObject"!==n.tagName,es=n=>8===n.nodeType;function as(n){const{mt:s,p:e,o:{patchProp:a,nextSibling:r,parentNode:o,remove:p,insert:l,createComment:i}}=n,c=(e,a,t,p,l,i=!1)=>{const k=es(e)&&"["===e.data,b=()=>g(e,a,t,p,l,k),{type:v,ref:w,shapeFlag:x}=a,f=e.nodeType;a.el=e;let y=null;switch(v){case ms:3!==f?y=b():(e.data!==a.children&&(ns=!0,e.data=a.children),y=r(e));break;case ks:y=8!==f||k?b():r(e);break;case bs:if(1===f){y=e;const n=!a.children.length;for(let s=0;s<a.staticCount;s++)n&&(a.children+=y.outerHTML),s===a.staticCount-1&&(a.anchor=y),y=r(y);return y}y=b();break;case gs:y=k?h(e,a,t,p,l,i):b();break;default:if(1&x)y=1!==f||a.type.toLowerCase()!==e.tagName.toLowerCase()?b():u(e,a,t,p,l,i);else if(6&x){a.slotScopeIds=l;const n=o(e);if(s(a,n,null,t,p,ss(n),i),y=k?m(e):r(e),rn(a)){let s;k?(s=Rs(gs),s.anchor=y?y.previousSibling:n.lastChild):s=3===e.nodeType?Bs(""):Rs("div"),s.el=e,a.component.subTree=s}}else 64&x?y=8!==f?b():a.type.hydrate(e,a,t,p,l,i,n,d):128&x&&(y=a.type.hydrate(e,a,t,p,ss(o(e)),l,i,n,c))}return null!=w&&Qn(w,null,p,a),y},u=(n,s,e,r,o,l)=>{l=l||!!s.dynamicChildren;const{type:i,props:c,patchFlag:u,shapeFlag:h,dirs:g}=s,m="input"===i&&g||"option"===i;if(m||-1!==u){if(g&&Wn(s,null,e,"created"),c)if(m||!l||48&u)for(const s in c)(m&&s.endsWith("value")||(0,t.F7)(s)&&!(0,t.Gg)(s))&&a(n,s,null,c[s],!1,void 0,e);else c.onClick&&a(n,"onClick",null,c.onClick,!1,void 0,e);let i;if((i=c&&c.onVnodeBeforeMount)&&Zs(i,e,s),g&&Wn(s,null,e,"beforeMount"),((i=c&&c.onVnodeMounted)||g)&&V((()=>{i&&Zs(i,e,s),g&&Wn(s,null,e,"mounted")}),r),16&h&&(!c||!c.innerHTML&&!c.textContent)){let a=d(n.firstChild,s,n,e,r,o,l);for(;a;){ns=!0;const n=a;a=a.nextSibling,p(n)}}else 8&h&&n.textContent!==s.children&&(ns=!0,n.textContent=s.children)}return n.nextSibling},d=(n,s,a,t,r,o,p)=>{p=p||!!s.dynamicChildren;const l=s.children,i=l.length;for(let s=0;s<i;s++){const i=p?l[s]:l[s]=Is(l[s]);if(n)n=c(n,i,t,r,o,p);else{if(i.type===ms&&!i.children)continue;ns=!0,e(null,i,a,null,t,r,ss(a),o)}}return n},h=(n,s,e,a,t,p)=>{const{slotScopeIds:c}=s;c&&(t=t?t.concat(c):c);const u=o(n),h=d(r(n),s,u,e,a,t,p);return h&&es(h)&&"]"===h.data?r(s.anchor=h):(ns=!0,l(s.anchor=i("]"),u,h),h)},g=(n,s,a,t,l,i)=>{if(ns=!0,s.el=null,i){const s=m(n);for(;;){const e=r(n);if(!e||e===s)break;p(e)}}const c=r(n),u=o(n);return p(n),e(null,s,u,c,a,t,ss(u),l),c},m=n=>{let s=0;for(;n;)if((n=r(n))&&es(n)&&("["===n.data&&s++,"]"===n.data)){if(0===s)return r(n);s--}return n};return[(n,s)=>{if(!s.hasChildNodes())return e(null,n,s),void S();ns=!1,c(s.firstChild,n,null,null,null),S(),ns&&console.error("Hydration completed but contains mismatches.")},c]}const ts=V;function rs(n){return function(n,s){(0,t.E9)().__VUE__=!0;const{insert:e,remove:o,patchProp:l,createElement:i,createText:d,createComment:h,setText:g,setElementText:m,parentNode:k,nextSibling:b,setScopeId:v=t.dG,cloneNode:w,insertStaticContent:x}=n,f=(n,s,e,a=null,t=null,r=null,o=!1,p=null,l=!!s.dynamicChildren)=>{if(n===s)return;n&&!Es(n,s)&&(a=en(n),J(n,t,r,!0),n=null),-2===s.patchFlag&&(l=!1,s.dynamicChildren=null);const{type:i,ref:c,shapeFlag:u}=s;switch(i){case ms:M(n,s,e,a);break;case ks:_(n,s,e,a);break;case bs:null==n&&E(s,e,a,o);break;case gs:Z(n,s,e,a,t,r,o,p,l);break;default:1&u?R(n,s,e,a,t,r,o,p,l):6&u?H(n,s,e,a,t,r,o,p,l):(64&u||128&u)&&i.process(n,s,e,a,t,r,o,p,l,tn)}null!=c&&t&&Qn(c,n&&n.ref,r,s||n,!s)},M=(n,s,a,t)=>{if(null==n)e(s.el=d(s.children),a,t);else{const e=s.el=n.el;s.children!==n.children&&g(e,s.children)}},_=(n,s,a,t)=>{null==n?e(s.el=h(s.children||""),a,t):s.el=n.el},E=(n,s,e,a)=>{[n.el,n.anchor]=x(n.children,s,e,a,n.el,n.anchor)},P=({el:n,anchor:s})=>{let e;for(;n&&n!==s;)e=b(n),o(n),n=e;o(s)},R=(n,s,e,a,t,r,o,p,l)=>{o=o||"svg"===s.type,null==n?F(s,e,a,t,r,o,p,l):I(n,s,t,r,o,p,l)},F=(n,s,a,r,o,p,c,u)=>{let d,h;const{type:g,props:k,shapeFlag:b,transition:v,patchFlag:x,dirs:f}=n;if(n.el&&void 0!==w&&-1===x)d=n.el=w(n.el);else{if(d=n.el=i(n.type,p,k&&k.is,k),8&b?m(d,n.children):16&b&&L(n.children,d,null,r,o,p&&"foreignObject"!==g,c,u),f&&Wn(n,null,r,"created"),k){for(const s in k)"value"===s||(0,t.Gg)(s)||l(d,s,null,k[s],p,n.children,r,o,sn);"value"in k&&l(d,"value",null,k.value),(h=k.onVnodeBeforeMount)&&Zs(h,r,n)}B(d,n,n.scopeId,c,r)}f&&Wn(n,null,r,"beforeMount");const y=(!o||o&&!o.pendingBranch)&&v&&!v.persisted;y&&v.beforeEnter(d),e(d,s,a),((h=k&&k.onVnodeMounted)||y||f)&&ts((()=>{h&&Zs(h,r,n),y&&v.enter(d),f&&Wn(n,null,r,"mounted")}),o)},B=(n,s,e,a,t)=>{if(e&&v(n,e),a)for(let s=0;s<a.length;s++)v(n,a[s]);if(t&&s===t.subTree){const s=t.vnode;B(n,s,s.scopeId,s.slotScopeIds,t.parent)}},L=(n,s,e,a,t,r,o,p,l=0)=>{for(let i=l;i<n.length;i++){const l=n[i]=p?Ns(n[i]):Is(n[i]);f(null,l,s,e,a,t,r,o,p)}},I=(n,s,e,a,r,o,p)=>{const i=s.el=n.el;let{patchFlag:c,dynamicChildren:u,dirs:d}=s;c|=16&n.patchFlag;const h=n.props||t.kT,g=s.props||t.kT;let k;e&&os(e,!1),(k=g.onVnodeBeforeUpdate)&&Zs(k,e,s,n),d&&Wn(s,n,e,"beforeUpdate"),e&&os(e,!0);const b=r&&"foreignObject"!==s.type;if(u?N(n.dynamicChildren,u,i,e,a,b,o):p||K(n,s,i,null,e,a,b,o,!1),c>0){if(16&c)V(i,s,h,g,e,a,r);else if(2&c&&h.class!==g.class&&l(i,"class",null,g.class,r),4&c&&l(i,"style",h.style,g.style,r),8&c){const t=s.dynamicProps;for(let s=0;s<t.length;s++){const o=t[s],p=h[o],c=g[o];c===p&&"value"!==o||l(i,o,p,c,r,n.children,e,a,sn)}}1&c&&n.children!==s.children&&m(i,s.children)}else p||null!=u||V(i,s,h,g,e,a,r);((k=g.onVnodeUpdated)||d)&&ts((()=>{k&&Zs(k,e,s,n),d&&Wn(s,n,e,"updated")}),a)},N=(n,s,e,a,t,r,o)=>{for(let p=0;p<s.length;p++){const l=n[p],i=s[p],c=l.el&&(l.type===gs||!Es(l,i)||70&l.shapeFlag)?k(l.el):e;f(l,i,c,null,a,t,r,o,!0)}},V=(n,s,e,a,r,o,p)=>{if(e!==a){for(const i in a){if((0,t.Gg)(i))continue;const c=a[i],u=e[i];c!==u&&"value"!==i&&l(n,i,u,c,p,s.children,r,o,sn)}if(e!==t.kT)for(const i in e)(0,t.Gg)(i)||i in a||l(n,i,e[i],null,p,s.children,r,o,sn);"value"in a&&l(n,"value",e.value,a.value)}},Z=(n,s,a,t,r,o,p,l,i)=>{const c=s.el=n?n.el:d(""),u=s.anchor=n?n.anchor:d("");let{patchFlag:h,dynamicChildren:g,slotScopeIds:m}=s;m&&(l=l?l.concat(m):m),null==n?(e(c,a,t),e(u,a,t),L(s.children,a,u,r,o,p,l,i)):h>0&&64&h&&g&&n.dynamicChildren?(N(n.dynamicChildren,g,a,r,o,p,l),(null!=s.key||r&&s===r.subTree)&&ps(n,s,!0)):K(n,s,a,u,r,o,p,l,i)},H=(n,s,e,a,t,r,o,p,l)=>{s.slotScopeIds=p,null==n?512&s.shapeFlag?t.ctx.activate(s,e,a,o,l):U(s,e,a,t,r,o,l):z(n,s,l)},U=(n,s,e,o,l,i,c)=>{const u=n.component=function(n,s,e){const r=n.type,o=(s?s.appContext:n.appContext)||Ys,p={uid:Ws++,vnode:n,type:r,parent:s,appContext:o,root:null,next:null,subTree:null,effect:null,update:null,scope:new a.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(o.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Nn(r,o),emitsOptions:A(r,o),emit:null,emitted:null,propsDefaults:t.kT,inheritAttrs:r.inheritAttrs,ctx:t.kT,data:t.kT,props:t.kT,attrs:t.kT,slots:t.kT,refs:t.kT,setupState:t.kT,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return p.ctx={_:p},p.root=s?s.root:p,p.emit=j.bind(null,p),n.ce&&n.ce(p),p}(n,o,l);if(ln(n)&&(u.ctx.renderer=tn),function(n,s=!1){se=s;const{props:e,children:o}=n.vnode,l=ne(n);!function(n,s,e,r=!1){const o={},p={};(0,t.Nj)(p,Ps,1),n.propsDefaults=Object.create(null),Tn(n,s,o,p);for(const s in n.propsOptions[0])s in o||(o[s]=void 0);e?n.props=r?o:(0,a.Um)(o):n.type.props?n.props=o:n.props=p,n.attrs=p}(n,e,l,s),((n,s)=>{if(32&n.vnode.shapeFlag){const e=s._;e?(n.slots=(0,a.IU)(s),(0,t.Nj)(s,"_",e)):$n(s,n.slots={})}else n.slots={},s&&Kn(n,s);(0,t.Nj)(n.slots,Ps,1)})(n,o);const i=l?function(n,s){const e=n.type;n.accessCache=Object.create(null),n.proxy=(0,a.Xl)(new Proxy(n.ctx,Ks));const{setup:o}=e;if(o){const e=n.setupContext=o.length>1?function(n){const s=s=>{n.exposed=s||{}};let e;return{get attrs(){return e||(e=function(n){return new Proxy(n.attrs,{get:(s,e)=>((0,a.j)(n,"get","$attrs"),s[e])})}(n))},slots:n.slots,emit:n.emit,expose:s}}(n):null;Xs(n),(0,a.Jd)();const l=r(o,n,0,[n.props,e]);if((0,a.lk)(),Qs(),(0,t.tI)(l)){if(l.then(Qs,Qs),s)return l.then((e=>{ee(n,e,s)})).catch((s=>{p(s,n,0)}));n.asyncDep=l}else ee(n,l,s)}else ae(n,s)}(n,s):void 0;se=!1}(u),u.asyncDep){if(l&&l.registerDep(u,q),!n.el){const n=u.subTree=Rs(ks);_(null,n,s,e)}}else q(u,n,s,e,l,i,c)},z=(n,s,e)=>{const a=s.component=n.component;if(function(n,s,e){const{props:a,children:t,component:r}=n,{props:o,children:p,patchFlag:l}=s,i=r.emitsOptions;if(s.dirs||s.transition)return!0;if(!(e&&l>=0))return!(!t&&!p||p&&p.$stable)||a!==o&&(a?!o||O(a,o,i):!!o);if(1024&l)return!0;if(16&l)return a?O(a,o,i):!!o;if(8&l){const n=s.dynamicProps;for(let s=0;s<n.length;s++){const e=n[s];if(o[e]!==a[e]&&!D(i,e))return!0}}return!1}(n,s,e)){if(a.asyncDep&&!a.asyncResolved)return void $(a,s,e);a.next=s,function(n){const s=c.indexOf(n);s>u&&c.splice(s,1)}(a.update),a.update()}else s.component=n.component,s.el=n.el,a.vnode=s},q=(n,s,e,r,o,p,l)=>{const i=n.effect=new a.qq((()=>{if(n.isMounted){let s,{next:e,bu:a,u:r,parent:i,vnode:c}=n,u=e;os(n,!1),e?(e.el=c.el,$(n,e,l)):e=c,a&&(0,t.ir)(a),(s=e.props&&e.props.onVnodeBeforeUpdate)&&Zs(s,i,e,c),os(n,!0);const d=T(n),h=n.subTree;n.subTree=d,f(h,d,k(h.el),en(h),n,o,p),e.el=d.el,null===u&&function({vnode:n,parent:s},e){for(;s&&s.subTree===n;)(n=s.vnode).el=e,s=s.parent}(n,d.el),r&&ts(r,o),(s=e.props&&e.props.onVnodeUpdated)&&ts((()=>Zs(s,i,e,c)),o)}else{let a;const{el:l,props:i}=s,{bm:c,m:u,parent:d}=n,h=rn(s);if(os(n,!1),c&&(0,t.ir)(c),!h&&(a=i&&i.onVnodeBeforeMount)&&Zs(a,d,s),os(n,!0),l&&pn){const e=()=>{n.subTree=T(n),pn(l,n.subTree,n,o,null)};h?s.type.__asyncLoader().then((()=>!n.isUnmounted&&e())):e()}else{const a=n.subTree=T(n);f(null,a,e,r,n,o,p),s.el=a.el}if(u&&ts(u,o),!h&&(a=i&&i.onVnodeMounted)){const n=s;ts((()=>Zs(a,d,n)),o)}256&s.shapeFlag&&n.a&&ts(n.a,o),n.isMounted=!0,s=e=r=null}}),(()=>y(n.update)),n.scope),c=n.update=i.run.bind(i);c.id=n.uid,os(n,!0),c()},$=(n,s,e)=>{s.component=n;const r=n.vnode.props;n.vnode=s,n.next=null,function(n,s,e,r){const{props:o,attrs:p,vnode:{patchFlag:l}}=n,i=(0,a.IU)(o),[c]=n.propsOptions;let u=!1;if(!(r||l>0)||16&l){let a;Tn(n,s,o,p)&&(u=!0);for(const r in i)s&&((0,t.RI)(s,r)||(a=(0,t.rs)(r))!==r&&(0,t.RI)(s,a))||(c?!e||void 0===e[r]&&void 0===e[a]||(o[r]=In(c,i,r,void 0,n,!0)):delete o[r]);if(p!==i)for(const n in p)s&&(0,t.RI)(s,n)||(delete p[n],u=!0)}else if(8&l){const e=n.vnode.dynamicProps;for(let a=0;a<e.length;a++){let r=e[a];const l=s[r];if(c)if((0,t.RI)(p,r))l!==p[r]&&(p[r]=l,u=!0);else{const s=(0,t._A)(r);o[s]=In(c,i,s,l,n,!1)}else l!==p[r]&&(p[r]=l,u=!0)}}u&&(0,a.X$)(n,"set","$attrs")}(n,s.props,r,e),((n,s,e)=>{const{vnode:a,slots:r}=n;let o=!0,p=t.kT;if(32&a.shapeFlag){const n=s._;n?e&&1===n?o=!1:((0,t.l7)(r,s),e||1!==n||delete r._):(o=!s.$stable,$n(s,r)),p=s}else s&&(Kn(n,s),p={default:1});if(o)for(const n in r)Un(n)||n in p||delete r[n]})(n,s.children,e),(0,a.Jd)(),C(void 0,n.update),(0,a.lk)()},K=(n,s,e,a,t,r,o,p,l=!1)=>{const i=n&&n.children,c=n?n.shapeFlag:0,u=s.children,{patchFlag:d,shapeFlag:h}=s;if(d>0){if(128&d)return void W(i,u,e,a,t,r,o,p,l);if(256&d)return void Y(i,u,e,a,t,r,o,p,l)}8&h?(16&c&&sn(i,t,r),u!==i&&m(e,u)):16&c?16&h?W(i,u,e,a,t,r,o,p,l):sn(i,t,r,!0):(8&c&&m(e,""),16&h&&L(u,e,a,t,r,o,p,l))},Y=(n,s,e,a,r,o,p,l,i)=>{n=n||t.Z6,s=s||t.Z6;const c=n.length,u=s.length,d=Math.min(c,u);let h;for(h=0;h<d;h++){const a=s[h]=i?Ns(s[h]):Is(s[h]);f(n[h],a,e,null,r,o,p,l,i)}c>u?sn(n,r,o,!0,!1,d):L(s,e,a,r,o,p,l,i,d)},W=(n,s,e,a,r,o,p,l,i)=>{let c=0;const u=s.length;let d=n.length-1,h=u-1;for(;c<=d&&c<=h;){const a=n[c],t=s[c]=i?Ns(s[c]):Is(s[c]);if(!Es(a,t))break;f(a,t,e,null,r,o,p,l,i),c++}for(;c<=d&&c<=h;){const a=n[d],t=s[h]=i?Ns(s[h]):Is(s[h]);if(!Es(a,t))break;f(a,t,e,null,r,o,p,l,i),d--,h--}if(c>d){if(c<=h){const n=h+1,t=n<u?s[n].el:a;for(;c<=h;)f(null,s[c]=i?Ns(s[c]):Is(s[c]),e,t,r,o,p,l,i),c++}}else if(c>h)for(;c<=d;)J(n[c],r,o,!0),c++;else{const g=c,m=c,k=new Map;for(c=m;c<=h;c++){const n=s[c]=i?Ns(s[c]):Is(s[c]);null!=n.key&&k.set(n.key,c)}let b,v=0;const w=h-m+1;let x=!1,y=0;const M=new Array(w);for(c=0;c<w;c++)M[c]=0;for(c=g;c<=d;c++){const a=n[c];if(v>=w){J(a,r,o,!0);continue}let t;if(null!=a.key)t=k.get(a.key);else for(b=m;b<=h;b++)if(0===M[b-m]&&Es(a,s[b])){t=b;break}void 0===t?J(a,r,o,!0):(M[t-m]=c+1,t>=y?y=t:x=!0,f(a,s[t],e,null,r,o,p,l,i),v++)}const _=x?function(n){const s=n.slice(),e=[0];let a,t,r,o,p;const l=n.length;for(a=0;a<l;a++){const l=n[a];if(0!==l){if(t=e[e.length-1],n[t]<l){s[a]=t,e.push(a);continue}for(r=0,o=e.length-1;r<o;)p=r+o>>1,n[e[p]]<l?r=p+1:o=p;l<n[e[r]]&&(r>0&&(s[a]=e[r-1]),e[r]=a)}}for(r=e.length,o=e[r-1];r-- >0;)e[r]=o,o=s[o];return e}(M):t.Z6;for(b=_.length-1,c=w-1;c>=0;c--){const n=m+c,t=s[n],d=n+1<u?s[n+1].el:a;0===M[c]?f(null,t,e,d,r,o,p,l,i):x&&(b<0||c!==_[b]?G(t,e,d,2):b--)}}},G=(n,s,a,t,r=null)=>{const{el:o,type:p,transition:l,children:i,shapeFlag:c}=n;if(6&c)G(n.component.subTree,s,a,t);else if(128&c)n.suspense.move(s,a,t);else if(64&c)p.move(n,s,a,tn);else if(p!==gs)if(p!==bs)if(2!==t&&1&c&&l)if(0===t)l.beforeEnter(o),e(o,s,a),ts((()=>l.enter(o)),r);else{const{leave:n,delayLeave:t,afterLeave:r}=l,p=()=>e(o,s,a),i=()=>{n(o,(()=>{p(),r&&r()}))};t?t(o,p,i):i()}else e(o,s,a);else(({el:n,anchor:s},a,t)=>{let r;for(;n&&n!==s;)r=b(n),e(n,a,t),n=r;e(s,a,t)})(n,s,a);else{e(o,s,a);for(let n=0;n<i.length;n++)G(i[n],s,a,t);e(n.anchor,s,a)}},J=(n,s,e,a=!1,t=!1)=>{const{type:r,props:o,ref:p,children:l,dynamicChildren:i,shapeFlag:c,patchFlag:u,dirs:d}=n;if(null!=p&&Qn(p,null,e,n,!0),256&c)return void s.ctx.deactivate(n);const h=1&c&&d,g=!rn(n);let m;if(g&&(m=o&&o.onVnodeBeforeUnmount)&&Zs(m,s,n),6&c)nn(n.component,e,a);else{if(128&c)return void n.suspense.unmount(e,a);h&&Wn(n,null,s,"beforeUnmount"),64&c?n.type.remove(n,s,e,t,tn,a):i&&(r!==gs||u>0&&64&u)?sn(i,s,e,!1,!0):(r===gs&&384&u||!t&&16&c)&&sn(l,s,e),a&&X(n)}(g&&(m=o&&o.onVnodeUnmounted)||h)&&ts((()=>{m&&Zs(m,s,n),h&&Wn(n,null,s,"unmounted")}),e)},X=n=>{const{type:s,el:e,anchor:a,transition:t}=n;if(s===gs)return void Q(e,a);if(s===bs)return void P(n);const r=()=>{o(e),t&&!t.persisted&&t.afterLeave&&t.afterLeave()};if(1&n.shapeFlag&&t&&!t.persisted){const{leave:s,delayLeave:a}=t,o=()=>s(e,r);a?a(n.el,r,o):o()}else r()},Q=(n,s)=>{let e;for(;n!==s;)e=b(n),o(n),n=e;o(s)},nn=(n,s,e)=>{const{bum:a,scope:r,update:o,subTree:p,um:l}=n;a&&(0,t.ir)(a),r.stop(),o&&(o.active=!1,J(p,n,s,e)),l&&ts(l,s),ts((()=>{n.isUnmounted=!0}),s),s&&s.pendingBranch&&!s.isUnmounted&&n.asyncDep&&!n.asyncResolved&&n.suspenseId===s.pendingId&&(s.deps--,0===s.deps&&s.resolve())},sn=(n,s,e,a=!1,t=!1,r=0)=>{for(let o=r;o<n.length;o++)J(n[o],s,e,a,t)},en=n=>6&n.shapeFlag?en(n.component.subTree):128&n.shapeFlag?n.suspense.next():b(n.anchor||n.el),an=(n,s,e)=>{null==n?s._vnode&&J(s._vnode,null,null,!0):f(s._vnode||null,n,s,null,null,null,e),S(),s._vnode=n},tn={p:f,um:J,m:G,r:X,mt:U,mc:L,pc:K,pbc:N,n:en,o:n};let on,pn;return s&&([on,pn]=s(tn)),{render:an,hydrate:on,createApp:Xn(an,on)}}(n,as)}function os({effect:n,update:s},e){n.allowRecurse=s.allowRecurse=e}function ps(n,s,e=!1){const a=n.children,r=s.children;if((0,t.kJ)(a)&&(0,t.kJ)(r))for(let n=0;n<a.length;n++){const s=a[n];let t=r[n];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=r[n]=Ns(r[n]),t.el=s.el),e||ps(s,t))}}const ls="components";function is(n,s){return ds(ls,n,!0,s)||n}const cs=Symbol();function us(n){return(0,t.HD)(n)?ds(ls,n,!1)||n:n||cs}function ds(n,s,e=!0,a=!1){const r=R||Gs;if(r){const e=r.type;if(n===ls){const n=function(n){return(0,t.mf)(n)&&n.displayName||n.name}(e);if(n&&(n===s||n===(0,t._A)(s)||n===(0,t.kC)((0,t._A)(s))))return e}const o=hs(r[n]||e[n],s)||hs(r.appContext[n],s);return!o&&a?e:o}}function hs(n,s){return n&&(n[s]||n[(0,t._A)(s)]||n[(0,t.kC)((0,t._A)(s))])}const gs=Symbol(void 0),ms=Symbol(void 0),ks=Symbol(void 0),bs=Symbol(void 0),vs=[];let ws=null;function xs(n=!1){vs.push(ws=n?null:[])}let fs=1;function ys(n){fs+=n}function Ms(n){return n.dynamicChildren=fs>0?ws||t.Z6:null,vs.pop(),ws=vs[vs.length-1]||null,fs>0&&ws&&ws.push(n),n}function _s(n,s,e,a,t,r){return Ms(Ds(n,s,e,a,t,r,!0))}function Cs(n,s,e,a,t){return Ms(Rs(n,s,e,a,t,!0))}function Ss(n){return!!n&&!0===n.__v_isVNode}function Es(n,s){return n.type===s.type&&n.key===s.key}const Ps="__vInternal",js=({key:n})=>null!=n?n:null,As=({ref:n,ref_key:s,ref_for:e})=>null!=n?(0,t.HD)(n)||(0,a.dq)(n)||(0,t.mf)(n)?{i:R,r:n,k:s,f:!!e}:n:null;function Ds(n,s=null,e=null,a=0,r=null,o=(n===gs?0:1),p=!1,l=!1){const i={__v_isVNode:!0,__v_skip:!0,type:n,props:s,key:s&&js(s),ref:s&&As(s),scopeId:F,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:a,dynamicProps:r,dynamicChildren:null,appContext:null};return l?(Os(i,e),128&o&&n.normalize(i)):e&&(i.shapeFlag|=(0,t.HD)(e)?8:16),fs>0&&!p&&ws&&(i.patchFlag>0||6&o)&&32!==i.patchFlag&&ws.push(i),i}const Rs=function(n,s=null,e=null,r=0,o=null,p=!1){if(n&&n!==cs||(n=ks),Ss(n)){const a=Fs(n,s,!0);return e&&Os(a,e),a}if(l=n,(0,t.mf)(l)&&"__vccOpts"in l&&(n=n.__vccOpts),s){s=function(n){return n?(0,a.X3)(n)||Ps in n?(0,t.l7)({},n):n:null}(s);let{class:n,style:e}=s;n&&!(0,t.HD)(n)&&(s.class=(0,t.C_)(n)),(0,t.Kn)(e)&&((0,a.X3)(e)&&!(0,t.kJ)(e)&&(e=(0,t.l7)({},e)),s.style=(0,t.j5)(e))}var l;return Ds(n,s,e,r,o,(0,t.HD)(n)?1:(n=>n.__isSuspense)(n)?128:(n=>n.__isTeleport)(n)?64:(0,t.Kn)(n)?4:(0,t.mf)(n)?2:0,p,!0)};function Fs(n,s,e=!1){const{props:a,ref:r,patchFlag:o,children:p}=n,l=s?Vs(a||{},s):a;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:l,key:l&&js(l),ref:s&&s.ref?e&&r?(0,t.kJ)(r)?r.concat(As(s)):[r,As(s)]:As(s):r,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:p,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:s&&n.type!==gs?-1===o?16:16|o:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&Fs(n.ssContent),ssFallback:n.ssFallback&&Fs(n.ssFallback),el:n.el,anchor:n.anchor}}function Bs(n=" ",s=0){return Rs(ms,null,n,s)}function Ls(n,s){const e=Rs(bs,null,n);return e.staticCount=s,e}function Ts(n="",s=!1){return s?(xs(),Cs(ks,null,n)):Rs(ks,null,n)}function Is(n){return null==n||"boolean"==typeof n?Rs(ks):(0,t.kJ)(n)?Rs(gs,null,n.slice()):"object"==typeof n?Ns(n):Rs(ms,null,String(n))}function Ns(n){return null===n.el||n.memo?n:Fs(n)}function Os(n,s){let e=0;const{shapeFlag:a}=n;if(null==s)s=null;else if((0,t.kJ)(s))e=16;else if("object"==typeof s){if(65&a){const e=s.default;return void(e&&(e._c&&(e._d=!1),Os(n,e()),e._c&&(e._d=!0)))}{e=32;const a=s._;a||Ps in s?3===a&&R&&(1===R.slots._?s._=1:(s._=2,n.patchFlag|=1024)):s._ctx=R}}else(0,t.mf)(s)?(s={default:s,_ctx:R},e=32):(s=String(s),64&a?(e=16,s=[Bs(s)]):e=8);n.children=s,n.shapeFlag|=e}function Vs(...n){const s={};for(let e=0;e<n.length;e++){const a=n[e];for(const n in a)if("class"===n)s.class!==a.class&&(s.class=(0,t.C_)([s.class,a.class]));else if("style"===n)s.style=(0,t.j5)([s.style,a.style]);else if((0,t.F7)(n)){const e=s[n],r=a[n];e===r||(0,t.kJ)(e)&&e.includes(r)||(s[n]=e?[].concat(e,r):r)}else""!==n&&(s[n]=a[n])}return s}function Zs(n,s,e,a=null){o(n,s,7,[e,a])}function Hs(n,s,e,a){let r;const o=e&&e[a];if((0,t.kJ)(n)||(0,t.HD)(n)){r=new Array(n.length);for(let e=0,a=n.length;e<a;e++)r[e]=s(n[e],e,void 0,o&&o[e])}else if("number"==typeof n){r=new Array(n);for(let e=0;e<n;e++)r[e]=s(e+1,e,void 0,o&&o[e])}else if((0,t.Kn)(n))if(n[Symbol.iterator])r=Array.from(n,((n,e)=>s(n,e,void 0,o&&o[e])));else{const e=Object.keys(n);r=new Array(e.length);for(let a=0,t=e.length;a<t;a++){const t=e[a];r[a]=s(n[t],t,a,o&&o[a])}}else r=[];return e&&(e[a]=r),r}function Us(n,s,e={},a,t){if(R.isCE)return Rs("slot","default"===s?null:{name:s},a&&a());let r=n[s];r&&r._c&&(r._d=!1),xs();const o=r&&zs(r(e)),p=Cs(gs,{key:e.key||`_${s}`},o||(a?a():[]),o&&1===n._?64:-2);return!t&&p.scopeId&&(p.slotScopeIds=[p.scopeId+"-s"]),r&&r._c&&(r._d=!0),p}function zs(n){return n.some((n=>!Ss(n)||n.type!==ks&&!(n.type===gs&&!zs(n.children))))?n:null}const qs=n=>n?ne(n)?te(n)||n.proxy:qs(n.parent):null,$s=(0,t.l7)(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>qs(n.parent),$root:n=>qs(n.root),$emit:n=>n.emit,$options:n=>jn(n),$forceUpdate:n=>()=>y(n.update),$nextTick:n=>f.bind(n.proxy),$watch:n=>$.bind(n)}),Ks={get({_:n},s){const{ctx:e,setupState:r,data:o,props:p,accessCache:l,type:i,appContext:c}=n;let u;if("$"!==s[0]){const a=l[s];if(void 0!==a)switch(a){case 1:return r[s];case 2:return o[s];case 4:return e[s];case 3:return p[s]}else{if(r!==t.kT&&(0,t.RI)(r,s))return l[s]=1,r[s];if(o!==t.kT&&(0,t.RI)(o,s))return l[s]=2,o[s];if((u=n.propsOptions[0])&&(0,t.RI)(u,s))return l[s]=3,p[s];if(e!==t.kT&&(0,t.RI)(e,s))return l[s]=4,e[s];Sn&&(l[s]=0)}}const d=$s[s];let h,g;return d?("$attrs"===s&&(0,a.j)(n,"get",s),d(n)):(h=i.__cssModules)&&(h=h[s])?h:e!==t.kT&&(0,t.RI)(e,s)?(l[s]=4,e[s]):(g=c.config.globalProperties,(0,t.RI)(g,s)?g[s]:void 0)},set({_:n},s,e){const{data:a,setupState:r,ctx:o}=n;if(r!==t.kT&&(0,t.RI)(r,s))r[s]=e;else if(a!==t.kT&&(0,t.RI)(a,s))a[s]=e;else if((0,t.RI)(n.props,s))return!1;return!("$"===s[0]&&s.slice(1)in n||(o[s]=e,0))},has({_:{data:n,setupState:s,accessCache:e,ctx:a,appContext:r,propsOptions:o}},p){let l;return!!e[p]||n!==t.kT&&(0,t.RI)(n,p)||s!==t.kT&&(0,t.RI)(s,p)||(l=o[0])&&(0,t.RI)(l,p)||(0,t.RI)(a,p)||(0,t.RI)($s,p)||(0,t.RI)(r.config.globalProperties,p)}},Ys=Gn();let Ws=0;let Gs=null;const Js=()=>Gs||R,Xs=n=>{Gs=n,n.scope.on()},Qs=()=>{Gs&&Gs.scope.off(),Gs=null};function ne(n){return 4&n.vnode.shapeFlag}let se=!1;function ee(n,s,e){(0,t.mf)(s)?n.type.__ssrInlineRender?n.ssrRender=s:n.render=s:(0,t.Kn)(s)&&(n.setupState=(0,a.WL)(s)),ae(n,e)}function ae(n,s,e){const r=n.type;n.render||(n.render=r.render||t.dG),Xs(n),(0,a.Jd)(),function(n){const s=jn(n),e=n.proxy,r=n.ctx;Sn=!1,s.beforeCreate&&En(s.beforeCreate,n,"bc");const{data:o,computed:p,methods:l,watch:i,provide:c,inject:u,created:d,beforeMount:h,mounted:g,beforeUpdate:m,updated:k,activated:b,deactivated:v,beforeDestroy:w,beforeUnmount:x,destroyed:f,unmounted:y,render:M,renderTracked:_,renderTriggered:C,errorCaptured:S,serverPrefetch:E,expose:P,inheritAttrs:j,components:A,directives:D,filters:R}=s;if(u&&function(n,s,e=t.dG,r=!1){(0,t.kJ)(n)&&(n=Fn(n));for(const e in n){const o=n[e];let p;p=(0,t.Kn)(o)?"default"in o?H(o.from||e,o.default,!0):H(o.from||e):H(o),(0,a.dq)(p)&&r?Object.defineProperty(s,e,{enumerable:!0,configurable:!0,get:()=>p.value,set:n=>p.value=n}):s[e]=p}}(u,r,null,n.appContext.config.unwrapInjectedRef),l)for(const n in l){const s=l[n];(0,t.mf)(s)&&(r[n]=s.bind(e))}if(o){const s=o.call(e,e);(0,t.Kn)(s)&&(n.data=(0,a.qj)(s))}if(Sn=!0,p)for(const n in p){const s=p[n],o=(0,t.mf)(s)?s.bind(e,e):(0,t.mf)(s.get)?s.get.bind(e,e):t.dG,l=!(0,t.mf)(s)&&(0,t.mf)(s.set)?s.set.bind(e):t.dG,i=(0,a.Fl)({get:o,set:l});Object.defineProperty(r,n,{enumerable:!0,configurable:!0,get:()=>i.value,set:n=>i.value=n})}if(i)for(const n in i)Pn(i[n],r,e,n);if(c){const n=(0,t.mf)(c)?c.call(e):c;Reflect.ownKeys(n).forEach((s=>{Z(s,n[s])}))}function F(n,s){(0,t.kJ)(s)?s.forEach((s=>n(s.bind(e)))):s&&n(s.bind(e))}if(d&&En(d,n,"c"),F(kn,h),F(bn,g),F(vn,m),F(wn,k),F(cn,b),F(un,v),F(Cn,S),F(_n,_),F(Mn,C),F(xn,x),F(fn,y),F(yn,E),(0,t.kJ)(P))if(P.length){const s=n.exposed||(n.exposed={});P.forEach((n=>{Object.defineProperty(s,n,{get:()=>e[n],set:s=>e[n]=s})}))}else n.exposed||(n.exposed={});M&&n.render===t.dG&&(n.render=M),null!=j&&(n.inheritAttrs=j),A&&(n.components=A),D&&(n.directives=D)}(n),(0,a.lk)(),Qs()}function te(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy((0,a.WL)((0,a.Xl)(n.exposed)),{get:(s,e)=>e in s?s[e]:e in $s?$s[e](n):void 0}))}const re=(n,s)=>(0,a.Fl)(n,s,se);function oe(n,s,e){const a=arguments.length;return 2===a?(0,t.Kn)(s)&&!(0,t.kJ)(s)?Ss(s)?Rs(n,null,[s]):Rs(n,s):Rs(n,null,s):(a>3?e=Array.prototype.slice.call(arguments,2):3===a&&Ss(e)&&(e=[e]),Rs(n,s,e))}Symbol("");const pe="3.2.27"},9963:(n,s,e)=>{"use strict";e.d(s,{uT:()=>M,vr:()=>z,nr:()=>N,F8:()=>O});var a=e(3577),t=e(6252);e(2262);const r="undefined"!=typeof document?document:null,o=r&&r.createElement("template"),p={insert:(n,s,e)=>{s.insertBefore(n,e||null)},remove:n=>{const s=n.parentNode;s&&s.removeChild(n)},createElement:(n,s,e,a)=>{const t=s?r.createElementNS("http://www.w3.org/2000/svg",n):r.createElement(n,e?{is:e}:void 0);return"select"===n&&a&&null!=a.multiple&&t.setAttribute("multiple",a.multiple),t},createText:n=>r.createTextNode(n),createComment:n=>r.createComment(n),setText:(n,s)=>{n.nodeValue=s},setElementText:(n,s)=>{n.textContent=s},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>r.querySelector(n),setScopeId(n,s){n.setAttribute(s,"")},cloneNode(n){const s=n.cloneNode(!0);return"_value"in n&&(s._value=n._value),s},insertStaticContent(n,s,e,a,t,r){const p=e?e.previousSibling:s.lastChild;if(t&&r)for(;s.insertBefore(t.cloneNode(!0),e),t!==r&&(t=t.nextSibling););else{o.innerHTML=a?`<svg>${n}</svg>`:n;const t=o.content;if(a){const n=t.firstChild;for(;n.firstChild;)t.appendChild(n.firstChild);t.removeChild(n)}s.insertBefore(t,e)}return[p?p.nextSibling:s.firstChild,e?e.previousSibling:s.lastChild]}},l=/\s*!important$/;function i(n,s,e){if((0,a.kJ)(e))e.forEach((e=>i(n,s,e)));else if(s.startsWith("--"))n.setProperty(s,e);else{const t=function(n,s){const e=u[s];if(e)return e;let t=(0,a._A)(s);if("filter"!==t&&t in n)return u[s]=t;t=(0,a.kC)(t);for(let e=0;e<c.length;e++){const a=c[e]+t;if(a in n)return u[s]=a}return s}(n,s);l.test(e)?n.setProperty((0,a.rs)(t),e.replace(l,""),"important"):n[t]=e}}const c=["Webkit","Moz","ms"],u={},d="http://www.w3.org/1999/xlink";let h=Date.now,g=!1;if("undefined"!=typeof window){h()>document.createEvent("Event").timeStamp&&(h=()=>performance.now());const n=navigator.userAgent.match(/firefox\/(\d+)/i);g=!!(n&&Number(n[1])<=53)}let m=0;const k=Promise.resolve(),b=()=>{m=0};function v(n,s,e,a){n.addEventListener(s,e,a)}const w=/(?:Once|Passive|Capture)$/,x=/^on[a-z]/;"undefined"!=typeof HTMLElement&&HTMLElement;const f="transition",y="animation",M=(n,{slots:s})=>(0,t.h)(t.P$,function(n){const s={};for(const e in n)e in _||(s[e]=n[e]);if(!1===n.css)return s;const{name:e="v",type:t,duration:r,enterFromClass:o=`${e}-enter-from`,enterActiveClass:p=`${e}-enter-active`,enterToClass:l=`${e}-enter-to`,appearFromClass:i=o,appearActiveClass:c=p,appearToClass:u=l,leaveFromClass:d=`${e}-leave-from`,leaveActiveClass:h=`${e}-leave-active`,leaveToClass:g=`${e}-leave-to`}=n,m=function(n){if(null==n)return null;if((0,a.Kn)(n))return[E(n.enter),E(n.leave)];{const s=E(n);return[s,s]}}(r),k=m&&m[0],b=m&&m[1],{onBeforeEnter:v,onEnter:w,onEnterCancelled:x,onLeave:f,onLeaveCancelled:y,onBeforeAppear:M=v,onAppear:D=w,onAppearCancelled:F=x}=s,B=(n,s,e)=>{j(n,s?u:l),j(n,s?c:p),e&&e()},L=(n,s)=>{j(n,g),j(n,h),s&&s()},T=n=>(s,e)=>{const a=n?D:w,r=()=>B(s,n,e);C(a,[s,r]),A((()=>{j(s,n?i:o),P(s,n?u:l),S(a)||R(s,t,k,r)}))};return(0,a.l7)(s,{onBeforeEnter(n){C(v,[n]),P(n,o),P(n,p)},onBeforeAppear(n){C(M,[n]),P(n,i),P(n,c)},onEnter:T(!1),onAppear:T(!0),onLeave(n,s){const e=()=>L(n,s);P(n,d),document.body.offsetHeight,P(n,h),A((()=>{j(n,d),P(n,g),S(f)||R(n,t,b,e)})),C(f,[n,e])},onEnterCancelled(n){B(n,!1),C(x,[n])},onAppearCancelled(n){B(n,!0),C(F,[n])},onLeaveCancelled(n){L(n),C(y,[n])}})}(n),s);M.displayName="Transition";const _={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},C=(M.props=(0,a.l7)({},t.P$.props,_),(n,s=[])=>{(0,a.kJ)(n)?n.forEach((n=>n(...s))):n&&n(...s)}),S=n=>!!n&&((0,a.kJ)(n)?n.some((n=>n.length>1)):n.length>1);function E(n){return(0,a.He)(n)}function P(n,s){s.split(/\s+/).forEach((s=>s&&n.classList.add(s))),(n._vtc||(n._vtc=new Set)).add(s)}function j(n,s){s.split(/\s+/).forEach((s=>s&&n.classList.remove(s)));const{_vtc:e}=n;e&&(e.delete(s),e.size||(n._vtc=void 0))}function A(n){requestAnimationFrame((()=>{requestAnimationFrame(n)}))}let D=0;function R(n,s,e,a){const t=n._endId=++D,r=()=>{t===n._endId&&a()};if(e)return setTimeout(r,e);const{type:o,timeout:p,propCount:l}=function(n,s){const e=window.getComputedStyle(n),a=n=>(e[n]||"").split(", "),t=a("transitionDelay"),r=a("transitionDuration"),o=F(t,r),p=a("animationDelay"),l=a("animationDuration"),i=F(p,l);let c=null,u=0,d=0;return s===f?o>0&&(c=f,u=o,d=r.length):s===y?i>0&&(c=y,u=i,d=l.length):(u=Math.max(o,i),c=u>0?o>i?f:y:null,d=c?c===f?r.length:l.length:0),{type:c,timeout:u,propCount:d,hasTransform:c===f&&/\b(transform|all)(,|$)/.test(e.transitionProperty)}}(n,s);if(!o)return a();const i=o+"end";let c=0;const u=()=>{n.removeEventListener(i,d),r()},d=s=>{s.target===n&&++c>=l&&u()};setTimeout((()=>{c<l&&u()}),p+1),n.addEventListener(i,d)}function F(n,s){for(;n.length<s.length;)n=n.concat(n);return Math.max(...s.map(((s,e)=>B(s)+B(n[e]))))}function B(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}new WeakMap,new WeakMap;const L=n=>{const s=n.props["onUpdate:modelValue"];return(0,a.kJ)(s)?n=>(0,a.ir)(s,n):s};function T(n){n.target.composing=!0}function I(n){const s=n.target;s.composing&&(s.composing=!1,function(n,s){const e=document.createEvent("HTMLEvents");e.initEvent("input",!0,!0),n.dispatchEvent(e)}(s))}const N={created(n,{modifiers:{lazy:s,trim:e,number:t}},r){n._assign=L(r);const o=t||r.props&&"number"===r.props.type;v(n,s?"change":"input",(s=>{if(s.target.composing)return;let t=n.value;e?t=t.trim():o&&(t=(0,a.He)(t)),n._assign(t)})),e&&v(n,"change",(()=>{n.value=n.value.trim()})),s||(v(n,"compositionstart",T),v(n,"compositionend",I),v(n,"change",I))},mounted(n,{value:s}){n.value=null==s?"":s},beforeUpdate(n,{value:s,modifiers:{lazy:e,trim:t,number:r}},o){if(n._assign=L(o),n.composing)return;if(document.activeElement===n){if(e)return;if(t&&n.value.trim()===s)return;if((r||"number"===n.type)&&(0,a.He)(n.value)===s)return}const p=null==s?"":s;n.value!==p&&(n.value=p)}},O={beforeMount(n,{value:s},{transition:e}){n._vod="none"===n.style.display?"":n.style.display,e&&s?e.beforeEnter(n):V(n,s)},mounted(n,{value:s},{transition:e}){e&&s&&e.enter(n)},updated(n,{value:s,oldValue:e},{transition:a}){!s!=!e&&(a?s?(a.beforeEnter(n),V(n,!0),a.enter(n)):a.leave(n,(()=>{V(n,!1)})):V(n,s))},beforeUnmount(n,{value:s}){V(n,s)}};function V(n,s){n.style.display=s?n._vod:"none"}const Z=(0,a.l7)({patchProp:(n,s,e,r,o=!1,p,l,c,u)=>{"class"===s?function(n,s,e){const a=n._vtc;a&&(s=(s?[s,...a]:[...a]).join(" ")),null==s?n.removeAttribute("class"):e?n.setAttribute("class",s):n.className=s}(n,r,o):"style"===s?function(n,s,e){const t=n.style,r=(0,a.HD)(e);if(e&&!r){for(const n in e)i(t,n,e[n]);if(s&&!(0,a.HD)(s))for(const n in s)null==e[n]&&i(t,n,"")}else{const a=t.display;r?s!==e&&(t.cssText=e):s&&n.removeAttribute("style"),"_vod"in n&&(t.display=a)}}(n,e,r):(0,a.F7)(s)?(0,a.tR)(s)||function(n,s,e,r,o=null){const p=n._vei||(n._vei={}),l=p[s];if(r&&l)l.value=r;else{const[e,i]=function(n){let s;if(w.test(n)){let e;for(s={};e=n.match(w);)n=n.slice(0,n.length-e[0].length),s[e[0].toLowerCase()]=!0}return[(0,a.rs)(n.slice(2)),s]}(s);if(r){const l=p[s]=function(n,s){const e=n=>{const r=n.timeStamp||h();(g||r>=e.attached-1)&&(0,t.$d)(function(n,s){if((0,a.kJ)(s)){const e=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{e.call(n),n._stopped=!0},s.map((n=>s=>!s._stopped&&n(s)))}return s}(n,e.value),s,5,[n])};return e.value=n,e.attached=m||(k.then(b),m=h()),e}(r,o);v(n,e,l,i)}else l&&(function(n,s,e,a){n.removeEventListener(s,e,a)}(n,e,l,i),p[s]=void 0)}}(n,s,0,r,l):("."===s[0]?(s=s.slice(1),1):"^"===s[0]?(s=s.slice(1),0):function(n,s,e,t){return t?"innerHTML"===s||"textContent"===s||!!(s in n&&x.test(s)&&(0,a.mf)(e)):"spellcheck"!==s&&"draggable"!==s&&("form"!==s&&(("list"!==s||"INPUT"!==n.tagName)&&(("type"!==s||"TEXTAREA"!==n.tagName)&&((!x.test(s)||!(0,a.HD)(e))&&s in n))))}(n,s,r,o))?function(n,s,e,t,r,o,p){if("innerHTML"===s||"textContent"===s)return t&&p(t,r,o),void(n[s]=null==e?"":e);if("value"===s&&"PROGRESS"!==n.tagName&&!n.tagName.includes("-")){n._value=e;const a=null==e?"":e;return n.value===a&&"OPTION"!==n.tagName||(n.value=a),void(null==e&&n.removeAttribute(s))}if(""===e||null==e){const t=typeof n[s];if("boolean"===t)return void(n[s]=(0,a.yA)(e));if(null==e&&"string"===t)return n[s]="",void n.removeAttribute(s);if("number"===t){try{n[s]=0}catch(n){}return void n.removeAttribute(s)}}try{n[s]=e}catch(n){}}(n,s,r,p,l,c,u):("true-value"===s?n._trueValue=r:"false-value"===s&&(n._falseValue=r),function(n,s,e,t,r){if(t&&s.startsWith("xlink:"))null==e?n.removeAttributeNS(d,s.slice(6,s.length)):n.setAttributeNS(d,s,e);else{const t=(0,a.Pq)(s);null==e||t&&!(0,a.yA)(e)?n.removeAttribute(s):n.setAttribute(s,t?"":e)}}(n,s,r,o))}},p);let H,U=!1;const z=(...n)=>{const s=(H=U?H:(0,t.Eo)(Z),U=!0,H).createApp(...n),{mount:e}=s;return s.mount=n=>{const s=function(n){if((0,a.HD)(n))return document.querySelector(n);return n}(n);if(s)return e(s,!0,s instanceof SVGElement)},s}},3577:(n,s,e)=>{"use strict";function a(n,s){const e=Object.create(null),a=n.split(",");for(let n=0;n<a.length;n++)e[a[n]]=!0;return s?n=>!!e[n.toLowerCase()]:n=>!!e[n]}e.d(s,{Z6:()=>b,kT:()=>k,NO:()=>w,dG:()=>v,_A:()=>z,kC:()=>K,Nj:()=>J,l7:()=>M,E9:()=>nn,aU:()=>W,RI:()=>S,rs:()=>$,yA:()=>o,ir:()=>G,kJ:()=>E,mf:()=>D,e1:()=>t,S0:()=>V,_N:()=>P,tR:()=>y,Kn:()=>B,F7:()=>f,PO:()=>O,tI:()=>L,Gg:()=>Z,DM:()=>j,Pq:()=>r,HD:()=>R,yk:()=>F,WV:()=>d,hq:()=>h,fY:()=>a,C_:()=>u,j5:()=>p,Od:()=>_,zw:()=>g,hR:()=>Y,He:()=>X,W7:()=>N});const t=a("Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt"),r=a("itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly");function o(n){return!!n||""===n}function p(n){if(E(n)){const s={};for(let e=0;e<n.length;e++){const a=n[e],t=R(a)?c(a):p(a);if(t)for(const n in t)s[n]=t[n]}return s}return R(n)||B(n)?n:void 0}const l=/;(?![^(]*\))/g,i=/:(.+)/;function c(n){const s={};return n.split(l).forEach((n=>{if(n){const e=n.split(i);e.length>1&&(s[e[0].trim()]=e[1].trim())}})),s}function u(n){let s="";if(R(n))s=n;else if(E(n))for(let e=0;e<n.length;e++){const a=u(n[e]);a&&(s+=a+" ")}else if(B(n))for(const e in n)n[e]&&(s+=e+" ");return s.trim()}function d(n,s){if(n===s)return!0;let e=A(n),a=A(s);if(e||a)return!(!e||!a)&&n.getTime()===s.getTime();if(e=E(n),a=E(s),e||a)return!(!e||!a)&&function(n,s){if(n.length!==s.length)return!1;let e=!0;for(let a=0;e&&a<n.length;a++)e=d(n[a],s[a]);return e}(n,s);if(e=B(n),a=B(s),e||a){if(!e||!a)return!1;if(Object.keys(n).length!==Object.keys(s).length)return!1;for(const e in n){const a=n.hasOwnProperty(e),t=s.hasOwnProperty(e);if(a&&!t||!a&&t||!d(n[e],s[e]))return!1}}return String(n)===String(s)}function h(n,s){return n.findIndex((n=>d(n,s)))}const g=n=>null==n?"":E(n)||B(n)&&(n.toString===T||!D(n.toString))?JSON.stringify(n,m,2):String(n),m=(n,s)=>s&&s.__v_isRef?m(n,s.value):P(s)?{[`Map(${s.size})`]:[...s.entries()].reduce(((n,[s,e])=>(n[`${s} =>`]=e,n)),{})}:j(s)?{[`Set(${s.size})`]:[...s.values()]}:!B(s)||E(s)||O(s)?s:String(s),k={},b=[],v=()=>{},w=()=>!1,x=/^on[^a-z]/,f=n=>x.test(n),y=n=>n.startsWith("onUpdate:"),M=Object.assign,_=(n,s)=>{const e=n.indexOf(s);e>-1&&n.splice(e,1)},C=Object.prototype.hasOwnProperty,S=(n,s)=>C.call(n,s),E=Array.isArray,P=n=>"[object Map]"===I(n),j=n=>"[object Set]"===I(n),A=n=>n instanceof Date,D=n=>"function"==typeof n,R=n=>"string"==typeof n,F=n=>"symbol"==typeof n,B=n=>null!==n&&"object"==typeof n,L=n=>B(n)&&D(n.then)&&D(n.catch),T=Object.prototype.toString,I=n=>T.call(n),N=n=>I(n).slice(8,-1),O=n=>"[object Object]"===I(n),V=n=>R(n)&&"NaN"!==n&&"-"!==n[0]&&""+parseInt(n,10)===n,Z=a(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),H=n=>{const s=Object.create(null);return e=>s[e]||(s[e]=n(e))},U=/-(\w)/g,z=H((n=>n.replace(U,((n,s)=>s?s.toUpperCase():"")))),q=/\B([A-Z])/g,$=H((n=>n.replace(q,"-$1").toLowerCase())),K=H((n=>n.charAt(0).toUpperCase()+n.slice(1))),Y=H((n=>n?`on${K(n)}`:"")),W=(n,s)=>!Object.is(n,s),G=(n,s)=>{for(let e=0;e<n.length;e++)n[e](s)},J=(n,s,e)=>{Object.defineProperty(n,s,{configurable:!0,enumerable:!1,value:e})},X=n=>{const s=parseFloat(n);return isNaN(s)?n:s};let Q;const nn=()=>Q||(Q="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{})},2753:(n,s,e)=>{"use strict";e.d(s,{Z:()=>r});var a=e(7621),t=e(6349);const r=(0,a.vW)((({app:n,router:s})=>{(0,t.VZ)(n),(0,t.E8)(n)}))},8242:(n,s,e)=>{"use strict";e.d(s,{Z:()=>p});var a=e(6252),t=e(7621),r=e(9494),o=e(6333);const p=(0,t.F2)((()=>{const n=(0,o.X6)(),s=(0,t.I2)(),e=(0,a.Fl)((()=>(0,r.T4)(s.value,n.value)));(0,a.JJ)(r.Vc,e);const p=(0,a.Fl)((()=>(0,r.vf)()));(0,a.JJ)(r.Lj,p)}))},9494:(n,s,e)=>{"use strict";e.d(s,{Lj:()=>i,vf:()=>u,T4:()=>b,Vc:()=>m,sC:()=>o,v4:()=>c,P$:()=>M,tx:()=>g,VU:()=>k});var a=e(2119),t=e(480);const r=(...n)=>{const s=(0,a.tv)().resolve(...n),e=s.matched[s.matched.length-1];if(!(null==e?void 0:e.redirect))return s;const{redirect:o}=e,p=(0,t.mf)(o)?o(s):o,l=(0,t.HD)(p)?{path:p}:p;return r({hash:s.hash,query:s.query,params:s.params,...l})},o=n=>{const s=r(n);return{text:s.meta.title||n,link:"404"===s.name?n:s.fullPath}};e(6333);var p=e(6252),l=e(7621);const i=Symbol("pageHeaders"),c=()=>{const n=(0,p.f3)(i);if(!n)throw new Error("usePageHeaders() is called without provider.");return n};function u(){const n=(0,l.Vi)();return d(n.value.headers)}const d=n=>n.map((n=>(n=>({text:n.title,link:`#${n.slug}`,level:n.level,children:d(n.children)}))(n)));var h=e(2262);const g=()=>{const n=(0,h.iH)(!1),s=(0,l.I2)(),e=k(),a=c(),t=(0,p.Fl)((()=>e.value.length>0&&n)),r=(0,p.Fl)((()=>a.value.length>0&&!0!==s.value.home));return{isOpenSidebar:n,isShowSidebar:t,isShowHeaders:r,toggleSidebar:s=>{n.value="boolean"==typeof s?s:!n.value}}},m=Symbol("sidebarItems"),k=()=>{const n=(0,p.f3)(m);if(!n)throw new Error("useSidebarItems() is called without provider.");return n},b=(n,s)=>{var e,a;const r=null!==(a=null!==(e=n.series)&&void 0!==e?e:s.series)&&void 0!==a?a:"auto";return n.home||!1===r?[]:(0,t.kJ)(r)?v(r):(0,t.PO)(r)?w(r):[]},v=n=>{const s=n=>{let e;return e=(0,t.HD)(n)?o(n):n,e.isGroup&&e.children?{...e,children:e.children.map(s)}:e};return n.map((n=>(0,t.HD)(n)?o(n):{...n,children:n.children.map(s)}))},w=n=>{var s;const e=(0,a.yj)(),r=null!==(s=n[(0,t.gb)(n,e.path)])&&void 0!==s?s:[];return v(r)};let x=null,f=null;const y={wait:()=>x,pending:()=>{x=new Promise((n=>f=n))},resolve:()=>{null==f||f(),x=null,f=null}},M=()=>y},6349:(n,s,e)=>{"use strict";e.d(s,{bq:()=>i,VZ:()=>q$n,Fg:()=>l,c9:()=>o,E8:()=>$$n});var a={};e.r(a),e.d(a,{AB:()=>v,AccessPoint:()=>y,AccessPointOff:()=>S,Accessible:()=>A,Activity:()=>B,Ad:()=>N,Ad2:()=>H,Adjustments:()=>$,AdjustmentsAlt:()=>G,AdjustmentsHorizontal:()=>nn,AerialLift:()=>tn,Affiliate:()=>ln,Alarm:()=>hn,AlertCircle:()=>bn,AlertOctagon:()=>fn,AlertTriangle:()=>Cn,Alien:()=>jn,AlignCenter:()=>Fn,AlignJustified:()=>In,AlignLeft:()=>Zn,AlignRight:()=>qn,Ambulance:()=>Wn,Anchor:()=>Qn,Angle:()=>as,AntennaBars1:()=>ps,AntennaBars2:()=>us,AntennaBars3:()=>ms,AntennaBars4:()=>ws,AntennaBars5:()=>Ms,Aperture:()=>Es,Api:()=>Ds,ApiApp:()=>Ls,AppWindow:()=>Os,Apple:()=>Us,Apps:()=>Ks,Archive:()=>Js,Armchair:()=>se,Armchair2:()=>re,ArrowAutofitContent:()=>ie,ArrowAutofitDown:()=>he,ArrowAutofitHeight:()=>be,ArrowAutofitLeft:()=>fe,ArrowAutofitRight:()=>Ce,ArrowAutofitUp:()=>je,ArrowAutofitWidth:()=>Fe,ArrowBack:()=>Ie,ArrowBackUp:()=>Ze,ArrowBarDown:()=>qe,ArrowBarLeft:()=>We,ArrowBarRight:()=>Qe,ArrowBarToDown:()=>aa,ArrowBarToLeft:()=>pa,ArrowBarToRight:()=>ua,ArrowBarToUp:()=>ma,ArrowBarUp:()=>wa,ArrowBigDown:()=>Ma,ArrowBigDownLine:()=>Ea,ArrowBigDownLines:()=>Da,ArrowBigLeft:()=>La,ArrowBigLeftLine:()=>Oa,ArrowBigLeftLines:()=>Ua,ArrowBigRight:()=>Ka,ArrowBigRightLine:()=>Ja,ArrowBigRightLines:()=>st,ArrowBigTop:()=>rt,ArrowBigUpLine:()=>it,ArrowBigUpLines:()=>ht,ArrowBottomBar:()=>bt,ArrowBottomCircle:()=>ft,ArrowBottomSquare:()=>Ct,ArrowBottomTail:()=>jt,ArrowDown:()=>Ft,ArrowDownCircle:()=>It,ArrowDownLeft:()=>Zt,ArrowDownLeftCircle:()=>qt,ArrowDownRight:()=>Wt,ArrowDownRightCircle:()=>Qt,ArrowForward:()=>ar,ArrowForwardUp:()=>pr,ArrowLeft:()=>ur,ArrowLeftBar:()=>mr,ArrowLeftCircle:()=>wr,ArrowLeftSquare:()=>Mr,ArrowLeftTail:()=>Er,ArrowLoopLeft:()=>Dr,ArrowLoopRight:()=>Lr,ArrowNarrowDown:()=>Or,ArrowNarrowLeft:()=>Ur,ArrowNarrowRight:()=>Kr,ArrowNarrowUp:()=>Jr,ArrowRampLeft:()=>so,ArrowRampRight:()=>ro,ArrowRight:()=>io,ArrowRightBar:()=>go,ArrowRightCircle:()=>vo,ArrowRightSquare:()=>yo,ArrowRightTail:()=>So,ArrowTopBar:()=>Ao,ArrowTopCircle:()=>Bo,ArrowTopSquare:()=>No,ArrowTopTail:()=>Ho,ArrowUp:()=>$o,ArrowUpCircle:()=>Go,ArrowUpLeft:()=>np,ArrowUpLeftCircle:()=>tp,ArrowUpRight:()=>lp,ArrowUpRightCircle:()=>dp,ArrowWaveLeftDown:()=>kp,ArrowWaveLeftUp:()=>xp,ArrowWaveRightDown:()=>_p,ArrowWaveRightUp:()=>Pp,ArrowsCross:()=>Rp,ArrowsDiagonal:()=>Tp,ArrowsDiagonal2:()=>Vp,ArrowsDiagonalMinimize:()=>zp,ArrowsDiagonalMinimize2:()=>Yp,ArrowsDoubleNeSw:()=>Xp,ArrowsDoubleNwSe:()=>el,ArrowsDoubleSeNw:()=>ol,ArrowsDoubleSwNe:()=>cl,ArrowsDown:()=>gl,ArrowsDownUp:()=>vl,ArrowsHorizontal:()=>yl,ArrowsJoin:()=>Sl,ArrowsJoin2:()=>Al,ArrowsLeft:()=>Bl,ArrowsLeftDown:()=>Nl,ArrowsLeftRight:()=>Hl,ArrowsMaximize:()=>$l,ArrowsMinimize:()=>Gl,ArrowsRight:()=>ni,ArrowsRightDown:()=>ti,ArrowsRightLeft:()=>li,ArrowsShuffle:()=>di,ArrowsShuffle2:()=>ki,ArrowsSort:()=>xi,ArrowsSplit:()=>_i,ArrowsSplit2:()=>Pi,ArrowsUp:()=>Ri,ArrowsUpDown:()=>Ti,ArrowsUpLeft:()=>Vi,ArrowsUpRight:()=>zi,ArrowsVertical:()=>Yi,Artboard:()=>Xi,AspectRatio:()=>ec,Asterisk:()=>oc,AsteriskSimple:()=>cc,At:()=>gc,Atom:()=>vc,Atom2:()=>yc,Award:()=>Sc,Axe:()=>Ac,AxisX:()=>Bc,AxisY:()=>Nc,Backhoe:()=>Hc,Backpack:()=>$c,Backspace:()=>Gc,Badge:()=>nu,Badges:()=>tu,BallAmericanFootball:()=>lu,BallBaseball:()=>du,BallBasketball:()=>ku,BallBowling:()=>xu,BallFootball:()=>_u,BallFootballOff:()=>Pu,BallTennis:()=>Ru,BallVolleyball:()=>Tu,Ballon:()=>Vu,Ban:()=>zu,Bandage:()=>Yu,Barbell:()=>Xu,Barcode:()=>ed,Basket:()=>od,Bath:()=>cd,Battery:()=>gd,Battery1:()=>vd,Battery2:()=>yd,Battery3:()=>Sd,Battery4:()=>Ad,BatteryAutomotive:()=>Bd,BatteryCharging:()=>Nd,BatteryCharging2:()=>Hd,BatteryEco:()=>$d,BatteryOff:()=>Gd,Beach:()=>nh,Bed:()=>th,Beer:()=>lh,Bell:()=>dh,BellMinus:()=>kh,BellOff:()=>xh,BellPlus:()=>_h,BellRinging:()=>Ph,BellRinging2:()=>Rh,BellX:()=>Th,BellZ:()=>Vh,Bible:()=>zh,Bike:()=>Yh,Binary:()=>Xh,Biohazard:()=>eg,Blockquote:()=>og,Bluetooth:()=>cg,BluetoothConnected:()=>gg,BluetoothOff:()=>vg,Blur:()=>yg,Bold:()=>Sg,Bolt:()=>Ag,BoltOff:()=>Bg,Bone:()=>Ng,Book:()=>Hg,Book2:()=>$g,Bookmark:()=>Gg,BookmarkOff:()=>nm,Bookmarks:()=>tm,Books:()=>lm,BorderAll:()=>dm,BorderBottom:()=>km,BorderHorizontal:()=>xm,BorderInner:()=>_m,BorderLeft:()=>Pm,BorderNone:()=>Rm,BorderOuter:()=>Tm,BorderRadius:()=>Vm,BorderRight:()=>zm,BorderStyle:()=>Ym,BorderStyle2:()=>Xm,BorderTop:()=>ek,BorderVertical:()=>ok,Bottle:()=>ck,Box:()=>gk,BoxMargin:()=>vk,BoxModel:()=>yk,BoxModel2:()=>Sk,BoxMultiple:()=>Ak,BoxMultiple0:()=>Bk,BoxMultiple1:()=>Nk,BoxMultiple2:()=>Hk,BoxMultiple3:()=>$k,BoxMultiple4:()=>Gk,BoxMultiple5:()=>nb,BoxMultiple6:()=>tb,BoxMultiple7:()=>lb,BoxMultiple8:()=>db,BoxMultiple9:()=>kb,BoxPadding:()=>xb,Braces:()=>_b,Brackets:()=>Pb,BrandAirbnb:()=>Rb,BrandAirtable:()=>Tb,BrandAndroid:()=>Vb,BrandAngular:()=>zb,BrandApple:()=>Yb,BrandAppleArcade:()=>Xb,BrandAppstore:()=>ev,BrandAsana:()=>ov,BrandBehance:()=>cv,BrandBing:()=>gv,BrandBitbucket:()=>vv,BrandBooking:()=>yv,BrandBootstrap:()=>Sv,BrandChrome:()=>Av,BrandCodepen:()=>Bv,BrandCodesandbox:()=>Nv,BrandCss3:()=>Hv,BrandCucumber:()=>$v,BrandDebian:()=>Gv,BrandDeviantart:()=>nw,BrandDiscord:()=>tw,BrandDisqus:()=>lw,BrandDocker:()=>dw,BrandDoctrine:()=>kw,BrandDribbble:()=>xw,BrandEdge:()=>_w,BrandFacebook:()=>Pw,BrandFigma:()=>Rw,BrandFirebase:()=>Tw,BrandFirefox:()=>Vw,BrandFlickr:()=>zw,BrandFoursquare:()=>Yw,BrandFramer:()=>Xw,BrandGit:()=>ex,BrandGithub:()=>ox,BrandGitlab:()=>cx,BrandGmail:()=>gx,BrandGoogle:()=>vx,BrandGoogleAnalytics:()=>yx,BrandGoogleDrive:()=>Sx,BrandGooglePlay:()=>Ax,BrandGravatar:()=>Bx,BrandHipchat:()=>Nx,BrandHtml5:()=>Hx,BrandInstagram:()=>$x,BrandJavascript:()=>Gx,BrandKickstarter:()=>nf,BrandKotlin:()=>tf,BrandLastfm:()=>lf,BrandLinkedin:()=>hf,BrandLoom:()=>bf,BrandMastercard:()=>ff,BrandMedium:()=>Cf,BrandMessenger:()=>jf,BrandMeta:()=>Ff,BrandNetbeans:()=>If,BrandNetflix:()=>Zf,BrandNotion:()=>qf,BrandNytimes:()=>Wf,BrandOpenSource:()=>Qf,BrandOpera:()=>ay,BrandPagekit:()=>py,BrandPatreon:()=>uy,BrandPaypal:()=>my,BrandPhp:()=>wy,BrandPinterest:()=>My,BrandPocket:()=>Ey,BrandProducthunt:()=>Dy,BrandPython:()=>Ly,BrandReactNative:()=>Oy,BrandReddit:()=>Uy,BrandSafari:()=>Ky,BrandSass:()=>Jy,BrandSentry:()=>sM,BrandShazam:()=>rM,BrandSketch:()=>iM,BrandSkype:()=>hM,BrandSlack:()=>bM,BrandSnapchat:()=>fM,BrandSoundcloud:()=>CM,BrandSpotify:()=>jM,BrandStackoverflow:()=>FM,BrandSteam:()=>IM,BrandStripe:()=>ZM,BrandSublimeText:()=>qM,BrandTabler:()=>WM,BrandTailwind:()=>QM,BrandTelegram:()=>a_,BrandTidal:()=>p_,BrandTiktok:()=>u_,BrandTinder:()=>m_,BrandTripadvisor:()=>w_,BrandTumblr:()=>M_,BrandTwitch:()=>E_,BrandTwitter:()=>D_,BrandUber:()=>L_,BrandUbuntu:()=>O_,BrandUnsplash:()=>U_,BrandVercel:()=>K_,BrandVimeo:()=>J_,BrandVisualStudio:()=>sC,BrandVk:()=>rC,BrandWhatsapp:()=>iC,BrandWindows:()=>hC,BrandYahoo:()=>bC,BrandYcombinator:()=>fC,BrandYoutube:()=>CC,Bread:()=>jC,Briefcase:()=>FC,Brightness:()=>IC,Brightness2:()=>ZC,BrightnessDown:()=>qC,BrightnessHalf:()=>WC,BrightnessUp:()=>QC,Browser:()=>aS,BrowserCheck:()=>pS,BrowserPlus:()=>uS,BrowserX:()=>mS,Brush:()=>wS,Bucket:()=>MS,Bug:()=>ES,Building:()=>DS,BuildingArch:()=>LS,BuildingBank:()=>OS,BuildingBridge:()=>US,BuildingBridge2:()=>KS,BuildingCarousel:()=>JS,BuildingCastle:()=>sE,BuildingChurch:()=>rE,BuildingCommunity:()=>iE,BuildingCottage:()=>hE,BuildingFactory:()=>bE,BuildingFortress:()=>fE,BuildingHospital:()=>CE,BuildingLighthouse:()=>jE,BuildingMonument:()=>FE,BuildingPavilon:()=>IE,BuildingSkyscraper:()=>ZE,BuildingStore:()=>qE,BuildingWarehouse:()=>WE,Bulb:()=>QE,BulbOff:()=>aP,Bulldozer:()=>pP,Bus:()=>uP,Businessplan:()=>mP,Butterfly:()=>wP,CSharp:()=>MP,Calculator:()=>EP,Calendar:()=>DP,CalendarEvent:()=>LP,CalendarMinus:()=>OP,CalendarOff:()=>UP,CalendarPlus:()=>KP,CalendarStats:()=>JP,CalendarTime:()=>sj,Camera:()=>rj,CameraMinus:()=>ij,CameraOff:()=>hj,CameraPlus:()=>bj,CameraRotate:()=>fj,CameraSelfie:()=>Cj,Candle:()=>jj,Candy:()=>Fj,Capture:()=>Ij,Car:()=>Zj,CarCrane:()=>qj,CarCrash:()=>Wj,Caravan:()=>Qj,Cardboards:()=>aA,CaretDown:()=>pA,CaretLeft:()=>uA,CaretRight:()=>mA,CaretUp:()=>wA,Cash:()=>MA,CashBanknote:()=>EA,CashBanknoteOff:()=>DA,Cast:()=>LA,Ce:()=>OA,Certificate:()=>UA,ChargingPile:()=>KA,ChartArcs:()=>JA,ChartArcs3:()=>sD,ChartArea:()=>rD,ChartAreaLine:()=>iD,ChartArrows:()=>hD,ChartArrowsVertical:()=>bD,ChartBar:()=>fD,ChartBubble:()=>CD,ChartCandle:()=>jD,ChartCircles:()=>FD,ChartDonut:()=>ID,ChartDonut2:()=>ZD,ChartDonut3:()=>qD,ChartDonut4:()=>WD,ChartDots:()=>QD,ChartInfographic:()=>aR,ChartLine:()=>pR,ChartPie:()=>uR,ChartPie2:()=>mR,ChartPie3:()=>wR,ChartPie4:()=>MR,ChartRadar:()=>ER,Check:()=>DR,Checkbox:()=>LR,Checks:()=>OR,CheckupList:()=>UR,Cheese:()=>KR,ChevronDown:()=>JR,ChevronDownLeft:()=>sF,ChevronDownRight:()=>rF,ChevronLeft:()=>iF,ChevronRight:()=>hF,ChevronUp:()=>bF,ChevronUpLeft:()=>fF,ChevronUpRight:()=>CF,ChevronsDown:()=>jF,ChevronsDownLeft:()=>FF,ChevronsDownRight:()=>IF,ChevronsLeft:()=>ZF,ChevronsRight:()=>qF,ChevronsUp:()=>WF,ChevronsUpLeft:()=>QF,ChevronsUpRight:()=>aB,ChristmasTree:()=>pB,Circle:()=>uB,Circle0:()=>mB,Circle1:()=>wB,Circle2:()=>MB,Circle3:()=>EB,Circle4:()=>DB,Circle5:()=>LB,Circle6:()=>OB,Circle7:()=>UB,Circle8:()=>KB,Circle9:()=>JB,CircleCheck:()=>sL,CircleDashed:()=>rL,CircleDot:()=>iL,CircleDotted:()=>hL,CircleHalf:()=>bL,CircleHalf2:()=>fL,CircleHalfVertical:()=>CL,CircleMinus:()=>jL,CircleOff:()=>FL,CirclePlus:()=>IL,CircleSquare:()=>ZL,CircleX:()=>qL,Circles:()=>WL,ClearAll:()=>QL,ClearFormatting:()=>aT,Click:()=>pT,Clipboard:()=>uT,ClipboardCheck:()=>mT,ClipboardList:()=>wT,ClipboardPlus:()=>MT,ClipboardX:()=>ET,Clock:()=>DT,Cloud:()=>LT,CloudDownload:()=>OT,CloudFog:()=>UT,CloudLock:()=>KT,CloudLockOpen:()=>JT,CloudOff:()=>sI,CloudRain:()=>rI,CloudSnow:()=>iI,CloudStorm:()=>hI,CloudUpload:()=>bI,Clubs:()=>fI,Code:()=>CI,CodeMinus:()=>jI,CodePlus:()=>FI,Coffee:()=>II,Coin:()=>ZI,ColorPicker:()=>qI,ColorSwatch:()=>WI,ColumnInsertLeft:()=>QI,ColumnInsertRight:()=>aN,Columns:()=>pN,Comet:()=>uN,Command:()=>mN,Compass:()=>wN,Components:()=>MN,Cone:()=>EN,Cone2:()=>DN,Confetti:()=>LN,Container:()=>ON,Contrast:()=>UN,Contrast2:()=>KN,Cookie:()=>JN,Copy:()=>sO,Copyleft:()=>rO,Copyright:()=>iO,CornerDownLeft:()=>hO,CornerDownLeftDouble:()=>bO,CornerDownRight:()=>fO,CornerDownRightDouble:()=>CO,CornerLeftDown:()=>jO,CornerLeftDownDouble:()=>FO,CornerLeftUp:()=>IO,CornerLeftUpDouble:()=>ZO,CornerRightDown:()=>qO,CornerRightDownDouble:()=>WO,CornerRightUp:()=>QO,CornerRightUpDouble:()=>aV,CornerUpLeft:()=>pV,CornerUpLeftDouble:()=>uV,CornerUpRight:()=>mV,CornerUpRightDouble:()=>wV,Cpu:()=>MV,Crane:()=>EV,CreativeCommons:()=>DV,CreditCard:()=>LV,CreditCardOff:()=>OV,Crop:()=>UV,Cross:()=>KV,Crosshair:()=>JV,Crown:()=>sZ,CrownOff:()=>rZ,Crutches:()=>iZ,Cup:()=>hZ,Curling:()=>bZ,CurlyLoop:()=>fZ,Currency:()=>CZ,CurrencyBahraini:()=>jZ,CurrencyBath:()=>FZ,CurrencyBitcoin:()=>IZ,CurrencyCent:()=>ZZ,CurrencyDinar:()=>qZ,CurrencyDirham:()=>WZ,CurrencyDogecoin:()=>QZ,CurrencyDollar:()=>aH,CurrencyDollarAustralian:()=>pH,CurrencyDollarCanadian:()=>uH,CurrencyDollarSingapore:()=>mH,CurrencyEthereum:()=>wH,CurrencyEuro:()=>MH,CurrencyForint:()=>EH,CurrencyFrank:()=>DH,CurrencyKroneCzech:()=>LH,CurrencyKroneDanish:()=>OH,CurrencyKroneSwedish:()=>UH,CurrencyLeu:()=>KH,CurrencyLira:()=>JH,CurrencyLitecoin:()=>sU,CurrencyNaira:()=>rU,CurrencyPound:()=>iU,CurrencyReal:()=>hU,CurrencyRenminbi:()=>bU,CurrencyRipple:()=>fU,CurrencyRiyal:()=>CU,CurrencyRubel:()=>jU,CurrencyRupee:()=>FU,CurrencyShekel:()=>IU,CurrencyTaka:()=>ZU,CurrencyTugrik:()=>qU,CurrencyWon:()=>WU,CurrencyYen:()=>QU,CurrencyZloty:()=>az,CurrentLocation:()=>pz,CursorText:()=>uz,Cut:()=>mz,Dashboard:()=>wz,Database:()=>Mz,DatabaseExport:()=>Ez,DatabaseImport:()=>Dz,DatabaseOff:()=>Lz,Details:()=>Oz,DeviceAnalytics:()=>Uz,DeviceAudioTape:()=>Kz,DeviceCctv:()=>Jz,DeviceComputerCamera:()=>sq,DeviceComputerCameraOff:()=>rq,DeviceDesktop:()=>iq,DeviceDesktopAnalytics:()=>hq,DeviceDesktopOff:()=>bq,DeviceFloppy:()=>fq,DeviceGamepad:()=>Cq,DeviceLaptop:()=>jq,DeviceMobile:()=>Fq,DeviceMobileMessage:()=>Iq,DeviceMobileRotated:()=>Zq,DeviceMobileVibration:()=>qq,DeviceSpeaker:()=>Wq,DeviceTablet:()=>Qq,DeviceTv:()=>a$,DeviceWatch:()=>p$,DeviceWatchStats:()=>u$,DeviceWatchStats2:()=>m$,Devices:()=>w$,Devices2:()=>M$,DevicesPc:()=>E$,Diamond:()=>D$,Diamonds:()=>L$,Dice:()=>O$,Dimensions:()=>U$,Direction:()=>K$,DirectionHorizontal:()=>J$,Directions:()=>sK,Disabled:()=>rK,Disabled2:()=>iK,Disc:()=>hK,Discount:()=>bK,Discount2:()=>fK,Divide:()=>CK,Dna:()=>jK,Dna2:()=>FK,DogBowl:()=>IK,Door:()=>ZK,DoorEnter:()=>qK,DoorExit:()=>WK,Dots:()=>QK,DotsCircleHorizontal:()=>aY,DotsDiagonal:()=>pY,DotsDiagonal2:()=>uY,DotsVertical:()=>mY,Download:()=>wY,DragDrop:()=>MY,DragDrop2:()=>EY,Drone:()=>DY,DroneOff:()=>LY,DropCircle:()=>OY,Droplet:()=>UY,DropletFilled:()=>KY,DropletFilled2:()=>JY,DropletHalf:()=>sW,DropletHalf2:()=>rW,DropletOff:()=>iW,Ear:()=>hW,EarOff:()=>bW,Edit:()=>fW,EditCircle:()=>CW,Egg:()=>jW,Elevator:()=>FW,EmergencyBed:()=>IW,Emphasis:()=>ZW,Engine:()=>qW,Equal:()=>WW,EqualNot:()=>QW,Eraser:()=>aG,Exchange:()=>pG,ExclamationMark:()=>uG,Exposure:()=>mG,ExternalLink:()=>wG,Eye:()=>MG,EyeCheck:()=>EG,EyeOff:()=>DG,EyeTable:()=>LG,Eyeglass:()=>OG,Eyeglass2:()=>UG,FaceId:()=>KG,FaceIdError:()=>JG,FaceMask:()=>sJ,Fall:()=>rJ,Feather:()=>iJ,Fence:()=>hJ,File:()=>bJ,FileAlert:()=>fJ,FileAnalytics:()=>CJ,FileCertificate:()=>jJ,FileCheck:()=>FJ,FileCode:()=>IJ,FileCode2:()=>ZJ,FileDiff:()=>qJ,FileDigit:()=>WJ,FileDislike:()=>QJ,FileDollar:()=>aX,FileDownload:()=>pX,FileEuro:()=>uX,FileExport:()=>mX,FileHorizontal:()=>wX,FileImport:()=>MX,FileInfo:()=>EX,FileInvoice:()=>DX,FileLike:()=>LX,FileMinus:()=>OX,FileMusic:()=>UX,FileOff:()=>KX,FilePhone:()=>JX,FilePlus:()=>sQ,FileReport:()=>rQ,FileSearch:()=>iQ,FileShredder:()=>hQ,FileSymlink:()=>bQ,FileText:()=>fQ,FileUpload:()=>CQ,FileX:()=>jQ,FileZip:()=>FQ,Files:()=>IQ,FilesOff:()=>ZQ,Filter:()=>qQ,FilterOff:()=>WQ,Fingerprint:()=>QQ,Firetruck:()=>a0,FirstAidKit:()=>p0,Fish:()=>u0,Flag:()=>m0,Flag2:()=>w0,Flag3:()=>M0,Flame:()=>E0,Flare:()=>D0,Flask:()=>L0,Flask2:()=>O0,FlipHorizontal:()=>U0,FlipVertical:()=>K0,FloatCenter:()=>J0,FloatLeft:()=>s1,FloatNone:()=>r1,FloatRight:()=>i1,Flower:()=>h1,Focus:()=>b1,Focus2:()=>f1,Fold:()=>C1,FoldDown:()=>j1,FoldUp:()=>F1,Folder:()=>I1,FolderMinus:()=>Z1,FolderOff:()=>q1,FolderPlus:()=>W1,FolderX:()=>Q1,Folders:()=>a2,Forbid:()=>p2,Forbid2:()=>u2,Forklift:()=>m2,Forms:()=>w2,Frame:()=>M2,FreeRights:()=>E2,Friends:()=>D2,GasStation:()=>L2,Gauge:()=>O2,Gavel:()=>U2,Geometry:()=>K2,Ghost:()=>J2,Gift:()=>s3,GitBranch:()=>r3,GitCommit:()=>i3,GitCompare:()=>h3,GitFork:()=>b3,GitMerge:()=>f3,GitPullRequest:()=>C3,GitPullRequestClosed:()=>j3,GitPullRequestDraft:()=>F3,Glass:()=>I3,GlassFull:()=>Z3,GlassOff:()=>q3,Globe:()=>W3,Golf:()=>Q3,Gps:()=>a4,Grain:()=>p4,GridDots:()=>u4,GridPattern:()=>m4,Grill:()=>w4,GripHorizontal:()=>M4,GripVertical:()=>E4,Growth:()=>D4,H1:()=>L4,H2:()=>O4,H3:()=>U4,H4:()=>K4,H5:()=>J4,H6:()=>s9,Hammer:()=>r9,HandClick:()=>i9,HandFinger:()=>h9,HandLittleFinger:()=>b9,HandMiddleFinger:()=>f9,HandMove:()=>C9,HandOff:()=>j9,HandRingFinger:()=>F9,HandRock:()=>I9,HandStop:()=>Z9,HandThreeFingers:()=>q9,HandTwoFingers:()=>W9,Hanger:()=>Q9,Hash:()=>a5,Haze:()=>p5,Heading:()=>u5,Headphones:()=>m5,HeadphonesOff:()=>w5,Headset:()=>M5,Heart:()=>E5,HeartBroken:()=>D5,HeartRateMonitor:()=>L5,Heartbeat:()=>O5,Helicopter:()=>U5,HelicopterLanding:()=>K5,Helmet:()=>J5,Help:()=>s6,Hexagon:()=>r6,HexagonOff:()=>i6,Hierarchy:()=>h6,Hierarchy2:()=>b6,Highlight:()=>f6,History:()=>C6,Home:()=>j6,Home2:()=>F6,HotelService:()=>I6,Hourglass:()=>Z6,IceCream:()=>q6,IceCream2:()=>W6,IceSkating:()=>Q6,Id:()=>a8,IdBadge:()=>p8,Inbox:()=>u8,IndentDecrease:()=>m8,IndentIncrease:()=>w8,Infinity:()=>M8,InfoCircle:()=>E8,InfoSquare:()=>D8,Italic:()=>L8,JumpRope:()=>O8,Karate:()=>U8,Kering:()=>K8,Key:()=>J8,Keyboard:()=>s7,KeyboardHide:()=>r7,KeyboardOff:()=>i7,KeyboardShow:()=>h7,Ladder:()=>b7,Lamp:()=>f7,Language:()=>C7,LanguageHiragana:()=>j7,LanguageKatakana:()=>F7,Lasso:()=>I7,LayersDifference:()=>Z7,LayersIntersect:()=>q7,LayersIntersect2:()=>W7,LayersLinked:()=>Q7,LayersSubtract:()=>ann,LayersUnion:()=>pnn,Layout:()=>unn,Layout2:()=>mnn,LayoutAlignBottom:()=>wnn,LayoutAlignCenter:()=>Mnn,LayoutAlignLeft:()=>Enn,LayoutAlignMiddle:()=>Dnn,LayoutAlignRight:()=>Lnn,LayoutAlignTop:()=>Onn,LayoutBoard:()=>Unn,LayoutBoardSplit:()=>Knn,LayoutBottombar:()=>Jnn,LayoutCards:()=>ssn,LayoutColumns:()=>rsn,LayoutDistributeHorizontal:()=>isn,LayoutDistributeVertical:()=>hsn,LayoutGrid:()=>bsn,LayoutGridAdd:()=>fsn,LayoutKanban:()=>Csn,LayoutList:()=>jsn,LayoutNavbar:()=>Fsn,LayoutRows:()=>Isn,LayoutSidebar:()=>Zsn,LayoutSidebarLeftCollapse:()=>qsn,LayoutSidebarLeftExpand:()=>Wsn,LayoutSidebarRight:()=>Qsn,LayoutSidebarRightCollapse:()=>aen,LayoutSidebarRightExpand:()=>pen,Leaf:()=>uen,Lego:()=>men,Lemon:()=>wen,Lemon2:()=>Men,LetterA:()=>Een,LetterB:()=>Den,LetterC:()=>Len,LetterCase:()=>Oen,LetterCaseLower:()=>Uen,LetterCaseToggle:()=>Ken,LetterCaseUpper:()=>Jen,LetterD:()=>san,LetterE:()=>ran,LetterF:()=>ian,LetterG:()=>han,LetterH:()=>ban,LetterI:()=>fan,LetterJ:()=>Can,LetterK:()=>jan,LetterL:()=>Fan,LetterM:()=>Ian,LetterN:()=>Zan,LetterO:()=>qan,LetterP:()=>Wan,LetterQ:()=>Qan,LetterR:()=>atn,LetterS:()=>ptn,LetterSpacing:()=>utn,LetterT:()=>mtn,LetterU:()=>wtn,LetterV:()=>Mtn,LetterW:()=>Etn,LetterX:()=>Dtn,LetterY:()=>Ltn,LetterZ:()=>Otn,LettersCase:()=>Utn,License:()=>Ktn,Lifebuoy:()=>Jtn,Line:()=>srn,LineDashed:()=>rrn,LineDotted:()=>irn,LineHeight:()=>hrn,Link:()=>brn,List:()=>frn,ListCheck:()=>Crn,ListDetails:()=>jrn,ListNumbers:()=>Frn,ListSearch:()=>Irn,LivePhoto:()=>Zrn,LiveView:()=>qrn,Loader:()=>Wrn,LoaderQuarter:()=>Qrn,Location:()=>aon,Lock:()=>pon,LockAccess:()=>uon,LockOff:()=>mon,LockOpen:()=>won,LockSquare:()=>Mon,Login:()=>Eon,Logout:()=>Don,Lollipop:()=>Lon,Luggage:()=>Oon,Lungs:()=>Uon,Macro:()=>Kon,Magnet:()=>Jon,Mail:()=>spn,MailForward:()=>rpn,MailOpened:()=>ipn,Mailbox:()=>hpn,Man:()=>bpn,ManualGearbox:()=>fpn,Map:()=>Cpn,Map2:()=>jpn,MapPin:()=>Fpn,MapPinOff:()=>Ipn,MapPins:()=>Zpn,MapSearch:()=>qpn,Markdown:()=>Wpn,Marquee:()=>Qpn,Marquee2:()=>aln,Mars:()=>pln,Mask:()=>uln,MaskOff:()=>mln,Massage:()=>wln,Math:()=>Mln,MathFunction:()=>Eln,MathSymbols:()=>Dln,Maximize:()=>Lln,Meat:()=>Oln,Medal:()=>Uln,Medal2:()=>Kln,MedicalCross:()=>Jln,MedicineSyrup:()=>sin,Menu:()=>rin,Menu2:()=>iin,Message:()=>hin,Message2:()=>bin,MessageCircle:()=>fin,MessageCircle2:()=>Cin,MessageCircleOff:()=>jin,MessageDots:()=>Fin,MessageLanguage:()=>Iin,MessageOff:()=>Zin,MessagePlus:()=>qin,MessageReport:()=>Win,Messages:()=>Qin,MessagesOff:()=>acn,Microphone:()=>pcn,Microphone2:()=>ucn,MicrophoneOff:()=>mcn,Microscope:()=>wcn,MiliratyAward:()=>Mcn,MilitaryRank:()=>Ecn,Milk:()=>Dcn,Minimize:()=>Lcn,Minus:()=>Ocn,MinusVertical:()=>Ucn,Mist:()=>Kcn,MoodBoy:()=>Jcn,MoodConfuzed:()=>sun,MoodCrazyHappy:()=>run,MoodCry:()=>iun,MoodEmpty:()=>hun,MoodHappy:()=>bun,MoodKid:()=>fun,MoodNervous:()=>Cun,MoodNeutral:()=>jun,MoodSad:()=>Fun,MoodSmile:()=>Iun,MoodSuprised:()=>Zun,MoodTongue:()=>qun,Moon:()=>Wun,Moon2:()=>Qun,MoonStars:()=>adn,Moped:()=>pdn,Motorbike:()=>udn,Mountain:()=>mdn,Mouse:()=>wdn,Movie:()=>Mdn,Mug:()=>Edn,Multiplier05X:()=>Ddn,Multiplier15X:()=>Ldn,Multiplier1X:()=>Odn,Multiplier2X:()=>Udn,Mushroom:()=>Kdn,Music:()=>Jdn,NewSection:()=>shn,News:()=>rhn,Nfc:()=>ihn,NoCopyright:()=>hhn,NoCreativeCommons:()=>bhn,NoDerivatives:()=>fhn,Note:()=>Chn,Notebook:()=>jhn,Notes:()=>Fhn,Notification:()=>Ihn,Number0:()=>Zhn,Number1:()=>qhn,Number2:()=>Whn,Number3:()=>Qhn,Number4:()=>agn,Number5:()=>pgn,Number6:()=>ugn,Number7:()=>mgn,Number8:()=>wgn,Number9:()=>Mgn,Nurse:()=>Egn,Octagon:()=>Dgn,OctagonOff:()=>Lgn,Old:()=>Ogn,Olympics:()=>Ugn,Omega:()=>Kgn,Outlet:()=>Jgn,Overline:()=>smn,Package:()=>rmn,Pacman:()=>imn,PageBreak:()=>hmn,Paint:()=>bmn,Palette:()=>fmn,PanoramaHorizontal:()=>Cmn,PanoramaVertical:()=>jmn,Paperclip:()=>Fmn,Parachute:()=>Imn,Parentheses:()=>Zmn,Parking:()=>qmn,Paw:()=>Wmn,Peace:()=>Qmn,Pencil:()=>akn,Pennant:()=>pkn,Pentagon:()=>ukn,Pepper:()=>mkn,Percentage:()=>wkn,Perspective:()=>Mkn,Phone:()=>Ekn,PhoneCall:()=>Dkn,PhoneCalling:()=>Lkn,PhoneCheck:()=>Okn,PhoneIncoming:()=>Ukn,PhoneOff:()=>Kkn,PhoneOutgoing:()=>Jkn,PhonePause:()=>sbn,PhonePlus:()=>rbn,PhoneX:()=>ibn,Photo:()=>hbn,PhotoOff:()=>bbn,Physotherapist:()=>fbn,PictureInPicture:()=>Cbn,PictureInPictureOff:()=>jbn,PictureInPictureOn:()=>Fbn,PictureInPictureTop:()=>Ibn,Pig:()=>Zbn,Pill:()=>qbn,Pills:()=>Wbn,Pin:()=>Qbn,Pinned:()=>avn,PinnedOff:()=>pvn,Pizza:()=>uvn,Plane:()=>mvn,PlaneArrival:()=>wvn,PlaneDeparture:()=>Mvn,PlaneInflight:()=>Evn,Planet:()=>Dvn,Plant:()=>Lvn,Plant2:()=>Ovn,PlayCard:()=>Uvn,PlayerEject:()=>Kvn,PlayerPause:()=>Jvn,PlayerPlay:()=>swn,PlayerRecord:()=>rwn,PlayerSkipBack:()=>iwn,PlayerSkipForward:()=>hwn,PlayerStop:()=>bwn,PlayerTrackNext:()=>fwn,PlayerTrackPrev:()=>Cwn,Playlist:()=>jwn,PlaylistAdd:()=>Fwn,PlaylistX:()=>Iwn,Plug:()=>Zwn,PlugConnected:()=>qwn,Plus:()=>Wwn,Point:()=>Qwn,Pokeball:()=>axn,Polaroid:()=>pxn,Polygon:()=>uxn,Pool:()=>mxn,Power:()=>wxn,Pray:()=>Mxn,PremiumRights:()=>Exn,Prescription:()=>Dxn,Presentation:()=>Lxn,PresentationAnalytics:()=>Oxn,Printer:()=>Uxn,Prison:()=>Kxn,Prompt:()=>Jxn,Propeller:()=>sfn,Puzzle:()=>rfn,Puzzle2:()=>ifn,Pyramid:()=>hfn,Qrcode:()=>bfn,QuestionMark:()=>ffn,Quote:()=>Cfn,Radio:()=>jfn,Radioactive:()=>Ffn,RadiusBottomLeft:()=>Ifn,RadiusBottomRight:()=>Zfn,RadiusTopLeft:()=>qfn,RadiusTopRight:()=>Wfn,Rainbow:()=>Qfn,Receipt:()=>ayn,Receipt2:()=>pyn,ReceiptOff:()=>uyn,ReceiptRefund:()=>myn,ReceiptTax:()=>wyn,Recharging:()=>Myn,RecordMail:()=>Eyn,Rectangle:()=>Dyn,RectangleVertical:()=>Lyn,Recycle:()=>Oyn,Refresh:()=>Uyn,RefreshAlert:()=>Kyn,RefreshDot:()=>Jyn,Registered:()=>sMn,RelationManyToMany:()=>rMn,RelationOneToMany:()=>iMn,RelationOneToOne:()=>hMn,Repeat:()=>bMn,RepeatOnce:()=>fMn,Replace:()=>CMn,Report:()=>jMn,ReportAnalytics:()=>FMn,ReportMedical:()=>IMn,ReportMoney:()=>ZMn,ReportSearch:()=>qMn,Resize:()=>WMn,Ripple:()=>QMn,RoadSign:()=>a_n,Robot:()=>p_n,Rocket:()=>u_n,RollerSkating:()=>m_n,Rotate:()=>w_n,Rotate2:()=>M_n,Rotate360:()=>E_n,RotateClockwise:()=>D_n,RotateClockwise2:()=>L_n,RotateDot:()=>O_n,RotateRectangle:()=>U_n,Route:()=>K_n,Router:()=>J_n,RowInsertBottom:()=>sCn,RowInsertTop:()=>rCn,Rss:()=>iCn,Ruler:()=>hCn,Ruler2:()=>bCn,Run:()=>fCn,Sailboat:()=>CCn,Salt:()=>jCn,Satellite:()=>FCn,Sausage:()=>ICn,Scale:()=>ZCn,ScaleOutline:()=>qCn,Scan:()=>WCn,School:()=>QCn,Scissors:()=>aSn,Scooter:()=>pSn,ScooterElectric:()=>uSn,ScreenShare:()=>mSn,ScreenShareOff:()=>wSn,ScubaMask:()=>MSn,Search:()=>ESn,Section:()=>DSn,Seeding:()=>LSn,Select:()=>OSn,Selector:()=>USn,Send:()=>KSn,Separator:()=>JSn,SeparatorHorizontal:()=>sEn,SeparatorVertical:()=>rEn,Server:()=>iEn,Servicemark:()=>hEn,Settings:()=>bEn,SettingsAutomation:()=>fEn,Shadow:()=>CEn,ShadowOff:()=>jEn,Shape:()=>FEn,Shape2:()=>IEn,Shape3:()=>ZEn,Share:()=>qEn,Shield:()=>WEn,ShieldCheck:()=>QEn,ShieldCheckered:()=>aPn,ShieldChevron:()=>pPn,ShieldLock:()=>uPn,ShieldOff:()=>mPn,ShieldX:()=>wPn,Ship:()=>MPn,Shirt:()=>EPn,Shoe:()=>DPn,ShoppingCart:()=>LPn,ShoppingCartDiscount:()=>OPn,ShoppingCartOff:()=>UPn,ShoppingCartPlus:()=>KPn,ShoppingCartX:()=>JPn,Shredder:()=>sjn,Signature:()=>rjn,Sitemap:()=>ijn,Skateboard:()=>hjn,Sleigh:()=>bjn,Slice:()=>fjn,Slideshow:()=>Cjn,SmartHome:()=>jjn,Smoking:()=>Fjn,SmokingNo:()=>Ijn,Snowflake:()=>Zjn,SoccerField:()=>qjn,Social:()=>Wjn,Sock:()=>Qjn,Sofa:()=>aAn,SortAscending:()=>pAn,SortAscending2:()=>uAn,SortAscendingLetters:()=>mAn,SortAscendingNumbers:()=>wAn,SortDescending:()=>MAn,SortDescending2:()=>EAn,SortDescendingLetters:()=>DAn,SortDescendingNumbers:()=>LAn,Soup:()=>OAn,Space:()=>UAn,SpacingHorizontal:()=>KAn,SpacingVertical:()=>JAn,Spade:()=>sDn,Speakerphone:()=>rDn,Speedboat:()=>iDn,SportBillard:()=>hDn,Square:()=>bDn,Square0:()=>fDn,Square1:()=>CDn,Square2:()=>jDn,Square3:()=>FDn,Square4:()=>IDn,Square5:()=>ZDn,Square6:()=>qDn,Square7:()=>WDn,Square8:()=>QDn,Square9:()=>aRn,SquareCheck:()=>pRn,SquareDot:()=>uRn,SquareForbid:()=>mRn,SquareForbid2:()=>wRn,SquareHalf:()=>MRn,SquareMinus:()=>ERn,SquareOff:()=>DRn,SquarePlus:()=>LRn,SquareRoot:()=>ORn,SquareRoot2:()=>URn,SquareRotated:()=>KRn,SquareRotatedOff:()=>JRn,SquareToggle:()=>sFn,SquareToggleHorizontal:()=>rFn,SquareX:()=>iFn,SquaresDiagonal:()=>hFn,SquaresFilled:()=>bFn,Stack:()=>fFn,Stack2:()=>CFn,Stack3:()=>jFn,Stairs:()=>FFn,StairsDown:()=>IFn,StairsUp:()=>ZFn,Star:()=>qFn,StarHalf:()=>WFn,StarOff:()=>QFn,Stars:()=>aBn,SteeringWheel:()=>pBn,StepInto:()=>uBn,StepOut:()=>mBn,Stethoscope:()=>wBn,Sticker:()=>MBn,Strikethrough:()=>EBn,Submarine:()=>DBn,Subscript:()=>LBn,Subtask:()=>OBn,Sum:()=>UBn,Sun:()=>KBn,SunOff:()=>JBn,Sunrise:()=>sLn,Sunset:()=>rLn,Superscript:()=>iLn,Swimming:()=>hLn,Switch:()=>bLn,Switch2:()=>fLn,Switch3:()=>CLn,SwitchHorizontal:()=>jLn,SwitchVertical:()=>FLn,Table:()=>ILn,TableExport:()=>ZLn,TableImport:()=>qLn,TableOff:()=>WLn,Tabler2Fa:()=>QLn,Tabler3DCubeSphere:()=>aTn,Tag:()=>pTn,TagOff:()=>uTn,Tags:()=>mTn,TagsOff:()=>wTn,Tallymark1:()=>MTn,Tallymark2:()=>ETn,Tallymark3:()=>DTn,Tallymark4:()=>LTn,Tallymarks:()=>OTn,Tank:()=>UTn,Target:()=>KTn,Temperature:()=>JTn,TemperatureCelsius:()=>sIn,TemperatureFahrenheit:()=>rIn,TemperatureMinus:()=>iIn,TemperaturePlus:()=>hIn,Template:()=>bIn,Tent:()=>fIn,Terminal:()=>CIn,Terminal2:()=>jIn,TestPipe:()=>FIn,TextDirectionLtr:()=>IIn,TextDirectionRtl:()=>ZIn,TextResize:()=>qIn,TextWrap:()=>WIn,TextWrapDisabled:()=>QIn,Thermometer:()=>aNn,ThumbDown:()=>pNn,ThumbUp:()=>uNn,Ticket:()=>mNn,TiltShift:()=>wNn,Tir:()=>MNn,ToggleLeft:()=>ENn,ToggleRight:()=>DNn,ToiletPaper:()=>LNn,Tool:()=>ONn,Tools:()=>UNn,ToolsKitchen:()=>KNn,ToolsKitchen2:()=>JNn,Tornado:()=>sOn,Tournament:()=>rOn,Track:()=>iOn,Tractor:()=>hOn,Trademark:()=>bOn,TrafficCone:()=>fOn,TrafficLights:()=>COn,Train:()=>jOn,TransferIn:()=>FOn,TransferOut:()=>IOn,Trash:()=>ZOn,TrashOff:()=>qOn,TrashX:()=>WOn,Tree:()=>QOn,Trees:()=>aVn,TrendingDown:()=>pVn,TrendingDown2:()=>uVn,TrendingDown3:()=>mVn,TrendingUp:()=>wVn,TrendingUp2:()=>MVn,TrendingUp3:()=>EVn,Triangle:()=>DVn,TriangleOff:()=>LVn,TriangleSquareCircle:()=>OVn,Trident:()=>UVn,Trophy:()=>KVn,Truck:()=>JVn,TruckDelivery:()=>sZn,TruckOff:()=>rZn,TruckReturn:()=>iZn,Typography:()=>hZn,Umbrella:()=>bZn,Underline:()=>fZn,Unlink:()=>CZn,Upload:()=>jZn,Urgent:()=>FZn,Usb:()=>IZn,User:()=>ZZn,UserCheck:()=>qZn,UserCircle:()=>WZn,UserExclamation:()=>QZn,UserMinus:()=>aHn,UserOff:()=>pHn,UserPlus:()=>uHn,UserSearch:()=>mHn,UserX:()=>wHn,Users:()=>MHn,Vaccine:()=>EHn,VaccineBottle:()=>DHn,Variable:()=>LHn,Vector:()=>OHn,VectorBeizer2:()=>UHn,VectorBezier:()=>KHn,VectorTriangle:()=>JHn,Venus:()=>sUn,Versions:()=>rUn,Video:()=>iUn,VideoMinus:()=>dUn,VideoOff:()=>mUn,VideoPlus:()=>vUn,View360:()=>fUn,Viewfinder:()=>_Un,ViewportNarrow:()=>EUn,ViewportWide:()=>AUn,Vinyl:()=>FUn,Virus:()=>TUn,VirusOff:()=>OUn,VirusSearch:()=>HUn,Vocabulary:()=>qUn,Volume:()=>YUn,Volume2:()=>JUn,Volume3:()=>nzn,Walk:()=>azn,Wall:()=>ozn,Wallet:()=>izn,Wallpaper:()=>dzn,Wand:()=>mzn,WaveSawTool:()=>vzn,WaveSine:()=>fzn,WaveSquare:()=>_zn,Wifi:()=>Ezn,Wifi0:()=>Azn,Wifi1:()=>Fzn,Wifi2:()=>Tzn,WifiOff:()=>Ozn,Wind:()=>Hzn,Windmill:()=>qzn,Window:()=>Yzn,Wiper:()=>Jzn,WiperWash:()=>nqn,Woman:()=>aqn,World:()=>oqn,WorldDownload:()=>iqn,WorldLatitude:()=>dqn,WorldLongitude:()=>mqn,WorldUpload:()=>vqn,WreckingBall:()=>fqn,Writing:()=>_qn,WritingSign:()=>Eqn,X:()=>Aqn,YinYang:()=>Fqn,ZodiacAquarius:()=>Tqn,ZodiacAries:()=>Oqn,ZodiacCancer:()=>Hqn,ZodiacCapricorn:()=>qqn,ZodiacGemini:()=>Yqn,ZodiacLeo:()=>Jqn,ZodiacLibra:()=>n$n,ZodiacPisces:()=>a$n,ZodiacSagittarius:()=>o$n,ZodiacScorpio:()=>i$n,ZodiacTaurus:()=>d$n,ZodiacVirgo:()=>m$n,ZoomCancel:()=>v$n,ZoomCheck:()=>f$n,ZoomIn:()=>_$n,ZoomMoney:()=>E$n,ZoomOut:()=>A$n,ZoomQuestion:()=>F$n});var t={};e.r(t),e.d(t,{Badge:()=>d,CodeGroup:()=>N$n,CodeGroupItem:()=>z$n,VuePreview:()=>Z$n,Xicons:()=>I$n});var r=e(480);const o=n=>!(0,r.ak)(n)||/github\.com/.test(n)?"GitHub":/bitbucket\.org/.test(n)?"Bitbucket":/gitlab\.com/.test(n)?"GitLab":/gitee\.com/.test(n)?"Gitee":null,p={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},l=({docsRepo:n,docsBranch:s,docsDir:e,path:a,editLinkPattern:t})=>{const l=o(n);let i;if(t?i=t:null!==l&&(i=p[l]),!i)return null;const c=a.replace(/\.html$/,".md");return i.replace(/:repo/,(0,r.ak)(n)?n:`https://github.com/${n}`).replace(/:branch/,s).replace(/:path/,(0,r.FY)(`${(0,r.U1)(e)}/${c}`))};function i(){const n=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return n[Math.floor(Math.random()*n.length)]}var c=e(6252),u=e(3577);const d=(0,c.aZ)({props:{type:{type:String,required:!1,default:"tip"},text:{type:String,required:!1,default:""},vertical:{type:String,required:!1,default:"top"}},setup:n=>(s,e)=>((0,c.wg)(),(0,c.iD)("span",{class:(0,u.C_)(["badge",n.type]),style:(0,u.j5)({verticalAlign:n.vertical})},[(0,c.WI)(s.$slots,"default",{},(()=>[(0,c.Uk)((0,u.zw)(n.text),1)]))],6))}),h=["href"];var g=e(2262);const m={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},k=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 16v-5.5a2.5 2.5 0 0 1 5 0V16m0-4H3"}),(0,c._)("path",{d:"M12 6v12"}),(0,c._)("path",{d:"M16 16V8h3a2 2 0 0 1 0 4h-3m3 0a2 2 0 0 1 0 4h-3"})],-1),b=[k],v=(0,c.aZ)({name:"AB",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",m,b)}}),w={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},x=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12v.01"></path><path d="M14.828 9.172a4 4 0 0 1 0 5.656"></path><path d="M17.657 6.343a8 8 0 0 1 0 11.314"></path><path d="M9.168 14.828a4 4 0 0 1 0-5.656"></path><path d="M6.337 17.657a8 8 0 0 1 0-11.314"></path></g>',1),f=[x],y=(0,c.aZ)({name:"AccessPoint",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",w,f)}}),M={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M14.828 9.172A4 4 0 0 1 16 12"></path><path d="M17.657 6.343a8 8 0 0 1 1.635 8.952"></path><path d="M9.168 14.828a4 4 0 0 1 0-5.656"></path><path d="M6.337 17.657a8 8 0 0 1 0-11.314"></path></g>',1),C=[_],S=(0,c.aZ)({name:"AccessPointOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",M,C)}}),E={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},P=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M10 16.5l2-3l2 3m-2-3v-2l3-1m-6 0l3 1"}),(0,c._)("circle",{cx:"12",cy:"7.5",r:".5",fill:"currentColor"})],-1),j=[P],A=(0,c.aZ)({name:"Accessible",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",E,j)}}),D={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},R=(0,c._)("path",{d:"M3 12h4l3 8l4-16l3 8h4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),F=[R],B=(0,c.aZ)({name:"Activity",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",D,F)}}),L={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},T=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M7 15v-4a2 2 0 0 1 4 0v4"></path><path d="M7 13h4"></path><path d="M17 9v6h-1.5a1.5 1.5 0 1 1 1.5-1.5"></path></g>',1),I=[T],N=(0,c.aZ)({name:"Ad",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",L,I)}}),O={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},V=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11.933 5H5v16h13v-8"></path><path d="M14 17H9"></path><path d="M9 13h5V9H9z"></path><path d="M15 5V3"></path><path d="M18 6l2-2"></path><path d="M19 9h2"></path></g>',1),Z=[V],H=(0,c.aZ)({name:"Ad2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",O,Z)}}),U={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},z=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="10" r="2"></circle><path d="M6 4v4"></path><path d="M6 12v8"></path><circle cx="12" cy="16" r="2"></circle><path d="M12 4v10"></path><path d="M12 18v2"></path><circle cx="18" cy="7" r="2"></circle><path d="M18 4v1"></path><path d="M18 9v11"></path></g>',1),q=[z],$=(0,c.aZ)({name:"Adjustments",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",U,q)}}),K={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Y=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8h4v4H4z"></path><path d="M6 4v4"></path><path d="M6 12v8"></path><path d="M10 14h4v4h-4z"></path><path d="M12 4v10"></path><path d="M12 18v2"></path><path d="M16 5h4v4h-4z"></path><path d="M18 4v1"></path><path d="M18 9v11"></path></g>',1),W=[Y],G=(0,c.aZ)({name:"AdjustmentsAlt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",K,W)}}),J={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},X=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="14" cy="6" r="2"></circle><path d="M4 6h8"></path><path d="M16 6h4"></path><circle cx="8" cy="12" r="2"></circle><path d="M4 12h2"></path><path d="M10 12h10"></path><circle cx="17" cy="18" r="2"></circle><path d="M4 18h11"></path><path d="M19 18h1"></path></g>',1),Q=[X],nn=(0,c.aZ)({name:"AdjustmentsHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",J,Q)}}),sn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},en=(0,c._)("path",{d:"M4 5l16-2m-8 1v10M6.894 8H17.2c2.45 3 2.45 9-.2 12H6.894c-2.544-3-2.544-9 0-12zM5 14h14",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),an=[en],tn=(0,c.aZ)({name:"AerialLift",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sn,an)}}),rn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},on=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5.931 6.936l1.275 4.249m5.607 5.609l4.251 1.275"></path><path d="M11.683 12.317l5.759-5.759"></path><circle cx="5.5" cy="5.5" r="1.5"></circle><circle cx="18.5" cy="5.5" r="1.5"></circle><circle cx="18.5" cy="18.5" r="1.5"></circle><circle cx="8.5" cy="15.5" r="4.5"></circle></g>',1),pn=[on],ln=(0,c.aZ)({name:"Affiliate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rn,pn)}}),cn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},un=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="13" r="7"></circle><path d="M12 10v3h2"></path><path d="M7 4L4.25 6"></path><path d="M17 4l2.75 2"></path></g>',1),dn=[un],hn=(0,c.aZ)({name:"Alarm",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cn,dn)}}),gn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 8v4"}),(0,c._)("path",{d:"M12 16h.01"})],-1),kn=[mn],bn=(0,c.aZ)({name:"AlertCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gn,kn)}}),vn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8.7 3h6.6c.3 0 .5.1.7.3L20.7 8c.2.2.3.4.3.7v6.6c0 .3-.1.5-.3.7L16 20.7c-.2.2-.4.3-.7.3H8.7c-.3 0-.5-.1-.7-.3L3.3 16c-.2-.2-.3-.4-.3-.7V8.7c0-.3.1-.5.3-.7L8 3.3c.2-.2.4-.3.7-.3z"}),(0,c._)("path",{d:"M12 8v4"}),(0,c._)("path",{d:"M12 16h.01"})],-1),xn=[wn],fn=(0,c.aZ)({name:"AlertOctagon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vn,xn)}}),yn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 9v2m0 4v.01"}),(0,c._)("path",{d:"M5 19h14a2 2 0 0 0 1.84-2.75L13.74 4a2 2 0 0 0-3.5 0l-7.1 12.25A2 2 0 0 0 4.89 19"})],-1),_n=[Mn],Cn=(0,c.aZ)({name:"AlertTriangle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yn,_n)}}),Sn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},En=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 17a2.5 2.5 0 0 0 2 0"></path><path d="M12 3C7.336 3 4.604 5.331 4.138 8.595a11.816 11.816 0 0 0 2 8.592a10.777 10.777 0 0 0 3.199 3.064c1.666 1 3.664 1 5.33 0a10.777 10.777 0 0 0 3.199-3.064a11.89 11.89 0 0 0 2-8.592C19.4 5.33 16.668 3 12.004 3z"></path><path d="M8 11l2 2"></path><path d="M16 11l-2 2"></path></g>',1),Pn=[En],jn=(0,c.aZ)({name:"Alien",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sn,Pn)}}),An={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M8 12h8"}),(0,c._)("path",{d:"M6 18h12"})],-1),Rn=[Dn],Fn=(0,c.aZ)({name:"AlignCenter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",An,Rn)}}),Bn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ln=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M4 12h16"}),(0,c._)("path",{d:"M4 18h12"})],-1),Tn=[Ln],In=(0,c.aZ)({name:"AlignJustified",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bn,Tn)}}),Nn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},On=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M4 12h10"}),(0,c._)("path",{d:"M4 18h14"})],-1),Vn=[On],Zn=(0,c.aZ)({name:"AlignLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nn,Vn)}}),Hn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Un=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M10 12h10"}),(0,c._)("path",{d:"M6 18h14"})],-1),zn=[Un],qn=(0,c.aZ)({name:"AlignRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hn,zn)}}),$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M5 17H3V6a1 1 0 0 1 1-1h9v12m-4 0h6m4 0h2v-6h-8m0-5h5l3 5"></path><path d="M6 10h4M8 8v4"></path></g>',1),Yn=[Kn],Wn=(0,c.aZ)({name:"Ambulance",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$n,Yn)}}),Gn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 9v12m-8-8a8 8 0 0 0 16 0m1 0h-2M5 13H3"}),(0,c._)("circle",{cx:"12",cy:"6",r:"3"})],-1),Xn=[Jn],Qn=(0,c.aZ)({name:"Anchor",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gn,Xn)}}),ns={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ss=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 19H3l9-15"></path><path d="M20.615 15.171h.015"></path><path d="M19.515 11.771h.015"></path><path d="M17.715 8.671h.015"></path><path d="M15.415 5.971h.015"></path></g>',1),es=[ss],as=(0,c.aZ)({name:"Angle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ns,es)}}),ts={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 18v.01"></path><path d="M10 18v.01"></path><path d="M14 18v.01"></path><path d="M18 18v.01"></path></g>',1),os=[rs],ps=(0,c.aZ)({name:"AntennaBars1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ts,os)}}),ls={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},is=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 18v-3"></path><path d="M10 18v.01"></path><path d="M14 18v.01"></path><path d="M18 18v.01"></path></g>',1),cs=[is],us=(0,c.aZ)({name:"AntennaBars2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ls,cs)}}),ds={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 18v-3"></path><path d="M10 18v-6"></path><path d="M14 18v.01"></path><path d="M18 18v.01"></path></g>',1),gs=[hs],ms=(0,c.aZ)({name:"AntennaBars3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ds,gs)}}),ks={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 18v-3"></path><path d="M10 18v-6"></path><path d="M14 18V9"></path><path d="M18 18v.01"></path></g>',1),vs=[bs],ws=(0,c.aZ)({name:"AntennaBars4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ks,vs)}}),xs={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 18v-3"></path><path d="M10 18v-6"></path><path d="M14 18V9"></path><path d="M18 18V6"></path></g>',1),ys=[fs],Ms=(0,c.aZ)({name:"AntennaBars5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xs,ys)}}),_s={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M3.6 15h10.55"></path><path d="M6.551 4.938l3.26 10.034"></path><path d="M17.032 4.636l-8.535 6.2"></path><path d="M20.56 14.51l-8.536-6.2"></path><path d="M12.257 20.916l3.26-10.034"></path></g>',1),Ss=[Cs],Es=(0,c.aZ)({name:"Aperture",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_s,Ss)}}),Ps={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},js=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 13h5"></path><path d="M12 16V8h3a2 2 0 0 1 2 2v1a2 2 0 0 1-2 2h-3"></path><path d="M20 8v8"></path><path d="M9 16v-5.5a2.5 2.5 0 0 0-5 0V16"></path></g>',1),As=[js],Ds=(0,c.aZ)({name:"Api",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ps,As)}}),Rs={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 15H5.5a2.5 2.5 0 1 1 0-5H6"></path><path d="M15 12v6.5a2.5 2.5 0 1 1-5 0V18"></path><path d="M12 9h6.5a2.5 2.5 0 1 1 0 5H18"></path><path d="M9 12V5.5a2.5 2.5 0 0 1 5 0V6"></path></g>',1),Bs=[Fs],Ls=(0,c.aZ)({name:"ApiApp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rs,Bs)}}),Ts={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Is=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2"}),(0,c._)("path",{d:"M6 8h.01"}),(0,c._)("path",{d:"M9 8h.01"})],-1),Ns=[Is],Os=(0,c.aZ)({name:"AppWindow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ts,Ns)}}),Vs={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zs=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"14",r:"7"}),(0,c._)("path",{d:"M12 11V5a2 2 0 0 1 2-2h2v1a2 2 0 0 1-2 2h-2"}),(0,c._)("path",{d:"M10 10.5c1.333.667 2.667.667 4 0"})],-1),Hs=[Zs],Us=(0,c.aZ)({name:"Apple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vs,Hs)}}),zs={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="6" height="6" rx="1"></rect><rect x="4" y="14" width="6" height="6" rx="1"></rect><rect x="14" y="14" width="6" height="6" rx="1"></rect><path d="M14 7h6"></path><path d="M17 4v6"></path></g>',1),$s=[qs],Ks=(0,c.aZ)({name:"Apps",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zs,$s)}}),Ys={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ws=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"4",width:"18",height:"4",rx:"2"}),(0,c._)("path",{d:"M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8"}),(0,c._)("path",{d:"M10 12h4"})],-1),Gs=[Ws],Js=(0,c.aZ)({name:"Archive",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ys,Gs)}}),Xs={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qs=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 11a2 2 0 0 1 2 2v2h10v-2a2 2 0 1 1 4 0v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2z"></path><path d="M5 11V6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v5"></path><path d="M6 19v2"></path><path d="M18 19v2"></path></g>',1),ne=[Qs],se=(0,c.aZ)({name:"Armchair",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xs,ne)}}),ee={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ae=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 10V6a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v4"></path><path d="M16 15v-2a3 3 0 1 1 3 3v3H5v-3a3 3 0 1 1 3-3v2"></path><path d="M8 12h8"></path><path d="M7 19v2"></path><path d="M17 19v2"></path></g>',1),te=[ae],re=(0,c.aZ)({name:"Armchair2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ee,te)}}),oe={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pe=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 4L3 7l3 3"></path><path d="M18 4l3 3l-3 3"></path><rect x="4" y="14" width="16" height="6" rx="2"></rect><path d="M10 7H3"></path><path d="M21 7h-7"></path></g>',1),le=[pe],ie=(0,c.aZ)({name:"ArrowAutofitContent",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oe,le)}}),ce={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ue=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 20H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h8"}),(0,c._)("path",{d:"M18 4v17"}),(0,c._)("path",{d:"M15 18l3 3l3-3"})],-1),de=[ue],he=(0,c.aZ)({name:"ArrowAutofitDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ce,de)}}),ge={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},me=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 20H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h6"></path><path d="M18 14v7"></path><path d="M18 3v7"></path><path d="M15 18l3 3l3-3"></path><path d="M15 6l3-3l3 3"></path></g>',1),ke=[me],be=(0,c.aZ)({name:"ArrowAutofitHeight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ge,ke)}}),ve={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},we=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8"}),(0,c._)("path",{d:"M20 18H3"}),(0,c._)("path",{d:"M6 15l-3 3l3 3"})],-1),xe=[we],fe=(0,c.aZ)({name:"ArrowAutofitLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ve,xe)}}),ye={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Me=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 12V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8"}),(0,c._)("path",{d:"M4 18h17"}),(0,c._)("path",{d:"M18 15l3 3l-3 3"})],-1),_e=[Me],Ce=(0,c.aZ)({name:"ArrowAutofitRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ye,_e)}}),Se={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ee=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8"}),(0,c._)("path",{d:"M18 20V3"}),(0,c._)("path",{d:"M15 6l3-3l3 3"})],-1),Pe=[Ee],je=(0,c.aZ)({name:"ArrowAutofitUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Se,Pe)}}),Ae={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},De=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v6"></path><path d="M10 18H3"></path><path d="M21 18h-7"></path><path d="M6 15l-3 3l3 3"></path><path d="M18 15l3 3l-3 3"></path></g>',1),Re=[De],Fe=(0,c.aZ)({name:"ArrowAutofitWidth",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ae,Re)}}),Be={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Le=(0,c._)("path",{d:"M9 11l-4 4l4 4m-4-4h11a4 4 0 0 0 0-8h-1",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Te=[Le],Ie=(0,c.aZ)({name:"ArrowBack",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Be,Te)}}),Ne={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oe=(0,c._)("path",{d:"M9 13L5 9l4-4M5 9h11a4 4 0 0 1 0 8h-1",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ve=[Oe],Ze=(0,c.aZ)({name:"ArrowBackUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ne,Ve)}}),He={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ue=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 20V10"></path><path d="M12 20l4-4"></path><path d="M12 20l-4-4"></path><path d="M4 4h16"></path></g>',1),ze=[Ue],qe=(0,c.aZ)({name:"ArrowBarDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",He,ze)}}),$e={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ke=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12h10"></path><path d="M4 12l4 4"></path><path d="M4 12l4-4"></path><path d="M20 4v16"></path></g>',1),Ye=[Ke],We=(0,c.aZ)({name:"ArrowBarLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$e,Ye)}}),Ge={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Je=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 12H10"></path><path d="M20 12l-4 4"></path><path d="M20 12l-4-4"></path><path d="M4 4v16"></path></g>',1),Xe=[Je],Qe=(0,c.aZ)({name:"ArrowBarRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ge,Xe)}}),na={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sa=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20h16"></path><path d="M12 14V4"></path><path d="M12 14l4-4"></path><path d="M12 14l-4-4"></path></g>',1),ea=[sa],aa=(0,c.aZ)({name:"ArrowBarToDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",na,ea)}}),ta={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ra=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 12h10"></path><path d="M10 12l4 4"></path><path d="M10 12l4-4"></path><path d="M4 4v16"></path></g>',1),oa=[ra],pa=(0,c.aZ)({name:"ArrowBarToLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ta,oa)}}),la={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ia=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 12H4"></path><path d="M14 12l-4 4"></path><path d="M14 12l-4-4"></path><path d="M20 4v16"></path></g>',1),ca=[ia],ua=(0,c.aZ)({name:"ArrowBarToRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",la,ca)}}),da={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ha=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 10v10"></path><path d="M12 10l4 4"></path><path d="M12 10l-4 4"></path><path d="M4 4h16"></path></g>',1),ga=[ha],ma=(0,c.aZ)({name:"ArrowBarToUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",da,ga)}}),ka={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ba=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 4v10"></path><path d="M12 4l4 4"></path><path d="M12 4L8 8"></path><path d="M4 20h16"></path></g>',1),va=[ba],wa=(0,c.aZ)({name:"ArrowBarUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ka,va)}}),xa={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fa=(0,c._)("path",{d:"M15 4v8h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1-1.414 0l-6.586-6.586A1 1 0 0 1 5.414 12H9V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ya=[fa],Ma=(0,c.aZ)({name:"ArrowBigDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xa,ya)}}),_a={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ca=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1-1.414 0l-6.586-6.586A1 1 0 0 1 5.414 12H9V6h6v6z"}),(0,c._)("path",{d:"M15 3H9"})],-1),Sa=[Ca],Ea=(0,c.aZ)({name:"ArrowBigDownLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_a,Sa)}}),Pa={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ja=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 12h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1-1.414 0l-6.586-6.586A1 1 0 0 1 5.414 12H9V9h6v3z"}),(0,c._)("path",{d:"M15 3H9"}),(0,c._)("path",{d:"M15 6H9"})],-1),Aa=[ja],Da=(0,c.aZ)({name:"ArrowBigDownLines",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pa,Aa)}}),Ra={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fa=(0,c._)("path",{d:"M20 15h-8v3.586a1 1 0 0 1-1.707.707l-6.586-6.586a1 1 0 0 1 0-1.414l6.586-6.586A1 1 0 0 1 12 5.414V9h8a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ba=[Fa],La=(0,c.aZ)({name:"ArrowBigLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ra,Ba)}}),Ta={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ia=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 15v3.586a1 1 0 0 1-1.707.707l-6.586-6.586a1 1 0 0 1 0-1.414l6.586-6.586A1 1 0 0 1 12 5.414V9h6v6h-6z"}),(0,c._)("path",{d:"M21 15V9"})],-1),Na=[Ia],Oa=(0,c.aZ)({name:"ArrowBigLeftLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ta,Na)}}),Va={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Za=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 15v3.586a1 1 0 0 1-1.707.707l-6.586-6.586a1 1 0 0 1 0-1.414l6.586-6.586A1 1 0 0 1 12 5.414V9h3v6h-3z"}),(0,c._)("path",{d:"M21 15V9"}),(0,c._)("path",{d:"M18 15V9"})],-1),Ha=[Za],Ua=(0,c.aZ)({name:"ArrowBigLeftLines",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Va,Ha)}}),za={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qa=(0,c._)("path",{d:"M4 9h8V5.414a1 1 0 0 1 1.707-.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586A1 1 0 0 1 12 18.586V15H4a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$a=[qa],Ka=(0,c.aZ)({name:"ArrowBigRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",za,$a)}}),Ya={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wa=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 9V5.414a1 1 0 0 1 1.707-.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586A1 1 0 0 1 12 18.586V15H6V9h6z"}),(0,c._)("path",{d:"M3 9v6"})],-1),Ga=[Wa],Ja=(0,c.aZ)({name:"ArrowBigRightLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ya,Ga)}}),Xa={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qa=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 9V5.414a1 1 0 0 1 1.707-.707l6.586 6.586a1 1 0 0 1 0 1.414l-6.586 6.586A1 1 0 0 1 12 18.586V15H9V9h3z"}),(0,c._)("path",{d:"M3 9v6"}),(0,c._)("path",{d:"M6 9v6"})],-1),nt=[Qa],st=(0,c.aZ)({name:"ArrowBigRightLines",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xa,nt)}}),et={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},at=(0,c._)("path",{d:"M9 20v-8H5.414a1 1 0 0 1-.707-1.707l6.586-6.586a1 1 0 0 1 1.414 0l6.586 6.586A1 1 0 0 1 18.586 12H15v8a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),tt=[at],rt=(0,c.aZ)({name:"ArrowBigTop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",et,tt)}}),ot={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 12H5.414a1 1 0 0 1-.707-1.707l6.586-6.586a1 1 0 0 1 1.414 0l6.586 6.586A1 1 0 0 1 18.586 12H15v6H9v-6z"}),(0,c._)("path",{d:"M9 21h6"})],-1),lt=[pt],it=(0,c.aZ)({name:"ArrowBigUpLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ot,lt)}}),ct={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ut=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 12H5.414a1 1 0 0 1-.707-1.707l6.586-6.586a1 1 0 0 1 1.414 0l6.586 6.586A1 1 0 0 1 18.586 12H15v3H9v-3z"}),(0,c._)("path",{d:"M9 21h6"}),(0,c._)("path",{d:"M9 18h6"})],-1),dt=[ut],ht=(0,c.aZ)({name:"ArrowBigUpLines",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ct,dt)}}),gt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3v18"}),(0,c._)("path",{d:"M9 18l3 3l3-3"}),(0,c._)("path",{d:"M9 3h6"})],-1),kt=[mt],bt=(0,c.aZ)({name:"ArrowBottomBar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gt,kt)}}),vt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 7v14"}),(0,c._)("path",{d:"M9 18l3 3l3-3"}),(0,c._)("circle",{cx:"12",cy:"5",r:"2"})],-1),xt=[wt],ft=(0,c.aZ)({name:"ArrowBottomCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vt,xt)}}),yt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 7v14"}),(0,c._)("path",{d:"M9 18l3 3l3-3"}),(0,c._)("path",{d:"M14 3v4h-4V3z"})],-1),_t=[Mt],Ct=(0,c.aZ)({name:"ArrowBottomSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yt,_t)}}),St={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Et=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 6v15"}),(0,c._)("path",{d:"M9 18l3 3l3-3"}),(0,c._)("path",{d:"M9 3l3 3l3-3"})],-1),Pt=[Et],jt=(0,c.aZ)({name:"ArrowBottomTail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",St,Pt)}}),At={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M18 13l-6 6"}),(0,c._)("path",{d:"M6 13l6 6"})],-1),Rt=[Dt],Ft=(0,c.aZ)({name:"ArrowDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",At,Rt)}}),Bt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lt=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M8 12l4 4"></path><path d="M12 8v8"></path><path d="M16 12l-4 4"></path></g>',1),Tt=[Lt],It=(0,c.aZ)({name:"ArrowDownCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bt,Tt)}}),Nt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ot=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 7L7 17"}),(0,c._)("path",{d:"M16 17H7V8"})],-1),Vt=[Ot],Zt=(0,c.aZ)({name:"ArrowDownLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nt,Vt)}}),Ht={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ut=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M15 9l-6 6"}),(0,c._)("path",{d:"M15 15H9V9"})],-1),zt=[Ut],qt=(0,c.aZ)({name:"ArrowDownLeftCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ht,zt)}}),$t={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 7l10 10"}),(0,c._)("path",{d:"M17 8v9H8"})],-1),Yt=[Kt],Wt=(0,c.aZ)({name:"ArrowDownRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$t,Yt)}}),Gt={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jt=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M15 15H9"}),(0,c._)("path",{d:"M15 9v6L9 9"})],-1),Xt=[Jt],Qt=(0,c.aZ)({name:"ArrowDownRightCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gt,Xt)}}),nr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sr=(0,c._)("path",{d:"M15 11l4 4l-4 4m4-4H8a4 4 0 0 1 0-8h1",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),er=[sr],ar=(0,c.aZ)({name:"ArrowForward",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nr,er)}}),tr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rr=(0,c._)("path",{d:"M15 13l4-4l-4-4m4 4H8a4 4 0 0 0 0 8h1",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),or=[rr],pr=(0,c.aZ)({name:"ArrowForwardUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tr,or)}}),lr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ir=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14"}),(0,c._)("path",{d:"M5 12l6 6"}),(0,c._)("path",{d:"M5 12l6-6"})],-1),cr=[ir],ur=(0,c.aZ)({name:"ArrowLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lr,cr)}}),dr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M21 12H3"}),(0,c._)("path",{d:"M6 9l-3 3l3 3"}),(0,c._)("path",{d:"M21 9v6"})],-1),gr=[hr],mr=(0,c.aZ)({name:"ArrowLeftBar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dr,gr)}}),kr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},br=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 12H3"}),(0,c._)("path",{d:"M6 9l-3 3l3 3"}),(0,c._)("circle",{cx:"19",cy:"12",r:"2"})],-1),vr=[br],wr=(0,c.aZ)({name:"ArrowLeftCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kr,vr)}}),xr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 12H3"}),(0,c._)("path",{d:"M6 9l-3 3l3 3"}),(0,c._)("path",{d:"M21 14h-4v-4h4z"})],-1),yr=[fr],Mr=(0,c.aZ)({name:"ArrowLeftSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xr,yr)}}),_r={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 12H3"}),(0,c._)("path",{d:"M6 9l-3 3l3 3"}),(0,c._)("path",{d:"M21 9l-3 3l3 3"})],-1),Sr=[Cr],Er=(0,c.aZ)({name:"ArrowLeftTail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_r,Sr)}}),Pr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 21V8a4 4 0 1 1 4 4H4"}),(0,c._)("path",{d:"M7 15l-3-3l3-3"})],-1),Ar=[jr],Dr=(0,c.aZ)({name:"ArrowLoopLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pr,Ar)}}),Rr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 21V8a4 4 0 1 0-4 4h13"}),(0,c._)("path",{d:"M18 15l3-3l-3-3"})],-1),Br=[Fr],Lr=(0,c.aZ)({name:"ArrowLoopRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rr,Br)}}),Tr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ir=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M16 15l-4 4"}),(0,c._)("path",{d:"M8 15l4 4"})],-1),Nr=[Ir],Or=(0,c.aZ)({name:"ArrowNarrowDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tr,Nr)}}),Vr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14"}),(0,c._)("path",{d:"M5 12l4 4"}),(0,c._)("path",{d:"M5 12l4-4"})],-1),Hr=[Zr],Ur=(0,c.aZ)({name:"ArrowNarrowLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vr,Hr)}}),zr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14"}),(0,c._)("path",{d:"M15 16l4-4"}),(0,c._)("path",{d:"M15 8l4 4"})],-1),$r=[qr],Kr=(0,c.aZ)({name:"ArrowNarrowRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zr,$r)}}),Yr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wr=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M16 9l-4-4"}),(0,c._)("path",{d:"M8 9l4-4"})],-1),Gr=[Wr],Jr=(0,c.aZ)({name:"ArrowNarrowUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yr,Gr)}}),Xr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qr=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3v8.707"></path><path d="M13 7l4-4l4 4"></path><path d="M7 14l-4-4l4-4"></path><path d="M17 21A11 11 0 0 0 6 10H3"></path></g>',1),no=[Qr],so=(0,c.aZ)({name:"ArrowRampLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xr,no)}}),eo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ao=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 3v8.707"></path><path d="M11 7L7 3L3 7"></path><path d="M17 14l4-4l-4-4"></path><path d="M7 21a11 11 0 0 1 11-11h3"></path></g>',1),to=[ao],ro=(0,c.aZ)({name:"ArrowRampRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eo,to)}}),oo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},po=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14"}),(0,c._)("path",{d:"M13 18l6-6"}),(0,c._)("path",{d:"M13 6l6 6"})],-1),lo=[po],io=(0,c.aZ)({name:"ArrowRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oo,lo)}}),co={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uo=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 15l3-3l-3-3"}),(0,c._)("path",{d:"M3 12h18"}),(0,c._)("path",{d:"M3 9v6"})],-1),ho=[uo],go=(0,c.aZ)({name:"ArrowRightBar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",co,ho)}}),mo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ko=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 15l3-3l-3-3"}),(0,c._)("circle",{cx:"5",cy:"12",r:"2"}),(0,c._)("path",{d:"M7 12h14"})],-1),bo=[ko],vo=(0,c.aZ)({name:"ArrowRightCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mo,bo)}}),wo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xo=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 12h14"}),(0,c._)("path",{d:"M18 15l3-3l-3-3"}),(0,c._)("path",{d:"M3 10h4v4H3z"})],-1),fo=[xo],yo=(0,c.aZ)({name:"ArrowRightSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wo,fo)}}),Mo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_o=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 15l3-3l-3-3"}),(0,c._)("path",{d:"M3 15l3-3l-3-3"}),(0,c._)("path",{d:"M6 12h15"})],-1),Co=[_o],So=(0,c.aZ)({name:"ArrowRightTail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mo,Co)}}),Eo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Po=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 21V3"}),(0,c._)("path",{d:"M15 6l-3-3l-3 3"}),(0,c._)("path",{d:"M9 21h6"})],-1),jo=[Po],Ao=(0,c.aZ)({name:"ArrowTopBar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Eo,jo)}}),Do={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ro=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 17V3"}),(0,c._)("path",{d:"M15 6l-3-3l-3 3"}),(0,c._)("circle",{cx:"12",cy:"19",r:"2"})],-1),Fo=[Ro],Bo=(0,c.aZ)({name:"ArrowTopCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Do,Fo)}}),Lo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},To=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 17V3"}),(0,c._)("path",{d:"M15 6l-3-3l-3 3"}),(0,c._)("path",{d:"M10 21v-4h4v4z"})],-1),Io=[To],No=(0,c.aZ)({name:"ArrowTopSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lo,Io)}}),Oo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vo=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 18V3"}),(0,c._)("path",{d:"M15 6l-3-3l-3 3"}),(0,c._)("path",{d:"M15 21l-3-3l-3 3"})],-1),Zo=[Vo],Ho=(0,c.aZ)({name:"ArrowTopTail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Oo,Zo)}}),Uo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zo=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M18 11l-6-6"}),(0,c._)("path",{d:"M6 11l6-6"})],-1),qo=[zo],$o=(0,c.aZ)({name:"ArrowUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uo,qo)}}),Ko={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yo=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8l-4 4"></path><path d="M12 8v8"></path><path d="M16 12l-4-4"></path></g>',1),Wo=[Yo],Go=(0,c.aZ)({name:"ArrowUpCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ko,Wo)}}),Jo={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xo=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 7l10 10"}),(0,c._)("path",{d:"M16 7H7v9"})],-1),Qo=[Xo],np=(0,c.aZ)({name:"ArrowUpLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jo,Qo)}}),sp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ep=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 9l6 6"}),(0,c._)("path",{d:"M15 9H9v6"})],-1),ap=[ep],tp=(0,c.aZ)({name:"ArrowUpLeftCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sp,ap)}}),rp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},op=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 7L7 17"}),(0,c._)("path",{d:"M8 7h9v9"})],-1),pp=[op],lp=(0,c.aZ)({name:"ArrowUpRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rp,pp)}}),ip={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},cp=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M15 9l-6 6"}),(0,c._)("path",{d:"M15 15V9H9"})],-1),up=[cp],dp=(0,c.aZ)({name:"ArrowUpRightCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ip,up)}}),hp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gp=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 13.998H3v-4"}),(0,c._)("path",{d:"M21 11.998c-.887 1.284-2.48 2.033-4 2c-1.52.033-3.113-.716-4-2s-2.48-2.033-4-2c-1.52-.033-3 1-4 2l-2 2"})],-1),mp=[gp],kp=(0,c.aZ)({name:"ArrowWaveLeftDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hp,mp)}}),bp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vp=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 9.996H3v4"}),(0,c._)("path",{d:"M21 11.996c-.887-1.285-2.48-2.033-4-2c-1.52-.033-3.113.715-4 2c-.887 1.284-2.48 2.033-4 2c-1.52.033-3-1-4-2l-2-2"})],-1),wp=[vp],xp=(0,c.aZ)({name:"ArrowWaveLeftUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bp,wp)}}),fp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yp=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 13.998h4v-4"}),(0,c._)("path",{d:"M3 11.998c.887 1.284 2.48 2.033 4 2c1.52.033 3.113-.716 4-2s2.48-2.033 4-2c1.52-.033 3 1 4 2l2 2"})],-1),Mp=[yp],_p=(0,c.aZ)({name:"ArrowWaveRightDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fp,Mp)}}),Cp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sp=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 10h4v4"}),(0,c._)("path",{d:"M3 12c.887-1.284 2.48-2.033 4-2c1.52-.033 3.113.716 4 2s2.48 2.033 4 2c1.52.033 3-1 4-2l2-2"})],-1),Ep=[Sp],Pp=(0,c.aZ)({name:"ArrowWaveRightUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cp,Ep)}}),jp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ap=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 4h4v4"></path><path d="M15 9l5-5"></path><path d="M4 20l5-5"></path><path d="M16 20h4v-4"></path><path d="M4 4l16 16"></path></g>',1),Dp=[Ap],Rp=(0,c.aZ)({name:"ArrowsCross",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",jp,Dp)}}),Fp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bp=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 4h4v4"></path><path d="M14 10l6-6"></path><path d="M8 20H4v-4"></path><path d="M4 20l6-6"></path></g>',1),Lp=[Bp],Tp=(0,c.aZ)({name:"ArrowsDiagonal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fp,Lp)}}),Ip={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Np=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 20h4v-4"></path><path d="M14 14l6 6"></path><path d="M8 4H4v4"></path><path d="M4 4l6 6"></path></g>',1),Op=[Np],Vp=(0,c.aZ)({name:"ArrowsDiagonal2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ip,Op)}}),Zp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hp=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 10h4V6"></path><path d="M4 4l6 6"></path><path d="M18 14h-4v4"></path><path d="M14 14l6 6"></path></g>',1),Up=[Hp],zp=(0,c.aZ)({name:"ArrowsDiagonalMinimize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zp,Up)}}),qp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$p=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 10h-4V6"></path><path d="M20 4l-6 6"></path><path d="M6 14h4v4"></path><path d="M10 14l-6 6"></path></g>',1),Kp=[$p],Yp=(0,c.aZ)({name:"ArrowsDiagonalMinimize2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qp,Kp)}}),Wp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gp=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 14L14 3"></path><path d="M10 3h4v4"></path><path d="M10 17v4h4"></path><path d="M21 10L10 21"></path></g>',1),Jp=[Gp],Xp=(0,c.aZ)({name:"ArrowsDoubleNeSw",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wp,Jp)}}),Qp={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 21L3 10"></path><path d="M3 14v-4h4"></path><path d="M17 14h4v-4"></path><path d="M10 3l11 11"></path></g>',1),sl=[nl],el=(0,c.aZ)({name:"ArrowsDoubleNwSe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qp,sl)}}),al={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 10l11 11"></path><path d="M14 17v4h-4"></path><path d="M14 3h-4v4"></path><path d="M21 14L10 3"></path></g>',1),rl=[tl],ol=(0,c.aZ)({name:"ArrowsDoubleSeNw",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",al,rl)}}),pl={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ll=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3L3 14"></path><path d="M3 10v4h4"></path><path d="M17 10h4v4"></path><path d="M10 21l11-11"></path></g>',1),il=[ll],cl=(0,c.aZ)({name:"ArrowsDoubleSwNe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pl,il)}}),ul={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 21V3"></path><path d="M20 18l-3 3l-3-3"></path><path d="M4 18l3 3l3-3"></path><path d="M17 21V3"></path></g>',1),hl=[dl],gl=(0,c.aZ)({name:"ArrowsDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ul,hl)}}),ml={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3v18"></path><path d="M10 18l-3 3l-3-3"></path><path d="M7 21V3"></path><path d="M20 6l-3-3l-3 3"></path></g>',1),bl=[kl],vl=(0,c.aZ)({name:"ArrowsDownUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ml,bl)}}),wl={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xl=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 8l-4 4l4 4"}),(0,c._)("path",{d:"M17 8l4 4l-4 4"}),(0,c._)("path",{d:"M3 12h18"})],-1),fl=[xl],yl=(0,c.aZ)({name:"ArrowsHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wl,fl)}}),Ml={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_l=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7h5l3.5 5H21"}),(0,c._)("path",{d:"M3 17h5l3.495-5"}),(0,c._)("path",{d:"M18 15l3-3l-3-3"})],-1),Cl=[_l],Sl=(0,c.aZ)({name:"ArrowsJoin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ml,Cl)}}),El={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pl=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7h1.948c1.913 0 3.705.933 4.802 2.5a5.861 5.861 0 0 0 4.802 2.5H21"}),(0,c._)("path",{d:"M3 17h1.95a5.854 5.854 0 0 0 4.798-2.5a5.854 5.854 0 0 1 4.798-2.5H20"}),(0,c._)("path",{d:"M18 15l3-3l-3-3"})],-1),jl=[Pl],Al=(0,c.aZ)({name:"ArrowsJoin2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",El,jl)}}),Dl={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 7h18"></path><path d="M6 20l-3-3l3-3"></path><path d="M6 4L3 7l3 3"></path><path d="M3 17h18"></path></g>',1),Fl=[Rl],Bl=(0,c.aZ)({name:"ArrowsLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dl,Fl)}}),Ll={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tl=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 3L3 7l4 4"}),(0,c._)("path",{d:"M3 7h11a3 3 0 0 1 3 3v11"}),(0,c._)("path",{d:"M13 17l4 4l4-4"})],-1),Il=[Tl],Nl=(0,c.aZ)({name:"ArrowsLeftDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ll,Il)}}),Ol={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 17H3"></path><path d="M6 10L3 7l3-3"></path><path d="M3 7h18"></path><path d="M18 20l3-3l-3-3"></path></g>',1),Zl=[Vl],Hl=(0,c.aZ)({name:"ArrowsLeftRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ol,Zl)}}),Ul={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 4h4v4"></path><path d="M14 10l6-6"></path><path d="M8 20H4v-4"></path><path d="M4 20l6-6"></path><path d="M16 20h4v-4"></path><path d="M14 14l6 6"></path><path d="M8 4H4v4"></path><path d="M4 4l6 6"></path></g>',1),ql=[zl],$l=(0,c.aZ)({name:"ArrowsMaximize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ul,ql)}}),Kl={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 9h4V5"></path><path d="M3 3l6 6"></path><path d="M5 15h4v4"></path><path d="M3 21l6-6"></path><path d="M19 9h-4V5"></path><path d="M15 9l6-6"></path><path d="M19 15h-4v4"></path><path d="M15 15l6 6"></path></g>',1),Wl=[Yl],Gl=(0,c.aZ)({name:"ArrowsMinimize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kl,Wl)}}),Jl={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xl=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 17H3"></path><path d="M18 4l3 3l-3 3"></path><path d="M18 20l3-3l-3-3"></path><path d="M21 7H3"></path></g>',1),Ql=[Xl],ni=(0,c.aZ)({name:"ArrowsRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jl,Ql)}}),si={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ei=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17l4 4l4-4"}),(0,c._)("path",{d:"M7 21V10a3 3 0 0 1 3-3h11"}),(0,c._)("path",{d:"M17 11l4-4l-4-4"})],-1),ai=[ei],ti=(0,c.aZ)({name:"ArrowsRightDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",si,ai)}}),ri={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},oi=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 7H3"></path><path d="M18 10l3-3l-3-3"></path><path d="M6 20l-3-3l3-3"></path><path d="M3 17h18"></path></g>',1),pi=[oi],li=(0,c.aZ)({name:"ArrowsRightLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ri,pi)}}),ii={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ci=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 4l3 3l-3 3"></path><path d="M18 20l3-3l-3-3"></path><path d="M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5"></path><path d="M21 7h-5a4.978 4.978 0 0 0-2.998.998M9 16.001A4.984 4.984 0 0 1 6 17H3"></path></g>',1),ui=[ci],di=(0,c.aZ)({name:"ArrowsShuffle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ii,ui)}}),hi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gi=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 4l3 3l-3 3"></path><path d="M18 20l3-3l-3-3"></path><path d="M3 7h3a5 5 0 0 1 5 5a5 5 0 0 0 5 5h5"></path><path d="M3 17h3a5 5 0 0 0 5-5a5 5 0 0 1 5-5h5"></path></g>',1),mi=[gi],ki=(0,c.aZ)({name:"ArrowsShuffle2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hi,mi)}}),bi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vi=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 9l4-4l4 4M7 5v14"}),(0,c._)("path",{d:"M21 15l-4 4l-4-4m4 4V5"})],-1),wi=[vi],xi=(0,c.aZ)({name:"ArrowsSort",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bi,wi)}}),fi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yi=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 17h-8l-3.5-5H3"></path><path d="M21 7h-8l-3.495 5"></path><path d="M18 10l3-3l-3-3"></path><path d="M18 20l3-3l-3-3"></path></g>',1),Mi=[yi],_i=(0,c.aZ)({name:"ArrowsSplit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fi,Mi)}}),Ci={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Si=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 17h-5.397a5 5 0 0 1-4.096-2.133l-.514-.734A5 5 0 0 0 6.897 12H3"></path><path d="M21 7h-5.395a5 5 0 0 0-4.098 2.135l-.51.73A5 5 0 0 1 6.9 12H3"></path><path d="M18 10l3-3l-3-3"></path><path d="M18 20l3-3l-3-3"></path></g>',1),Ei=[Si],Pi=(0,c.aZ)({name:"ArrowsSplit2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ci,Ei)}}),ji={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ai=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3v18"></path><path d="M4 6l3-3l3 3"></path><path d="M20 6l-3-3l-3 3"></path><path d="M7 3v18"></path></g>',1),Di=[Ai],Ri=(0,c.aZ)({name:"ArrowsUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ji,Di)}}),Fi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bi=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 3v18"></path><path d="M10 6L7 3L4 6"></path><path d="M20 18l-3 3l-3-3"></path><path d="M17 21V3"></path></g>',1),Li=[Bi],Ti=(0,c.aZ)({name:"ArrowsUpDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fi,Li)}}),Ii={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ni=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M21 7l-4-4l-4 4"}),(0,c._)("path",{d:"M17 3v11a3 3 0 0 1-3 3H3"}),(0,c._)("path",{d:"M7 13l-4 4l4 4"})],-1),Oi=[Ni],Vi=(0,c.aZ)({name:"ArrowsUpLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ii,Oi)}}),Zi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hi=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 21l4-4l-4-4"}),(0,c._)("path",{d:"M21 17H10a3 3 0 0 1-3-3V3"}),(0,c._)("path",{d:"M11 7L7 3L3 7"})],-1),Ui=[Hi],zi=(0,c.aZ)({name:"ArrowsUpRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zi,Ui)}}),qi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$i=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 7l4-4l4 4"}),(0,c._)("path",{d:"M8 17l4 4l4-4"}),(0,c._)("path",{d:"M12 3v18"})],-1),Ki=[$i],Yi=(0,c.aZ)({name:"ArrowsVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qi,Ki)}}),Wi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gi=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="8" width="8" height="8" rx="1"></rect><path d="M3 8h1"></path><path d="M3 16h1"></path><path d="M8 3v1"></path><path d="M16 3v1"></path><path d="M20 8h1"></path><path d="M20 16h1"></path><path d="M8 20v1"></path><path d="M16 20v1"></path></g>',1),Ji=[Gi],Xi=(0,c.aZ)({name:"Artboard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wi,Ji)}}),Qi={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2"}),(0,c._)("path",{d:"M7 12V9h3"}),(0,c._)("path",{d:"M17 12v3h-3"})],-1),sc=[nc],ec=(0,c.aZ)({name:"AspectRatio",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qi,sc)}}),ac={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12l8-4.5"></path><path d="M12 12v9"></path><path d="M12 12L4 7.5"></path><path d="M12 12l8 4.5"></path><path d="M12 3v9"></path><path d="M12 12l-8 4.5"></path></g>',1),rc=[tc],oc=(0,c.aZ)({name:"Asterisk",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ac,rc)}}),pc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12V3"></path><path d="M12 12L3 9.5"></path><path d="M12 12l9-2.5"></path><path d="M12 12l6 8.5"></path><path d="M12 12l-6 8.5"></path></g>',1),ic=[lc],cc=(0,c.aZ)({name:"AsteriskSimple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pc,ic)}}),uc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"4"}),(0,c._)("path",{d:"M16 12v1.5a2.5 2.5 0 0 0 5 0V12a9 9 0 1 0-5.5 8.28"})],-1),hc=[dc],gc=(0,c.aZ)({name:"At",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",uc,hc)}}),mc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 12v.01"}),(0,c._)("path",{d:"M19.071 4.929a4 10 45 0 0-9.9 4.243a4 10 45 0 0-4.242 9.9a4 10 45 0 0 9.9-4.244a4 10 45 0 0 4.242-9.9"}),(0,c._)("path",{d:"M4.929 4.929a10 4 45 0 0 4.243 9.9a10 4 45 0 0 9.9 4.242a10 4 45 0 0-4.244-9.9a10 4 45 0 0-9.9-4.242"})],-1),bc=[kc],vc=(0,c.aZ)({name:"Atom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mc,bc)}}),wc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><path d="M12 21v.01"></path><path d="M3 9v.01"></path><path d="M21 9v.01"></path><path d="M8 20.1A9 9 0 0 1 3 13"></path><path d="M16 20.1a9 9 0 0 0 5-7.1"></path><path d="M6.2 5a9 9 0 0 1 11.4 0"></path></g>',1),fc=[xc],yc=(0,c.aZ)({name:"Atom2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wc,fc)}}),Mc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_c=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"9",r:"6"}),(0,c._)("path",{d:"M12.002 15.003l3.4 5.89L17 17.66l3.598.232l-3.4-5.889"}),(0,c._)("path",{d:"M6.802 12.003l-3.4 5.89L7 17.66l1.598 3.232l3.4-5.889"})],-1),Cc=[_c],Sc=(0,c.aZ)({name:"Award",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mc,Cc)}}),Ec={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 9l7.383 7.418c.823.82.823 2.148 0 2.967a2.11 2.11 0 0 1-2.976 0L10 12"}),(0,c._)("path",{d:"M6.66 15.66l-3.32-3.32a1.25 1.25 0 0 1 .42-2.044L7 9l6-6l3 3l-6 6l-1.296 3.24a1.25 1.25 0 0 1-2.044.42z"})],-1),jc=[Pc],Ac=(0,c.aZ)({name:"Axe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ec,jc)}}),Dc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 13v.01"></path><path d="M4 9v.01"></path><path d="M4 5v.01"></path><path d="M17 20l3-3l-3-3"></path><path d="M4 17h16"></path></g>',1),Fc=[Rc],Bc=(0,c.aZ)({name:"AxisX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dc,Fc)}}),Lc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 20h-.01"></path><path d="M15 20h-.01"></path><path d="M19 20h-.01"></path><path d="M4 7l3-3l3 3"></path><path d="M7 20V4"></path></g>',1),Ic=[Tc],Nc=(0,c.aZ)({name:"AxisY",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lc,Ic)}}),Oc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vc=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="4" cy="17" r="2"></circle><circle cx="13" cy="17" r="2"></circle><path d="M13 19H4"></path><path d="M4 15h9"></path><path d="M8 12V7h2a3 3 0 0 1 3 3v5"></path><path d="M5 15v-2a1 1 0 0 1 1-1h7"></path><path d="M21.12 9.88L18 5l-5 5"></path><path d="M21.12 9.88A3 3 0 0 1 19 15a3 3 0 0 1-2.12-.88l4.24-4.24z"></path></g>',1),Zc=[Vc],Hc=(0,c.aZ)({name:"Backhoe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Oc,Zc)}}),Uc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 7h2a6 6 0 0 1 6 6v6a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1v-6a6 6 0 0 1 6-6z"}),(0,c._)("path",{d:"M10 7V6a2 2 0 1 1 4 0v1"}),(0,c._)("path",{d:"M10 15h4"})],-1),qc=[zc],$c=(0,c.aZ)({name:"Backpack",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uc,qc)}}),Kc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yc=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 6a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H9l-5-5a1.5 1.5 0 0 1 0-2l5-5z"}),(0,c._)("path",{d:"M12 10l4 4m0-4l-4 4"})],-1),Wc=[Yc],Gc=(0,c.aZ)({name:"Backspace",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kc,Wc)}}),Jc={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xc=(0,c._)("path",{d:"M17 17V4l-5 3l-5-3v13l5 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Qc=[Xc],nu=(0,c.aZ)({name:"Badge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jc,Qc)}}),su={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},eu=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 17v-4l-5 3l-5-3v4l5 3z"}),(0,c._)("path",{d:"M17 8V4l-5 3l-5-3v4l5 3z"})],-1),au=[eu],tu=(0,c.aZ)({name:"Badges",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",su,au)}}),ru={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ou=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 9l-6 6"></path><path d="M10 12l2 2"></path><path d="M12 10l2 2"></path><path d="M8 21a5 5 0 0 0-5-5"></path><path d="M16 3C8.82 3 3 8.82 3 16a5 5 0 0 0 5 5c7.18 0 13-5.82 13-13a5 5 0 0 0-5-5"></path><path d="M16 3a5 5 0 0 0 5 5"></path></g>',1),pu=[ou],lu=(0,c.aZ)({name:"BallAmericanFootball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ru,pu)}}),iu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},cu=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5.636 18.364A9 9 0 1 0 18.364 5.636A9 9 0 0 0 5.636 18.364z"></path><path d="M12.495 3.02a9 9 0 0 1-9.475 9.475"></path><path d="M20.98 11.505a9 9 0 0 0-9.475 9.475"></path><path d="M9 9l2 2"></path><path d="M13 13l2 2"></path><path d="M11 7l2 1"></path><path d="M7 11l1 2"></path><path d="M16 11l1 2"></path><path d="M11 16l2 1"></path></g>',1),uu=[cu],du=(0,c.aZ)({name:"BallBaseball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",iu,uu)}}),hu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gu=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M5.65 5.65l12.7 12.7"></path><path d="M5.65 18.35l12.7-12.7"></path><path d="M12 3a9 9 0 0 0 9 9"></path><path d="M3 12a9 9 0 0 1 9 9"></path></g>',1),mu=[gu],ku=(0,c.aZ)({name:"BallBasketball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hu,mu)}}),bu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vu=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M11 9v.01"></path><path d="M15 8v.01"></path><path d="M14 12v.01"></path></g>',1),wu=[vu],xu=(0,c.aZ)({name:"BallBowling",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bu,wu)}}),fu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yu=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 7l4.76 3.45L15 16H9l-1.76-5.55z"}),(0,c._)("path",{d:"M12 7V3m3 13l2.5 3m-.74-8.55L20.5 9M9.06 16.05L6.5 19m.74-8.55L3.5 9"})],-1),Mu=[yu],_u=(0,c.aZ)({name:"BallFootball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fu,Mu)}}),Cu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Su=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20.041 16.046A9 9 0 0 0 7.957 3.956M5.634 5.639a9 9 0 0 0 12.726 12.73"></path><path d="M12 7l4.755 3.455l-.566 1.743l-.98 3.014L15 16H9l-1.755-5.545l1.86-1.351l2.313-1.681z"></path><path d="M12 7V3"></path><path d="M15 16l2.5 3"></path><path d="M16.755 10.455L20.5 9"></path><path d="M9.061 16.045L6.5 19"></path><path d="M7.245 10.455L3.5 9"></path><path d="M3 3l18 18"></path></g>',1),Eu=[Su],Pu=(0,c.aZ)({name:"BallFootballOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cu,Eu)}}),ju={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Au=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M6 5.3a9 9 0 0 1 0 13.4"}),(0,c._)("path",{d:"M18 5.3a9 9 0 0 0 0 13.4"})],-1),Du=[Au],Ru=(0,c.aZ)({name:"BallTennis",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ju,Du)}}),Fu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bu=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 12a8 8 0 0 0 8 4M7.5 13.5A12 12 0 0 0 16 20"></path><path d="M12 12a8 8 0 0 0-7.464 4.928m8.415-9.575a12 12 0 0 0-9.88 4.111"></path><path d="M12 12a8 8 0 0 0-.536-8.928m4.085 12.075a12 12 0 0 0 1.38-10.611"></path></g>',1),Lu=[Bu],Tu=(0,c.aZ)({name:"BallVolleyball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fu,Lu)}}),Iu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nu=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 8a2 2 0 0 0-2-2"}),(0,c._)("path",{d:"M6 8a6 6 0 1 1 12 0c0 4.97-2.686 9-6 9s-6-4.03-6-9"}),(0,c._)("path",{d:"M12 17v1a2 2 0 0 1-2 2H7a2 2 0 0 0-2 2"})],-1),Ou=[Nu],Vu=(0,c.aZ)({name:"Ballon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Iu,Ou)}}),Zu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hu=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M5.7 5.7l12.6 12.6"})],-1),Uu=[Hu],zu=(0,c.aZ)({name:"Ban",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zu,Uu)}}),qu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$u=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 12v.01"></path><path d="M10 12v.01"></path><path d="M12 10v.01"></path><path d="M12 14v.01"></path><path d="M4.5 12.5l8-8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1-7-7"></path></g>',1),Ku=[$u],Yu=(0,c.aZ)({name:"Bandage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qu,Ku)}}),Wu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gu=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 12h1"></path><path d="M6 8H4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2"></path><path d="M6 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z"></path><path d="M9 12h6"></path><path d="M15 7v10a1 1 0 0 0 1 1h1a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1h-1a1 1 0 0 0-1 1z"></path><path d="M18 8h2a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-2"></path><path d="M22 12h-1"></path></g>',1),Ju=[Gu],Xu=(0,c.aZ)({name:"Barbell",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wu,Ju)}}),Qu={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nd=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7V6a2 2 0 0 1 2-2h2"></path><path d="M4 17v1a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v1"></path><path d="M16 20h2a2 2 0 0 0 2-2v-1"></path><path d="M5 11h1v2H5z"></path><path d="M10 11v2"></path><path d="M14 11h1v2h-1z"></path><path d="M19 11v2"></path></g>',1),sd=[nd],ed=(0,c.aZ)({name:"Barcode",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qu,sd)}}),ad={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},td=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 10l5-6l5 6"}),(0,c._)("path",{d:"M21 10l-2 8a2 2.5 0 0 1-2 2H7a2 2.5 0 0 1-2-2l-2-8z"}),(0,c._)("circle",{cx:"12",cy:"15",r:"2"})],-1),rd=[td],od=(0,c.aZ)({name:"Basket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ad,rd)}}),pd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ld=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12h16a1 1 0 0 1 1 1v3a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4v-3a1 1 0 0 1 1-1z"></path><path d="M6 12V5a2 2 0 0 1 2-2h3v2.25"></path><path d="M4 21l1-1.5"></path><path d="M20 21l-1-1.5"></path></g>',1),id=[ld],cd=(0,c.aZ)({name:"Bath",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pd,id)}}),ud={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dd=(0,c._)("path",{d:"M6 7h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),hd=[dd],gd=(0,c.aZ)({name:"Battery",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ud,hd)}}),md={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kd=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 7h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M7 10v4"})],-1),bd=[kd],vd=(0,c.aZ)({name:"Battery1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",md,bd)}}),wd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xd=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 7h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M7 10v4"}),(0,c._)("path",{d:"M10 10v4"})],-1),fd=[xd],yd=(0,c.aZ)({name:"Battery2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wd,fd)}}),Md={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_d=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 7h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M7 10v4"></path><path d="M10 10v4"></path><path d="M13 10v4"></path></g>',1),Cd=[_d],Sd=(0,c.aZ)({name:"Battery3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Md,Cd)}}),Ed={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pd=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 7h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M7 10v4"></path><path d="M10 10v4"></path><path d="M13 10v4"></path><path d="M16 10v4"></path></g>',1),jd=[Pd],Ad=(0,c.aZ)({name:"Battery4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ed,jd)}}),Dd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rd=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="6" width="18" height="14" rx="2"></rect><path d="M6 6V4"></path><path d="M19 4v2"></path><path d="M6.5 13h3"></path><path d="M14.5 13h3"></path><path d="M16 11.5v3"></path></g>',1),Fd=[Rd],Bd=(0,c.aZ)({name:"BatteryAutomotive",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dd,Fd)}}),Ld={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Td=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 7h1a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2h-2"}),(0,c._)("path",{d:"M8 7H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h1"}),(0,c._)("path",{d:"M12 8l-2 4h3l-2 4"})],-1),Id=[Td],Nd=(0,c.aZ)({name:"BatteryCharging",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ld,Id)}}),Od={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vd=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 9a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2h-4.5"></path><path d="M3 15h6v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-2z"></path><path d="M6 22v-3"></path><path d="M4 15v-2.5"></path><path d="M8 15v-2.5"></path></g>',1),Zd=[Vd],Hd=(0,c.aZ)({name:"BatteryCharging2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Od,Zd)}}),Ud={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zd=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 9a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5a2 2 0 0 1-2 2h-5.5"}),(0,c._)("path",{d:"M3 16.143C3 13.303 5.09 11 7.667 11H10v.857C10 14.697 7.91 17 5.333 17H3v-.857z"}),(0,c._)("path",{d:"M3 20v-3"})],-1),qd=[zd],$d=(0,c.aZ)({name:"BatteryEco",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ud,qd)}}),Kd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yd=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M11 7h6a2 2 0 0 1 2 2v.5a.5.5 0 0 0 .5.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5a.5.5 0 0 0-.5.5v.5m-2 2H6a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1"})],-1),Wd=[Yd],Gd=(0,c.aZ)({name:"BatteryOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kd,Wd)}}),Jd={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xd=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.553 16.75a7.5 7.5 0 0 0-10.606 0"></path><path d="M18 3.804A6 6 0 0 0 9.804 6l10.392 6A6 6 0 0 0 18 3.804z"></path><path d="M16.732 10C18.39 7.13 18.957 4.356 18 3.804C17.043 3.252 14.925 5.13 13.268 8"></path><path d="M15 9l-3 5.196"></path><path d="M3 19.25A2.4 2.4 0 0 1 4 19a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 1 .25"></path></g>',1),Qd=[Xd],nh=(0,c.aZ)({name:"Beach",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jd,Qd)}}),sh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},eh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7v11m0-4h18m0 4v-8a2 2 0 0 0-2-2h-8v6"}),(0,c._)("circle",{cx:"7",cy:"10",r:"1"})],-1),ah=[eh],th=(0,c.aZ)({name:"Bed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sh,ah)}}),rh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},oh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 20h6v-4.111a8 8 0 0 1 .845-3.578l.31-.622A8 8 0 0 0 17 8.111V4H7v4.111a8 8 0 0 0 .845 3.578l.31.622A8 8 0 0 1 9 15.889V20z"}),(0,c._)("path",{d:"M7 8h10"})],-1),ph=[oh],lh=(0,c.aZ)({name:"Beer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rh,ph)}}),ih={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ch=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"}),(0,c._)("path",{d:"M9 17v1a3 3 0 0 0 6 0v-1"})],-1),uh=[ch],dh=(0,c.aZ)({name:"Bell",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ih,uh)}}),hh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"}),(0,c._)("path",{d:"M9 17v1a3 3 0 0 0 6 0v-1"}),(0,c._)("path",{d:"M10 11h4"})],-1),mh=[gh],kh=(0,c.aZ)({name:"BellMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hh,mh)}}),bh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M17 17H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 1.279-3.716M9.351 5.35c.209-.127.425-.244.649-.35a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3"}),(0,c._)("path",{d:"M9 17v1a3 3 0 0 0 6 0v-1"})],-1),wh=[vh],xh=(0,c.aZ)({name:"BellOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bh,wh)}}),fh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yh=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"></path><path d="M9 17v1a3 3 0 0 0 6 0v-1"></path><path d="M10 11h4"></path><path d="M12 9v4"></path></g>',1),Mh=[yh],_h=(0,c.aZ)({name:"BellPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fh,Mh)}}),Ch={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sh=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 5a2 2 0 0 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"></path><path d="M9 17v1a3 3 0 0 0 6 0v-1"></path><path d="M21 6.727A11.05 11.05 0 0 0 18.206 3"></path><path d="M3 6.727A11.05 11.05 0 0 1 5.792 3"></path></g>',1),Eh=[Sh],Ph=(0,c.aZ)({name:"BellRinging",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ch,Eh)}}),jh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ah=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19.364 4.636a2 2 0 0 1 0 2.828a7 7 0 0 1-1.414 7.072l-2.122 2.12a4 4 0 0 0-.707 3.536L3.808 8.88a4 4 0 0 0 3.535-.707L9.464 6.05a7 7 0 0 1 7.072-1.414a2 2 0 0 1 2.828 0z"}),(0,c._)("path",{d:"M7.343 12.414l-.707.707a3 3 0 0 0 4.243 4.243l.707-.707"})],-1),Dh=[Ah],Rh=(0,c.aZ)({name:"BellRinging2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",jh,Dh)}}),Fh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"}),(0,c._)("path",{d:"M9 17v1a3 3 0 0 0 6 0v-1"}),(0,c._)("path",{d:"M10.5 9.5l3 3m0-3l-3 3"})],-1),Lh=[Bh],Th=(0,c.aZ)({name:"BellX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fh,Lh)}}),Ih={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nh=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6"}),(0,c._)("path",{d:"M9 17v1a3 3 0 0 0 6 0v-1"}),(0,c._)("path",{d:"M10 9h4l-4 4h4"})],-1),Oh=[Nh],Vh=(0,c.aZ)({name:"BellZ",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ih,Oh)}}),Zh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hh=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 4v16H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h12z"></path><path d="M19 16H7a2 2 0 0 0-2 2"></path><path d="M12 7v6"></path><path d="M10 9h4"></path></g>',1),Uh=[Hh],zh=(0,c.aZ)({name:"Bible",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zh,Uh)}}),qh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$h=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="18" r="3"></circle><circle cx="19" cy="18" r="3"></circle><path d="M12 19v-4l-3-3l5-4l2 3h3"></path><circle cx="17" cy="5" r="1"></circle></g>',1),Kh=[$h],Yh=(0,c.aZ)({name:"Bike",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qh,Kh)}}),Wh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gh=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 10V5h-1m8 14v-5h-1"></path><rect x="15" y="5" width="3" height="5" rx=".5"></rect><rect x="10" y="14" width="3" height="5" rx=".5"></rect><path d="M6 10h.01M6 19h.01"></path></g>',1),Jh=[Gh],Xh=(0,c.aZ)({name:"Binary",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wh,Jh)}}),Qh={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ng=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"2"}),(0,c._)("path",{d:"M11.939 14c0 .173.048.351.056.533v.217a4.75 4.75 0 0 1-4.533 4.745h-.217m-4.75-4.75a4.75 4.75 0 0 1 7.737-3.693m6.513 8.443a4.75 4.75 0 0 1-4.69-5.503h-.06m1.764-2.944a4.75 4.75 0 0 1 7.731 3.477v.217m-11.195-3.813a4.75 4.75 0 0 1-1.828-7.624l.164-.172m6.718 0a4.75 4.75 0 0 1-1.665 7.798"})],-1),sg=[ng],eg=(0,c.aZ)({name:"Biohazard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qh,sg)}}),ag={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tg=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 15h15"></path><path d="M21 19H6"></path><path d="M15 11h6"></path><path d="M21 7h-6"></path><path d="M9 9h1a1 1 0 1 1-1 1V7.5a2 2 0 0 1 2-2"></path><path d="M3 9h1a1 1 0 1 1-1 1V7.5a2 2 0 0 1 2-2"></path></g>',1),rg=[tg],og=(0,c.aZ)({name:"Blockquote",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ag,rg)}}),pg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lg=(0,c._)("path",{d:"M7 8l10 8l-5 4V4l5 4l-10 8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ig=[lg],cg=(0,c.aZ)({name:"Bluetooth",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pg,ig)}}),ug={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dg=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 8l10 8l-5 4V4l5 4l-10 8"}),(0,c._)("path",{d:"M4 12h1"}),(0,c._)("path",{d:"M18 12h1"})],-1),hg=[dg],gg=(0,c.aZ)({name:"BluetoothConnected",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ug,hg)}}),mg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kg=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M16.438 16.45L12 20v-8m0-4V4l5 4l-2.776 2.22m-2.222 1.779l-5 4"})],-1),bg=[kg],vg=(0,c.aZ)({name:"BluetoothOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mg,bg)}}),wg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xg=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 21a9.01 9.01 0 0 0 2.32-.302a9.004 9.004 0 0 0 1.74-16.733A9 9 0 1 0 12 21z"></path><path d="M12 3v17"></path><path d="M12 12h9"></path><path d="M12 9h8"></path><path d="M12 6h6"></path><path d="M12 18h6"></path><path d="M12 15h8"></path></g>',1),fg=[xg],yg=(0,c.aZ)({name:"Blur",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wg,fg)}}),Mg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_g=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 5h6a3.5 3.5 0 0 1 0 7H7z"}),(0,c._)("path",{d:"M13 12h1a3.5 3.5 0 0 1 0 7H7v-7"})],-1),Cg=[_g],Sg=(0,c.aZ)({name:"Bold",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mg,Cg)}}),Eg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pg=(0,c._)("path",{d:"M13 3v7h6l-8 11v-7H5l8-11",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),jg=[Pg],Ag=(0,c.aZ)({name:"Bolt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Eg,jg)}}),Dg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rg=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M15.212 15.21L11 21v-7H5l3.79-5.21m1.685-2.32L13 3v6m1 1h5l-2.104 2.893"})],-1),Fg=[Rg],Bg=(0,c.aZ)({name:"BoltOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dg,Fg)}}),Lg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tg=(0,c._)("path",{d:"M15 3a3 3 0 0 1 3 3a3 3 0 1 1-2.12 5.122l-4.758 4.758a3 3 0 1 1-5.117 2.297L6 18l-.176-.005a3 3 0 1 1 2.298-5.115l4.758-4.758A3 3 0 0 1 15 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ig=[Tg],Ng=(0,c.aZ)({name:"Bone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lg,Ig)}}),Og={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vg=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19a9 9 0 0 1 9 0a9 9 0 0 1 9 0"></path><path d="M3 6a9 9 0 0 1 9 0a9 9 0 0 1 9 0"></path><path d="M3 6v13"></path><path d="M12 6v13"></path><path d="M21 6v13"></path></g>',1),Zg=[Vg],Hg=(0,c.aZ)({name:"Book",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Og,Zg)}}),Ug={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zg=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 4v16H7a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h12z"}),(0,c._)("path",{d:"M19 16H7a2 2 0 0 0-2 2"}),(0,c._)("path",{d:"M9 8h6"})],-1),qg=[zg],$g=(0,c.aZ)({name:"Book2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ug,qg)}}),Kg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yg=(0,c._)("path",{d:"M9 4h6a2 2 0 0 1 2 2v14l-5-3l-5 3V6a2 2 0 0 1 2-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Wg=[Yg],Gg=(0,c.aZ)({name:"Bookmark",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kg,Wg)}}),Jg={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xg=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M17 17v3l-5-3l-5 3V7m1.178-2.818c.252-.113.53-.176.822-.176h6a2 2 0 0 1 2 2v7"})],-1),Qg=[Xg],nm=(0,c.aZ)({name:"BookmarkOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jg,Qg)}}),sm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},em=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 7a2 2 0 0 1 2 2v12l-5-3l-5 3V9a2 2 0 0 1 2-2h6z"}),(0,c._)("path",{d:"M9.265 4A2 2 0 0 1 11 3h6a2 2 0 0 1 2 2v12l-1-.6"})],-1),am=[em],tm=(0,c.aZ)({name:"Bookmarks",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sm,am)}}),rm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},om=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="5" y="4" width="4" height="16" rx="1"></rect><rect x="9" y="4" width="4" height="16" rx="1"></rect><path d="M5 8h4"></path><path d="M9 16h4"></path><g transform="rotate(-13 27.054 -55.827)"><rect width="4" height="16" rx="1"></rect><path d="M0 4h4"></path><path d="M0 12h4"></path></g></g>',1),pm=[om],lm=(0,c.aZ)({name:"Books",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rm,pm)}}),im={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},cm=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 12h16"}),(0,c._)("path",{d:"M12 4v16"})],-1),um=[cm],dm=(0,c.aZ)({name:"BorderAll",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",im,um)}}),hm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 20H4"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 8v.01"></path><path d="M12 8v.01"></path><path d="M20 8v.01"></path><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path><path d="M4 16v.01"></path><path d="M12 16v.01"></path><path d="M20 16v.01"></path></g>',1),mm=[gm],km=(0,c.aZ)({name:"BorderBottom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hm,mm)}}),bm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12h16"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 8v.01"></path><path d="M12 8v.01"></path><path d="M20 8v.01"></path><path d="M4 16v.01"></path><path d="M12 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),wm=[vm],xm=(0,c.aZ)({name:"BorderHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bm,wm)}}),fm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ym=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12h16"></path><path d="M12 4v16"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 8v.01"></path><path d="M20 8v.01"></path><path d="M4 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),Mm=[ym],_m=(0,c.aZ)({name:"BorderInner",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fm,Mm)}}),Cm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20V4"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M12 8v.01"></path><path d="M20 8v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path><path d="M12 16v.01"></path><path d="M20 16v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),Em=[Sm],Pm=(0,c.aZ)({name:"BorderLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cm,Em)}}),jm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Am=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 8v.01"></path><path d="M12 8v.01"></path><path d="M20 8v.01"></path><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path><path d="M4 16v.01"></path><path d="M12 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),Dm=[Am],Rm=(0,c.aZ)({name:"BorderNone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",jm,Dm)}}),Fm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M12 8v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M12 16v.01"></path></g>',1),Lm=[Bm],Tm=(0,c.aZ)({name:"BorderOuter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fm,Lm)}}),Im={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12V8a4 4 0 0 1 4-4h4"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M20 8v.01"></path><path d="M20 12v.01"></path><path d="M4 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),Om=[Nm],Vm=(0,c.aZ)({name:"BorderRadius",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Im,Om)}}),Zm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 4v16"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M4 8v.01"></path><path d="M12 8v.01"></path><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M4 16v.01"></path><path d="M12 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path></g>',1),Um=[Hm],zm=(0,c.aZ)({name:"BorderRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zm,Um)}}),qm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$m=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20V6a2 2 0 0 1 2-2h14"></path><path d="M20 8v.01"></path><path d="M20 12v.01"></path><path d="M20 16v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),Km=[$m],Ym=(0,c.aZ)({name:"BorderStyle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qm,Km)}}),Wm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gm=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 18v.01"></path><path d="M8 18v.01"></path><path d="M12 18v.01"></path><path d="M16 18v.01"></path><path d="M20 18v.01"></path><path d="M18 12h2"></path><path d="M11 12h2"></path><path d="M4 12h2"></path><path d="M4 6h16"></path></g>',1),Jm=[Gm],Xm=(0,c.aZ)({name:"BorderStyle2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wm,Jm)}}),Qm={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h16"></path><path d="M4 8v.01"></path><path d="M12 8v.01"></path><path d="M20 8v.01"></path><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path><path d="M4 16v.01"></path><path d="M12 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),sk=[nk],ek=(0,c.aZ)({name:"BorderTop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qm,sk)}}),ak={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 4v16"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 8v.01"></path><path d="M20 8v.01"></path><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path><path d="M4 16v.01"></path><path d="M20 16v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path></g>',1),rk=[tk],ok=(0,c.aZ)({name:"BorderVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ak,rk)}}),pk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5h4V3a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v2z"}),(0,c._)("path",{d:"M14 3.5c0 1.626.507 3.212 1.45 4.537l.05.07a8.093 8.093 0 0 1 1.5 4.694V19a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2v-6.2c0-1.682.524-3.322 1.5-4.693l.05-.07A7.823 7.823 0 0 0 10 3.5"}),(0,c._)("path",{d:"M7.003 14.803A2.4 2.4 0 0 0 8 14a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 1-.805"})],-1),ik=[lk],ck=(0,c.aZ)({name:"Bottle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pk,ik)}}),uk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3l8 4.5v9L12 21l-8-4.5v-9L12 3"></path><path d="M12 12l8-4.5"></path><path d="M12 12v9"></path><path d="M12 12L4 7.5"></path></g>',1),hk=[dk],gk=(0,c.aZ)({name:"Box",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",uk,hk)}}),mk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 8h8v8H8z"></path><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M20 4v.01"></path><path d="M4 20v.01"></path><path d="M8 20v.01"></path><path d="M12 20v.01"></path><path d="M16 20v.01"></path><path d="M20 20v.01"></path><path d="M20 16v.01"></path><path d="M20 12v.01"></path><path d="M20 8v.01"></path><path d="M4 16v.01"></path><path d="M4 12v.01"></path><path d="M4 8v.01"></path></g>',1),bk=[kk],vk=(0,c.aZ)({name:"BoxMargin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mk,bk)}}),wk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 8h8v8H8z"></path><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M16 16l3.3 3.3"></path><path d="M16 8l3.3-3.3"></path><path d="M8 8L4.7 4.7"></path><path d="M8 16l-3.3 3.3"></path></g>',1),fk=[xk],yk=(0,c.aZ)({name:"BoxModel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wk,fk)}}),Mk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_k=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 8h8v8H8z"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),Ck=[_k],Sk=(0,c.aZ)({name:"BoxModel2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mk,Ck)}}),Ek={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"})],-1),jk=[Pk],Ak=(0,c.aZ)({name:"BoxMultiple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ek,jk)}}),Dk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 6a2 2 0 0 1 2 2v4a2 2 0 1 1-4 0V8a2 2 0 0 1 2-2z"}),(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"})],-1),Fk=[Rk],Bk=(0,c.aZ)({name:"BoxMultiple0",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dk,Fk)}}),Lk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"}),(0,c._)("path",{d:"M14 14V6l-2 2"})],-1),Ik=[Tk],Nk=(0,c.aZ)({name:"BoxMultiple1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lk,Ik)}}),Ok={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"}),(0,c._)("path",{d:"M12 8a2 2 0 1 1 4 0c0 .591-.417 1.318-.816 1.858L12 14.001h4"})],-1),Zk=[Vk],Hk=(0,c.aZ)({name:"BoxMultiple2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ok,Zk)}}),Uk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zk=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="3" width="14" height="14" rx="2"></rect><path d="M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"></path><path d="M14 10a2 2 0 1 0-2-2"></path><path d="M12 12a2 2 0 1 0 2-2"></path></g>',1),qk=[zk],$k=(0,c.aZ)({name:"BoxMultiple3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uk,qk)}}),Kk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"}),(0,c._)("path",{d:"M15 14V6l-4 6h5"})],-1),Wk=[Yk],Gk=(0,c.aZ)({name:"BoxMultiple4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kk,Wk)}}),Jk={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xk=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M12 14h2a2 2 0 1 0 0-4h-2V6h4"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"})],-1),Qk=[Xk],nb=(0,c.aZ)({name:"BoxMultiple5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jk,Qk)}}),sb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},eb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="3" width="14" height="14" rx="2"></rect><circle cx="14" cy="12" r="2"></circle><path d="M16 8a2 2 0 1 0-4 0v4"></path><path d="M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"></path></g>',1),ab=[eb],tb=(0,c.aZ)({name:"BoxMultiple6",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sb,ab)}}),rb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ob=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"3",width:"14",height:"14",rx:"2"}),(0,c._)("path",{d:"M12 6h4l-2 8"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"})],-1),pb=[ob],lb=(0,c.aZ)({name:"BoxMultiple7",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rb,pb)}}),ib={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},cb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="3" width="14" height="14" rx="2"></rect><circle cx="14" cy="8" r="2"></circle><circle cx="14" cy="12" r="2"></circle><path d="M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"></path></g>',1),ub=[cb],db=(0,c.aZ)({name:"BoxMultiple8",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ib,ub)}}),hb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="3" width="14" height="14" rx="2"></rect><circle cx="14" cy="8" r="2"></circle><path d="M12 12a2 2 0 1 0 4 0V8"></path><path d="M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"></path></g>',1),mb=[gb],kb=(0,c.aZ)({name:"BoxMultiple9",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hb,mb)}}),bb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M8 16v.01"></path><path d="M8 12v.01"></path><path d="M8 8v.01"></path><path d="M16 16v.01"></path><path d="M16 12v.01"></path><path d="M16 8v.01"></path><path d="M12 8v.01"></path><path d="M12 16v.01"></path></g>',1),wb=[vb],xb=(0,c.aZ)({name:"BoxPadding",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bb,wb)}}),fb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yb=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 4a2 2 0 0 0-2 2v3a2 3 0 0 1-2 3a2 3 0 0 1 2 3v3a2 2 0 0 0 2 2"}),(0,c._)("path",{d:"M17 4a2 2 0 0 1 2 2v3a2 3 0 0 0 2 3a2 3 0 0 0-2 3v3a2 2 0 0 1-2 2"})],-1),Mb=[yb],_b=(0,c.aZ)({name:"Braces",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fb,Mb)}}),Cb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sb=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 4H5v16h3"}),(0,c._)("path",{d:"M16 4h3v16h-3"})],-1),Eb=[Sb],Pb=(0,c.aZ)({name:"Brackets",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cb,Eb)}}),jb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ab=(0,c._)("path",{d:"M12 10c-2 0-3 1-3 3c0 1.5 1.494 3.535 3 5.5c1 1 1.5 1.5 2.5 2s2.5 1 4.5-.5s1.5-3.5.5-6s-2.333-5.5-5-9.5C13.666 3.5 13 3 11.997 3c-1 0-1.623.45-2.497 1.5c-2.667 4-4 7-5 9.5S3 18.5 5 20s3.5 1 4.5.5s1.5-1 2.5-2c1.506-1.965 3-4 3-5.5c0-2-1-3-3-3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Db=[Ab],Rb=(0,c.aZ)({name:"BrandAirbnb",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",jb,Db)}}),Fb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bb=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 10v8l7-3v-2.6z"}),(0,c._)("path",{d:"M3 6l9 3l9-3l-9-3z"}),(0,c._)("path",{d:"M14 12.3V21l7-3v-8z"})],-1),Lb=[Bb],Tb=(0,c.aZ)({name:"BrandAirtable",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fb,Lb)}}),Ib={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 10v6"></path><path d="M20 10v6"></path><path d="M7 9h10v8a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1V9a5 5 0 0 1 10 0"></path><path d="M8 3l1 2"></path><path d="M16 3l-1 2"></path><path d="M9 18v3"></path><path d="M15 18v3"></path></g>',1),Ob=[Nb],Vb=(0,c.aZ)({name:"BrandAndroid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ib,Ob)}}),Zb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hb=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5.428 17.245l6.076 3.471a1 1 0 0 0 .992 0l6.076-3.471a1 1 0 0 0 .495-.734l1.323-9.704a1 1 0 0 0-.658-1.078l-7.4-2.612a1 1 0 0 0-.665 0L4.268 5.73a1 1 0 0 0-.658 1.078l1.323 9.704a1 1 0 0 0 .495.734z"}),(0,c._)("path",{d:"M9 15l3-8l3 8"}),(0,c._)("path",{d:"M10 13h4"})],-1),Ub=[Hb],zb=(0,c.aZ)({name:"BrandAngular",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zb,Ub)}}),qb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$b=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 7c-3 0-4 3-4 5.5c0 3 2 7.5 4 7.5c1.088-.046 1.679-.5 3-.5c1.312 0 1.5.5 3 .5s4-3 4-5c-.028-.01-2.472-.403-2.5-3c-.019-2.17 2.416-2.954 2.5-3c-1.023-1.492-2.951-1.963-3.5-2c-1.433-.111-2.83 1-3.5 1c-.68 0-1.9-1-3-1z"}),(0,c._)("path",{d:"M12 4a2 2 0 0 0 2-2a2 2 0 0 0-2 2"})],-1),Kb=[$b],Yb=(0,c.aZ)({name:"BrandApple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qb,Kb)}}),Wb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gb=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="5" r="2"></circle><path d="M20 12.5v4.75a.734.734 0 0 1-.055.325a.704.704 0 0 1-.348.366l-5.462 2.58a4.998 4.998 0 0 1-4.27 0l-5.462-2.58a.705.705 0 0 1-.401-.691L4 12.5"></path><path d="M4.431 12.216l5.634-2.332a5.065 5.065 0 0 1 3.87 0l5.634 2.332a.692.692 0 0 1 .028 1.269l-5.462 2.543a5.064 5.064 0 0 1-4.27 0l-5.462-2.543a.691.691 0 0 1 .028-1.27z"></path><path d="M12 7v6"></path></g>',1),Jb=[Gb],Xb=(0,c.aZ)({name:"BrandAppleArcade",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wb,Jb)}}),Qb={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M8 16l1.106-1.99m1.4-2.522L13 7"></path><path d="M7 14h5m2.9 0H17"></path><path d="M16 16l-2.51-4.518m-1.487-2.677L11 7"></path></g>',1),sv=[nv],ev=(0,c.aZ)({name:"BrandAppstore",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qb,sv)}}),av={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tv=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"7",r:"3"}),(0,c._)("circle",{cx:"17",cy:"16",r:"3"}),(0,c._)("circle",{cx:"7",cy:"16",r:"3"})],-1),rv=[tv],ov=(0,c.aZ)({name:"BrandAsana",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",av,rv)}}),pv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 18V6h4.5a3 3 0 0 1 0 6a3 3 0 0 1 0 6H3"></path><path d="M3 12h4.5"></path><path d="M14 13h7a3.5 3.5 0 0 0-7 0v2a3.5 3.5 0 0 0 6.64 1"></path><path d="M16 6h3"></path></g>',1),iv=[lv],cv=(0,c.aZ)({name:"BrandBehance",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pv,iv)}}),uv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dv=(0,c._)("path",{d:"M5 3l4 1.5v12l6-2.5l-2-1l-1-4l7 2.5V16L9 21l-4-2z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),hv=[dv],gv=(0,c.aZ)({name:"BrandBing",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",uv,hv)}}),mv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kv=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3.648 4a.64.64 0 0 0-.64.744l3.14 14.528c.07.417.43.724.852.728h10a.644.644 0 0 0 .642-.539l3.35-14.71a.641.641 0 0 0-.64-.744L3.648 4z"}),(0,c._)("path",{d:"M14 15h-4L9 9h6z"})],-1),bv=[kv],vv=(0,c.aZ)({name:"BrandBitbucket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mv,bv)}}),wv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xv=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 18V8.5A4.5 4.5 0 0 1 8.5 4h7A4.5 4.5 0 0 1 20 8.5v7a4.5 4.5 0 0 1-4.5 4.5H6a2 2 0 0 1-2-2z"}),(0,c._)("path",{d:"M8 12h3.5a2 2 0 1 1 0 4H8V9a1 1 0 0 1 1-1h1.5a2 2 0 1 1 0 4H9"}),(0,c._)("path",{d:"M16 16h.01"})],-1),fv=[xv],yv=(0,c.aZ)({name:"BrandBooking",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wv,fv)}}),Mv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_v=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M2 12a2 2 0 0 0 2-2V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2"}),(0,c._)("path",{d:"M2 12a2 2 0 0 1 2 2v4a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-4a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M9 16V8h3.5a2 2 0 1 1 0 4H9h4a2 2 0 1 1 0 4H9z"})],-1),Cv=[_v],Sv=(0,c.aZ)({name:"BrandBootstrap",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mv,Cv)}}),Ev={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Pv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><circle cx="12" cy="12" r="3"></circle><path d="M12 9h8.4"></path><path d="M14.598 13.5l-4.2 7.275"></path><path d="M9.402 13.5l-4.2-7.275"></path></g>',1),jv=[Pv],Av=(0,c.aZ)({name:"BrandChrome",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ev,jv)}}),Dv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 15l9 6l9-6l-9-6l-9 6"></path><path d="M3 9l9 6l9-6l-9-6l-9 6"></path><path d="M3 9v6"></path><path d="M21 9v6"></path><path d="M12 3v6"></path><path d="M12 15v6"></path></g>',1),Fv=[Rv],Bv=(0,c.aZ)({name:"BrandCodepen",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dv,Fv)}}),Lv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 7.5v9l-4 2.25L12 21l-4-2.25l-4-2.25v-9l4-2.25L12 3l4 2.25z"></path><path d="M12 12l4-2.25l4-2.25"></path><path d="M12 12v9"></path><path d="M12 12L8 9.75L4 7.5"></path><path d="M20 12l-4 2v4.75"></path><path d="M4 12l4 2v4.75"></path><path d="M8 5.25l4 2.25l4-2.25"></path></g>',1),Iv=[Tv],Nv=(0,c.aZ)({name:"BrandCodesandbox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lv,Iv)}}),Ov={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vv=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 4l-2 14.5l-6 2l-6-2L4 4z"}),(0,c._)("path",{d:"M8.5 8h7L11 12h4l-.5 3.5l-2.5.75l-2.5-.75l-.1-.5"})],-1),Zv=[Vv],Hv=(0,c.aZ)({name:"BrandCss3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ov,Zv)}}),Uv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zv=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 10.99c-.01 5.52-4.48 10-10 10.01v-2.26l-.01-.01c-4.28-1.11-6.86-5.47-5.76-9.75a8.001 8.001 0 0 1 9.74-5.76C17.5 4.13 20 7.35 20 11v-.01z"></path><path d="M10.5 8L10 7"></path><path d="M13.5 14l.5 1"></path><path d="M9 12.5L8 13"></path><path d="M11 14l-.5 1"></path><path d="M13 8l.5-1"></path><path d="M16 12.5l-1-.5"></path><path d="M9 10l-1-.5"></path></g>',1),qv=[zv],$v=(0,c.aZ)({name:"BrandCucumber",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uv,qv)}}),Kv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yv=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 17c-2.397-.943-4-3.153-4-5.635c0-2.19 1.039-3.14 1.604-3.595C12.25 5.637 16 7.5 16 11c0 2.5-2.905 2.121-3.5 1.5c-.595-.621-1-1.5-.5-2.5"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),Wv=[Yv],Gv=(0,c.aZ)({name:"BrandDebian",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kv,Wv)}}),Jv={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xv=(0,c._)("path",{d:"M18 3v4l-3.857 6H18v4h-6.429L9 21H6v-4l3.857-6H6V7h6.429L15 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Qv=[Xv],nw=(0,c.aZ)({name:"BrandDeviantart",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jv,Qv)}}),sw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ew=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="12" r="1"></circle><circle cx="15" cy="12" r="1"></circle><path d="M7.5 7.5c3.5-1 5.5-1 9 0"></path><path d="M7 16.5c3.5 1 6.5 1 10 0"></path><path d="M15.5 17c0 1 1.5 3 2 3c1.5 0 2.833-1.667 3.5-3c.667-1.667.5-5.833-1.5-11.5c-1.457-1.015-3-1.34-4.5-1.5l-1 2.5"></path><path d="M8.5 17c0 1-1.356 3-1.832 3c-1.429 0-2.698-1.667-3.333-3c-.635-1.667-.476-5.833 1.428-11.5C6.151 4.485 7.545 4.16 9 4l1 2.5"></path></g>',1),aw=[ew],tw=(0,c.aZ)({name:"BrandDiscord",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sw,aw)}}),rw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ow=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11.847 21c-2.259 0-4.323-.667-5.919-2H2l1.708-3.266C3.163 14.56 2.949 13.288 2.95 12c0-4.97 3.84-9 8.898-9C16.9 3 21 7.03 21 12c0 4.972-4.098 9-9.153 9z"}),(0,c._)("path",{d:"M11.485 15H10V9h1.485C13.597 9 15 9.823 15 11.981v.035C15 14.196 13.597 15 11.485 15z"})],-1),pw=[ow],lw=(0,c.aZ)({name:"BrandDisqus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rw,pw)}}),iw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},cw=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 12.54c-1.804-.345-2.701-1.08-3.523-2.94c-.487.696-1.102 1.568-.92 2.4c.028.238-.32 1.002-.557 1H3c0 5.208 3.164 7 6.196 7c4.124.022 7.828-1.376 9.854-5c1.146-.101 2.296-1.505 2.95-2.46z"></path><path d="M5 10h3v3H5z"></path><path d="M8 10h3v3H8z"></path><path d="M11 10h3v3h-3z"></path><path d="M8 7h3v3H8z"></path><path d="M11 7h3v3h-3z"></path><path d="M11 4h3v3h-3z"></path><path d="M4.571 18c1.5 0 2.047-.074 2.958-.78"></path><path d="M10 16v.01"></path></g>',1),uw=[cw],dw=(0,c.aZ)({name:"BrandDocker",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",iw,uw)}}),hw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gw=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="14" r="7"></circle><path d="M9 14h6"></path><path d="M12 11l3 3l-3 3"></path><path d="M10 3l6.9 6"></path></g>',1),mw=[gw],kw=(0,c.aZ)({name:"BrandDoctrine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hw,mw)}}),bw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},vw=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 3.6c5 6 7 10.5 7.5 16.2"></path><path d="M6.4 19c3.5-3.5 6-6.5 14.5-6.4"></path><path d="M3.1 10.75c5 0 9.814-.38 15.314-5"></path></g>',1),ww=[vw],xw=(0,c.aZ)({name:"BrandDribbble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",bw,ww)}}),fw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},yw=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20.978 11.372a9 9 0 1 0-1.593 5.773"></path><path d="M20.978 11.372c.21 2.993-5.034 2.413-6.913 1.486c1.392-1.6.402-4.038-2.274-3.851c-1.745.122-2.927 1.157-2.784 3.202c.28 3.99 4.444 6.205 10.36 4.79"></path><path d="M3.022 12.628C2.739 8.585 11.739 5.4 14.27 9.94"></path><path d="M12.628 20.978c-2.993.21-5.162-4.725-3.567-9.748"></path></g>',1),Mw=[yw],_w=(0,c.aZ)({name:"BrandEdge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",fw,Mw)}}),Cw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sw=(0,c._)("path",{d:"M7 10v4h3v7h4v-7h3l1-4h-4V8a1 1 0 0 1 1-1h3V3h-3a5 5 0 0 0-5 5v2H7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ew=[Sw],Pw=(0,c.aZ)({name:"BrandFacebook",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cw,Ew)}}),jw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Aw=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"15",cy:"12",r:"3"}),(0,c._)("rect",{x:"6",y:"3",width:"12",height:"6",rx:"3"}),(0,c._)("path",{d:"M9 9a3 3 0 0 0 0 6h3m-3 0a3 3 0 1 0 3 3V3"})],-1),Dw=[Aw],Rw=(0,c.aZ)({name:"BrandFigma",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",jw,Dw)}}),Fw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Bw=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.53 17.05l6.15-11.72h-.02c.38-.74 1.28-1.02 2.01-.63c.26.14.48.36.62.62l1.06 2.01"}),(0,c._)("path",{d:"M15.47 6.45c.58-.59 1.53-.59 2.11-.01c.22.22.36.5.41.81l1.5 9.11c.1.62-.2 1.24-.76 1.54l-6.07 2.9c-.46.25-1.01.26-1.46 0l-6.02-2.92c-.55-.31-.85-.92-.75-1.54L6.39 4.3c.12-.82.89-1.38 1.7-1.25c.46.07.87.36 1.09.77l1.24 1.76"}),(0,c._)("path",{d:"M4.57 17.18L15.5 6.5"})],-1),Lw=[Bw],Tw=(0,c.aZ)({name:"BrandFirebase",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Fw,Lw)}}),Iw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nw=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.028 7.82a9 9 0 1 0 12.823-3.4C15.215 3.4 13.787 3.4 12 3.4h-1.647"}),(0,c._)("path",{d:"M4.914 9.485c-1.756-1.569-.805-5.38.109-6.17c.086.896.585 1.208 1.111 1.685c.88-.275 1.313-.282 1.867 0c.82-.91 1.694-2.354 2.628-2.093C9.547 4.648 10.559 6.64 12 7.08c-.17.975-1.484 1.913-2.76 2.686c-1.296.938-.722 1.85 0 2.234c.949.506 3.611-.995 4.545.354c-1.698.102-1.536 3.107-3.983 2.727c2.523.957 4.345.462 5.458-.34c1.965-1.52 2.879-3.542 2.879-5.557c-.014-1.398.194-2.695-1.26-4.75"})],-1),Ow=[Nw],Vw=(0,c.aZ)({name:"BrandFirefox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Iw,Ow)}}),Zw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Hw=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"12",r:"3"}),(0,c._)("circle",{cx:"17",cy:"12",r:"3"})],-1),Uw=[Hw],zw=(0,c.aZ)({name:"BrandFlickr",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Zw,Uw)}}),qw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},$w=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 3h10c.644 0 1.11.696.978 1.33l-1.984 9.859A1.014 1.014 0 0 1 15 15h-2.254c-.308 0-.6.141-.793.382l-4.144 5.25C7.21 21.384 6 20.963 6 20V4c0-.564.44-1 1-1z"}),(0,c._)("path",{d:"M12 9h5"})],-1),Kw=[$w],Yw=(0,c.aZ)({name:"BrandFoursquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",qw,Kw)}}),Ww={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gw=(0,c._)("path",{d:"M6 15h12L6 3h12v6H6v6l6 6v-6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Jw=[Gw],Xw=(0,c.aZ)({name:"BrandFramer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ww,Jw)}}),Qw={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},nx=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="16" cy="12" r="1"></circle><circle cx="12" cy="8" r="1"></circle><circle cx="12" cy="16" r="1"></circle><path d="M12 15V9"></path><path d="M15 11l-2-2"></path><path d="M11 7L9.1 5.1"></path><path d="M10.5 20.4l-6.9-6.9c-.781-.781-.781-2.219 0-3l6.9-6.9c.781-.781 2.219-.781 3 0l6.9 6.9c.781.781.781 2.219 0 3l-6.9 6.9c-.781.781-2.219.781-3 0z"></path></g>',1),sx=[nx],ex=(0,c.aZ)({name:"BrandGit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Qw,sx)}}),ax={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},tx=(0,c._)("path",{d:"M9 19c-4.3 1.4-4.3-2.5-6-3m12 5v-3.5c0-1 .1-1.4-.5-2c2.8-.3 5.5-1.4 5.5-6a4.6 4.6 0 0 0-1.3-3.2a4.2 4.2 0 0 0-.1-3.2s-1.1-.3-3.5 1.3a12.3 12.3 0 0 0-6.2 0C6.5 2.8 5.4 3.1 5.4 3.1a4.2 4.2 0 0 0-.1 3.2A4.6 4.6 0 0 0 4 9.5c0 4.6 2.7 5.7 5.5 6c-.6.6-.6 1.2-.5 2V21",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),rx=[tx],ox=(0,c.aZ)({name:"BrandGithub",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ax,rx)}}),px={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lx=(0,c._)("path",{d:"M21 14l-9 7l-9-7L6 3l3 7h6l3-7z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ix=[lx],cx=(0,c.aZ)({name:"BrandGitlab",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",px,ix)}}),ux={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dx=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 20h3a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-3v16z"></path><path d="M5 20h3V4H5a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1z"></path><path d="M16 4l-4 4l-4-4"></path><path d="M4 6.5l8 7.5l8-7.5"></path></g>',1),hx=[dx],gx=(0,c.aZ)({name:"BrandGmail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ux,hx)}}),mx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},kx=(0,c._)("path",{d:"M17.788 5.108A9 9 0 1 0 21 12h-8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),bx=[kx],vx=(0,c.aZ)({name:"BrandGoogle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",mx,bx)}}),wx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xx=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"10",y:"9",width:"4",height:"12",rx:"1.105"}),(0,c._)("rect",{x:"17",y:"3",width:"4",height:"18",rx:"1.105"}),(0,c._)("circle",{cx:"5",cy:"19",r:"2"})],-1),fx=[xx],yx=(0,c.aZ)({name:"BrandGoogleAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wx,fx)}}),Mx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},_x=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 10L6 20l-3-5L9 5z"}),(0,c._)("path",{d:"M9 15h12l-3 5H6"}),(0,c._)("path",{d:"M15 15L9 5h6l6 10z"})],-1),Cx=[_x],Sx=(0,c.aZ)({name:"BrandGoogleDrive",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Mx,Cx)}}),Ex={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Px=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 3.71v16.58a.7.7 0 0 0 1.05.606l14.622-8.42a.55.55 0 0 0 0-.953L5.05 3.104A.7.7 0 0 0 4 3.711z"}),(0,c._)("path",{d:"M15 9L4.5 20.5"}),(0,c._)("path",{d:"M4.5 3.5L15 15"})],-1),jx=[Px],Ax=(0,c.aZ)({name:"BrandGooglePlay",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ex,jx)}}),Dx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rx=(0,c._)("path",{d:"M5.64 5.632A9 9 0 1 0 12 3v7.714",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Fx=[Rx],Bx=(0,c.aZ)({name:"BrandGravatar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dx,Fx)}}),Lx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Tx=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17.802 17.292s.077-.055.2-.149C19.845 15.718 21 13.653 21 11.354c0-4.286-4.03-7.764-8.998-7.764C7.032 3.59 3 7.068 3 11.354C3 15.642 7.03 19 12 19c.424 0 1.12-.028 2.088-.084c1.262.82 3.104 1.493 4.716 1.493c.499 0 .734-.41.414-.828c-.486-.596-1.156-1.551-1.416-2.29z"}),(0,c._)("path",{d:"M7.5 13.5c2.5 2.5 6.5 2.5 9 0"})],-1),Ix=[Tx],Nx=(0,c.aZ)({name:"BrandHipchat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Lx,Ix)}}),Ox={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Vx=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 4l-2 14.5l-6 2l-6-2L4 4z"}),(0,c._)("path",{d:"M15.5 8h-7l.5 4h6l-.5 3.5l-2.5.75l-2.5-.75l-.1-.5"})],-1),Zx=[Vx],Hx=(0,c.aZ)({name:"BrandHtml5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ox,Zx)}}),Ux={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zx=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("path",{d:"M16.5 7.5v.001"})],-1),qx=[zx],$x=(0,c.aZ)({name:"BrandInstagram",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ux,qx)}}),Kx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Yx=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 4l-2 14.5l-6 2l-6-2L4 4z"}),(0,c._)("path",{d:"M7.5 8h3v8l-2-1"}),(0,c._)("path",{d:"M16.5 8H14a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h1.423a.5.5 0 0 1 .495.57L15.5 15.5l-2 .5"})],-1),Wx=[Yx],Gx=(0,c.aZ)({name:"BrandJavascript",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Kx,Wx)}}),Jx={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Xx=(0,c._)("path",{d:"M11 9l2.975-4.65C14.59 3.45 15.38 3 16.352 3c.79 0 1.474.286 2.054.858c.576.574.866 1.256.866 2.054c0 .588-.153 1.109-.46 1.559L16 11.5l3.465 4.912c.356.46.535.998.535 1.613a2.92 2.92 0 0 1-.843 2.098c-.561.584-1.242.877-2.04.877c-.876 0-1.545-.29-2.005-.87L11 14.433V17.5c0 .876-.313 1.69-.611 2.175C9.846 20.558 9.039 21 8 21c-.944 0-1.753-.327-2.271-.974c-.486-.6-.729-1.392-.729-2.38V6.275c0-.934.247-1.706.74-2.313C6.252 3.321 7.087 3 8 3c.868 0 1.821.321 2.4.962c.323.356.515.714.6 1.08c.052.224 0 .643 0 1.26V9z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Qx=[Xx],nf=(0,c.aZ)({name:"BrandKickstarter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Jx,Qx)}}),sf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ef=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 20H4V4h16"></path><path d="M4 20L20 4"></path><path d="M4 12l8-8"></path><path d="M12 12l8 8"></path></g>',1),af=[ef],tf=(0,c.aZ)({name:"BrandKotlin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sf,af)}}),rf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},of=(0,c._)("path",{d:"M20 8c-.83-1-1.388-1-2-1c-.612 0-2 .271-2 2s1.384 2.233 3 3c1.616.767 2.125 1.812 2 3s-1 2-3 2s-3-1-3.5-2s-1.585-4.78-2.497-5.997A5 5 0 1 0 11 16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),pf=[of],lf=(0,c.aZ)({name:"BrandLastfm",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",rf,pf)}}),cf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M8 11v5"></path><path d="M8 8v.01"></path><path d="M12 16v-5"></path><path d="M16 16v-3a2 2 0 0 0-4 0"></path></g>',1),df=[uf],hf=(0,c.aZ)({name:"BrandLinkedin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cf,df)}}),gf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.464 6.518a6.001 6.001 0 1 0-3.023 7.965"></path><path d="M17.482 17.464a6.001 6.001 0 1 0-7.965-3.023"></path><path d="M6.54 17.482a6.001 6.001 0 1 0 3.024-7.965"></path><path d="M6.518 6.54a6.001 6.001 0 1 0 7.965 3.024"></path></g>',1),kf=[mf],bf=(0,c.aZ)({name:"BrandLoom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gf,kf)}}),vf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wf=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"14",cy:"12",r:"3"}),(0,c._)("path",{d:"M12 9.765a3 3 0 1 0 0 4.47"}),(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2"})],-1),xf=[wf],ff=(0,c.aZ)({name:"BrandMastercard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vf,xf)}}),yf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M8 9h1l3 3l3-3h1"></path><path d="M8 15h2"></path><path d="M14 15h2"></path><path d="M9 9v6"></path><path d="M15 9v6"></path></g>',1),_f=[Mf],Cf=(0,c.aZ)({name:"BrandMedium",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yf,_f)}}),Sf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ef=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 20l1.3-3.9A9 8 0 1 1 7.7 19L3 20"}),(0,c._)("path",{d:"M8 13l3-2l2 2l3-2"})],-1),Pf=[Ef],jf=(0,c.aZ)({name:"BrandMessenger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sf,Pf)}}),Af={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Df=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 10.174C13.766 7.39 15.315 6 16.648 6c2 0 3.263 2.213 4 5.217c.704 2.869.5 6.783-2 6.783c-1.114 0-2.648-1.565-4.148-3.652a27.627 27.627 0 0 1-2.5-4.174z"}),(0,c._)("path",{d:"M12 10.174C10.234 7.39 8.685 6 7.352 6c-2 0-3.263 2.213-4 5.217c-.704 2.869-.5 6.783 2 6.783C6.466 18 8 16.435 9.5 14.348c1-1.391 1.833-2.783 2.5-4.174z"})],-1),Rf=[Df],Ff=(0,c.aZ)({name:"BrandMeta",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Af,Rf)}}),Bf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 6.873a2 2 0 0 1 1 1.747v6.536a2 2 0 0 1-1.029 1.748l-6 3.833a2 2 0 0 1-1.942 0l-6-3.833A2 2 0 0 1 4 15.157V8.62a2 2 0 0 1 1.029-1.748l6-3.572a2.056 2.056 0 0 1 2 0l6 3.573H19z"></path><path d="M15.5 9.43a1 1 0 0 1 .5.874v3.268a1 1 0 0 1-.515.874l-3 1.917a1 1 0 0 1-.97 0l-3-1.917A1 1 0 0 1 8 13.573v-3.269a1 1 0 0 1 .514-.874l3-1.786c.311-.173.69-.173 1 0l3 1.787H15.5z"></path><path d="M12 21v-9L4.5 7.5"></path><path d="M12 12l7.5-4.5"></path><path d="M12 3v4.5"></path><path d="M19.5 16L16 14"></path><path d="M8 14l-3.5 2"></path></g>',1),Tf=[Lf],If=(0,c.aZ)({name:"BrandNetbeans",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bf,Tf)}}),Nf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Of=(0,c._)("path",{d:"M9 20V4l7 16V4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Vf=[Of],Zf=(0,c.aZ)({name:"BrandNetflix",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nf,Vf)}}),Hf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M7 7h3l6 6"></path><path d="M8 7v10"></path><path d="M7 17h2"></path><path d="M15 7h2"></path><path d="M16 7v10h-1l-7-7"></path></g>',1),zf=[Uf],qf=(0,c.aZ)({name:"BrandNotion",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hf,zf)}}),$f={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kf=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11.036 5.058a8.001 8.001 0 1 0 8.706 9.965"></path><path d="M12 21V10l-7.5 4"></path><path d="M17.5 3a2.5 2.5 0 1 1 0 5l-11-5a2.5 2.5 0 0 0-.67 4.91"></path><path d="M9 12v8"></path><path d="M16 13h-.01"></path></g>',1),Yf=[Kf],Wf=(0,c.aZ)({name:"BrandNytimes",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$f,Yf)}}),Gf={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jf=(0,c._)("path",{d:"M12 3a9 9 0 0 1 3.618 17.243l-2.193-5.602a3 3 0 1 0-2.849 0l-2.193 5.603A9 9 0 0 1 12 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Xf=[Jf],Qf=(0,c.aZ)({name:"BrandOpenSource",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gf,Xf)}}),ny={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("ellipse",{cx:"12",cy:"12",rx:"3",ry:"5"})],-1),ey=[sy],ay=(0,c.aZ)({name:"BrandOpera",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ny,ey)}}),ty={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ry=(0,c._)("path",{d:"M12.077 20H7V4h11v14h-5.077",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),oy=[ry],py=(0,c.aZ)({name:"BrandPagekit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ty,oy)}}),ly={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3h3v18H3z"}),(0,c._)("circle",{cx:"15",cy:"9.5",r:"6.5"})],-1),cy=[iy],uy=(0,c.aZ)({name:"BrandPatreon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ly,cy)}}),dy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hy=(0,c._)("path",{d:"M10 13h2.5c2.5 0 5-2.5 5-5c0-3-1.9-5-5-5H7c-.5 0-1 .5-1 1L4 18c0 .5.5 1 1 1h2.8L9 14c.1-.6.4-1 1-1zm7.5-5.8C19.2 8.2 20 10 20 12c0 2.5-2.5 4.5-5 4.5h-2.6l-.6 3.6a1 1 0 0 1-1 .8H8.1a.5.5 0 0 1-.5-.6l.2-1.4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),gy=[hy],my=(0,c.aZ)({name:"BrandPaypal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dy,gy)}}),ky={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},by=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="12" cy="12" rx="10" ry="9"></ellipse><path d="M5.5 15l.395-1.974L6.5 10h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1-.986.836H6"></path><path d="M15.5 15l.395-1.974L16.5 10h1.32a1 1 0 0 1 .986 1.164l-.167 1a1 1 0 0 1-.986.836H16"></path><path d="M12 7.5L11 13"></path><path d="M11.6 10H14l-.5 3"></path></g>',1),vy=[by],wy=(0,c.aZ)({name:"BrandPhp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ky,vy)}}),xy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 20l4-9"}),(0,c._)("path",{d:"M10.7 14c.437 1.263 1.43 2 2.55 2c2.071 0 3.75-1.554 3.75-4a5 5 0 1 0-9.7 1.7"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),yy=[fy],My=(0,c.aZ)({name:"BrandPinterest",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xy,yy)}}),_y={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h14a2 2 0 0 1 2 2v6a9 9 0 0 1-18 0V6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M8 11l4 4l4-4"})],-1),Sy=[Cy],Ey=(0,c.aZ)({name:"BrandPocket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_y,Sy)}}),Py={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 16V8h2.5a2.5 2.5 0 1 1 0 5H10"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),Ay=[jy],Dy=(0,c.aZ)({name:"BrandProducthunt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Py,Ay)}}),Ry={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fy=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 9H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h3"></path><path d="M12 15h7a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3"></path><path d="M8 9V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4"></path><path d="M11 6v.01"></path><path d="M13 18v.01"></path></g>',1),By=[Fy],Ly=(0,c.aZ)({name:"BrandPython",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ry,By)}}),Ty={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Iy=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.357 9C3.72 9.68 2 10.845 2 12.175C2 14.282 6.405 16 11.85 16c.74 0 1.26-.039 1.95-.097"></path><path d="M9.837 15.9c-.413-.596-.806-1.133-1.18-1.8c-2.751-4.9-3.488-9.77-1.63-10.873c1.15-.697 3.047.253 4.974 2.254"></path><path d="M6.429 15.387c-.702 2.688-.56 4.716.56 5.395c1.783 1.08 5.387-1.958 8.043-6.804c.36-.67.683-1.329.968-1.978"></path><path d="M12 18.52c1.928 2 3.817 2.95 4.978 2.253c1.85-1.102 1.121-5.972-1.633-10.873c-.384-.677-.777-1.204-1.18-1.8"></path><path d="M17.66 15c2.612-.687 4.34-1.85 4.34-3.176C22 9.714 17.592 8 12.155 8c-.747 0-1.266.029-1.955.087"></path><path d="M8 12c.285-.66.607-1.308.968-1.978c2.647-4.844 6.253-7.89 8.046-6.801c1.11.679 1.262 2.706.56 5.393"></path><path d="M12.26 12.015h-.01c-.01.13-.12.24-.26.24a.263.263 0 0 1-.25-.26c0-.14.11-.25.24-.25h-.01c.13-.01.25.11.25.24"></path></g>',1),Ny=[Iy],Oy=(0,c.aZ)({name:"BrandReactNative",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ty,Ny)}}),Vy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zy=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 8c2.648 0 5.028.826 6.675 2.14a2.5 2.5 0 0 1 2.326 4.36c0 3.59-4.03 6.5-9 6.5c-4.875 0-8.845-2.8-9-6.294l-1-.206a2.5 2.5 0 0 1 2.326-4.36C5.973 8.827 8.353 8 11.001 8z"></path><path d="M12 8l1-5l6 1"></path><circle cx="19" cy="4" r="1"></circle><circle cx="9" cy="13" r=".5" fill="currentColor"></circle><circle cx="15" cy="13" r=".5" fill="currentColor"></circle><path d="M10 17c.667.333 1.333.5 2 .5s1.333-.167 2-.5"></path></g>',1),Hy=[Zy],Uy=(0,c.aZ)({name:"BrandReddit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vy,Hy)}}),zy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 16l2-6l6-2l-2 6l-6 2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),$y=[qy],Ky=(0,c.aZ)({name:"BrandSafari",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zy,$y)}}),Yy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wy=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 10.523c2.46-.826 4.002-.826 4.002-2.155c0-1.366-1.347-1.366-2.735-1.366c-1.91 0-3.352.49-4.537 1.748c-.848.902-1.027 2.449-.153 3.307c.973.956 3.206 1.789 2.884 3.493c-.233 1.235-1.469 1.823-2.617 1.202c-.782-.424-.454-1.746.626-2.512s2.822-.992 4.1-.24c.98.575 1.046 1.724.434 2.193"})],-1),Gy=[Wy],Jy=(0,c.aZ)({name:"BrandSass",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yy,Gy)}}),Xy={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qy=(0,c._)("path",{d:"M3 18a1.93 1.93 0 0 0 .306 1.076A2 2 0 0 0 4.89 20c.646.033-.537 0 .11 0h3a4.992 4.992 0 0 0-3.66-4.81c.558-.973 1.24-2.149 2.04-3.531A8.997 8.997 0 0 1 12 20h4c.663 0 2.337.005 3 0a2 2 0 0 0 1.84-2.75L13.74 5a2 2 0 0 0-3.5 0L8.4 8.176C12.882 10.226 16 14.747 16 20",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nM=[Qy],sM=(0,c.aZ)({name:"BrandSentry",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xy,nM)}}),eM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aM=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 12l2-2a2.828 2.828 0 0 1 4 0a2.828 2.828 0 0 1 0 4l-3 3"}),(0,c._)("path",{d:"M14 12l-2 2a2.828 2.828 0 1 1-4-4l3-3"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),tM=[aM],rM=(0,c.aZ)({name:"BrandShazam",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eM,tM)}}),oM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pM=(0,c._)("path",{d:"M3.262 10.878l8 8.789c.4.44 1.091.44 1.491 0l8-8.79c.313-.344.349-.859.087-1.243L17.303 4.44a1 1 0 0 0-.823-.436H7.554a1 1 0 0 0-.823.436l-3.54 5.192c-.263.385-.227.901.087 1.246z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),lM=[pM],iM=(0,c.aZ)({name:"BrandSketch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oM,lM)}}),cM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uM=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3a9 9 0 0 1 8.603 11.65a4.5 4.5 0 0 1-5.953 5.953A9 9 0 0 1 3.397 9.35A4.5 4.5 0 0 1 9.35 3.396A8.987 8.987 0 0 1 12 3z"}),(0,c._)("path",{d:"M8 14.5c.5 2 2.358 2.5 4 2.5c2.905 0 4-1.187 4-2.5c0-1.503-1.927-2.5-4-2.5s-4-.997-4-2.5C8 8.187 9.095 7 12 7c1.642 0 3.5.5 4 2.5"})],-1),dM=[uM],hM=(0,c.aZ)({name:"BrandSkype",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cM,dM)}}),gM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mM=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12V6a2 2 0 0 1 4 0v6m0-2a2 2 0 1 1 2 2h-6"></path><path d="M12 12h6a2 2 0 0 1 0 4h-6m2 0a2 2 0 1 1-2 2v-6"></path><path d="M12 12v6a2 2 0 0 1-4 0v-6m0 2a2 2 0 1 1-2-2h6"></path><path d="M12 12H6a2 2 0 0 1 0-4h6m-2 0a2 2 0 1 1 2-2v6"></path></g>',1),kM=[mM],bM=(0,c.aZ)({name:"BrandSlack",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gM,kM)}}),vM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wM=(0,c._)("path",{d:"M16.882 7.842a4.882 4.882 0 0 0-9.764 0c0 4.273-.213 6.409-4.118 8.118c2 .882 2 .882 3 3c3 0 4 2 6 2s3-2 6-2c1-2.118 1-2.118 3-3c-3.906-1.709-4.118-3.845-4.118-8.118zM3 15.961c4-2.118 4-4.118 1-7.118m17 7.118c-4-2.118-4-4.118-1-7.118",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xM=[wM],fM=(0,c.aZ)({name:"BrandSnapchat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vM,xM)}}),yM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MM=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 11h1c1.38 0 3 1.274 3 3c0 1.657-1.5 3-3 3h-6V7c3 0 4.5 1.5 5 4z"></path><path d="M9 8v9"></path><path d="M6 17v-7"></path><path d="M3 16v-2"></path></g>',1),_M=[MM],CM=(0,c.aZ)({name:"BrandSoundcloud",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yM,_M)}}),SM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EM=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M8 11.973c2.5-1.473 5.5-.973 7.5.527"></path><path d="M9 15c1.5-1 4-1 5 .5"></path><path d="M7 9c2-1 6-2 10 .5"></path></g>',1),PM=[EM],jM=(0,c.aZ)({name:"BrandSpotify",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SM,PM)}}),AM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DM=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 17v1a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-1"></path><path d="M8 16h8"></path><path d="M8.322 12.582l7.956.836"></path><path d="M8.787 9.168l7.826 1.664"></path><path d="M10.096 5.764l7.608 2.472"></path></g>',1),RM=[DM],FM=(0,c.aZ)({name:"BrandStackoverflow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AM,RM)}}),BM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LM=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16.5 5a4.5 4.5 0 1 1-.653 8.953L11.5 16.962V17a3 3 0 0 1-2.824 2.995L8.5 20a3 3 0 0 1-2.94-2.402L3 16.5V13l3.51 1.755a2.989 2.989 0 0 1 2.834-.635l2.727-3.818A4.5 4.5 0 0 1 16.5 5z"}),(0,c._)("circle",{fill:"currentColor",cx:"16.5",cy:"9.5",r:"1"})],-1),TM=[LM],IM=(0,c.aZ)({name:"BrandSteam",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BM,TM)}}),NM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OM=(0,c._)("path",{d:"M11.453 8.056c0-.623.518-.979 1.442-.979c1.69 0 3.41.343 4.605.923l.5-4c-.948-.449-2.82-1-5.5-1c-1.895 0-3.373.087-4.5 1c-1.172.956-2 2.33-2 4c0 3.03 1.958 4.906 5 6c1.961.69 3 .743 3 1.5c0 .735-.851 1.5-2 1.5c-1.423 0-3.963-.609-5.5-1.5l-.5 4c1.321.734 3.474 1.5 6 1.5c2.004 0 3.957-.468 5.084-1.36C18.347 18.661 19 17.372 19 15.5c0-3.096-1.915-4.547-5.003-5.637c-1.646-.605-2.544-1.07-2.544-1.807z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),VM=[OM],ZM=(0,c.aZ)({name:"BrandStripe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NM,VM)}}),HM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UM=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 8L5 12.5V7l14-4.5z"></path><path d="M19 17L5 21.5V16l14-4.5z"></path><path d="M19 11.5L5 7"></path><path d="M5 12.5L19 17"></path></g>',1),zM=[UM],qM=(0,c.aZ)({name:"BrandSublimeText",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HM,zM)}}),$M={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KM=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 9l3 3l-3 3"}),(0,c._)("path",{d:"M13 15h3"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"4"})],-1),YM=[KM],WM=(0,c.aZ)({name:"BrandTabler",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$M,YM)}}),GM={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JM=(0,c._)("path",{d:"M11.667 6C9.177 6 7.623 7.222 7 9.667c.933-1.223 2.023-1.68 3.267-1.375c.71.174 1.217.68 1.778 1.24c.916.912 2 1.968 4.288 1.968c2.49 0 4.044-1.222 4.667-3.667c-.933 1.223-2.023 1.68-3.267 1.375c-.71-.174-1.217-.68-1.778-1.24C15.039 7.056 13.98 6 11.667 6zm-4 6.5c-2.49 0-4.044 1.222-4.667 3.667c.933-1.223 2.023-1.68 3.267-1.375c.71.174 1.217.68 1.778 1.24c.916.912 1.975 1.968 4.288 1.968c2.49 0 4.044-1.222 4.667-3.667c-.933 1.223-2.023 1.68-3.267 1.375c-.71-.174-1.217-.68-1.778-1.24c-.916-.912-1.975-1.968-4.288-1.968z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),XM=[JM],QM=(0,c.aZ)({name:"BrandTailwind",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GM,XM)}}),n_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s_=(0,c._)("path",{d:"M15 10l-4 4l6 6l4-16l-18 7l4 2l2 6l3-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),e_=[s_],a_=(0,c.aZ)({name:"BrandTelegram",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n_,e_)}}),t_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r_=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 7L9.5 9.5L12 12l2.5-2.5z"></path><path d="M12 14l-2.5 2.5L12 19l2.5-2.5z"></path><path d="M19 7l-2.5 2.5L19 12l2.5-2.5z"></path><path d="M5 7L2.5 9.5L5 12l2.5-2.5z"></path></g>',1),o_=[r_],p_=(0,c.aZ)({name:"BrandTidal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t_,o_)}}),l_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i_=(0,c._)("path",{d:"M9 12a4 4 0 1 0 4 4V4a5 5 0 0 0 5 5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),c_=[i_],u_=(0,c.aZ)({name:"BrandTiktok",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l_,c_)}}),d_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h_=(0,c._)("path",{d:"M18.918 8.174c2.56 4.982.501 11.656-5.38 12.626C5.836 22.487.698 13.084 6.484 7.571C6.793 7.266 7.645 6.476 8 6.222c0 .528.27 3.475 1 3.167c3 0 4-4.222 3.587-7.389c2.7 1.411 4.987 3.376 6.331 6.174z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),g_=[h_],m_=(0,c.aZ)({name:"BrandTinder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d_,g_)}}),k_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b_=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6.5" cy="13.5" r="1.5"></circle><circle cx="17.5" cy="13.5" r="1.5"></circle><path d="M17.5 9a4.5 4.5 0 1 0 3.5 1.671L22 9h-4.5z"></path><path d="M6.5 9A4.5 4.5 0 1 1 3 10.671L2 9h4.5z"></path><path d="M10.5 15.5l1.5 2l1.5-2"></path><path d="M9 6.75c2-.667 4-.667 6 0"></path></g>',1),v_=[b_],w_=(0,c.aZ)({name:"BrandTripadvisor",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k_,v_)}}),x_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f_=(0,c._)("path",{d:"M14 21h4v-4h-4v-6h4V7h-4V3h-4v1a3 3 0 0 1-3 3H6v4h4v6a4 4 0 0 0 4 4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),y_=[f_],M_=(0,c.aZ)({name:"BrandTumblr",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x_,y_)}}),__={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C_=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 5v11a1 1 0 0 0 1 1h2v4l4-4h5.584c.266 0 .52-.105.707-.293l2.415-2.414c.187-.188.293-.442.293-.708V5a1 1 0 0 0-1-1h-14a1 1 0 0 0-1 1z"}),(0,c._)("path",{d:"M16 8v4"}),(0,c._)("path",{d:"M12 8v4"})],-1),S_=[C_],E_=(0,c.aZ)({name:"BrandTwitch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",__,S_)}}),P_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j_=(0,c._)("path",{d:"M22 4.01c-1 .49-1.98.689-3 .99c-1.121-1.265-2.783-1.335-4.38-.737S11.977 6.323 12 8v1c-3.245.083-6.135-1.395-8-4c0 0-4.182 7.433 4 11c-1.872 1.247-3.739 2.088-6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58-1.04 6.522-3.723 7.651-7.742a13.84 13.84 0 0 0 .497-3.753C20.18 7.773 21.692 5.25 22 4.009z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),A_=[j_],D_=(0,c.aZ)({name:"BrandTwitter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P_,A_)}}),R_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F_=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("rect",{x:"9",y:"9",width:"6",height:"6",rx:"1"}),(0,c._)("path",{d:"M3 12h6"})],-1),B_=[F_],L_=(0,c.aZ)({name:"BrandUber",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R_,B_)}}),T_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I_=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="5" r="2"></circle><path d="M17.723 7.41a7.992 7.992 0 0 0-3.74-2.162m-3.971 0a7.993 7.993 0 0 0-3.789 2.216m-1.881 3.215A8 8 0 0 0 4 12.999c0 .738.1 1.453.287 2.132m1.96 3.428a7.993 7.993 0 0 0 3.759 2.19m3.998-.003a7.993 7.993 0 0 0 3.747-2.186m1.962-3.43A8.008 8.008 0 0 0 20 12.999c0-.764-.107-1.503-.307-2.203"></path><circle cx="5" cy="17" r="2"></circle><circle cx="19" cy="17" r="2"></circle></g>',1),N_=[I_],O_=(0,c.aZ)({name:"BrandUbuntu",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T_,N_)}}),V_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z_=(0,c._)("path",{d:"M4 11h5v4h6v-4h5v9H4zm5-7h6v4H9z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),H_=[Z_],U_=(0,c.aZ)({name:"BrandUnsplash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V_,H_)}}),z_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q_=(0,c._)("path",{d:"M3 19h18L12 4z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$_=[q_],K_=(0,c.aZ)({name:"BrandVercel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z_,$_)}}),Y_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W_=(0,c._)("path",{d:"M3 8.5l1 1S5.5 8.398 6 9c.509.609 1.863 7.65 2.5 9c.556 1.184 1.978 2.89 4 1.5C14.5 18 20 14 21 8c.444-2.661-1-4-2.5-4c-2 0-4.047 1.202-4.5 4c2.05-1.254 2.551 1.003 1.5 3c-1.052 2.005-2 3-2.5 3c-.49 0-.924-1.165-1.5-3.5c-.59-2.42-.5-6.5-3-6.5S3 8.5 3 8.5z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),G_=[W_],J_=(0,c.aZ)({name:"BrandVimeo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y_,G_)}}),X_={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q_=(0,c._)("path",{d:"M4 8l2-1l10 13l4-2V6l-4-2L6 17l-2-1z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nC=[Q_],sC=(0,c.aZ)({name:"BrandVisualStudio",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X_,nC)}}),eC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 6h2v12c-4.5-1-8-6.5-9-12"}),(0,c._)("path",{d:"M20 6c-1 2-3 5-5 6h-3"}),(0,c._)("path",{d:"M20 18c-1-2-3-5-5-6"})],-1),tC=[aC],rC=(0,c.aZ)({name:"BrandVk",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eC,tC)}}),oC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 21l1.65-3.8a9 9 0 1 1 3.4 2.9L3 21"}),(0,c._)("path",{d:"M9 10a.5.5 0 0 0 1 0V9a.5.5 0 0 0-1 0v1a5 5 0 0 0 5 5h1a.5.5 0 0 0 0-1h-1a.5.5 0 0 0 0 1"})],-1),lC=[pC],iC=(0,c.aZ)({name:"BrandWhatsapp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oC,lC)}}),cC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17.8 20l-12-1.5c-1-.1-1.8-.9-1.8-1.9V7.4c0-1 .8-1.8 1.8-1.9l12-1.5c1.2-.1 2.2.8 2.2 1.9V18c0 1.2-1.1 2.1-2.2 1.9z"}),(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M4 12h16"})],-1),dC=[uC],hC=(0,c.aZ)({name:"BrandWindows",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cC,dC)}}),gC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mC=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 6h5"></path><path d="M7 18h7"></path><path d="M4.5 6l5.5 7v5"></path><path d="M10 13l6-5"></path><path d="M12.5 8h5"></path><path d="M20 11v4"></path><path d="M20 18v.01"></path></g>',1),kC=[mC],bC=(0,c.aZ)({name:"BrandYahoo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gC,kC)}}),vC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M8 7.002L12 13l4-6"}),(0,c._)("path",{d:"M12 17v-4"})],-1),xC=[wC],fC=(0,c.aZ)({name:"BrandYcombinator",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vC,xC)}}),yC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"4"}),(0,c._)("path",{d:"M10 9l5 3l-5 3z"})],-1),_C=[MC],CC=(0,c.aZ)({name:"BrandYoutube",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yC,_C)}}),SC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EC=(0,c._)("path",{d:"M17 5a3 3 0 0 1 2 5.235V17a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-6.764a3 3 0 0 1 1.824-5.231L7 5h10z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),PC=[EC],jC=(0,c.aZ)({name:"Bread",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SC,PC)}}),AC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DC=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="7" width="18" height="13" rx="2"></rect><path d="M8 7V5a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><path d="M12 12v.01"></path><path d="M3 13a20 20 0 0 0 18 0"></path></g>',1),RC=[DC],FC=(0,c.aZ)({name:"Briefcase",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AC,RC)}}),BC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LC=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 3v18"></path><path d="M12 9l4.65-4.65"></path><path d="M12 14.3l7.37-7.37"></path><path d="M12 19.6l8.85-8.85"></path></g>',1),TC=[LC],IC=(0,c.aZ)({name:"Brightness",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BC,TC)}}),NC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("path",{d:"M6 6h3.5L12 3.5L14.5 6H18v3.5l2.5 2.5l-2.5 2.5V18h-3.5L12 20.5L9.5 18H6v-3.5L3.5 12L6 9.5z"})],-1),VC=[OC],ZC=(0,c.aZ)({name:"Brightness2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NC,VC)}}),HC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UC=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><path d="M12 5v.01"></path><path d="M17 7v.01"></path><path d="M19 12v.01"></path><path d="M17 17v.01"></path><path d="M12 19v.01"></path><path d="M7 17v.01"></path><path d="M5 12v.01"></path><path d="M7 7v.01"></path></g>',1),zC=[UC],qC=(0,c.aZ)({name:"BrightnessDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HC,zC)}}),$C={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KC=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 9a3 3 0 0 0 0 6V9z"}),(0,c._)("path",{d:"M6 6h3.5L12 3.5L14.5 6H18v3.5l2.5 2.5l-2.5 2.5V18h-3.5L12 20.5L9.5 18H6v-3.5L3.5 12L6 9.5z"})],-1),YC=[KC],WC=(0,c.aZ)({name:"BrightnessHalf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$C,YC)}}),GC={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JC=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><path d="M12 5V3"></path><path d="M17 7l1.4-1.4"></path><path d="M19 12h2"></path><path d="M17 17l1.4 1.4"></path><path d="M12 19v2"></path><path d="M7 17l-1.4 1.4"></path><path d="M6 12H4"></path><path d="M7 7L5.6 5.6"></path></g>',1),XC=[JC],QC=(0,c.aZ)({name:"BrightnessUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GC,XC)}}),nS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sS=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"1"}),(0,c._)("path",{d:"M4 8h16"}),(0,c._)("path",{d:"M8 4v4"})],-1),eS=[sS],aS=(0,c.aZ)({name:"Browser",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nS,eS)}}),tS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="1"></rect><path d="M4 8h16"></path><path d="M8 4v4"></path><path d="M9.5 14.5L11 16l3-3"></path></g>',1),oS=[rS],pS=(0,c.aZ)({name:"BrowserCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tS,oS)}}),lS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="1"></rect><path d="M4 8h16"></path><path d="M8 4v4"></path><path d="M10 14h4"></path><path d="M12 12v4"></path></g>',1),cS=[iS],uS=(0,c.aZ)({name:"BrowserPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lS,cS)}}),dS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="1"></rect><path d="M4 8h16"></path><path d="M8 4v4"></path><path d="M10 16l4-4"></path><path d="M14 16l-4-4"></path></g>',1),gS=[hS],mS=(0,c.aZ)({name:"BrowserX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dS,gS)}}),kS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21v-4a4 4 0 1 1 4 4H3"></path><path d="M21 3A16 16 0 0 0 8.2 13.2"></path><path d="M21 3a16 16 0 0 1-10.2 12.8"></path><path d="M10.6 9a9 9 0 0 1 4.4 4.4"></path></g>',1),vS=[bS],wS=(0,c.aZ)({name:"Brush",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kS,vS)}}),xS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fS=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 9l-2 9a2 2.5 0 0 1-2 2H9a2 2.5 0 0 1-2-2L5 9z"}),(0,c._)("path",{d:"M7 9a5 5 0 0 1 10 0"})],-1),yS=[fS],MS=(0,c.aZ)({name:"Bucket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xS,yS)}}),_S={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 9V8a3 3 0 0 1 6 0v1"></path><path d="M8 9h8a6 6 0 0 1 1 3v3a5 5 0 0 1-10 0v-3a6 6 0 0 1 1-3"></path><path d="M3 13h4"></path><path d="M17 13h4"></path><path d="M12 20v-6"></path><path d="M4 19l3.35-2"></path><path d="M20 19l-3.35-2"></path><path d="M4 7l3.75 2.4"></path><path d="M20 7l-3.75 2.4"></path></g>',1),SS=[CS],ES=(0,c.aZ)({name:"Bug",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_S,SS)}}),PS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M9 8h1"></path><path d="M9 12h1"></path><path d="M9 16h1"></path><path d="M14 8h1"></path><path d="M14 12h1"></path><path d="M14 16h1"></path><path d="M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16"></path></g>',1),AS=[jS],DS=(0,c.aZ)({name:"Building",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PS,AS)}}),RS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FS=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 21h18"}),(0,c._)("path",{d:"M4 21V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v15"}),(0,c._)("path",{d:"M9 21v-8a3 3 0 0 1 6 0v8"})],-1),BS=[FS],LS=(0,c.aZ)({name:"BuildingArch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RS,BS)}}),TS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M3 10h18"></path><path d="M5 6l7-3l7 3"></path><path d="M4 10v11"></path><path d="M20 10v11"></path><path d="M8 14v3"></path><path d="M12 14v3"></path><path d="M16 14v3"></path></g>',1),NS=[IS],OS=(0,c.aZ)({name:"BuildingBank",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TS,NS)}}),VS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 5v14"></path><path d="M18 5v14"></path><path d="M2 15h20"></path><path d="M3 8a7.5 7.5 0 0 0 3-2a6.5 6.5 0 0 0 12 0a7.5 7.5 0 0 0 3 2"></path><path d="M12 10v5"></path></g>',1),HS=[ZS],US=(0,c.aZ)({name:"BuildingBridge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VS,HS)}}),zS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qS=(0,c._)("path",{d:"M6 7h12a2 2 0 0 1 2 2v9a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a4 4 0 0 0-8 0v2a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a2 2 0 0 1 2-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$S=[qS],KS=(0,c.aZ)({name:"BuildingBridge2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zS,$S)}}),YS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WS=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="6"></circle><circle cx="5" cy="8" r="2"></circle><circle cx="12" cy="4" r="2"></circle><circle cx="19" cy="8" r="2"></circle><circle cx="5" cy="16" r="2"></circle><circle cx="19" cy="16" r="2"></circle><path d="M8 22l4-10l4 10"></path></g>',1),GS=[WS],JS=(0,c.aZ)({name:"BuildingCarousel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YS,GS)}}),XS={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QS=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 19v-2a3 3 0 0 0-6 0v2a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5h4v3h3V5h4v3h3V5h4v14a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1z"}),(0,c._)("path",{d:"M3 11h18"})],-1),nE=[QS],sE=(0,c.aZ)({name:"BuildingCastle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XS,nE)}}),eE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M10 21v-4a2 2 0 0 1 4 0v4"></path><path d="M10 5h4"></path><path d="M12 3v5"></path><path d="M6 21v-7m-2 2l8-8l8 8m-2-2v7"></path></g>',1),tE=[aE],rE=(0,c.aZ)({name:"BuildingChurch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eE,tE)}}),oE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 9l5 5v7H8v-4m0 4H3v-7l5-5m1 1V4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v17h-8"></path><path d="M13 7v.01"></path><path d="M17 7v.01"></path><path d="M17 11v.01"></path><path d="M17 15v.01"></path></g>',1),lE=[pE],iE=(0,c.aZ)({name:"BuildingCommunity",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oE,lE)}}),cE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M4 21V10l2.5-4.5L12 3l5.5 2.5L20 10v11"></path><circle cx="12" cy="9" r="2"></circle><path d="M9 21v-5a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v5"></path></g>',1),dE=[uE],hE=(0,c.aZ)({name:"BuildingCottage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cE,dE)}}),gE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 21c1.147-4.02 1.983-8.027 2-12h6c.017 3.973.853 7.98 2 12"></path><path d="M12.5 13H17c.025 2.612.894 5.296 2 8"></path><path d="M9 5a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1"></path><path d="M3 21h19"></path></g>',1),kE=[mE],bE=(0,c.aZ)({name:"BuildingFactory",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gE,kE)}}),vE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 21h1a1 1 0 0 0 1-1v-1h0a3 3 0 0 1 6 0m3 2h1a1 1 0 0 0 1-1V5l-3-2l-3 2v6h-4V5L7 3L4 5v15a1 1 0 0 0 1 1h2m8-2v1a1 1 0 0 0 1 1h2"></path><path d="M7 7h0v.01"></path><path d="M7 10h0v.01"></path><path d="M7 13h0v.01"></path><path d="M17 7h0v.01"></path><path d="M17 10h0v.01"></path><path d="M17 13h0v.01"></path></g>',1),xE=[wE],fE=(0,c.aZ)({name:"BuildingFortress",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vE,xE)}}),yE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ME=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16"></path><path d="M9 21v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4"></path><path d="M10 9h4"></path><path d="M12 7v4"></path></g>',1),_E=[ME],CE=(0,c.aZ)({name:"BuildingHospital",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yE,_E)}}),SE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3l2 3l2 15H8l2-15z"></path><path d="M8 9h8"></path><path d="M3 11l2-2l-2-2"></path><path d="M21 11l-2-2l2-2"></path></g>',1),PE=[EE],jE=(0,c.aZ)({name:"BuildingLighthouse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SE,PE)}}),AE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DE=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 18l2-13l2-2l2 2l2 13"}),(0,c._)("path",{d:"M5 21v-3h14v3"}),(0,c._)("path",{d:"M3 21h18"})],-1),RE=[DE],FE=(0,c.aZ)({name:"BuildingMonument",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AE,RE)}}),BE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h7v-3a2 2 0 0 1 4 0v3h7"></path><path d="M6 21v-9"></path><path d="M18 21v-9"></path><path d="M6 12h12a3 3 0 0 0 3-3a9 8 0 0 1-9-6a9 8 0 0 1-9 6a3 3 0 0 0 3 3"></path></g>',1),TE=[LE],IE=(0,c.aZ)({name:"BuildingPavilon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BE,TE)}}),NE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M5 21V7l8-4v18"></path><path d="M19 21V11l-6-4"></path><path d="M9 9v.01"></path><path d="M9 12v.01"></path><path d="M9 15v.01"></path><path d="M9 18v.01"></path></g>',1),VE=[OE],ZE=(0,c.aZ)({name:"BuildingSkyscraper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NE,VE)}}),HE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UE=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h18"></path><path d="M3 7v1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7m0 1a3 3 0 0 0 6 0V7H3l2-4h14l2 4"></path><path d="M5 21V10.85"></path><path d="M19 21V10.85"></path><path d="M9 21v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4"></path></g>',1),zE=[UE],qE=(0,c.aZ)({name:"BuildingStore",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HE,zE)}}),$E={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KE=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 21V8l9-4l9 4v13"}),(0,c._)("path",{d:"M13 13h4v8H7v-6h6"}),(0,c._)("path",{d:"M13 21v-9a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v3"})],-1),YE=[KE],WE=(0,c.aZ)({name:"BuildingWarehouse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$E,YE)}}),GE={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JE=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 12h1m8-9v1m8 8h1M5.6 5.6l.7.7m12.1-.7l-.7.7"}),(0,c._)("path",{d:"M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0-1 3a2 2 0 0 1-4 0a3.5 3.5 0 0 0-1-3"}),(0,c._)("path",{d:"M9.7 17h4.6"})],-1),XE=[JE],QE=(0,c.aZ)({name:"Bulb",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GE,XE)}}),nP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sP=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0-1 3a2 2 0 0 1-4 0a3.5 3.5 0 0 0-1-3"}),(0,c._)("path",{d:"M9.7 17h4.6"})],-1),eP=[sP],aP=(0,c.aZ)({name:"BulbOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nP,eP)}}),tP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="4" cy="17" r="2"></circle><circle cx="13" cy="17" r="2"></circle><path d="M18 13v6h3"></path><path d="M13 19H4"></path><path d="M4 15h9"></path><path d="M8 12V7h2a3 3 0 0 1 3 3v5"></path><path d="M5 15v-2a1 1 0 0 1 1-1h7"></path><path d="M18 17h-3"></path></g>',1),oP=[rP],pP=(0,c.aZ)({name:"Bulldozer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tP,oP)}}),lP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="17" r="2"></circle><circle cx="18" cy="17" r="2"></circle><path d="M4 17H2V6a1 1 0 0 1 1-1h14a5 7 0 0 1 5 7v5h-2m-4 0H8"></path><path d="M16 5l1.5 7H22"></path><path d="M2 10h15"></path><path d="M7 5v5"></path><path d="M12 5v5"></path></g>',1),cP=[iP],uP=(0,c.aZ)({name:"Bus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lP,cP)}}),dP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="16" cy="6" rx="5" ry="3"></ellipse><path d="M11 6v4c0 1.657 2.239 3 5 3s5-1.343 5-3V6"></path><path d="M11 10v4c0 1.657 2.239 3 5 3s5-1.343 5-3v-4"></path><path d="M11 14v4c0 1.657 2.239 3 5 3s5-1.343 5-3v-4"></path><path d="M7 9H4.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H3"></path><path d="M5 15v1m0-8v1"></path></g>',1),gP=[hP],mP=(0,c.aZ)({name:"Businessplan",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dP,gP)}}),kP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bP=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11.995 18.176a3 3 0 1 1-4.953-2.449l-.025.023A4.502 4.502 0 0 1 8.5 7c1.414 0 2.675.652 3.5 1.671a4.5 4.5 0 1 1 4.983 7.079A3 3 0 1 1 12 18z"}),(0,c._)("path",{d:"M12 19V9"}),(0,c._)("path",{d:"M9 3l3 2l3-2"})],-1),vP=[bP],wP=(0,c.aZ)({name:"Butterfly",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kP,vP)}}),xP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 9a3 3 0 0 0-3-3h-.5A3.5 3.5 0 0 0 3 9.5v5A3.5 3.5 0 0 0 6.5 18H7a3 3 0 0 0 3-3"></path><path d="M16 7l-1 10"></path><path d="M20 7l-1 10"></path><path d="M14 10h7.5"></path><path d="M21 14h-7.5"></path></g>',1),yP=[fP],MP=(0,c.aZ)({name:"CSharp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xP,yP)}}),_P={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="3" width="16" height="18" rx="2"></rect><rect x="8" y="7" width="8" height="3" rx="1"></rect><path d="M8 14v.01"></path><path d="M12 14v.01"></path><path d="M16 14v.01"></path><path d="M8 17v.01"></path><path d="M12 17v.01"></path><path d="M16 17v.01"></path></g>',1),SP=[CP],EP=(0,c.aZ)({name:"Calculator",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_P,SP)}}),PP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="5" width="16" height="16" rx="2"></rect><path d="M16 3v4"></path><path d="M8 3v4"></path><path d="M4 11h16"></path><path d="M11 15h1"></path><path d="M12 15v3"></path></g>',1),AP=[jP],DP=(0,c.aZ)({name:"Calendar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PP,AP)}}),RP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="5" width="16" height="16" rx="2"></rect><path d="M16 3v4"></path><path d="M8 3v4"></path><path d="M4 11h16"></path><path d="M8 15h2v2H8z"></path></g>',1),BP=[FP],LP=(0,c.aZ)({name:"CalendarEvent",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RP,BP)}}),TP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="5" width="16" height="16" rx="2"></rect><path d="M16 3v4"></path><path d="M8 3v4"></path><path d="M4 11h16"></path><path d="M10 16h4"></path></g>',1),NP=[IP],OP=(0,c.aZ)({name:"CalendarMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TP,NP)}}),VP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19.823 19.824A2 2 0 0 1 18 21H6a2 2 0 0 1-2-2V7a2 2 0 0 1 1.175-1.823M9 5h9a2 2 0 0 1 2 2v9"></path><path d="M16 3v4"></path><path d="M8 3v1"></path><path d="M4 11h7m4 0h5"></path><path d="M11 15h1"></path><path d="M12 15v3"></path><path d="M3 3l18 18"></path></g>',1),HP=[ZP],UP=(0,c.aZ)({name:"CalendarOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VP,HP)}}),zP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="5" width="16" height="16" rx="2"></rect><path d="M16 3v4"></path><path d="M8 3v4"></path><path d="M4 11h16"></path><path d="M10 16h4"></path><path d="M12 14v4"></path></g>',1),$P=[qP],KP=(0,c.aZ)({name:"CalendarPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zP,$P)}}),YP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11.795 21H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"></path><path d="M18 14v4h4"></path><circle cx="18" cy="18" r="4"></circle><path d="M15 3v4"></path><path d="M7 3v4"></path><path d="M3 11h16"></path></g>',1),GP=[WP],JP=(0,c.aZ)({name:"CalendarStats",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YP,GP)}}),XP={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QP=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11.795 21H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"></path><circle cx="18" cy="18" r="4"></circle><path d="M15 3v4"></path><path d="M7 3v4"></path><path d="M3 11h16"></path><path d="M18 16.496V18l1 1"></path></g>',1),nj=[QP],sj=(0,c.aZ)({name:"CalendarTime",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XP,nj)}}),ej={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aj=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 7h1a2 2 0 0 0 2-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"}),(0,c._)("circle",{cx:"12",cy:"13",r:"3"})],-1),tj=[aj],rj=(0,c.aZ)({name:"Camera",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ej,tj)}}),oj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pj=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"13",r:"3"}),(0,c._)("path",{d:"M5 7h1a2 2 0 0 0 2-2a1 1 0 0 1 1-1h3m9 6v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 6h6"})],-1),lj=[pj],ij=(0,c.aZ)({name:"CameraMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oj,lj)}}),cj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uj=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8.29 4.296A1 1 0 0 1 9 4h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v8m-1.179 2.824c-.25.113-.528.176-.821.176H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1c.292 0 .568-.062.818-.175"}),(0,c._)("path",{d:"M10.436 10.44a3 3 0 1 0 4.126 4.122"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),dj=[uj],hj=(0,c.aZ)({name:"CameraOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cj,dj)}}),gj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="13" r="3"></circle><path d="M5 7h2a2 2 0 0 0 2-2a1 1 0 0 1 1-1h2m9 7v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M15 6h6"></path><path d="M18 3v6"></path></g>',1),kj=[mj],bj=(0,c.aZ)({name:"CameraPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gj,kj)}}),vj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 7h1a2 2 0 0 0 2-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M11.245 15.904A3 3 0 0 0 15 13m-2.25-2.905A3 3 0 0 0 9 13"></path><path d="M14 13h2v2"></path><path d="M10 13H8v-2"></path></g>',1),xj=[wj],fj=(0,c.aZ)({name:"CameraRotate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vj,xj)}}),yj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 7h1a2 2 0 0 0 2-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path><path d="M15 11h.01"></path><path d="M9 11h.01"></path></g>',1),_j=[Mj],Cj=(0,c.aZ)({name:"CameraSelfie",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yj,_j)}}),Sj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ej=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 21h6v-9a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v9z"}),(0,c._)("path",{d:"M12 3l1.465 1.638a2 2 0 1 1-3.015.099L12 3z"})],-1),Pj=[Ej],jj=(0,c.aZ)({name:"Candle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sj,Pj)}}),Aj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dj=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7.05 11.293l4.243-4.243a2 2 0 0 1 2.828 0l2.829 2.83a2 2 0 0 1 0 2.828l-4.243 4.243a2 2 0 0 1-2.828 0L7.05 14.12a2 2 0 0 1 0-2.828z"}),(0,c._)("path",{d:"M16.243 9.172l3.086-.772a1.5 1.5 0 0 0 .697-2.516L17.81 3.667a1.5 1.5 0 0 0-2.44.47L14.122 7.05"}),(0,c._)("path",{d:"M9.172 16.243L8.4 19.329a1.5 1.5 0 0 1-2.516.697L3.667 17.81a1.5 1.5 0 0 1 .47-2.44l2.913-1.248"})],-1),Rj=[Dj],Fj=(0,c.aZ)({name:"Candy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Aj,Rj)}}),Bj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><circle cx="12" cy="12" r="3"></circle></g>',1),Tj=[Lj],Ij=(0,c.aZ)({name:"Capture",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bj,Tj)}}),Nj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oj=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"17",r:"2"}),(0,c._)("circle",{cx:"17",cy:"17",r:"2"}),(0,c._)("path",{d:"M5 17H3v-6l2-5h9l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0H9m-6-6h15m-6 0V6"})],-1),Vj=[Oj],Zj=(0,c.aZ)({name:"Car",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nj,Vj)}}),Hj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M7 18h8m4 0h2v-6a5 5 0 0 0-5-5h-1l1.5 5H21"></path><path d="M12 18V7h3"></path><path d="M3 17v-5h9"></path><path d="M4 12V6l18-3v2"></path><path d="M8 12V8L4 6"></path></g>',1),zj=[Uj],qj=(0,c.aZ)({name:"CarCrane",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hj,zj)}}),$j={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="17" r="2"></circle><path d="M7 6l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0H3m0-6h8m-6 0V6m2 0H3"></path><path d="M14 8V6"></path><path d="M19 12h2"></path><path d="M17.5 15.5L19 17"></path><path d="M17.5 8.5L19 7"></path></g>',1),Yj=[Kj],Wj=(0,c.aZ)({name:"CarCrash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$j,Yj)}}),Gj={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jj=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="17" r="2"></circle><path d="M21 17h-8"></path><path d="M9 17H4a1 1 0 0 1-1-1V7a2 2 0 0 1 2-2h10l4 4v8"></path><rect x="6" y="8" width="6" height="4" rx="1"></rect></g>',1),Xj=[Jj],Qj=(0,c.aZ)({name:"Caravan",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gj,Xj)}}),nA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sA=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7v8.5A2.5 2.5 0 0 0 5.5 18h1.06a3 3 0 0 0 2.34-1.13l1.54-1.92a2 2 0 0 1 3.12 0l1.54 1.92A3 3 0 0 0 17.44 18h1.06a2.5 2.5 0 0 0 2.5-2.5V7a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z"}),(0,c._)("circle",{cx:"8",cy:"11",r:"1"}),(0,c._)("circle",{cx:"16",cy:"11",r:"1"})],-1),eA=[sA],aA=(0,c.aZ)({name:"Cardboards",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nA,eA)}}),tA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rA=(0,c._)("path",{d:"M6 9l6 6l6-6H6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),oA=[rA],pA=(0,c.aZ)({name:"CaretDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tA,oA)}}),lA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iA=(0,c._)("path",{d:"M15 6l-6 6l6 6V6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),cA=[iA],uA=(0,c.aZ)({name:"CaretLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lA,cA)}}),dA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hA=(0,c._)("path",{d:"M9 18l6-6l-6-6v12",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),gA=[hA],mA=(0,c.aZ)({name:"CaretRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dA,gA)}}),kA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bA=(0,c._)("path",{d:"M18 15l-6-6l-6 6h12",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),vA=[bA],wA=(0,c.aZ)({name:"CaretUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kA,vA)}}),xA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fA=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"9",width:"14",height:"10",rx:"2"}),(0,c._)("circle",{cx:"14",cy:"14",r:"2"}),(0,c._)("path",{d:"M17 9V7a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2"})],-1),yA=[fA],MA=(0,c.aZ)({name:"Cash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xA,yA)}}),_A={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CA=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><rect x="3" y="6" width="18" height="12" rx="2"></rect><path d="M18 12h.01"></path><path d="M6 12h.01"></path></g>',1),SA=[CA],EA=(0,c.aZ)({name:"CashBanknote",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_A,SA)}}),PA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jA=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9.88 9.878a3 3 0 1 0 4.242 4.243m.58-3.425a3.012 3.012 0 0 0-1.412-1.405"></path><path d="M10 6h9a2 2 0 0 1 2 2v8c0 .294-.064.574-.178.825M18 18H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1"></path><path d="M18 12h.01"></path><path d="M6 12h.01"></path><path d="M3 3l18 18"></path></g>',1),AA=[jA],DA=(0,c.aZ)({name:"CashBanknoteOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PA,AA)}}),RA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FA=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19h.01"></path><path d="M7 19a4 4 0 0 0-4-4"></path><path d="M11 19a8 8 0 0 0-8-8"></path><path d="M15 19h3a3 3 0 0 0 3-3V8a3 3 0 0 0-3-3H6a3 3 0 0 0-2.8 2"></path></g>',1),BA=[FA],LA=(0,c.aZ)({name:"Cast",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RA,BA)}}),TA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IA=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 4a8 8 0 1 0 0 16"}),(0,c._)("path",{d:"M20 4a8 8 0 1 0 0 16"}),(0,c._)("path",{d:"M12 12h8"})],-1),NA=[IA],OA=(0,c.aZ)({name:"Ce",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TA,NA)}}),VA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZA=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="15" cy="15" r="3"></circle><path d="M13 17.5V22l2-1.5l2 1.5v-4.5"></path><path d="M10 19H5a2 2 0 0 1-2-2V7c0-1.1.9-2 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-1 1.73"></path><path d="M6 9h12"></path><path d="M6 12h3"></path><path d="M6 15h2"></path></g>',1),HA=[ZA],UA=(0,c.aZ)({name:"Certificate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VA,HA)}}),zA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qA=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 7l-1 1"></path><path d="M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0V9l-3-3"></path><path d="M4 20V6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v14"></path><path d="M9 11.5L7.5 14h3L9 16.5"></path><path d="M3 20h12"></path><path d="M4 8h10"></path></g>',1),$A=[qA],KA=(0,c.aZ)({name:"ChargingPile",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zA,$A)}}),YA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WA=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("path",{d:"M16.924 11.132a5 5 0 1 0-4.056 5.792"}),(0,c._)("path",{d:"M3 12a9 9 0 1 0 9-9"})],-1),GA=[WA],JA=(0,c.aZ)({name:"ChartArcs",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YA,GA)}}),XA={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QA=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("path",{d:"M7 12a5 5 0 1 0 5-5"}),(0,c._)("path",{d:"M6.29 18.957A9 9 0 1 0 12 3"})],-1),nD=[QA],sD=(0,c.aZ)({name:"ChartArcs3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XA,nD)}}),eD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 19h16"}),(0,c._)("path",{d:"M4 15l4-6l4 2l4-5l4 4v5H4"})],-1),tD=[aD],rD=(0,c.aZ)({name:"ChartArea",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eD,tD)}}),oD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 19l4-6l4 2l4-5l4 4v5H4"}),(0,c._)("path",{d:"M4 12l3-4l4 2l5-6l4 4"})],-1),lD=[pD],iD=(0,c.aZ)({name:"ChartAreaLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oD,lD)}}),cD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 18h14"></path><path d="M9 9l3 3l-3 3"></path><path d="M14 15l3 3l-3 3"></path><path d="M3 3v18"></path><path d="M3 12h9"></path><path d="M18 3l3 3l-3 3"></path><path d="M3 6h18"></path></g>',1),dD=[uD],hD=(0,c.aZ)({name:"ChartArrows",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cD,dD)}}),gD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 21V7"></path><path d="M9 15l3-3l3 3"></path><path d="M15 10l3-3l3 3"></path><path d="M3 21h18"></path><path d="M12 21v-9"></path><path d="M3 6l3-3l3 3"></path><path d="M6 21V3"></path></g>',1),kD=[mD],bD=(0,c.aZ)({name:"ChartArrowsVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gD,kD)}}),vD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="12" width="6" height="8" rx="1"></rect><rect x="9" y="8" width="6" height="12" rx="1"></rect><rect x="15" y="4" width="6" height="16" rx="1"></rect><path d="M4 20h14"></path></g>',1),xD=[wD],fD=(0,c.aZ)({name:"ChartBar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vD,xD)}}),yD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"6",cy:"16",r:"3"}),(0,c._)("circle",{cx:"16",cy:"19",r:"2"}),(0,c._)("circle",{cx:"14.5",cy:"7.5",r:"4.5"})],-1),_D=[MD],CD=(0,c.aZ)({name:"ChartBubble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yD,_D)}}),SD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ED=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="6" width="4" height="5" rx="1"></rect><path d="M6 4v2"></path><path d="M6 11v9"></path><rect x="10" y="14" width="4" height="5" rx="1"></rect><path d="M12 4v10"></path><path d="M12 19v1"></path><rect x="16" y="5" width="4" height="6" rx="1"></rect><path d="M18 4v1"></path><path d="M18 11v9"></path></g>',1),PD=[ED],jD=(0,c.aZ)({name:"ChartCandle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SD,PD)}}),AD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9.5",cy:"9.5",r:"5.5"}),(0,c._)("circle",{cx:"14.5",cy:"14.5",r:"5.5"})],-1),RD=[DD],FD=(0,c.aZ)({name:"ChartCircles",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AD,RD)}}),BD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 3.2A9 9 0 1 0 20.8 14a1 1 0 0 0-1-1H16a4.1 4.1 0 1 1-5-5V4a.9.9 0 0 0-1-.8"}),(0,c._)("path",{d:"M15 3.5A9 9 0 0 1 20.5 9H16a9 9 0 0 0-1-1V3.5"})],-1),TD=[LD],ID=(0,c.aZ)({name:"ChartDonut",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BD,TD)}}),ND={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OD=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3v5m4 4h5"}),(0,c._)("circle",{cx:"12",cy:"12",r:"4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),VD=[OD],ZD=(0,c.aZ)({name:"ChartDonut2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ND,VD)}}),HD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3v5m4 4h5"></path><path d="M8.929 14.582L5.5 17.5"></path><circle cx="12" cy="12" r="4"></circle><circle cx="12" cy="12" r="9"></circle></g>',1),zD=[UD],qD=(0,c.aZ)({name:"ChartDonut3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HD,zD)}}),$D={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.848 14.667L5.5 17.5"></path><path d="M12 3v5m4 4h5"></path><circle cx="12" cy="12" r="9"></circle><path d="M14.219 15.328L17 19.5"></path><circle cx="12" cy="12" r="4"></circle></g>',1),YD=[KD],WD=(0,c.aZ)({name:"ChartDonut4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$D,YD)}}),GD={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JD=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3v18h18"></path><circle cx="9" cy="9" r="2"></circle><circle cx="19" cy="7" r="2"></circle><circle cx="14" cy="15" r="2"></circle><path d="M10.16 10.62l2.34 2.88"></path><path d="M15.088 13.328l2.837-4.586"></path></g>',1),XD=[JD],QD=(0,c.aZ)({name:"ChartDots",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GD,XD)}}),nR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sR=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="7" r="4"></circle><path d="M7 3v4h4"></path><path d="M9 17v4"></path><path d="M17 14v7"></path><path d="M13 13v8"></path><path d="M21 12v9"></path></g>',1),eR=[sR],aR=(0,c.aZ)({name:"ChartInfographic",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nR,eR)}}),tR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 19h16"}),(0,c._)("path",{d:"M4 15l4-6l4 2l4-5l4 4"})],-1),oR=[rR],pR=(0,c.aZ)({name:"ChartLine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tR,oR)}}),lR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 3.2A9 9 0 1 0 20.8 14a1 1 0 0 0-1-1H13a2 2 0 0 1-2-2V4a.9.9 0 0 0-1-.8"}),(0,c._)("path",{d:"M15 3.5A9 9 0 0 1 20.5 9H16a1 1 0 0 1-1-1V3.5"})],-1),cR=[iR],uR=(0,c.aZ)({name:"ChartPie",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lR,cR)}}),dR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3v9h9"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),gR=[hR],mR=(0,c.aZ)({name:"ChartPie2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dR,gR)}}),kR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 12l-6.5 5.5"}),(0,c._)("path",{d:"M12 3v9h9"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),vR=[bR],wR=(0,c.aZ)({name:"ChartPie3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kR,vR)}}),xR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fR=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12l-6.5 5.5"></path><path d="M12 3v9h9"></path><circle cx="12" cy="12" r="9"></circle><path d="M12 12l5 7.5"></path></g>',1),yR=[fR],MR=(0,c.aZ)({name:"ChartPie4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xR,yR)}}),_R={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CR=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3l9.5 7L18 21H6L2.5 10z"></path><path d="M12 7.5l5.5 4L15 17H8.5l-2-5.5z"></path><path d="M2.5 10l9.5 3l9.5-3"></path><path d="M12 3v10l6 8"></path><path d="M6 21l6-8"></path></g>',1),SR=[CR],ER=(0,c.aZ)({name:"ChartRadar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_R,SR)}}),PR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jR=(0,c._)("path",{d:"M5 12l5 5L20 7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),AR=[jR],DR=(0,c.aZ)({name:"Check",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PR,AR)}}),RR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 11l3 3l8-8"}),(0,c._)("path",{d:"M20 12v6a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h9"})],-1),BR=[FR],LR=(0,c.aZ)({name:"Checkbox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RR,BR)}}),TR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IR=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 12l5 5L22 7"}),(0,c._)("path",{d:"M2 12l5 5m5-5l5-5"})],-1),NR=[IR],OR=(0,c.aZ)({name:"Checks",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TR,NR)}}),VR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZR=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M9 14h.01"></path><path d="M9 17h.01"></path><path d="M12 16l1 1l3-3"></path></g>',1),HR=[ZR],UR=(0,c.aZ)({name:"CheckupList",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VR,HR)}}),zR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qR=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4.519 20.008L21 20v-3.5a2 2 0 1 1 0-4V9H4.278"></path><path d="M21 9l-9.385-4.992c-2.512.12-4.758 1.42-6.327 3.425C3.865 9.253 3 11.654 3 14.287c0 2.117.56 4.085 1.519 5.721"></path><path d="M15 13v.01"></path><path d="M8 13v.01"></path><path d="M11 16v.01"></path></g>',1),$R=[qR],KR=(0,c.aZ)({name:"Cheese",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zR,$R)}}),YR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WR=(0,c._)("path",{d:"M6 9l6 6l6-6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),GR=[WR],JR=(0,c.aZ)({name:"ChevronDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YR,GR)}}),XR={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QR=(0,c._)("path",{d:"M8 8v8h8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nF=[QR],sF=(0,c.aZ)({name:"ChevronDownLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XR,nF)}}),eF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aF=(0,c._)("path",{d:"M16 8v8H8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),tF=[aF],rF=(0,c.aZ)({name:"ChevronDownRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eF,tF)}}),oF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pF=(0,c._)("path",{d:"M15 6l-6 6l6 6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),lF=[pF],iF=(0,c.aZ)({name:"ChevronLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oF,lF)}}),cF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uF=(0,c._)("path",{d:"M9 6l6 6l-6 6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),dF=[uF],hF=(0,c.aZ)({name:"ChevronRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cF,dF)}}),gF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mF=(0,c._)("path",{d:"M6 15l6-6l6 6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),kF=[mF],bF=(0,c.aZ)({name:"ChevronUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gF,kF)}}),vF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wF=(0,c._)("path",{d:"M8 16V8h8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xF=[wF],fF=(0,c.aZ)({name:"ChevronUpLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vF,xF)}}),yF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MF=(0,c._)("path",{d:"M8 8h8v8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),_F=[MF],CF=(0,c.aZ)({name:"ChevronUpRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yF,_F)}}),SF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 7l5 5l5-5"}),(0,c._)("path",{d:"M7 13l5 5l5-5"})],-1),PF=[EF],jF=(0,c.aZ)({name:"ChevronsDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SF,PF)}}),AF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 5v8h8"}),(0,c._)("path",{d:"M7 9v8h8"})],-1),RF=[DF],FF=(0,c.aZ)({name:"ChevronsDownLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AF,RF)}}),BF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 5v8H5"}),(0,c._)("path",{d:"M17 9v8H9"})],-1),TF=[LF],IF=(0,c.aZ)({name:"ChevronsDownRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BF,TF)}}),NF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 7l-5 5l5 5"}),(0,c._)("path",{d:"M17 7l-5 5l5 5"})],-1),VF=[OF],ZF=(0,c.aZ)({name:"ChevronsLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NF,VF)}}),HF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 7l5 5l-5 5"}),(0,c._)("path",{d:"M13 7l5 5l-5 5"})],-1),zF=[UF],qF=(0,c.aZ)({name:"ChevronsRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HF,zF)}}),$F={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 11l5-5l5 5"}),(0,c._)("path",{d:"M7 17l5-5l5 5"})],-1),YF=[KF],WF=(0,c.aZ)({name:"ChevronsUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$F,YF)}}),GF={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JF=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 15V7h8"}),(0,c._)("path",{d:"M11 19v-8h8"})],-1),XF=[JF],QF=(0,c.aZ)({name:"ChevronsUpLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GF,XF)}}),nB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 7h8v8"}),(0,c._)("path",{d:"M5 11h8v8"})],-1),eB=[sB],aB=(0,c.aZ)({name:"ChevronsUpRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nB,eB)}}),tB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3l4 4l-2 1l4 4l-3 1l4 4H5l4-4l-3-1l4-4l-2-1z"}),(0,c._)("path",{d:"M14 17v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3"})],-1),oB=[rB],pB=(0,c.aZ)({name:"ChristmasTree",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tB,oB)}}),lB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iB=(0,c._)("circle",{cx:"12",cy:"12",r:"9",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),cB=[iB],uB=(0,c.aZ)({name:"Circle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lB,cB)}}),dB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1-4 0v-4a2 2 0 0 1 2-2z"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),gB=[hB],mB=(0,c.aZ)({name:"Circle0",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dB,gB)}}),kB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 16V8l-2 2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),vB=[bB],wB=(0,c.aZ)({name:"Circle1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kB,vB)}}),xB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 10a2 2 0 1 1 4 0c0 .591-.417 1.318-.816 1.858L10 16.001h4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),yB=[fB],MB=(0,c.aZ)({name:"Circle2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xB,yB)}}),_B={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 12a2 2 0 1 0-2-2"}),(0,c._)("path",{d:"M10 14a2 2 0 1 0 2-2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),SB=[CB],EB=(0,c.aZ)({name:"Circle3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_B,SB)}}),PB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 16V8l-4 6h5"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),AB=[jB],DB=(0,c.aZ)({name:"Circle4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PB,AB)}}),RB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 16h2a2 2 0 1 0 0-4h-2V8h4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),BB=[FB],LB=(0,c.aZ)({name:"Circle5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RB,BB)}}),TB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"14",r:"2"}),(0,c._)("path",{d:"M14 10a2 2 0 1 0-4 0v4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),NB=[IB],OB=(0,c.aZ)({name:"Circle6",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TB,NB)}}),VB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 8h4l-2 8"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),HB=[ZB],UB=(0,c.aZ)({name:"Circle7",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VB,HB)}}),zB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"2"}),(0,c._)("circle",{cx:"12",cy:"14",r:"2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),$B=[qB],KB=(0,c.aZ)({name:"Circle8",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zB,$B)}}),YB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"2"}),(0,c._)("path",{d:"M10 14a2 2 0 1 0 4 0v-4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),GB=[WB],JB=(0,c.aZ)({name:"Circle9",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YB,GB)}}),XB={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QB=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 12l2 2l4-4"})],-1),nL=[QB],sL=(0,c.aZ)({name:"CircleCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XB,nL)}}),eL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aL=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.56 3.69a9 9 0 0 0-2.92 1.95"></path><path d="M3.69 8.56A9 9 0 0 0 3 12"></path><path d="M3.69 15.44a9 9 0 0 0 1.95 2.92"></path><path d="M8.56 20.31A9 9 0 0 0 12 21"></path><path d="M15.44 20.31a9 9 0 0 0 2.92-1.95"></path><path d="M20.31 15.44A9 9 0 0 0 21 12"></path><path d="M20.31 8.56a9 9 0 0 0-1.95-2.92"></path><path d="M15.44 3.69A9 9 0 0 0 12 3"></path></g>',1),tL=[aL],rL=(0,c.aZ)({name:"CircleDashed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eL,tL)}}),oL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),lL=[pL],iL=(0,c.aZ)({name:"CircleDot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oL,lL)}}),cL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uL=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7.5 4.21v.01"></path><path d="M4.21 7.5v.01"></path><path d="M3 12v.01"></path><path d="M4.21 16.5v.01"></path><path d="M7.5 19.79v.01"></path><path d="M12 21v.01"></path><path d="M16.5 19.79v.01"></path><path d="M19.79 16.5v.01"></path><path d="M21 12v.01"></path><path d="M19.79 7.5v.01"></path><path d="M16.5 4.21v.01"></path><path d="M12 3v.01"></path></g>',1),dL=[uL],hL=(0,c.aZ)({name:"CircleDotted",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cL,dL)}}),gL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 3v18"})],-1),kL=[mL],bL=(0,c.aZ)({name:"CircleHalf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gL,kL)}}),vL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wL=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 3v18"></path><path d="M12 14l7-7"></path><path d="M12 19l8.5-8.5"></path><path d="M12 9l4.5-4.5"></path></g>',1),xL=[wL],fL=(0,c.aZ)({name:"CircleHalf2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vL,xL)}}),yL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ML=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M3 12h18"})],-1),_L=[ML],CL=(0,c.aZ)({name:"CircleHalfVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yL,_L)}}),SL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 12h6"})],-1),PL=[EL],jL=(0,c.aZ)({name:"CircleMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SL,PL)}}),AL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20.042 16.045A9 9 0 0 0 7.955 3.958M5.637 5.635a9 9 0 1 0 12.725 12.73"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),RL=[DL],FL=(0,c.aZ)({name:"CircleOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AL,RL)}}),BL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 12h6"}),(0,c._)("path",{d:"M12 9v6"})],-1),TL=[LL],IL=(0,c.aZ)({name:"CirclePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BL,TL)}}),NL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9.5",cy:"9.5",r:"6.5"}),(0,c._)("rect",{x:"10",y:"10",width:"11",height:"11",rx:"2"})],-1),VL=[OL],ZL=(0,c.aZ)({name:"CircleSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NL,VL)}}),HL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M10 10l4 4m0-4l-4 4"})],-1),zL=[UL],qL=(0,c.aZ)({name:"CircleX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HL,zL)}}),$L={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"7",r:"4"}),(0,c._)("circle",{cx:"6.5",cy:"17",r:"4"}),(0,c._)("circle",{cx:"17.5",cy:"17",r:"4"})],-1),YL=[KL],WL=(0,c.aZ)({name:"Circles",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$L,YL)}}),GL={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JL=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 6h12"}),(0,c._)("path",{d:"M6 12h12"}),(0,c._)("path",{d:"M4 18h12"})],-1),XL=[JL],QL=(0,c.aZ)({name:"ClearAll",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GL,XL)}}),nT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sT=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 15l4 4m0-4l-4 4"></path><path d="M7 6V5h11v1"></path><path d="M7 19h4"></path><path d="M13 5L9 19"></path></g>',1),eT=[sT],aT=(0,c.aZ)({name:"ClearFormatting",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nT,eT)}}),tT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rT=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12h3"></path><path d="M12 3v3"></path><path d="M7.8 7.8L5.6 5.6"></path><path d="M16.2 7.8l2.2-2.2"></path><path d="M7.8 16.2l-2.2 2.2"></path><path d="M12 12l9 3l-4 2l-2 4l-3-9"></path></g>',1),oT=[rT],pT=(0,c.aZ)({name:"Click",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tT,oT)}}),lT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"}),(0,c._)("rect",{x:"9",y:"3",width:"6",height:"4",rx:"2"})],-1),cT=[iT],uT=(0,c.aZ)({name:"Clipboard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lT,cT)}}),dT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"}),(0,c._)("rect",{x:"9",y:"3",width:"6",height:"4",rx:"2"}),(0,c._)("path",{d:"M9 14l2 2l4-4"})],-1),gT=[hT],mT=(0,c.aZ)({name:"ClipboardCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dT,gT)}}),kT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bT=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M9 12h.01"></path><path d="M13 12h2"></path><path d="M9 16h.01"></path><path d="M13 16h2"></path></g>',1),vT=[bT],wT=(0,c.aZ)({name:"ClipboardList",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kT,vT)}}),xT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fT=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M10 14h4"></path><path d="M12 12v4"></path></g>',1),yT=[fT],MT=(0,c.aZ)({name:"ClipboardPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xT,yT)}}),_T={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"}),(0,c._)("rect",{x:"9",y:"3",width:"6",height:"4",rx:"2"}),(0,c._)("path",{d:"M10 12l4 4m0-4l-4 4"})],-1),ST=[CT],ET=(0,c.aZ)({name:"ClipboardX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_T,ST)}}),PT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 7v5l3 3"})],-1),AT=[jT],DT=(0,c.aZ)({name:"Clock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PT,AT)}}),RT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FT=(0,c._)("path",{d:"M7 18a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7H7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),BT=[FT],LT=(0,c.aZ)({name:"Cloud",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RT,BT)}}),TT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 18a3.5 3.5 0 0 0 0-7h-1A5 4.5 0 0 0 7 9a4.6 4.4 0 0 0-2.1 8.4"}),(0,c._)("path",{d:"M12 13v9"}),(0,c._)("path",{d:"M9 19l3 3l3-3"})],-1),NT=[IT],OT=(0,c.aZ)({name:"CloudDownload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TT,NT)}}),VT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 16a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7H7"}),(0,c._)("path",{d:"M5 20h14"})],-1),HT=[ZT],UT=(0,c.aZ)({name:"CloudFog",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VT,HT)}}),zT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 18a3.5 3.5 0 0 0 0-7h-1c.397-1.768-.285-3.593-1.788-4.787c-1.503-1.193-3.6-1.575-5.5-1S7.397 7.232 7 9c-2.199-.088-4.155 1.326-4.666 3.373c-.512 2.047.564 4.154 2.566 5.027"}),(0,c._)("rect",{x:"8",y:"15",width:"8",height:"5",rx:"1"}),(0,c._)("path",{d:"M10 15v-2a2 2 0 1 1 4 0v2"})],-1),$T=[qT],KT=(0,c.aZ)({name:"CloudLock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zT,$T)}}),YT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 18a3.5 3.5 0 0 0 0-7h-1c.397-1.768-.285-3.593-1.788-4.787c-1.503-1.193-3.6-1.575-5.5-1S7.397 7.232 7 9c-2.199-.088-4.155 1.326-4.666 3.373c-.512 2.047.564 4.154 2.566 5.027"}),(0,c._)("rect",{x:"8",y:"15",width:"8",height:"5",rx:"1"}),(0,c._)("path",{d:"M10 15v-2a2 2 0 0 1 3.736-.994"})],-1),GT=[WT],JT=(0,c.aZ)({name:"CloudLockOpen",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YT,GT)}}),XT={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QT=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M18 18H7c-2.598 0-4.705-2.015-4.705-4.5S4.402 9 7 9c.112-.5.305-.973.568-1.408m2.094-1.948c.329-.174.68-.319 1.05-.43c1.9-.576 3.997-.194 5.5 1C17.715 7.406 18.397 9.231 18 11h1a3.5 3.5 0 0 1 2.212 6.212"})],-1),nI=[QT],sI=(0,c.aZ)({name:"CloudOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XT,nI)}}),eI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 18a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7"}),(0,c._)("path",{d:"M11 13v2m0 3v2m4-5v2m0 3v2"})],-1),tI=[aI],rI=(0,c.aZ)({name:"CloudRain",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eI,tI)}}),oI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 18a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7"}),(0,c._)("path",{d:"M11 15v.01m0 3v.01m0 3v.01m4-4v.01m0 3v.01"})],-1),lI=[pI],iI=(0,c.aZ)({name:"CloudSnow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oI,lI)}}),cI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 18a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1"}),(0,c._)("path",{d:"M13 14l-2 4h3l-2 4"})],-1),dI=[uI],hI=(0,c.aZ)({name:"CloudStorm",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cI,dI)}}),gI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 18a4.6 4.4 0 0 1 0-9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1"}),(0,c._)("path",{d:"M9 15l3-3l3 3"}),(0,c._)("path",{d:"M12 12v9"})],-1),kI=[mI],bI=(0,c.aZ)({name:"CloudUpload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gI,kI)}}),vI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wI=(0,c._)("path",{d:"M12 3a4 4 0 0 1 3.164 6.447A4 4 0 1 1 14 15.645V17l1 4H9l1-4l.001-1.355a4 4 0 1 1-1.164-6.199A4 4 0 0 1 12 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xI=[wI],fI=(0,c.aZ)({name:"Clubs",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vI,xI)}}),yI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 8l-4 4l4 4"}),(0,c._)("path",{d:"M17 8l4 4l-4 4"}),(0,c._)("path",{d:"M14 4l-4 16"})],-1),_I=[MI],CI=(0,c.aZ)({name:"Code",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yI,_I)}}),SI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 12h6"}),(0,c._)("path",{d:"M6 19a2 2 0 0 1-2-2v-4l-1-1l1-1V7a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M18 19a2 2 0 0 0 2-2v-4l1-1l-1-1V7a2 2 0 0 0-2-2"})],-1),PI=[EI],jI=(0,c.aZ)({name:"CodeMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SI,PI)}}),AI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DI=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 12h6"></path><path d="M12 9v6"></path><path d="M6 19a2 2 0 0 1-2-2v-4l-1-1l1-1V7a2 2 0 0 1 2-2"></path><path d="M18 19a2 2 0 0 0 2-2v-4l1-1l-1-1V7a2 2 0 0 0-2-2"></path></g>',1),RI=[DI],FI=(0,c.aZ)({name:"CodePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AI,RI)}}),BI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LI=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 14c.83.642 2.077 1.017 3.5 1c1.423.017 2.67-.358 3.5-1c.83-.642 2.077-1.017 3.5-1c1.423-.017 2.67.358 3.5 1"></path><path d="M8 3a2.4 2.4 0 0 0-1 2a2.4 2.4 0 0 0 1 2"></path><path d="M12 3a2.4 2.4 0 0 0-1 2a2.4 2.4 0 0 0 1 2"></path><path d="M3 10h14v5a6 6 0 0 1-6 6H9a6 6 0 0 1-6-6v-5z"></path><path d="M16.746 16.726a3 3 0 1 0 .252-5.555"></path></g>',1),TI=[LI],II=(0,c.aZ)({name:"Coffee",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BI,TI)}}),NI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M14.8 9A2 2 0 0 0 13 8h-2a2 2 0 0 0 0 4h2a2 2 0 0 1 0 4h-2a2 2 0 0 1-1.8-1"}),(0,c._)("path",{d:"M12 6v2m0 8v2"})],-1),VI=[OI],ZI=(0,c.aZ)({name:"Coin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NI,VI)}}),HI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 7l6 6"}),(0,c._)("path",{d:"M4 16L15.7 4.3a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4L8 20H4v-4z"})],-1),zI=[UI],qI=(0,c.aZ)({name:"ColorPicker",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HI,zI)}}),$I={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KI=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 3h-4a2 2 0 0 0-2 2v12a4 4 0 0 0 8 0V5a2 2 0 0 0-2-2"></path><path d="M13 7.35l-2-2a2 2 0 0 0-2.828 0L5.344 8.178a2 2 0 0 0 0 2.828l9 9"></path><path d="M7.3 13H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h12"></path><path d="M17 17v.01"></path></g>',1),YI=[KI],WI=(0,c.aZ)({name:"ColorSwatch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$I,YI)}}),GI={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JI=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1z"}),(0,c._)("path",{d:"M5 12h4"}),(0,c._)("path",{d:"M7 10v4"})],-1),XI=[JI],QI=(0,c.aZ)({name:"ColumnInsertLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GI,XI)}}),nN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 4h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1z"}),(0,c._)("path",{d:"M15 12h4"}),(0,c._)("path",{d:"M17 10v4"})],-1),eN=[sN],aN=(0,c.aZ)({name:"ColumnInsertRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nN,eN)}}),tN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 6h5.5"></path><path d="M4 10h5.5"></path><path d="M4 14h5.5"></path><path d="M4 18h5.5"></path><path d="M14.5 6H20"></path><path d="M14.5 10H20"></path><path d="M14.5 14H20"></path><path d="M14.5 18H20"></path></g>',1),oN=[rN],pN=(0,c.aZ)({name:"Columns",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tN,oN)}}),lN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15.5 18.5l-3 1.5l.5-3.5l-2-2l3-.5l1.5-3l1.5 3l3 .5l-2 2l.5 3.5z"></path><path d="M4 4l7 7"></path><path d="M9 4l3.5 3.5"></path><path d="M4 9l3.5 3.5"></path></g>',1),cN=[iN],uN=(0,c.aZ)({name:"Comet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lN,cN)}}),dN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hN=(0,c._)("path",{d:"M7 9a2 2 0 1 1 2-2v10a2 2 0 1 1-2-2h10a2 2 0 1 1-2 2V7a2 2 0 1 1 2 2H7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),gN=[hN],mN=(0,c.aZ)({name:"Command",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dN,gN)}}),kN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 16l2-6l6-2l-2 6l-6 2"></path><circle cx="12" cy="12" r="9"></circle><path d="M12 3v2"></path><path d="M12 19v2"></path><path d="M3 12h2"></path><path d="M19 12h2"></path></g>',1),vN=[bN],wN=(0,c.aZ)({name:"Compass",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kN,vN)}}),xN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12l3 3l3-3l-3-3z"></path><path d="M15 12l3 3l3-3l-3-3z"></path><path d="M9 6l3 3l3-3l-3-3z"></path><path d="M9 18l3 3l3-3l-3-3z"></path></g>',1),yN=[fN],MN=(0,c.aZ)({name:"Components",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xN,yN)}}),_N={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("ellipse",{transform:"matrix(1 0 0 -1 0 34)",cx:"12",cy:"17",rx:"7",ry:"3"}),(0,c._)("path",{d:"M19 17v-.5L12 4L5 16.5v.5"})],-1),SN=[CN],EN=(0,c.aZ)({name:"Cone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_N,SN)}}),PN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("ellipse",{cx:"12",cy:"7",rx:"7",ry:"3"}),(0,c._)("path",{d:"M19 7v.5L12 20L5 7.5V7"})],-1),AN=[jN],DN=(0,c.aZ)({name:"Cone2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PN,AN)}}),RN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 5h2"></path><path d="M5 4v2"></path><path d="M11.5 4L11 6"></path><path d="M18 5h2"></path><path d="M19 4v2"></path><path d="M15 9l-1 1"></path><path d="M18 13l2-.5"></path><path d="M18 19h2"></path><path d="M19 18v2"></path><path d="M14 16.518L7.482 10l-4.39 9.58a1.003 1.003 0 0 0 1.329 1.329L14 16.519z"></path></g>',1),BN=[FN],LN=(0,c.aZ)({name:"Confetti",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RN,BN)}}),TN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 4v.01"></path><path d="M20 20v.01"></path><path d="M20 16v.01"></path><path d="M20 12v.01"></path><path d="M20 8v.01"></path><rect x="8" y="4" width="8" height="16" rx="1"></rect><path d="M4 4v.01"></path><path d="M4 20v.01"></path><path d="M4 16v.01"></path><path d="M4 12v.01"></path><path d="M4 8v.01"></path></g>',1),NN=[IN],ON=(0,c.aZ)({name:"Container",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TN,NN)}}),VN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 17a5 5 0 0 0 0-10v10"})],-1),HN=[ZN],UN=(0,c.aZ)({name:"Contrast",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VN,HN)}}),zN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 18h2a6 6 0 0 0 6-6a6 6 0 0 1 6-6h2"})],-1),$N=[qN],KN=(0,c.aZ)({name:"Contrast2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zN,$N)}}),YN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WN=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13v.01"></path><path d="M12 17v.01"></path><path d="M12 12v.01"></path><path d="M16 14v.01"></path><path d="M11 8v.01"></path><path d="M13.148 3.476l2.667 1.104a4 4 0 0 0 4.656 6.14l.053.132a3 3 0 0 1 0 2.296c-.497.786-.838 1.404-1.024 1.852c-.189.456-.409 1.194-.66 2.216a3 3 0 0 1-1.624 1.623c-1.048.263-1.787.483-2.216.661c-.475.197-1.092.538-1.852 1.024a3 3 0 0 1-2.296 0C10.05 20.021 9.433 19.68 9 19.5c-.471-.195-1.21-.415-2.216-.66a3 3 0 0 1-1.623-1.624c-.265-1.052-.485-1.79-.661-2.216c-.198-.479-.54-1.096-1.024-1.852a3 3 0 0 1 0-2.296c.48-.744.82-1.361 1.024-1.852c.171-.413.391-1.152.66-2.216a3 3 0 0 1 1.624-1.623C7.816 4.905 8.554 4.685 9 4.5c.458-.19 1.075-.531 1.852-1.024a3 3 0 0 1 2.296 0z"></path></g>',1),GN=[WN],JN=(0,c.aZ)({name:"Cookie",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YN,GN)}}),XN={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QN=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"8",width:"12",height:"12",rx:"2"}),(0,c._)("path",{d:"M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2"})],-1),nO=[QN],sO=(0,c.aZ)({name:"Copy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XN,nO)}}),eO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M10 9.75a3.016 3.016 0 0 1 4.163.173a2.993 2.993 0 0 1 0 4.154A3.016 3.016 0 0 1 10 14.25"})],-1),tO=[aO],rO=(0,c.aZ)({name:"Copyleft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eO,tO)}}),oO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M14 9.75a3.016 3.016 0 0 0-4.163.173a2.993 2.993 0 0 0 0 4.154A3.016 3.016 0 0 0 14 14.25"})],-1),lO=[pO],iO=(0,c.aZ)({name:"Copyright",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oO,lO)}}),cO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uO=(0,c._)("path",{d:"M18 6v6a3 3 0 0 1-3 3H5l4-4m0 8l-4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),dO=[uO],hO=(0,c.aZ)({name:"CornerDownLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cO,dO)}}),gO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 5v6a3 3 0 0 1-3 3H9"}),(0,c._)("path",{d:"M13 10l-4 4l4 4m-5-8l-4 4l4 4"})],-1),kO=[mO],bO=(0,c.aZ)({name:"CornerDownLeftDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gO,kO)}}),vO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wO=(0,c._)("path",{d:"M6 6v6a3 3 0 0 0 3 3h10l-4-4m0 8l4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xO=[wO],fO=(0,c.aZ)({name:"CornerDownRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vO,xO)}}),yO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 5v6a3 3 0 0 0 3 3h7"}),(0,c._)("path",{d:"M10 10l4 4l-4 4m5-8l4 4l-4 4"})],-1),_O=[MO],CO=(0,c.aZ)({name:"CornerDownRightDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yO,_O)}}),SO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EO=(0,c._)("path",{d:"M18 6h-6a3 3 0 0 0-3 3v10l-4-4m8 0l-4 4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),PO=[EO],jO=(0,c.aZ)({name:"CornerLeftDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SO,PO)}}),AO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 4h-6a3 3 0 0 0-3 3v7"}),(0,c._)("path",{d:"M13 10l-4 4l-4-4m8 5l-4 4l-4-4"})],-1),RO=[DO],FO=(0,c.aZ)({name:"CornerLeftDownDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AO,RO)}}),BO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LO=(0,c._)("path",{d:"M18 18h-6a3 3 0 0 1-3-3V5L5 9m8 0L9 5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),TO=[LO],IO=(0,c.aZ)({name:"CornerLeftUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BO,TO)}}),NO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 19h-6a3 3 0 0 1-3-3V9"}),(0,c._)("path",{d:"M13 13L9 9l-4 4m8-5L9 4L5 8"})],-1),VO=[OO],ZO=(0,c.aZ)({name:"CornerLeftUpDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NO,VO)}}),HO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UO=(0,c._)("path",{d:"M6 6h6a3 3 0 0 1 3 3v10l-4-4m8 0l-4 4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zO=[UO],qO=(0,c.aZ)({name:"CornerRightDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HO,zO)}}),$O={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KO=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h6a3 3 0 0 1 3 3v7"}),(0,c._)("path",{d:"M10 10l4 4l4-4m-8 5l4 4l4-4"})],-1),YO=[KO],WO=(0,c.aZ)({name:"CornerRightDownDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$O,YO)}}),GO={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JO=(0,c._)("path",{d:"M6 18h6a3 3 0 0 0 3-3V5l-4 4m8 0l-4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),XO=[JO],QO=(0,c.aZ)({name:"CornerRightUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GO,XO)}}),nV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sV=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 19h6a3 3 0 0 0 3-3V9"}),(0,c._)("path",{d:"M10 13l4-4l4 4m-8-5l4-4l4 4"})],-1),eV=[sV],aV=(0,c.aZ)({name:"CornerRightUpDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nV,eV)}}),tV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rV=(0,c._)("path",{d:"M18 18v-6a3 3 0 0 0-3-3H5l4-4m0 8L5 9",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),oV=[rV],pV=(0,c.aZ)({name:"CornerUpLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tV,oV)}}),lV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iV=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 18v-6a3 3 0 0 0-3-3H9"}),(0,c._)("path",{d:"M13 13L9 9l4-4m-5 8L4 9l4-4"})],-1),cV=[iV],uV=(0,c.aZ)({name:"CornerUpLeftDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lV,cV)}}),dV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hV=(0,c._)("path",{d:"M6 18v-6a3 3 0 0 1 3-3h10l-4-4m0 8l4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),gV=[hV],mV=(0,c.aZ)({name:"CornerUpRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dV,gV)}}),kV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bV=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 18v-6a3 3 0 0 1 3-3h7"}),(0,c._)("path",{d:"M10 13l4-4l-4-4m5 8l4-4l-4-4"})],-1),vV=[bV],wV=(0,c.aZ)({name:"CornerUpRightDouble",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kV,vV)}}),xV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fV=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="5" y="5" width="14" height="14" rx="1"></rect><path d="M9 9h6v6H9z"></path><path d="M3 10h2"></path><path d="M3 14h2"></path><path d="M10 3v2"></path><path d="M14 3v2"></path><path d="M21 10h-2"></path><path d="M21 14h-2"></path><path d="M14 21v-2"></path><path d="M10 21v-2"></path></g>',1),yV=[fV],MV=(0,c.aZ)({name:"Cpu",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xV,yV)}}),_V={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CV=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 21h6"></path><path d="M9 21V3L3 9h18"></path><path d="M9 3l10 6"></path><path d="M17 9v4a2 2 0 1 1-2 2"></path></g>',1),SV=[CV],EV=(0,c.aZ)({name:"Crane",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_V,SV)}}),PV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jV=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M10.5 10.5a2.187 2.187 0 0 0-2.914.116a1.928 1.928 0 0 0 0 2.768a2.188 2.188 0 0 0 2.914.116"}),(0,c._)("path",{d:"M16.5 10.5a2.187 2.187 0 0 0-2.914.116a1.928 1.928 0 0 0 0 2.768a2.188 2.188 0 0 0 2.914.116"})],-1),AV=[jV],DV=(0,c.aZ)({name:"CreativeCommons",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PV,AV)}}),RV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FV=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="3"></rect><path d="M3 10h18"></path><path d="M7 15h.01"></path><path d="M11 15h2"></path></g>',1),BV=[FV],LV=(0,c.aZ)({name:"CreditCard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RV,BV)}}),TV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IV=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M9 5h9a3 3 0 0 1 3 3v8a3 3 0 0 1-.128.87"></path><path d="M18.87 18.872A3 3 0 0 1 18 19H6a3 3 0 0 1-3-3V8a3 3 0 0 1 2.124-2.87"></path><path d="M3 11h8"></path><path d="M15 11h6"></path><path d="M7 15h.01"></path><path d="M11 15h2"></path></g>',1),NV=[IV],OV=(0,c.aZ)({name:"CreditCardOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TV,NV)}}),VV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZV=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 5v10a1 1 0 0 0 1 1h10"}),(0,c._)("path",{d:"M5 8h10a1 1 0 0 1 1 1v10"})],-1),HV=[ZV],UV=(0,c.aZ)({name:"Crop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VV,HV)}}),zV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qV=(0,c._)("path",{d:"M10 21h4v-9h5V8h-5V3h-4v5H5v4h5z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$V=[qV],KV=(0,c.aZ)({name:"Cross",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zV,$V)}}),YV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WV=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><path d="M9 12h6"></path><path d="M12 9v6"></path></g>',1),GV=[WV],JV=(0,c.aZ)({name:"Crosshair",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YV,GV)}}),XV={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QV=(0,c._)("path",{d:"M12 6l4 6l5-4l-2 10H5L3 8l5 4z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nZ=[QV],sZ=(0,c.aZ)({name:"Crown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XV,nZ)}}),eZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aZ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 18H5L3.135 8.673a.25.25 0 0 1 .4-.244L8 12l1.6-2.4m1.596-2.394L12 6l4 6l4.464-3.571a.25.25 0 0 1 .401.244l-1.363 6.818"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),tZ=[aZ],rZ=(0,c.aZ)({name:"CrownOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eZ,tZ)}}),oZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="3" width="8" height="4" rx="2"></rect><path d="M11 21h2"></path><path d="M12 21v-4.092a3 3 0 0 1 .504-1.664l.992-1.488A3 3 0 0 0 14 12.092V7"></path><path d="M12 21v-4.092a3 3 0 0 0-.504-1.664l-.992-1.488A3 3 0 0 1 10 12.092V7"></path><path d="M10 11h4"></path></g>',1),lZ=[pZ],iZ=(0,c.aZ)({name:"Crutches",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oZ,lZ)}}),cZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 11h14V8H5z"></path><path d="M17.5 11L16 21H8L6.5 11"></path><path d="M6 8V7a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v1"></path><path d="M15 5V3"></path></g>',1),dZ=[uZ],hZ=(0,c.aZ)({name:"Cup",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cZ,dZ)}}),gZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mZ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"9",width:"16",height:"10",rx:"4"}),(0,c._)("path",{d:"M4 14h16"}),(0,c._)("path",{d:"M8 5h6a2 2 0 0 1 2 2v2"})],-1),kZ=[mZ],bZ=(0,c.aZ)({name:"Curling",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gZ,kZ)}}),vZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wZ=(0,c._)("path",{d:"M21 8c-4 0-7 2-7 5a3 3 0 0 0 6 0c0-3-2.5-5-8-5s-8 2-8 5a3 3 0 0 0 6 0c0-3-3-5-7-5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xZ=[wZ],fZ=(0,c.aZ)({name:"CurlyLoop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vZ,xZ)}}),yZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="7"></circle><path d="M4 4l3 3"></path><path d="M20 4l-3 3"></path><path d="M4 20l3-3"></path><path d="M20 20l-3-3"></path></g>',1),_Z=[MZ],CZ=(0,c.aZ)({name:"Currency",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yZ,_Z)}}),SZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 10v1a4 4 0 0 0 4 4h2a2 2 0 0 0 2-2v-3"></path><path d="M7 19.01V19"></path><path d="M14 15.01V15"></path><path d="M17 15h2.004a2 2 0 0 0 1.649-3.131L18 8"></path></g>',1),PZ=[EZ],jZ=(0,c.aZ)({name:"CurrencyBahraini",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SZ,PZ)}}),AZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 6h5a3 3 0 0 1 3 3v.143A2.857 2.857 0 0 1 13.143 12H8"></path><path d="M8 12h5a3 3 0 0 1 3 3v.143A2.857 2.857 0 0 1 13.143 18H8"></path><path d="M8 6v12"></path><path d="M11 4v2"></path><path d="M11 18v2"></path></g>',1),RZ=[DZ],FZ=(0,c.aZ)({name:"CurrencyBath",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AZ,RZ)}}),BZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 6h8a3 3 0 0 1 0 6a3 3 0 0 1 0 6H6"></path><path d="M8 6v12"></path><path d="M8 12h6"></path><path d="M9 3v3"></path><path d="M13 3v3"></path><path d="M9 18v3"></path><path d="M13 18v3"></path></g>',1),TZ=[LZ],IZ=(0,c.aZ)({name:"CurrencyBitcoin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BZ,TZ)}}),NZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OZ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16.007 7.54A5.965 5.965 0 0 0 11.999 6a5.996 5.996 0 0 0-5.992 6c0 3.314 2.682 6 5.992 6a5.965 5.965 0 0 0 4.004-1.536"}),(0,c._)("path",{d:"M12 20v-2"}),(0,c._)("path",{d:"M12 6V4"})],-1),VZ=[OZ],ZZ=(0,c.aZ)({name:"CurrencyCent",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NZ,VZ)}}),HZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 20.01V20"></path><path d="M6 13l2.386-.9a1 1 0 0 0-.095-1.902l-1.514-.404a1 1 0 0 1-.102-1.9L9 7"></path><path d="M3 14v1a3 3 0 0 0 3 3h4.161a3 3 0 0 0 2.983-3.32L12 4"></path><path d="M16 17l1 1h2.004a2 2 0 0 0 1.649-3.131L18 11"></path></g>',1),zZ=[UZ],qZ=(0,c.aZ)({name:"CurrencyDinar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HZ,zZ)}}),$Z={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KZ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.5 19H5"></path><path d="M8.599 16.479A1.5 1.5 0 1 0 7.5 19"></path><path d="M7 4v9"></path><path d="M15 13h1.888a1.5 1.5 0 0 0 1.296-2.256L16 7"></path><path d="M11 13.01V13"></path></g>',1),YZ=[KZ],WZ=(0,c.aZ)({name:"CurrencyDirham",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Z,YZ)}}),GZ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JZ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 12h6"}),(0,c._)("path",{d:"M9 6v12"}),(0,c._)("path",{d:"M6 18h6a6 6 0 1 0 0-12H6"})],-1),XZ=[JZ],QZ=(0,c.aZ)({name:"CurrencyDogecoin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GZ,XZ)}}),nH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16.7 8A3 3 0 0 0 14 6h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1-2.7-2"}),(0,c._)("path",{d:"M12 3v3m0 12v3"})],-1),eH=[sH],aH=(0,c.aZ)({name:"CurrencyDollar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nH,eH)}}),tH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 18L6.279 6.524a.75.75 0 0 1 1.442 0L11 18"></path><path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"></path><path d="M17 20v-2"></path><path d="M18 6V4"></path><path d="M4.5 14h5"></path></g>',1),oH=[rH],pH=(0,c.aZ)({name:"CurrencyDollarAustralian",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tH,oH)}}),lH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"></path><path d="M10 18H9A6 6 0 1 1 9 6h1"></path><path d="M17 20v-2"></path><path d="M18 6V4"></path></g>',1),cH=[iH],uH=(0,c.aZ)({name:"CurrencyDollarCanadian",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lH,cH)}}),dH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"></path><path d="M10 6H6a3 3 0 1 0 0 6h1a3 3 0 0 1 0 6H3"></path><path d="M17 20v-2"></path><path d="M18 6V4"></path></g>',1),gH=[hH],mH=(0,c.aZ)({name:"CurrencyDollarSingapore",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dH,gH)}}),kH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 12l6-9l6 9l-6 9z"}),(0,c._)("path",{d:"M6 12l6-3l6 3l-6 2z"})],-1),vH=[bH],wH=(0,c.aZ)({name:"CurrencyEthereum",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kH,vH)}}),xH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17.2 7a6 7 0 1 0 0 10"}),(0,c._)("path",{d:"M13 10H5m0 4h8"})],-1),yH=[fH],MH=(0,c.aZ)({name:"CurrencyEuro",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xH,yH)}}),_H={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 4H7a3 3 0 0 0-3 3v12"></path><path d="M10 11H4"></path><path d="M16 4v13a2 2 0 0 0 2 2h2"></path><path d="M19 9h-5"></path></g>',1),SH=[CH],EH=(0,c.aZ)({name:"CurrencyForint",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_H,SH)}}),PH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 5h-6a2 2 0 0 0-2 2v12"}),(0,c._)("path",{d:"M7 15h4"}),(0,c._)("path",{d:"M9 11h7"})],-1),AH=[jH],DH=(0,c.aZ)({name:"CurrencyFrank",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PH,AH)}}),RH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 6v12"></path><path d="M5 12c3.5 0 6-3 6-6"></path><path d="M5 12c3.5 0 6 3 6 6"></path><path d="M19 6l-2 2l-2-2"></path><path d="M19 12h-2a3 3 0 0 0 0 6h2"></path></g>',1),BH=[FH],LH=(0,c.aZ)({name:"CurrencyKroneCzech",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RH,BH)}}),TH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 6v12"></path><path d="M5 12c3.5 0 6-3 6-6"></path><path d="M5 12c3.5 0 6 3 6 6"></path><path d="M15 10v8"></path><path d="M19 10a4 4 0 0 0-4 4"></path><path d="M20 18.01V18"></path></g>',1),NH=[IH],OH=(0,c.aZ)({name:"CurrencyKroneDanish",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TH,NH)}}),VH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZH=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 6v12"></path><path d="M5 12c3.5 0 6-3 6-6"></path><path d="M5 12c3.5 0 6 3 6 6"></path><path d="M15 10v8"></path><path d="M19 10a4 4 0 0 0-4 4"></path></g>',1),HH=[ZH],UH=(0,c.aZ)({name:"CurrencyKroneSwedish",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VH,HH)}}),zH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qH=(0,c._)("path",{d:"M17 18h-7a3 3 0 0 1-3-3V5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$H=[qH],KH=(0,c.aZ)({name:"CurrencyLeu",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zH,$H)}}),YH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5v15a7 7 0 0 0 7-7"}),(0,c._)("path",{d:"M6 15l8-4"}),(0,c._)("path",{d:"M14 7l-8 4"})],-1),GH=[WH],JH=(0,c.aZ)({name:"CurrencyLira",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YH,GH)}}),XH={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QH=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 19H9.806a2 2 0 0 1-1.98-2.283L9.5 5"}),(0,c._)("path",{d:"M14 9l-9 4"})],-1),nU=[QH],sU=(0,c.aZ)({name:"CurrencyLitecoin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XH,nU)}}),eU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 18V7.052a1.05 1.05 0 0 1 1.968-.51l6.064 10.916a1.05 1.05 0 0 0 1.968-.51V6"}),(0,c._)("path",{d:"M5 10h14"}),(0,c._)("path",{d:"M5 14h14"})],-1),tU=[aU],rU=(0,c.aZ)({name:"CurrencyNaira",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eU,tU)}}),oU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pU=(0,c._)("path",{d:"M17 18.5a6 6 0 0 1-5 0a6 6 0 0 0-5 .5a3 3 0 0 0 2-2.5V9a4 4 0 0 1 7.45-2m-2.55 6h-7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),lU=[pU],iU=(0,c.aZ)({name:"CurrencyPound",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oU,lU)}}),cU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uU=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 6h-4a3 3 0 0 0 0 6h1a3 3 0 0 1 0 6h-4"></path><path d="M4 18V6h3a3 3 0 1 1 0 6H4c5.5 0 5 4 6 6"></path><path d="M18 6V4"></path><path d="M17 20v-2"></path></g>',1),dU=[uU],hU=(0,c.aZ)({name:"CurrencyReal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cU,dU)}}),gU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mU=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 9v8a2 2 0 1 0 4 0"></path><path d="M19 9H5"></path><path d="M19 5H5"></path><path d="M9 9v4c0 2.5-.667 4-2 6"></path></g>',1),kU=[mU],bU=(0,c.aZ)({name:"CurrencyRenminbi",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gU,kU)}}),vU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wU=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="12" r="3"></circle><circle cx="17" cy="7" r="3"></circle><circle cx="17" cy="17" r="3"></circle><path d="M10 12h3l2-2.5"></path><path d="M15 14.5L13 12"></path></g>',1),xU=[wU],fU=(0,c.aZ)({name:"CurrencyRipple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vU,xU)}}),yU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 9v2a2 2 0 1 1-4 0v-1v1a2 2 0 1 1-4 0v-1v4a2 2 0 1 1-4 0v-2"}),(0,c._)("path",{d:"M18 12.01V12"}),(0,c._)("path",{d:"M22 10v1a5 5 0 0 1-5 5"})],-1),_U=[MU],CU=(0,c.aZ)({name:"CurrencyRiyal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yU,_U)}}),SU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 19V5h6a3 3 0 0 1 0 6H6"}),(0,c._)("path",{d:"M14 15H6"})],-1),PU=[EU],jU=(0,c.aZ)({name:"CurrencyRubel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SU,PU)}}),AU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 5H7h3a4 4 0 0 1 0 8H7l6 6"}),(0,c._)("path",{d:"M7 9h11"})],-1),RU=[DU],FU=(0,c.aZ)({name:"CurrencyRupee",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AU,RU)}}),BU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 18V6h4a4 4 0 0 1 4 4v4"}),(0,c._)("path",{d:"M18 6v12h-4a4 4 0 0 1-4-4v-4"})],-1),TU=[LU],IU=(0,c.aZ)({name:"CurrencyShekel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BU,TU)}}),NU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"16.5",cy:"15.5",r:"1"}),(0,c._)("path",{d:"M7 7a2 2 0 1 1 4 0v9a3 3 0 0 0 6 0v-.5"}),(0,c._)("path",{d:"M8 11h6"})],-1),VU=[OU],ZU=(0,c.aZ)({name:"CurrencyTaka",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NU,VU)}}),HU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UU=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 6h10"></path><path d="M12 6v13"></path><path d="M8 17l8-3"></path><path d="M16 10l-8 3"></path></g>',1),zU=[UU],qU=(0,c.aZ)({name:"CurrencyTugrik",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HU,zU)}}),$U={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6l3.245 11.358a.85.85 0 0 0 1.624.035L12 8l3.131 9.393a.85.85 0 0 0 1.624-.035L20 6"}),(0,c._)("path",{d:"M21 10H3"}),(0,c._)("path",{d:"M21 14H3"})],-1),YU=[KU],WU=(0,c.aZ)({name:"CurrencyWon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$U,YU)}}),GU={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JU=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 19v-7L7 5m10 0l-5 7"}),(0,c._)("path",{d:"M8 17h8"}),(0,c._)("path",{d:"M8 13h8"})],-1),XU=[JU],QU=(0,c.aZ)({name:"CurrencyYen",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GU,XU)}}),nz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 18H5l7-7H5"}),(0,c._)("path",{d:"M17 18V5"}),(0,c._)("path",{d:"M14 14.5l6-3.5"})],-1),ez=[sz],az=(0,c.aZ)({name:"CurrencyZloty",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nz,ez)}}),tz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><circle cx="12" cy="12" r="8"></circle><path d="M12 2v2"></path><path d="M12 20v2"></path><path d="M20 12h2"></path><path d="M2 12h2"></path></g>',1),oz=[rz],pz=(0,c.aZ)({name:"CurrentLocation",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tz,oz)}}),lz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 12h4"}),(0,c._)("path",{d:"M9 4a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3"}),(0,c._)("path",{d:"M15 4a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3"})],-1),cz=[iz],uz=(0,c.aZ)({name:"CursorText",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lz,cz)}}),dz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="17" r="3"></circle><circle cx="17" cy="17" r="3"></circle><path d="M9.15 14.85L18 4"></path><path d="M6 4l8.85 10.85"></path></g>',1),gz=[hz],mz=(0,c.aZ)({name:"Cut",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dz,gz)}}),kz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"13",r:"2"}),(0,c._)("path",{d:"M13.45 11.55L15.5 9.5"}),(0,c._)("path",{d:"M6.4 20a9 9 0 1 1 11.2 0z"})],-1),vz=[bz],wz=(0,c.aZ)({name:"Dashboard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kz,vz)}}),xz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("ellipse",{cx:"12",cy:"6",rx:"8",ry:"3"}),(0,c._)("path",{d:"M4 6v6a8 3 0 0 0 16 0V6"}),(0,c._)("path",{d:"M4 12v6a8 3 0 0 0 16 0v-6"})],-1),yz=[fz],Mz=(0,c.aZ)({name:"Database",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xz,yz)}}),_z={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("ellipse",{cx:"12",cy:"6",rx:"8",ry:"3"}),(0,c._)("path",{d:"M4 6v6c0 1.657 3.582 3 8 3a19.84 19.84 0 0 0 3.302-.267M20 12V6"}),(0,c._)("path",{d:"M4 12v6c0 1.599 3.335 2.905 7.538 2.995M20 14v-2m-6 7h7m-3-3l3 3l-3 3"})],-1),Sz=[Cz],Ez=(0,c.aZ)({name:"DatabaseExport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_z,Sz)}}),Pz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("ellipse",{cx:"12",cy:"6",rx:"8",ry:"3"}),(0,c._)("path",{d:"M4 6v8m5.009.783c.924.14 1.933.217 2.991.217c4.418 0 8-1.343 8-3V6"}),(0,c._)("path",{d:"M11.252 20.987c.246.009.496.013.748.013c4.418 0 8-1.343 8-3v-6M2 19h7m-3-3l3 3l-3 3"})],-1),Az=[jz],Dz=(0,c.aZ)({name:"DatabaseImport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pz,Az)}}),Rz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12.983 8.978C16.938 8.796 20 7.532 20 6c0-1.657-3.582-3-8-3c-1.661 0-3.204.19-4.483.515M4.734 4.743C4.263 5.125 4 5.551 4 6c0 1.22 1.944 2.271 4.734 2.74"></path><path d="M4 6v6c0 1.657 3.582 3 8 3c.986 0 1.93-.067 2.802-.19m3.187-.82C19.24 13.46 20 12.762 20 12V6"></path><path d="M4 12v6c0 1.657 3.582 3 8 3c3.217 0 5.991-.712 7.261-1.74M20 16v-4"></path><path d="M3 3l18 18"></path></g>',1),Bz=[Fz],Lz=(0,c.aZ)({name:"DatabaseOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rz,Bz)}}),Tz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Iz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 19h14a2 2 0 0 0 1.84-2.75L13.74 4a2 2 0 0 0-3.5 0l-7.1 12.25A2 2 0 0 0 4.89 19"}),(0,c._)("path",{d:"M12 3v16"})],-1),Nz=[Iz],Oz=(0,c.aZ)({name:"Details",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tz,Nz)}}),Vz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="12" rx="1"></rect><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M8 12l3-3l2 2l3-3"></path></g>',1),Hz=[Zz],Uz=(0,c.aZ)({name:"DeviceAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vz,Hz)}}),zz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M3 17l4-3h10l4 3"></path><circle cx="7.5" cy="9.5" r=".5" fill="currentColor"></circle><circle cx="16.5" cy="9.5" r=".5" fill="currentColor"></circle></g>',1),$z=[qz],Kz=(0,c.aZ)({name:"DeviceAudioTape",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zz,$z)}}),Yz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wz=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="4" rx="1"></rect><circle cx="12" cy="14" r="4"></circle><path d="M19 7v7a7 7 0 0 1-14 0V7"></path><path d="M12 14h.01"></path></g>',1),Gz=[Wz],Jz=(0,c.aZ)({name:"DeviceCctv",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yz,Gz)}}),Xz={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qz=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"7"}),(0,c._)("circle",{cx:"12",cy:"10",r:"3"}),(0,c._)("path",{d:"M8 16l-2.091 3.486A1 1 0 0 0 6.766 21h10.468a1 1 0 0 0 .857-1.514L16 16"})],-1),nq=[Qz],sq=(0,c.aZ)({name:"DeviceComputerCamera",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xz,nq)}}),eq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.15 6.153a7 7 0 0 0 9.696 9.696m2-2a7 7 0 0 0-9.699-9.695"></path><path d="M9.13 9.122a3 3 0 0 0 3.743 3.749m2-2a3 3 0 0 0-3.737-3.736"></path><path d="M8 16l-2.091 3.486A1 1 0 0 0 6.766 21h10.468a1 1 0 0 0 .857-1.514L16 16"></path><path d="M3 3l18 18"></path></g>',1),tq=[aq],rq=(0,c.aZ)({name:"DeviceComputerCameraOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eq,tq)}}),oq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="12" rx="1"></rect><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path></g>',1),lq=[pq],iq=(0,c.aZ)({name:"DeviceDesktop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oq,lq)}}),cq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="12" rx="1"></rect><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M9 12V8"></path><path d="M12 12v-1"></path><path d="M15 12v-2"></path><path d="M12 12v-1"></path></g>',1),dq=[uq],hq=(0,c.aZ)({name:"DeviceDesktopAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cq,dq)}}),gq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 4h12a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1m-4 0H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1"></path><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M3 3l18 18"></path></g>',1),kq=[mq],bq=(0,c.aZ)({name:"DeviceDesktopOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gq,kq)}}),vq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 4h10l4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"}),(0,c._)("circle",{cx:"12",cy:"14",r:"2"}),(0,c._)("path",{d:"M14 4v4H8V4"})],-1),xq=[wq],fq=(0,c.aZ)({name:"DeviceFloppy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vq,xq)}}),yq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="6" width="20" height="12" rx="2"></rect><path d="M6 12h4m-2-2v4"></path><path d="M15 11v.01"></path><path d="M18 13v.01"></path></g>',1),_q=[Mq],Cq=(0,c.aZ)({name:"DeviceGamepad",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yq,_q)}}),Sq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Eq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 19h18"}),(0,c._)("rect",{x:"5",y:"6",width:"14",height:"10",rx:"1"})],-1),Pq=[Eq],jq=(0,c.aZ)({name:"DeviceLaptop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sq,Pq)}}),Aq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"4",width:"10",height:"16",rx:"1"}),(0,c._)("path",{d:"M11 5h2"}),(0,c._)("path",{d:"M12 17v.01"})],-1),Rq=[Dq],Fq=(0,c.aZ)({name:"DeviceMobile",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Aq,Rq)}}),Bq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 3h10v8h-3l-4 2v-2h-3z"}),(0,c._)("path",{d:"M15 16v4a1 1 0 0 1-1 1H6a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h2"}),(0,c._)("path",{d:"M10 18v.01"})],-1),Tq=[Lq],Iq=(0,c.aZ)({name:"DeviceMobileMessage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bq,Tq)}}),Nq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oq=(0,c._)("g",{transform:"rotate(90 12 12)",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"7",y:"4",width:"10",height:"16",rx:"1"}),(0,c._)("path",{d:"M11 5h2"}),(0,c._)("path",{d:"M12 17v.01"})],-1),Vq=[Oq],Zq=(0,c.aZ)({name:"DeviceMobileRotated",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nq,Vq)}}),Hq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uq=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="10" height="16" rx="1"></rect><path d="M8 5h2"></path><path d="M9 17v.01"></path><path d="M20 6l-2 3l2 3l-2 3l2 3"></path></g>',1),zq=[Uq],qq=(0,c.aZ)({name:"DeviceMobileVibration",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hq,zq)}}),$q={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"3",width:"14",height:"18",rx:"2"}),(0,c._)("circle",{cx:"12",cy:"14",r:"3"}),(0,c._)("path",{d:"M12 7v.01"})],-1),Yq=[Kq],Wq=(0,c.aZ)({name:"DeviceSpeaker",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$q,Yq)}}),Gq={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jq=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"3",width:"14",height:"18",rx:"1"}),(0,c._)("circle",{cx:"12",cy:"17",r:"1"})],-1),Xq=[Jq],Qq=(0,c.aZ)({name:"DeviceTablet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gq,Xq)}}),n$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"7",width:"18",height:"13",rx:"2"}),(0,c._)("path",{d:"M16 3l-4 4l-4-4"})],-1),e$=[s$],a$=(0,c.aZ)({name:"DeviceTv",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n$,e$)}}),t$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"6",y:"6",width:"12",height:"12",rx:"3"}),(0,c._)("path",{d:"M9 18v3h6v-3"}),(0,c._)("path",{d:"M9 6V3h6v3"})],-1),o$=[r$],p$=(0,c.aZ)({name:"DeviceWatch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t$,o$)}}),l$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="6" y="6" width="12" height="12" rx="3"></rect><path d="M9 18v3h6v-3"></path><path d="M9 6V3h6v3"></path><path d="M9 14v-4"></path><path d="M12 14v-1"></path><path d="M15 14v-3"></path></g>',1),c$=[i$],u$=(0,c.aZ)({name:"DeviceWatchStats",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l$,c$)}}),d$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="6" y="6" width="12" height="12" rx="3"></rect><path d="M9 18v3h6v-3"></path><path d="M9 6V3h6v3"></path><path d="M12 10a2 2 0 1 0 2 2"></path></g>',1),g$=[h$],m$=(0,c.aZ)({name:"DeviceWatchStats2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d$,g$)}}),k$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"13",y:"8",width:"8",height:"12",rx:"1"}),(0,c._)("path",{d:"M18 8V5a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h9"}),(0,c._)("path",{d:"M16 9h2"})],-1),v$=[b$],w$=(0,c.aZ)({name:"Devices",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k$,v$)}}),x$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 15H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h6"></path><rect x="13" y="4" width="8" height="16" rx="1"></rect><path d="M7 19h3"></path><path d="M17 8v.01"></path><circle cx="17" cy="16" r="1"></circle><path d="M9 15v4"></path></g>',1),y$=[f$],M$=(0,c.aZ)({name:"Devices2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x$,y$)}}),_$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 5h6v14H3z"></path><path d="M12 9h10v7H12z"></path><path d="M14 19h6"></path><path d="M17 16v3"></path><path d="M6 13v.01"></path><path d="M6 16v.01"></path></g>',1),S$=[C$],E$=(0,c.aZ)({name:"DevicesPc",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_$,S$)}}),P$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 5h12l3 5l-8.5 9.5a.7.7 0 0 1-1 0L3 10l3-5"}),(0,c._)("path",{d:"M10 12L8 9.8l.6-1"})],-1),A$=[j$],D$=(0,c.aZ)({name:"Diamond",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P$,A$)}}),R$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F$=(0,c._)("path",{d:"M10.831 20.413l-5.375-6.91c-.608-.783-.608-2.223 0-3.005l5.375-6.911a1.457 1.457 0 0 1 2.338 0l5.375 6.91c.608.783.608 2.223 0 3.005l-5.375 6.911a1.457 1.457 0 0 1-2.338 0z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),B$=[F$],L$=(0,c.aZ)({name:"Diamonds",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R$,B$)}}),T$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><circle cx="8.5" cy="8.5" r=".5" fill="currentColor"></circle><circle cx="15.5" cy="8.5" r=".5" fill="currentColor"></circle><circle cx="15.5" cy="15.5" r=".5" fill="currentColor"></circle><circle cx="8.5" cy="15.5" r=".5" fill="currentColor"></circle></g>',1),N$=[I$],O$=(0,c.aZ)({name:"Dice",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T$,N$)}}),V$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 5h11"></path><path d="M12 7l2-2l-2-2"></path><path d="M5 3L3 5l2 2"></path><path d="M19 10v11"></path><path d="M17 19l2 2l2-2"></path><path d="M21 12l-2-2l-2 2"></path><rect x="3" y="10" width="11" height="11" rx="2"></rect></g>',1),H$=[Z$],U$=(0,c.aZ)({name:"Dimensions",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V$,H$)}}),z$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 10l3-3l3 3"}),(0,c._)("path",{d:"M9 14l3 3l3-3"})],-1),$$=[q$],K$=(0,c.aZ)({name:"Direction",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z$,$$)}}),Y$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W$=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 9l-3 3l3 3"}),(0,c._)("path",{d:"M14 9l3 3l-3 3"})],-1),G$=[W$],J$=(0,c.aZ)({name:"DirectionHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y$,G$)}}),X$={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q$=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5h10l2 2l-2 2H9a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1"></path><path d="M13 13H6l-2 2l2 2h7a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1"></path><path d="M12 22v-5"></path><path d="M12 13V9"></path><path d="M12 5V3"></path></g>',1),nK=[Q$],sK=(0,c.aZ)({name:"Directions",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X$,nK)}}),eK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="5" r="2"></circle><path d="M11 7v8h4l4 5"></path><path d="M11 11h5"></path><path d="M7 11.5a5 5 0 1 0 6 7.5"></path></g>',1),tK=[aK],rK=(0,c.aZ)({name:"Disabled",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eK,tK)}}),oK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"17",cy:"6",r:"2"}),(0,c._)("path",{d:"M9 11a5 5 0 1 0 3.95 7.95"}),(0,c._)("path",{d:"M19 20l-4-5h-4l3-5l-4-3l-4 1"})],-1),lK=[pK],iK=(0,c.aZ)({name:"Disabled2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oK,lK)}}),cK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><circle cx="12" cy="12" r="1"></circle><path d="M7 12a5 5 0 0 1 5-5"></path><path d="M12 17a5 5 0 0 0 5-5"></path></g>',1),dK=[uK],hK=(0,c.aZ)({name:"Disc",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cK,dK)}}),gK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 15l6-6"></path><circle cx="9.5" cy="9.5" r=".5" fill="currentColor"></circle><circle cx="14.5" cy="14.5" r=".5" fill="currentColor"></circle><circle cx="12" cy="12" r="9"></circle></g>',1),kK=[mK],bK=(0,c.aZ)({name:"Discount",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gK,kK)}}),vK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 15l6-6"></path><circle cx="9.5" cy="9.5" r=".5" fill="currentColor"></circle><circle cx="14.5" cy="14.5" r=".5" fill="currentColor"></circle><path d="M5 7.2A2.2 2.2 0 0 1 7.2 5h1a2.2 2.2 0 0 0 1.55-.64l.7-.7a2.2 2.2 0 0 1 3.12 0l.7.7a2.2 2.2 0 0 0 1.55.64h1a2.2 2.2 0 0 1 2.2 2.2v1a2.2 2.2 0 0 0 .64 1.55l.7.7a2.2 2.2 0 0 1 0 3.12l-.7.7a2.2 2.2 0 0 0-.64 1.55v1a2.2 2.2 0 0 1-2.2 2.2h-1a2.2 2.2 0 0 0-1.55.64l-.7.7a2.2 2.2 0 0 1-3.12 0l-.7-.7a2.2 2.2 0 0 0-1.55-.64h-1a2.2 2.2 0 0 1-2.2-2.2v-1a2.2 2.2 0 0 0-.64-1.55l-.7-.7a2.2 2.2 0 0 1 0-3.12l.7-.7A2.2 2.2 0 0 0 5 8.2v-1"></path></g>',1),xK=[wK],fK=(0,c.aZ)({name:"Discount2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vK,xK)}}),yK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{fill:"currentColor",cx:"12",cy:"6",r:"1"}),(0,c._)("circle",{fill:"currentColor",cx:"12",cy:"18",r:"1"}),(0,c._)("path",{d:"M5 12h14"})],-1),_K=[MK],CK=(0,c.aZ)({name:"Divide",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yK,_K)}}),SK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{transform:"rotate(-45 12 12)",cx:"12",cy:"12",r:"4"}),(0,c._)("path",{d:"M9.172 20.485a4 4 0 1 0-5.657-5.657"}),(0,c._)("path",{d:"M14.828 3.515a4 4 0 1 0 5.657 5.657"})],-1),PK=[EK],jK=(0,c.aZ)({name:"Dna",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SK,PK)}}),AK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3v1c-.01 3.352-1.68 6.023-5.008 8.014c-3.328 1.99 3.336-2.005.008-.014c-3.328 1.99-4.997 4.662-5.008 8.014v1"></path><path d="M17 21.014v-1c-.01-3.352-1.68-6.023-5.008-8.014c-3.328-1.99 3.336 2.005.008.014C8.672 10.023 7.003 7.352 6.992 4V3"></path><path d="M7 4h10"></path><path d="M7 20h10"></path><path d="M8 8h8"></path><path d="M8 16h8"></path></g>',1),RK=[DK],FK=(0,c.aZ)({name:"Dna2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AK,RK)}}),BK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 15l5.586-5.585A2 2 0 1 1 19 8a2 2 0 1 1-1.413 3.414L14 15"}),(0,c._)("path",{d:"M12 13L8.414 9.415A2 2 0 1 0 5 8a2 2 0 1 0 1.413 3.414L10 15"}),(0,c._)("path",{d:"M3 20h18c-.175-1.671-.046-3.345-2-5H5c-1.333 1-2 2.667-2 5z"})],-1),TK=[LK],IK=(0,c.aZ)({name:"DogBowl",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BK,TK)}}),NK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 12v.01"}),(0,c._)("path",{d:"M3 21h18"}),(0,c._)("path",{d:"M6 21V5a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v16"})],-1),VK=[OK],ZK=(0,c.aZ)({name:"Door",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NK,VK)}}),HK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 12v.01"></path><path d="M3 21h18"></path><path d="M5 21V5a2 2 0 0 1 2-2h6m4 10.5V21"></path><path d="M21 7h-7m3-3l-3 3l3 3"></path></g>',1),zK=[UK],qK=(0,c.aZ)({name:"DoorEnter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HK,zK)}}),$K={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KK=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 12v.01"></path><path d="M3 21h18"></path><path d="M5 21V5a2 2 0 0 1 2-2h7.5M17 13.5V21"></path><path d="M14 7h7m-3-3l3 3l-3 3"></path></g>',1),YK=[KK],WK=(0,c.aZ)({name:"DoorExit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$K,YK)}}),GK={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JK=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"5",cy:"12",r:"1"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"19",cy:"12",r:"1"})],-1),XK=[JK],QK=(0,c.aZ)({name:"Dots",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GK,XK)}}),nY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path></g>',1),eY=[sY],aY=(0,c.aZ)({name:"DotsCircleHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nY,eY)}}),tY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"17",r:"1"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"17",cy:"7",r:"1"})],-1),oY=[rY],pY=(0,c.aZ)({name:"DotsDiagonal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tY,oY)}}),lY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"7",r:"1"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"17",cy:"17",r:"1"})],-1),cY=[iY],uY=(0,c.aZ)({name:"DotsDiagonal2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lY,cY)}}),dY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"12",cy:"19",r:"1"}),(0,c._)("circle",{cx:"12",cy:"5",r:"1"})],-1),gY=[hY],mY=(0,c.aZ)({name:"DotsVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dY,gY)}}),kY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"}),(0,c._)("path",{d:"M7 11l5 5l5-5"}),(0,c._)("path",{d:"M12 4v12"})],-1),vY=[bY],wY=(0,c.aZ)({name:"Download",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kY,vY)}}),xY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 11V9a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2"></path><path d="M13 13l9 3l-4 2l-2 4l-3-9"></path><path d="M3 3v.01"></path><path d="M7 3v.01"></path><path d="M11 3v.01"></path><path d="M15 3v.01"></path><path d="M3 7v.01"></path><path d="M3 11v.01"></path><path d="M3 15v.01"></path></g>',1),yY=[fY],MY=(0,c.aZ)({name:"DragDrop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xY,yY)}}),_Y={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="8" width="12" height="12" rx="2"></rect><path d="M4 4v.01"></path><path d="M8 4v.01"></path><path d="M12 4v.01"></path><path d="M16 4v.01"></path><path d="M4 8v.01"></path><path d="M4 12v.01"></path><path d="M4 16v.01"></path></g>',1),SY=[CY],EY=(0,c.aZ)({name:"DragDrop2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Y,SY)}}),PY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 10h4v4h-4z"></path><path d="M10 10L6.5 6.5"></path><path d="M9.96 6A3.5 3.5 0 1 0 6 9.96"></path><path d="M14 10l3.5-3.5"></path><path d="M18 9.96A3.5 3.5 0 1 0 14.04 6"></path><path d="M14 14l3.5 3.5"></path><path d="M14.04 18A3.5 3.5 0 1 0 18 14.04"></path><path d="M10 14l-3.5 3.5"></path><path d="M6 14.04A3.5 3.5 0 1 0 9.96 18"></path></g>',1),AY=[jY],DY=(0,c.aZ)({name:"Drone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PY,AY)}}),RY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 14h-4v-4"></path><path d="M10 10L6.5 6.5"></path><path d="M9.957 5.95A3.503 3.503 0 0 0 7.04 3.04m-3.02.989A3.5 3.5 0 0 0 6 9.965"></path><path d="M14 10l3.5-3.5"></path><path d="M18 9.965A3.5 3.5 0 1 0 14.034 6"></path><path d="M14 14l3.5 3.5"></path><path d="M14.035 18a3.5 3.5 0 0 0 5.936 1.98m.987-3.026a3.503 3.503 0 0 0-2.918-2.913"></path><path d="M10 14l-3.5 3.5"></path><path d="M6 14.035A3.5 3.5 0 1 0 9.966 18"></path><path d="M3 3l18 18"></path></g>',1),BY=[FY],LY=(0,c.aZ)({name:"DroneOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RY,BY)}}),TY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10.07 15.34c1.115.88 2.74.88 3.855 0c1.115-.88 1.398-2.388.671-3.575L12 8l-2.602 3.765c-.726 1.187-.443 2.694.672 3.575z"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),NY=[IY],OY=(0,c.aZ)({name:"DropCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TY,NY)}}),VY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZY=(0,c._)("path",{d:"M6.8 11a6 6 0 1 0 10.396 0l-5.197-8l-5.2 8z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),HY=[ZY],UY=(0,c.aZ)({name:"Droplet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VY,HY)}}),zY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.8 11a6 6 0 1 0 10.396 0l-5.197-8l-5.2 8z"></path><path d="M12 3v17"></path><path d="M12 12l3.544-3.544"></path><path d="M12 17.3l5.558-5.558"></path></g>',1),$Y=[qY],KY=(0,c.aZ)({name:"DropletFilled",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zY,$Y)}}),YY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WY=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.8 11a6 6 0 1 0 10.396 0l-5.197-8l-5.2 8z"></path><path d="M6 14h12"></path><path d="M7.305 17.695L11 14"></path><path d="M10.26 19.74L16 14l-5.74 5.74z"></path></g>',1),GY=[WY],JY=(0,c.aZ)({name:"DropletFilled2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YY,GY)}}),XY={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QY=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6.8 11a6 6 0 1 0 10.396 0l-5.197-8l-5.2 8z"}),(0,c._)("path",{d:"M12 3v17"})],-1),nW=[QY],sW=(0,c.aZ)({name:"DropletHalf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XY,nW)}}),eW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6.8 11a6 6 0 1 0 10.396 0l-5.197-8l-5.2 8z"}),(0,c._)("path",{d:"M6 14h12"})],-1),tW=[aW],rW=(0,c.aZ)({name:"DropletHalf2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eW,tW)}}),oW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8.454 8.458l-1.653 2.545a6 6 0 0 0 10.32 6.123"}),(0,c._)("path",{d:"M18 14a5.971 5.971 0 0 0-.803-3L12 3l-1.968 3.03"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),lW=[pW],iW=(0,c.aZ)({name:"DropletOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oW,lW)}}),cW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 10a7 7 0 1 1 13 3.6a10 10 0 0 1-2 2a8 8 0 0 0-2 3A4.5 4.5 0 0 1 8.2 20"}),(0,c._)("path",{d:"M10 10a3 3 0 1 1 5 2.2"})],-1),dW=[uW],hW=(0,c.aZ)({name:"Ear",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cW,dW)}}),gW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 10c0-1.146.277-2.245.78-3.219m1.792-2.208A7 7 0 0 1 19 13.6a10 10 0 0 1-.633.762m-2.045 1.96A8 8 0 0 0 15 18.6A4.5 4.5 0 0 1 8.2 20"}),(0,c._)("path",{d:"M11.42 7.414a3 3 0 0 1 4.131 4.13"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),kW=[mW],bW=(0,c.aZ)({name:"EarOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gW,kW)}}),vW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-3"}),(0,c._)("path",{d:"M9 15h3l8.5-8.5a1.5 1.5 0 0 0-3-3L9 12v3"}),(0,c._)("path",{d:"M16 5l3 3"})],-1),xW=[wW],fW=(0,c.aZ)({name:"Edit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vW,xW)}}),yW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 15l8.385-8.415a2.1 2.1 0 0 0-2.97-2.97L9 12v3h3z"}),(0,c._)("path",{d:"M16 5l3 3"}),(0,c._)("path",{d:"M9 7.07A7.002 7.002 0 0 0 10 21a7.002 7.002 0 0 0 6.929-5.999"})],-1),_W=[MW],CW=(0,c.aZ)({name:"EditCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yW,_W)}}),SW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EW=(0,c._)("path",{d:"M5.514 14.639C5.514 18.152 8.418 21 12 21s6.486-2.848 6.486-6.361a12.574 12.574 0 0 0-3.243-9.012A4.025 4.025 0 0 0 12 4a4.025 4.025 0 0 0-3.243 1.627a12.574 12.574 0 0 0-3.243 9.012",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),PW=[EW],jW=(0,c.aZ)({name:"Egg",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SW,PW)}}),AW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DW=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"4",width:"14",height:"16",rx:"1"}),(0,c._)("path",{d:"M10 10l2-2l2 2"}),(0,c._)("path",{d:"M10 14l2 2l2-2"})],-1),RW=[DW],FW=(0,c.aZ)({name:"Elevator",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AW,RW)}}),BW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LW=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="16" cy="18" r="2"></circle><circle cx="8" cy="18" r="2"></circle><path d="M4 8l2.1 2.8A3 3 0 0 0 8.5 12H20"></path><path d="M10 6h4"></path><path d="M12 4v4"></path><path d="M12 12v2l-2.5 2.5"></path><path d="M14.5 16.5L12 14"></path></g>',1),TW=[LW],IW=(0,c.aZ)({name:"EmergencyBed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BW,TW)}}),NW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OW=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 5H8v10h8m-1-5H8"></path><path d="M6 20v.01"></path><path d="M10 20v.01"></path><path d="M14 20v.01"></path><path d="M18 20v.01"></path></g>',1),VW=[OW],ZW=(0,c.aZ)({name:"Emphasis",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NW,VW)}}),HW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UW=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 10v6"></path><path d="M12 5v3"></path><path d="M10 5h4"></path><path d="M5 13H3"></path><path d="M6 10h2l2-2h3.382a1 1 0 0 1 .894.553l1.448 2.894a1 1 0 0 0 .894.553H18v-2h2a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-2v-2h-3v2a1 1 0 0 1-1 1h-3.465a1 1 0 0 1-.832-.445L8 16H6v-6z"></path></g>',1),zW=[UW],qW=(0,c.aZ)({name:"Engine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HW,zW)}}),$W={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KW=(0,c._)("path",{d:"M5 9h14M5 15h14",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),YW=[KW],WW=(0,c.aZ)({name:"Equal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$W,YW)}}),GW={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JW=(0,c._)("path",{d:"M5 9h14M5 15h14m0-10L5 19",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),XW=[JW],QW=(0,c.aZ)({name:"EqualNot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GW,XW)}}),nG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 19H8l-4-4a1 1 0 0 1 0-1.41l10-10a1 1 0 0 1 1.41 0l5 5a1 1 0 0 1 0 1.41l-9 9"}),(0,c._)("path",{d:"M18 12.3L11.7 6"})],-1),eG=[sG],aG=(0,c.aZ)({name:"Eraser",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nG,eG)}}),tG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="18" r="2"></circle><circle cx="19" cy="6" r="2"></circle><path d="M19 8v5a5 5 0 0 1-5 5h-3l3-3m0 6l-3-3"></path><path d="M5 16v-5a5 5 0 0 1 5-5h3l-3-3m0 6l3-3"></path></g>',1),oG=[rG],pG=(0,c.aZ)({name:"Exchange",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tG,oG)}}),lG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 19v.01"}),(0,c._)("path",{d:"M12 15V5"})],-1),cG=[iG],uG=(0,c.aZ)({name:"ExclamationMark",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lG,cG)}}),dG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M4.6 19.4L19.4 4.6"></path><path d="M7 9h4M9 7v4"></path><path d="M13 16h4"></path></g>',1),gG=[hG],mG=(0,c.aZ)({name:"Exposure",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dG,gG)}}),kG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-5"}),(0,c._)("path",{d:"M10 14L20 4"}),(0,c._)("path",{d:"M15 4h5v5"})],-1),vG=[bG],wG=(0,c.aZ)({name:"ExternalLink",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kG,vG)}}),xG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"2"}),(0,c._)("path",{d:"M22 12c-2.667 4.667-6 7-10 7s-7.333-2.333-10-7c2.667-4.667 6-7 10-7s7.333 2.333 10 7"})],-1),yG=[fG],MG=(0,c.aZ)({name:"Eye",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xG,yG)}}),_G={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"2"}),(0,c._)("path",{d:"M12 19c-4 0-7.333-2.333-10-7c2.667-4.667 6-7 10-7s7.333 2.333 10 7c-.42.736-.858 1.414-1.311 2.033"}),(0,c._)("path",{d:"M15 19l2 2l4-4"})],-1),SG=[CG],EG=(0,c.aZ)({name:"EyeCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_G,SG)}}),PG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jG=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M10.584 10.587a2 2 0 0 0 2.828 2.83"}),(0,c._)("path",{d:"M9.363 5.365A9.466 9.466 0 0 1 12 5c4 0 7.333 2.333 10 7c-.778 1.361-1.612 2.524-2.503 3.488m-2.14 1.861C15.726 18.449 13.942 19 12 19c-4 0-7.333-2.333-10-7c1.369-2.395 2.913-4.175 4.632-5.341"})],-1),AG=[jG],DG=(0,c.aZ)({name:"EyeOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PG,AG)}}),RG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.003 18.003h-.011"></path><path d="M12.003 18.002h-.011"></path><path d="M16.003 18.002h-.011"></path><path d="M4 3h16"></path><path d="M5 3v17a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V3"></path><path d="M14 7h-4"></path><path d="M9 15h1"></path><path d="M14 15h1"></path><path d="M12 11V7"></path></g>',1),BG=[FG],LG=(0,c.aZ)({name:"EyeTable",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RG,BG)}}),TG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 4H6L3 14"></path><path d="M16 4h2l3 10"></path><path d="M10 16h4"></path><path d="M21 16.5a3.5 3.5 0 0 1-7 0V14h7v2.5"></path><path d="M10 16.5a3.5 3.5 0 0 1-7 0V14h7v2.5"></path></g>',1),NG=[IG],OG=(0,c.aZ)({name:"Eyeglass",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TG,NG)}}),VG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 4H6L3 14v2.5"></path><path d="M16 4h2l3 10v2.5"></path><path d="M10 16h4"></path><circle cx="17.5" cy="16.5" r="3.5"></circle><circle cx="6.5" cy="16.5" r="3.5"></circle></g>',1),HG=[ZG],UG=(0,c.aZ)({name:"Eyeglass2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VG,HG)}}),zG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path></g>',1),$G=[qG],KG=(0,c.aZ)({name:"FaceId",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zG,$G)}}),YG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15.05a3.5 3.5 0 0 1 5 0"></path></g>',1),GG=[WG],JG=(0,c.aZ)({name:"FaceIdError",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YG,GG)}}),XG={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QG=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5.002 14.5H4.78c-1.535 0-2.778-1.12-2.778-2.5S3.245 9.5 4.78 9.5h.222"></path><path d="M19.002 14.5h.222c1.534 0 2.778-1.12 2.778-2.5s-1.244-2.5-2.778-2.5h-.222"></path><path d="M9 10h6"></path><path d="M9 14h6"></path><path d="M12.55 18.843l5-1.429A2 2 0 0 0 19 15.491V8.51a2 2 0 0 0-1.45-1.923l-5-1.429a2 2 0 0 0-1.1 0l-5 1.429A2 2 0 0 0 5 8.509v6.982a2 2 0 0 0 1.45 1.923l5 1.429a2 2 0 0 0 1.1 0z"></path></g>',1),nJ=[QG],sJ=(0,c.aZ)({name:"FaceMask",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XG,nJ)}}),eJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 21l1-5l-1-4l-3-4h4l3-3"></path><path d="M6 16l-1-4l3-4"></path><circle cx="6" cy="5" r="1"></circle><path d="M13.5 12H16l4 2"></path></g>',1),tJ=[aJ],rJ=(0,c.aZ)({name:"Fall",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eJ,tJ)}}),oJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pJ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20l10-10m0-5v5h5m-9-1v5h5m-9-1v5h5m-5-5l4-4l4-4"}),(0,c._)("path",{d:"M19 10c.638-.636 1-1.515 1-2.486A3.515 3.515 0 0 0 16.483 4c-.97 0-1.847.367-2.483 1m-3 13l4-4l4-4"})],-1),lJ=[pJ],iJ=(0,c.aZ)({name:"Feather",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oJ,lJ)}}),cJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uJ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12v4h16v-4z"}),(0,c._)("path",{d:"M6 16v4h4v-4m0-4V6L8 4L6 6v6"}),(0,c._)("path",{d:"M14 16v4h4v-4m0-4V6l-2-2l-2 2v6"})],-1),dJ=[uJ],hJ=(0,c.aZ)({name:"Fence",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cJ,dJ)}}),gJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mJ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"})],-1),kJ=[mJ],bJ=(0,c.aZ)({name:"File",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gJ,kJ)}}),vJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 17h.01"></path><path d="M12 11v3"></path></g>',1),xJ=[wJ],fJ=(0,c.aZ)({name:"FileAlert",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vJ,xJ)}}),yJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M9 17v-5"></path><path d="M12 17v-1"></path><path d="M15 17v-3"></path></g>',1),_J=[MJ],CJ=(0,c.aZ)({name:"FileAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yJ,_J)}}),SJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 8V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2h-5"></path><circle cx="6" cy="14" r="3"></circle><path d="M4.5 17L3 22l3-1.5L9 22l-1.5-5"></path></g>',1),PJ=[EJ],jJ=(0,c.aZ)({name:"FileCertificate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SJ,PJ)}}),AJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DJ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"}),(0,c._)("path",{d:"M9 15l2 2l4-4"})],-1),RJ=[DJ],FJ=(0,c.aZ)({name:"FileCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AJ,RJ)}}),BJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M10 13l-1 2l1 2"></path><path d="M14 13l1 2l-1 2"></path></g>',1),TJ=[LJ],IJ=(0,c.aZ)({name:"FileCode",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BJ,TJ)}}),NJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 12H9v5h1"></path><path d="M14 12h1v5h-1"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path></g>',1),VJ=[OJ],ZJ=(0,c.aZ)({name:"FileCode2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NJ,VJ)}}),HJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 10v4"></path><path d="M10 12h4"></path><path d="M10 17h4"></path></g>',1),zJ=[UJ],qJ=(0,c.aZ)({name:"FileDiff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HJ,zJ)}}),$J={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><rect x="9" y="12" width="3" height="5" rx="1"></rect><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M15 12v5"></path></g>',1),YJ=[KJ],WJ=(0,c.aZ)({name:"FileDigit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$J,YJ)}}),GJ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JJ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="14" width="3" height="5" rx="1"></rect><path d="M6 15a1 1 0 0 1 1-1h3.756a1 1 0 0 1 .958.713l1.2 3c.09.303.133.63-.056.884c-.188.254-.542.403-.858.403h-2v2.467a1.1 1.1 0 0 1-2.015.61L6 19v-4z"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 11V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2h-2.5"></path></g>',1),XJ=[JJ],QJ=(0,c.aZ)({name:"FileDislike",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GJ,XJ)}}),nX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H10"></path><path d="M12 17v1m0-8v1"></path></g>',1),eX=[sX],aX=(0,c.aZ)({name:"FileDollar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nX,eX)}}),tX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 11v6"></path><path d="M9 14l3 3l3-3"></path></g>',1),oX=[rX],pX=(0,c.aZ)({name:"FileDownload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tX,oX)}}),lX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 14H9"></path><path d="M14.004 11.172a3 3 0 1 0-.001 5.656"></path></g>',1),cX=[iX],uX=(0,c.aZ)({name:"FileEuro",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lX,cX)}}),dX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M11.5 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v5m-5 6h7m-3-3l3 3l-3 3"})],-1),gX=[hX],mX=(0,c.aZ)({name:"FileExport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dX,gX)}}),kX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 5v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7l-5-5H5a2 2 0 0 0-2 2z"})],-1),vX=[bX],wX=(0,c.aZ)({name:"FileHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kX,vX)}}),xX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M5 13V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2h-5.5M2 19h7m-3-3l3 3l-3 3"})],-1),yX=[fX],MX=(0,c.aZ)({name:"FileImport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xX,yX)}}),_X={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M11 14h1v4h1"></path><path d="M12 11h.01"></path></g>',1),SX=[CX],EX=(0,c.aZ)({name:"FileInfo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_X,SX)}}),PX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M9 7h1"></path><path d="M9 13h6"></path><path d="M13 17h2"></path></g>',1),AX=[jX],DX=(0,c.aZ)({name:"FileInvoice",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PX,AX)}}),RX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="16" width="3" height="5" rx="1"></rect><path d="M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958-.713l1.2-3c.09-.303.133-.63-.056-.884C12.67 16.149 12.316 16 12 16h-2v-2.467a1.1 1.1 0 0 0-2.015-.61L6 16v4z"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12.1V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2h-2.3"></path></g>',1),BX=[FX],LX=(0,c.aZ)({name:"FileLike",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RX,BX)}}),TX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"}),(0,c._)("path",{d:"M9 14h6"})],-1),NX=[IX],OX=(0,c.aZ)({name:"FileMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TX,NX)}}),VX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><circle cx="11" cy="16" r="1"></circle><path d="M12 16v-5l2 1"></path></g>',1),HX=[ZX],UX=(0,c.aZ)({name:"FileMusic",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VX,HX)}}),zX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M7 3h7l5 5v7m0 4a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V5"})],-1),$X=[qX],KX=(0,c.aZ)({name:"FileOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zX,$X)}}),YX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WX=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"}),(0,c._)("path",{d:"M9 12a.5.5 0 0 0 1 0v-1a.5.5 0 0 0-1 0v1a5 5 0 0 0 5 5h1a.5.5 0 0 0 0-1h-1a.5.5 0 0 0 0 1"})],-1),GX=[WX],JX=(0,c.aZ)({name:"FilePhone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YX,GX)}}),XX={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QX=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 11v6"></path><path d="M9 14h6"></path></g>',1),nQ=[QX],sQ=(0,c.aZ)({name:"FilePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XX,nQ)}}),eQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="17" cy="17" r="4"></circle><path d="M17 13v4h4"></path><path d="M12 3v4a1 1 0 0 0 1 1h4"></path><path d="M11.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v2m0 3v4"></path></g>',1),tQ=[aQ],rQ=(0,c.aZ)({name:"FileReport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eQ,tQ)}}),oQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M12 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v4.5"></path><circle cx="16.5" cy="17.5" r="2.5"></circle><path d="M18.5 19.5L21 22"></path></g>',1),lQ=[pQ],iQ=(0,c.aZ)({name:"FileSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oQ,lQ)}}),cQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12V5a2 2 0 0 1 2-2h7l5 5v4"></path><path d="M3 12h18"></path><path d="M6 16v2"></path><path d="M10 16v6"></path><path d="M14 16v2"></path><path d="M18 16v4"></path></g>',1),dQ=[uQ],hQ=(0,c.aZ)({name:"FileShredder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cQ,dQ)}}),gQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 21v-4a3 3 0 0 1 3-3h5"></path><path d="M9 17l3-3l-3-3"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 11V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2H7.5"></path></g>',1),kQ=[mQ],bQ=(0,c.aZ)({name:"FileSymlink",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gQ,kQ)}}),vQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M9 9h1"></path><path d="M9 13h6"></path><path d="M9 17h6"></path></g>',1),xQ=[wQ],fQ=(0,c.aZ)({name:"FileText",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vQ,xQ)}}),yQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"></path><path d="M12 11v6"></path><path d="M9 14l3-3l3 3"></path></g>',1),_Q=[MQ],CQ=(0,c.aZ)({name:"FileUpload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yQ,_Q)}}),SQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EQ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2z"}),(0,c._)("path",{d:"M10 12l4 4m0-4l-4 4"})],-1),PQ=[EQ],jQ=(0,c.aZ)({name:"FileX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SQ,PQ)}}),AQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 20.735A2 2 0 0 1 5 19V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2h-1"></path><path d="M11 17a2 2 0 0 1 2 2v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-2a2 2 0 0 1 2-2z"></path><path d="M11 5h-1"></path><path d="M13 7h-1"></path><path d="M11 9h-1"></path><path d="M13 11h-1"></path><path d="M11 13h-1"></path><path d="M13 15h-1"></path></g>',1),RQ=[DQ],FQ=(0,c.aZ)({name:"FileZip",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AQ,RQ)}}),BQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LQ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 3v4a1 1 0 0 0 1 1h4"}),(0,c._)("path",{d:"M18 17h-7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4l5 5v7a2 2 0 0 1-2 2z"}),(0,c._)("path",{d:"M16 17v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h2"})],-1),TQ=[LQ],IQ=(0,c.aZ)({name:"Files",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BQ,TQ)}}),NQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 3v4a1 1 0 0 0 1 1h4"></path><path d="M17 17h-6a2 2 0 0 1-2-2V9m0-4a2 2 0 0 1 2-2h4l5 5v7c0 .294-.063.572-.177.823"></path><path d="M16 17v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2"></path><path d="M3 3l18 18"></path></g>',1),VQ=[OQ],ZQ=(0,c.aZ)({name:"FilesOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NQ,VQ)}}),HQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UQ=(0,c._)("path",{d:"M5.5 5h13a1 1 0 0 1 .5 1.5L14 12v7l-4-3v-4L5 6.5A1 1 0 0 1 5.5 5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zQ=[UQ],qQ=(0,c.aZ)({name:"Filter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HQ,zQ)}}),$Q={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KQ=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M9 5h9.5a1 1 0 0 1 .5 1.5l-4.049 4.454M14 14v5l-4-3v-4L5 6.5a1 1 0 0 1 .18-1.316"})],-1),YQ=[KQ],WQ=(0,c.aZ)({name:"FilterOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Q,YQ)}}),GQ={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JQ=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18.9 7a8 8 0 0 1 1.1 5v1a6 6 0 0 0 .8 3"></path><path d="M8 11a4 4 0 0 1 8 0v1a10 10 0 0 0 2 6"></path><path d="M12 11v2a14 14 0 0 0 2.5 8"></path><path d="M8 15a18 18 0 0 0 1.8 6"></path><path d="M4.9 19a22 22 0 0 1-.9-7v-1a8 8 0 0 1 12-6.95"></path></g>',1),XQ=[JQ],QQ=(0,c.aZ)({name:"Fingerprint",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GQ,XQ)}}),n0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M7 18h8m4 0h2v-6a5 5 0 0 0-5-5h-1l1.5 5H21"></path><path d="M12 18V7h3"></path><path d="M3 17v-5h9"></path><path d="M3 9l18-6"></path><path d="M6 12V8"></path></g>',1),e0=[s0],a0=(0,c.aZ)({name:"Firetruck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n0,e0)}}),t0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 8V6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><rect x="4" y="8" width="16" height="12" rx="2"></rect><path d="M10 14h4"></path><path d="M12 12v4"></path></g>',1),o0=[r0],p0=(0,c.aZ)({name:"FirstAidKit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t0,o0)}}),l0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16.69 7.44A6.973 6.973 0 0 0 15 12a6.97 6.97 0 0 0 1.699 4.571"></path><path d="M2 9.504c7.715 8.647 14.75 10.265 20 2.498C16.75 4.241 9.715 5.86 2 14.506"></path><path d="M18 11v.01"></path><path d="M11.5 10.5c-.667 1-.667 2 0 3"></path></g>',1),c0=[i0],u0=(0,c.aZ)({name:"Fish",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l0,c0)}}),d0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 5v16"></path><path d="M19 5v9"></path><path d="M5 5a5 5 0 0 1 7 0a5 5 0 0 0 7 0"></path><path d="M5 14a5 5 0 0 1 7 0a5 5 0 0 0 7 0"></path></g>',1),g0=[h0],m0=(0,c.aZ)({name:"Flag",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d0,g0)}}),k0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b0=(0,c._)("path",{d:"M5 14h14V5H5v16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),v0=[b0],w0=(0,c.aZ)({name:"Flag2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k0,v0)}}),x0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f0=(0,c._)("path",{d:"M5 14h14l-4.5-4.5L19 5H5v16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),y0=[f0],M0=(0,c.aZ)({name:"Flag3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x0,y0)}}),_0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C0=(0,c._)("path",{d:"M12 12c2-2.96 0-7-1-8c0 3.038-1.773 4.741-3 6c-1.226 1.26-2 3.24-2 5a6 6 0 1 0 12 0c0-1.532-1.056-3.94-2-5c-1.786 3-2.791 3-4 2z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),S0=[C0],E0=(0,c.aZ)({name:"Flame",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_0,S0)}}),P0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j0=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"2"}),(0,c._)("path",{d:"M3 12h4m5-9v4m5 5h4m-9 5v4M7.5 7.5l1 1m8-1l-1 1m0 7l1 1m-8-1l-1 1"})],-1),A0=[j0],D0=(0,c.aZ)({name:"Flare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P0,A0)}}),R0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F0=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 3h6"}),(0,c._)("path",{d:"M10 9h4"}),(0,c._)("path",{d:"M10 3v6L6 20a.7.7 0 0 0 .5 1h11a.7.7 0 0 0 .5-1L14 9V3"})],-1),B0=[F0],L0=(0,c.aZ)({name:"Flask",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R0,B0)}}),T0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I0=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6.1 15h11.8"}),(0,c._)("path",{d:"M14 3v7.342A6.002 6.002 0 0 1 15.318 21H8.683A6.002 6.002 0 0 1 10 10.34V3h4z"}),(0,c._)("path",{d:"M9 3h6"})],-1),N0=[I0],O0=(0,c.aZ)({name:"Flask2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T0,N0)}}),V0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z0=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 12h18"}),(0,c._)("path",{d:"M7 16h10L7 21v-5"}),(0,c._)("path",{d:"M7 8h10L7 3v5"})],-1),H0=[Z0],U0=(0,c.aZ)({name:"FlipHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V0,H0)}}),z0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q0=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3v18"}),(0,c._)("path",{d:"M16 7v10h5L16 7"}),(0,c._)("path",{d:"M8 7v10H3L8 7"})],-1),$0=[q0],K0=(0,c.aZ)({name:"FlipVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z0,$0)}}),Y0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="6" height="6" x="9" y="5" rx="1"></rect><path d="M4 7h1"></path><path d="M4 11h1"></path><path d="M19 7h1"></path><path d="M19 11h1"></path><path d="M4 15h16"></path><path d="M4 19h16"></path></g>',1),G0=[W0],J0=(0,c.aZ)({name:"FloatCenter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y0,G0)}}),X0={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q0=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="6" height="6" x="4" y="5" rx="1"></rect><path d="M14 7h6"></path><path d="M14 11h6"></path><path d="M4 15h16"></path><path d="M4 19h16"></path></g>',1),n1=[Q0],s1=(0,c.aZ)({name:"FloatLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X0,n1)}}),e1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},a1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{width:"6",height:"6",x:"4",y:"5",rx:"1"}),(0,c._)("path",{d:"M4 15h16"}),(0,c._)("path",{d:"M4 19h16"})],-1),t1=[a1],r1=(0,c.aZ)({name:"FloatNone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",e1,t1)}}),o1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},p1=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="6" height="6" x="14" y="5" rx="1"></rect><path d="M4 7h6"></path><path d="M4 11h6"></path><path d="M4 15h16"></path><path d="M4 19h16"></path></g>',1),l1=[p1],i1=(0,c.aZ)({name:"FloatRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",o1,l1)}}),c1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("path",{d:"M12 2a3 3 0 0 1 3 3c0 .562-.259 1.442-.776 2.64L13.5 9l1.76-1.893c.499-.6.922-1.002 1.27-1.205a2.968 2.968 0 0 1 4.07 1.099a3.011 3.011 0 0 1-1.09 4.098c-.374.217-.99.396-1.846.535L15 12l2.4.326c.995.145 1.698.337 2.11.576A3.011 3.011 0 0 1 20.6 17a2.968 2.968 0 0 1-4.07 1.098c-.348-.202-.771-.604-1.27-1.205L13.5 15l.724 1.36C14.74 17.559 15 18.439 15 19a3 3 0 0 1-6 0c0-.562.259-1.442.776-2.64L10.5 15l-1.76 1.893c-.499.601-.922 1.003-1.27 1.205A2.968 2.968 0 0 1 3.4 17a3.011 3.011 0 0 1 1.09-4.098c.374-.218.99-.396 1.846-.536L9 12l-2.4-.325c-.995-.145-1.698-.337-2.11-.576A3.011 3.011 0 0 1 3.4 7a2.968 2.968 0 0 1 4.07-1.099c.348.203.771.604 1.27 1.205L10.5 9C9.5 6.708 9 5.375 9 5a3 3 0 0 1 3-3z"})],-1),d1=[u1],h1=(0,c.aZ)({name:"Flower",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c1,d1)}}),g1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},m1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:".5",fill:"currentColor"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),k1=[m1],b1=(0,c.aZ)({name:"Focus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",g1,k1)}}),v1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},w1=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r=".5" fill="currentColor"></circle><circle cx="12" cy="12" r="7"></circle><path d="M12 3v2"></path><path d="M3 12h2"></path><path d="M12 19v2"></path><path d="M19 12h2"></path></g>',1),x1=[w1],f1=(0,c.aZ)({name:"Focus2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",v1,x1)}}),y1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M1=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3v6l3-3M9 6l3 3"></path><path d="M12 21v-6l3 3m-6 0l3-3"></path><path d="M4 12h1"></path><path d="M9 12h1"></path><path d="M14 12h1"></path><path d="M19 12h1"></path></g>',1),_1=[M1],C1=(0,c.aZ)({name:"Fold",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y1,_1)}}),S1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},E1=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 11v8l3-3m-6 0l3 3"></path><path d="M9 7h1"></path><path d="M14 7h1"></path><path d="M19 7h1"></path><path d="M4 7h1"></path></g>',1),P1=[E1],j1=(0,c.aZ)({name:"FoldDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",S1,P1)}}),A1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},D1=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 13V5L9 8m6 0l-3-3"></path><path d="M9 17h1"></path><path d="M14 17h1"></path><path d="M19 17h1"></path><path d="M4 17h1"></path></g>',1),R1=[D1],F1=(0,c.aZ)({name:"FoldUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",A1,R1)}}),B1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},L1=(0,c._)("path",{d:"M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),T1=[L1],I1=(0,c.aZ)({name:"Folder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",B1,T1)}}),N1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M9 13h6"})],-1),V1=[O1],Z1=(0,c.aZ)({name:"FolderMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",N1,V1)}}),H1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},U1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M19 19H5a2 2 0 0 1-2-2V6a2 2 0 0 1 1.172-1.821M8 4h1l3 3h7a2 2 0 0 1 2 2v8"})],-1),z1=[U1],q1=(0,c.aZ)({name:"FolderOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",H1,z1)}}),$1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},K1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M12 10v6"}),(0,c._)("path",{d:"M9 13h6"})],-1),Y1=[K1],W1=(0,c.aZ)({name:"FolderPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$1,Y1)}}),G1={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},J1=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M10 11l4 4m0-4l-4 4"})],-1),X1=[J1],Q1=(0,c.aZ)({name:"FolderX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",G1,X1)}}),n2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s2=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 4h3l2 2h5a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M17 17v2a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h2"})],-1),e2=[s2],a2=(0,c.aZ)({name:"Folders",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n2,e2)}}),t2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r2=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 9l6 6"})],-1),o2=[r2],p2=(0,c.aZ)({name:"Forbid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t2,o2)}}),l2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i2=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 15l6-6"})],-1),c2=[i2],u2=(0,c.aZ)({name:"Forbid2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l2,c2)}}),d2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="17" r="2"></circle><circle cx="14" cy="17" r="2"></circle><path d="M7 17h5"></path><path d="M3 17v-6h13v6"></path><path d="M5 11V7h4"></path><path d="M9 11V5h4l3 6"></path><path d="M22 15h-3V5"></path><path d="M16 13h3"></path></g>',1),g2=[h2],m2=(0,c.aZ)({name:"Forklift",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d2,g2)}}),k2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3"></path><path d="M6 3a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3"></path><path d="M13 7h7a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-7"></path><path d="M5 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h1"></path><path d="M17 12h.01"></path><path d="M13 12h.01"></path></g>',1),v2=[b2],w2=(0,c.aZ)({name:"Forms",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k2,v2)}}),x2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7h16"></path><path d="M4 17h16"></path><path d="M7 4v16"></path><path d="M17 4v16"></path></g>',1),y2=[f2],M2=(0,c.aZ)({name:"Frame",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x2,y2)}}),_2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M13.867 9.75c-.246-.48-.708-.769-1.2-.75h-1.334C10.597 9 10 9.67 10 10.5c0 .827.597 1.499 1.333 1.499h1.334c.736 0 1.333.671 1.333 1.5c0 .828-.597 1.499-1.333 1.499h-1.334c-.492.019-.954-.27-1.2-.75"></path><path d="M12 7v2"></path><path d="M12 15v2"></path><path d="M6 6l1.5 1.5"></path><path d="M16.5 16.5L18 18"></path></g>',1),S2=[C2],E2=(0,c.aZ)({name:"FreeRights",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_2,S2)}}),P2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="5" r="2"></circle><path d="M5 22v-5l-1-1v-4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4l-1 1v5"></path><circle cx="17" cy="5" r="2"></circle><path d="M15 22v-4h-2l2-6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1l2 6h-2v4"></path></g>',1),A2=[j2],D2=(0,c.aZ)({name:"Friends",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P2,A2)}}),R2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 11h1a2 2 0 0 1 2 2v3a1.5 1.5 0 0 0 3 0V9l-3-3"></path><path d="M4 20V6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v14"></path><path d="M3 20h12"></path><path d="M18 7v1a1 1 0 0 0 1 1h1"></path><path d="M4 11h10"></path></g>',1),B2=[F2],L2=(0,c.aZ)({name:"GasStation",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R2,B2)}}),T2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><circle cx="12" cy="12" r="1"></circle><path d="M13.41 10.59L16 8"></path><path d="M7 12a5 5 0 0 1 5-5"></path></g>',1),N2=[I2],O2=(0,c.aZ)({name:"Gauge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T2,N2)}}),V2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 10l7.383 7.418c.823.82.823 2.148 0 2.967a2.11 2.11 0 0 1-2.976 0L10 13"></path><path d="M6 9l4 4"></path><path d="M13 10L9 6"></path><path d="M3 21h7"></path><path d="M6.793 15.793l-3.586-3.586a1 1 0 0 1 0-1.414L5.5 8.5L6 9l3-3l-.5-.5l2.293-2.293a1 1 0 0 1 1.414 0l3.586 3.586a1 1 0 0 1 0 1.414L13.5 10.5L13 10l-3 3l.5.5l-2.293 2.293a1 1 0 0 1-1.414 0z"></path></g>',1),H2=[Z2],U2=(0,c.aZ)({name:"Gavel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V2,H2)}}),z2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 21l4-12m2 0l1.48 4.439m.949 2.847L17 21"></path><circle cx="12" cy="7" r="2"></circle><path d="M4 12c1.526 2.955 4.588 5 8 5c3.41 0 6.473-2.048 8-5"></path><path d="M12 5V3"></path></g>',1),$2=[q2],K2=(0,c.aZ)({name:"Geometry",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z2,$2)}}),Y2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 11a7 7 0 0 1 14 0v7a1.78 1.78 0 0 1-3.1 1.4a1.65 1.65 0 0 0-2.6 0a1.65 1.65 0 0 1-2.6 0a1.65 1.65 0 0 0-2.6 0A1.78 1.78 0 0 1 5 18v-7"></path><path d="M10 10h.01"></path><path d="M14 10h.01"></path><path d="M10 14a3.5 3.5 0 0 0 4 0"></path></g>',1),G2=[W2],J2=(0,c.aZ)({name:"Ghost",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y2,G2)}}),X2={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q2=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="8" width="18" height="4" rx="1"></rect><path d="M12 8v13"></path><path d="M19 12v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7"></path><path d="M7.5 8a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5a2.5 2.5 0 0 1 0 5"></path></g>',1),n3=[Q2],s3=(0,c.aZ)({name:"Gift",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X2,n3)}}),e3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},a3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="18" r="2"></circle><circle cx="7" cy="6" r="2"></circle><circle cx="17" cy="6" r="2"></circle><path d="M7 8v8"></path><path d="M9 18h6a2 2 0 0 0 2-2v-5"></path><path d="M14 14l3-3l3 3"></path></g>',1),t3=[a3],r3=(0,c.aZ)({name:"GitBranch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",e3,t3)}}),o3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},p3=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("path",{d:"M12 3v6"}),(0,c._)("path",{d:"M12 15v6"})],-1),l3=[p3],i3=(0,c.aZ)({name:"GitCommit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",o3,l3)}}),c3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="6" r="2"></circle><circle cx="18" cy="18" r="2"></circle><path d="M11 6h5a2 2 0 0 1 2 2v8"></path><path d="M14 9l-3-3l3-3"></path><path d="M13 18H8a2 2 0 0 1-2-2V8"></path><path d="M10 15l3 3l-3 3"></path></g>',1),d3=[u3],h3=(0,c.aZ)({name:"GitCompare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c3,d3)}}),g3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},m3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="18" r="2"></circle><circle cx="7" cy="6" r="2"></circle><circle cx="17" cy="6" r="2"></circle><path d="M7 8v2a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V8"></path><path d="M12 12v4"></path></g>',1),k3=[m3],b3=(0,c.aZ)({name:"GitFork",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",g3,k3)}}),v3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},w3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="18" r="2"></circle><circle cx="7" cy="6" r="2"></circle><circle cx="17" cy="12" r="2"></circle><path d="M7 8v8"></path><path d="M7 8a4 4 0 0 0 4 4h4"></path></g>',1),x3=[w3],f3=(0,c.aZ)({name:"GitMerge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",v3,x3)}}),y3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="18" r="2"></circle><circle cx="6" cy="6" r="2"></circle><circle cx="18" cy="18" r="2"></circle><path d="M6 8v8"></path><path d="M11 6h5a2 2 0 0 1 2 2v8"></path><path d="M14 9l-3-3l3-3"></path></g>',1),_3=[M3],C3=(0,c.aZ)({name:"GitPullRequest",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y3,_3)}}),S3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},E3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="18" r="2"></circle><circle cx="6" cy="6" r="2"></circle><circle cx="18" cy="18" r="2"></circle><path d="M6 8v8"></path><path d="M18 11v5"></path><path d="M16 4l4 4m0-4l-4 4"></path></g>',1),P3=[E3],j3=(0,c.aZ)({name:"GitPullRequestClosed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",S3,P3)}}),A3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},D3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="18" r="2"></circle><circle cx="6" cy="6" r="2"></circle><circle cx="18" cy="18" r="2"></circle><path d="M6 8v8"></path><path d="M18 11h.01"></path><path d="M18 6h.01"></path></g>',1),R3=[D3],F3=(0,c.aZ)({name:"GitPullRequestDraft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",A3,R3)}}),B3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},L3=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 21h8"}),(0,c._)("path",{d:"M12 15v6"}),(0,c._)("path",{d:"M17 3l1 7c0 3.012-2.686 5-6 5s-6-1.988-6-5l1-7h10z"})],-1),T3=[L3],I3=(0,c.aZ)({name:"Glass",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",B3,T3)}}),N3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 21h8"></path><path d="M12 15v6"></path><path d="M17 3l1 7c0 3.012-2.686 5-6 5s-6-1.988-6-5l1-7h10z"></path><path d="M6 10a5 5 0 0 1 6 0a5 5 0 0 0 6 0"></path></g>',1),V3=[O3],Z3=(0,c.aZ)({name:"GlassFull",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",N3,V3)}}),H3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},U3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 21h8"></path><path d="M12 15v6"></path><path d="M7 3h10l1 7a4.511 4.511 0 0 1-1.053 2.94m-2.386 1.625A7.48 7.48 0 0 1 12 15c-3.314 0-6-1.988-6-5l.5-3.495"></path><path d="M3 3l18 18"></path></g>',1),z3=[U3],q3=(0,c.aZ)({name:"GlassOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",H3,z3)}}),$3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},K3=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="10" r="4"></circle><path d="M6.75 16A8.015 8.015 0 1 0 16 3"></path><path d="M12 18v4"></path><path d="M8 22h8"></path></g>',1),Y3=[K3],W3=(0,c.aZ)({name:"Globe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$3,Y3)}}),G3={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},J3=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 18V3l7 4l-7 4"}),(0,c._)("path",{d:"M9 17.67c-.62.36-1 .82-1 1.33c0 1.1 1.8 2 4 2s4-.9 4-2c0-.5-.38-.97-1-1.33"})],-1),X3=[J3],Q3=(0,c.aZ)({name:"Golf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",G3,X3)}}),n4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s4=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 17l-1-4l-4-1l9-4z"})],-1),e4=[s4],a4=(0,c.aZ)({name:"Gps",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n4,e4)}}),t4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="4.5" cy="9.5" r="1"></circle><circle cx="9.5" cy="4.5" r="1"></circle><circle cx="9.5" cy="14.5" r="1"></circle><circle cx="4.5" cy="19.5" r="1"></circle><circle cx="14.5" cy="9.5" r="1"></circle><circle cx="19.5" cy="4.5" r="1"></circle><circle cx="14.5" cy="19.5" r="1"></circle><circle cx="19.5" cy="14.5" r="1"></circle></g>',1),o4=[r4],p4=(0,c.aZ)({name:"Grain",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t4,o4)}}),l4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="5" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="19" cy="5" r="1"></circle><circle cx="5" cy="12" r="1"></circle><circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="19" r="1"></circle><circle cx="12" cy="19" r="1"></circle><circle cx="19" cy="19" r="1"></circle></g>',1),c4=[i4],u4=(0,c.aZ)({name:"GridDots",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l4,c4)}}),d4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M10 8v8"></path><path d="M14 8v8"></path><path d="M8 10h8"></path><path d="M8 14h8"></path></g>',1),g4=[h4],m4=(0,c.aZ)({name:"GridPattern",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d4,g4)}}),k4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 8H5a6 6 0 0 0 6 6h2a6 6 0 0 0 5.996-5.775L19 8z"></path><path d="M17 20a2 2 0 1 1 0-4a2 2 0 0 1 0 4z"></path><path d="M15 14l1 2"></path><path d="M9 14l-3 6"></path><path d="M15 18H7"></path><path d="M15 5V4"></path><path d="M12 5V4"></path><path d="M9 5V4"></path></g>',1),v4=[b4],w4=(0,c.aZ)({name:"Grill",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k4,v4)}}),x4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="9" r="1"></circle><circle cx="5" cy="15" r="1"></circle><circle cx="12" cy="9" r="1"></circle><circle cx="12" cy="15" r="1"></circle><circle cx="19" cy="9" r="1"></circle><circle cx="19" cy="15" r="1"></circle></g>',1),y4=[f4],M4=(0,c.aZ)({name:"GripHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x4,y4)}}),_4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="5" r="1"></circle><circle cx="9" cy="12" r="1"></circle><circle cx="9" cy="19" r="1"></circle><circle cx="15" cy="5" r="1"></circle><circle cx="15" cy="12" r="1"></circle><circle cx="15" cy="19" r="1"></circle></g>',1),S4=[C4],E4=(0,c.aZ)({name:"GripVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_4,S4)}}),P4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j4=(0,c._)("path",{d:"M16.5 15a4.5 4.5 0 0 0-4.5 4.5m4.5-8.5a4.5 4.5 0 0 0-4.5 4.5M16.5 7a4.5 4.5 0 0 0-4.5 4.5M8 15c2.21 0 4 2.015 4 4.5M8 11c2.21 0 4 2.015 4 4.5M8 7c2.21 0 4 2.015 4 4.5M12 4v6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),A4=[j4],D4=(0,c.aZ)({name:"Growth",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P4,A4)}}),R4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 18v-8l-2 2"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),B4=[F4],L4=(0,c.aZ)({name:"H1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R4,B4)}}),T4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 12a2 2 0 1 1 4 0c0 .591-.417 1.318-.816 1.858L17 18.001h4"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),N4=[I4],O4=(0,c.aZ)({name:"H2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T4,N4)}}),V4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 14a2 2 0 1 0-2-2"></path><path d="M17 16a2 2 0 1 0 2-2"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),H4=[Z4],U4=(0,c.aZ)({name:"H3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V4,H4)}}),z4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 18v-8l-4 6h5"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),$4=[q4],K4=(0,c.aZ)({name:"H4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z4,$4)}}),Y4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 18h2a2 2 0 1 0 0-4h-2v-4h4"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),G4=[W4],J4=(0,c.aZ)({name:"H5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y4,G4)}}),X4={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q4=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle transform="rotate(180 19 16)" cx="19" cy="16" r="2"></circle><path d="M21 12a2 2 0 1 0-4 0v4"></path><path d="M4 6v12"></path><path d="M12 6v12"></path><path d="M11 18h2"></path><path d="M3 18h2"></path><path d="M4 12h8"></path><path d="M3 6h2"></path><path d="M11 6h2"></path></g>',1),n9=[Q4],s9=(0,c.aZ)({name:"H6",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X4,n9)}}),e9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},a9=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 10l7.383 7.418c.823.82.823 2.148 0 2.967a2.11 2.11 0 0 1-2.976 0L10 13"}),(0,c._)("path",{d:"M6.293 15.293l-2.586-2.586a1 1 0 0 1 0-1.414l7.586-7.586a1 1 0 0 1 1.414 0l2.586 2.586a1 1 0 0 1 0 1.414l-7.586 7.586a1 1 0 0 1-1.414 0z"})],-1),t9=[a9],r9=(0,c.aZ)({name:"Hammer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",e9,t9)}}),o9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},p9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 11.5v-2a1.5 1.5 0 0 1 3 0V12"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7L7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M5 3L4 2"></path><path d="M4 7H3"></path><path d="M14 3l1-1"></path><path d="M15 6h1"></path></g>',1),l9=[p9],i9=(0,c.aZ)({name:"HandClick",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",o9,l9)}}),c9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 11.5v-2a1.5 1.5 0 1 1 3 0V12"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path></g>',1),d9=[u9],h9=(0,c.aZ)({name:"HandFinger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c9,d9)}}),g9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},m9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 11.5v-1a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 12V6.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path></g>',1),k9=[m9],b9=(0,c.aZ)({name:"HandLittleFinger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",g9,k9)}}),v9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},w9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M11 11.5v-8a1.5 1.5 0 1 1 3 0V12"></path></g>',1),x9=[w9],f9=(0,c.aZ)({name:"HandMiddleFinger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",v9,x9)}}),y9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 11.5v-2a1.5 1.5 0 0 1 3 0V12"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7L7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M2.541 5.594a13.487 13.487 0 0 1 2.46-1.427"></path><path d="M14 3.458a13.44 13.44 0 0 1 3.685 1.612"></path></g>',1),_9=[M9],C9=(0,c.aZ)({name:"HandMove",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y9,_9)}}),S9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},E9=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M8 13.5V8m.44-3.562A1.5 1.5 0 0 1 11 5.5V7m0 4.008V12m0-6.5v-2a1.5 1.5 0 1 1 3 0V10m0-4.5a1.5 1.5 0 0 1 3 0V12m0-4.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2c-2.114-.292-3.956-1.397-5-3l-2.7-5.25a1.7 1.7 0 0 1 2.75-2l.9 1.75"})],-1),P9=[E9],j9=(0,c.aZ)({name:"HandOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",S9,P9)}}),A9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},D9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13v-2.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M11 11.5v-2a1.5 1.5 0 1 1 3 0V12"></path><path d="M14 12V5.5a1.5 1.5 0 0 1 3 0V12"></path></g>',1),R9=[D9],F9=(0,c.aZ)({name:"HandRingFinger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",A9,R9)}}),B9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},L9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 11.5v-1a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 12V5.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path></g>',1),T9=[L9],I9=(0,c.aZ)({name:"HandRock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",B9,T9)}}),N9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V5.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0V12"></path><path d="M14 5.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 7.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path></g>',1),V9=[O9],Z9=(0,c.aZ)({name:"HandStop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",N9,V9)}}),H9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},U9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0V12"></path><path d="M14 5.5a1.5 1.5 0 0 1 3 0V12"></path></g>',1),z9=[U9],q9=(0,c.aZ)({name:"HandThreeFingers",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",H9,z9)}}),$9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},K9=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13V4.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M17 11.5a1.5 1.5 0 0 1 3 0V16a6 6 0 0 1-6 6h-2h.208a6 6 0 0 1-5.012-2.7A69.74 69.74 0 0 1 7 19c-.312-.479-1.407-2.388-3.286-5.728a1.5 1.5 0 0 1 .536-2.022a1.867 1.867 0 0 1 2.28.28L8 13"></path><path d="M14 10.5a1.5 1.5 0 0 1 3 0V12"></path><path d="M11 5.5v-2a1.5 1.5 0 1 1 3 0V12"></path></g>',1),Y9=[K9],W9=(0,c.aZ)({name:"HandTwoFingers",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$9,Y9)}}),G9={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},J9=(0,c._)("path",{d:"M15 7a3 3 0 1 0-3 3v2m0 0l-8.624 5.488A.82.82 0 0 0 3.816 19h16.368a.82.82 0 0 0 .44-1.512L12 12z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),X9=[J9],Q9=(0,c.aZ)({name:"Hanger",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",G9,X9)}}),n5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 9h14"></path><path d="M5 15h14"></path><path d="M11 4L7 20"></path><path d="M17 4l-4 16"></path></g>',1),e5=[s5],a5=(0,c.aZ)({name:"Hash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n5,e5)}}),t5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12h1"></path><path d="M12 3v1"></path><path d="M20 12h1"></path><path d="M5.6 5.6l.7.7"></path><path d="M18.4 5.6l-.7.7"></path><path d="M8 12a4 4 0 1 1 8 0"></path><path d="M3 16h18"></path><path d="M3 20h18"></path></g>',1),o5=[r5],p5=(0,c.aZ)({name:"Haze",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t5,o5)}}),l5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 12h10"></path><path d="M7 5v14"></path><path d="M17 5v14"></path><path d="M15 19h4"></path><path d="M15 5h4"></path><path d="M5 19h4"></path><path d="M5 5h4"></path></g>',1),c5=[i5],u5=(0,c.aZ)({name:"Heading",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l5,c5)}}),d5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h5=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"13",rx:"2",width:"5",height:"7"}),(0,c._)("rect",{x:"15",y:"13",rx:"2",width:"5",height:"7"}),(0,c._)("path",{d:"M4 15v-3a8 8 0 0 1 16 0v3"})],-1),g5=[h5],m5=(0,c.aZ)({name:"Headphones",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d5,g5)}}),k5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><rect x="4" y="13" width="5" height="7" rx="2"></rect><path d="M17 13h1a2 2 0 0 1 2 2v1m-.589 3.417c-.361.36-.86.583-1.411.583h-1a2 2 0 0 1-2-2v-3"></path><path d="M4 15v-3c0-2.21.896-4.21 2.344-5.658m2.369-1.638A8 8 0 0 1 20 12v3"></path></g>',1),v5=[b5],w5=(0,c.aZ)({name:"HeadphonesOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k5,v5)}}),x5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="13" rx="2" width="4" height="6"></rect><rect x="16" y="13" rx="2" width="4" height="6"></rect><path d="M4 15v-3a8 8 0 0 1 16 0v3"></path><path d="M18 19a6 3 0 0 1-6 3"></path></g>',1),y5=[f5],M5=(0,c.aZ)({name:"Headset",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x5,y5)}}),_5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C5=(0,c._)("path",{d:"M19.5 13.572L12 21l-7.5-7.428m0 0A5 5 0 1 1 12 7.006a5 5 0 1 1 7.5 6.572",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),S5=[C5],E5=(0,c.aZ)({name:"Heart",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_5,S5)}}),P5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j5=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19.5 13.572L12 21l-7.5-7.428A5 5 0 1 1 12 7.006a5 5 0 1 1 7.5 6.572"}),(0,c._)("path",{d:"M12 7l-2 4l4 3l-2 4v3"})],-1),A5=[j5],D5=(0,c.aZ)({name:"HeartBroken",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P5,A5)}}),R5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="12" rx="1"></rect><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M7 10h2l2 3l2-6l1 3h3"></path></g>',1),B5=[F5],L5=(0,c.aZ)({name:"HeartRateMonitor",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R5,B5)}}),T5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I5=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19.5 13.572L12 21l-2.896-2.868m-6.117-8.104A5 5 0 0 1 12 7.006a5 5 0 1 1 7.5 6.572"}),(0,c._)("path",{d:"M3 13h2l2 3l2-6l1 3h3"})],-1),N5=[I5],O5=(0,c.aZ)({name:"Heartbeat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T5,N5)}}),V5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 10l1 2h6"></path><path d="M12 9a2 2 0 0 0-2 2v3c0 1.1.9 2 2 2h7a2 2 0 0 0 2-2c0-3.31-3.13-5-7-5h-2z"></path><path d="M13 9V6"></path><path d="M5 6h15"></path><path d="M15 9.1V13h5.5"></path><path d="M15 19v-3"></path><path d="M19 19h-8"></path></g>',1),H5=[Z5],U5=(0,c.aZ)({name:"Helicopter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V5,H5)}}),z5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q5=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M9 8v8"></path><path d="M9 12h6"></path><path d="M15 8v8"></path></g>',1),$5=[q5],K5=(0,c.aZ)({name:"HelicopterLanding",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z5,$5)}}),Y5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W5=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4a9 9 0 0 1 5.656 16H6.344A9 9 0 0 1 12 4z"}),(0,c._)("path",{d:"M20 9h-8.8a1 1 0 0 0-.968 1.246c.507 2 1.596 3.418 3.268 4.254c2 1 4.333 1.5 7 1.5"})],-1),G5=[W5],J5=(0,c.aZ)({name:"Helmet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y5,G5)}}),X5={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q5=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 17v.01"}),(0,c._)("path",{d:"M12 13.5a1.5 1.5 0 0 1 1-1.5a2.6 2.6 0 1 0-3-4"})],-1),n6=[Q5],s6=(0,c.aZ)({name:"Help",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X5,n6)}}),e6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},a6=(0,c._)("path",{d:"M19 6.873a2 2 0 0 1 1 1.747v6.536a2 2 0 0 1-1.029 1.748l-6 3.833a2 2 0 0 1-1.942 0l-6-3.833A2 2 0 0 1 4 15.157V8.62a2 2 0 0 1 1.029-1.748l6-3.572a2.056 2.056 0 0 1 2 0l6 3.573z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),t6=[a6],r6=(0,c.aZ)({name:"Hexagon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",e6,t6)}}),o6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},p6=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8.693 4.69l2.336-1.39a2.056 2.056 0 0 1 2 0l6 3.573H19a2 2 0 0 1 1 1.747v6.536c0 .246-.045.485-.13.707m-2.16 1.847l-4.739 3.027a2 2 0 0 1-1.942 0l-6-3.833A2 2 0 0 1 4 15.157V8.62a2 2 0 0 1 1.029-1.748l1.154-.687"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),l6=[p6],i6=(0,c.aZ)({name:"HexagonOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",o6,l6)}}),c6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><circle cx="19" cy="19" r="2"></circle><path d="M6.5 17.5L12 13l5.5 4.5"></path><path d="M12 7v6"></path></g>',1),d6=[u6],h6=(0,c.aZ)({name:"Hierarchy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c6,d6)}}),g6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},m6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 3h4v4h-4z"></path><path d="M3 17h4v4H3z"></path><path d="M17 17h4v4h-4z"></path><path d="M7 17l5-4l5 4"></path><path d="M12 7v6"></path></g>',1),k6=[m6],b6=(0,c.aZ)({name:"Hierarchy2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",g6,k6)}}),v6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},w6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19h4L17.5 8.5a2.828 2.828 0 1 0-4-4L3 15v4"></path><path d="M12.5 5.5l4 4"></path><path d="M4.5 13.5l4 4"></path><path d="M21 15v4h-8l4-4z"></path></g>',1),x6=[w6],f6=(0,c.aZ)({name:"Highlight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",v6,x6)}}),y6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M6=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 8v4l2 2"}),(0,c._)("path",{d:"M3.05 11a9 9 0 1 1 .5 4m-.5 5v-5h5"})],-1),_6=[M6],C6=(0,c.aZ)({name:"History",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y6,_6)}}),S6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},E6=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12H3l9-9l9 9h-2"}),(0,c._)("path",{d:"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7"}),(0,c._)("path",{d:"M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6"})],-1),P6=[E6],j6=(0,c.aZ)({name:"Home",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",S6,P6)}}),A6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},D6=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12H3l9-9l9 9h-2"}),(0,c._)("path",{d:"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7"}),(0,c._)("path",{d:"M10 12h4v4h-4z"})],-1),R6=[D6],F6=(0,c.aZ)({name:"Home2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",A6,R6)}}),B6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},L6=(0,c._)("path",{d:"M8.5 10A1.5 1.5 0 0 1 7 8.5a5.5 5.5 0 0 1 11 0V19a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2v-2c0-1.38.71-2.444 1.88-3.175l4.424-2.765C14.359 10.4 15 9.744 15 8.5a2.5 2.5 0 1 0-5 0A1.5 1.5 0 0 1 8.5 10z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),T6=[L6],I6=(0,c.aZ)({name:"HotelService",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",B6,T6)}}),N6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.5 7h11"></path><path d="M6.5 17h11"></path><path d="M6 20v-2a6 6 0 1 1 12 0v2a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1z"></path><path d="M6 4v2a6 6 0 1 0 12 0V4a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1z"></path></g>',1),V6=[O6],Z6=(0,c.aZ)({name:"Hourglass",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",N6,V6)}}),H6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},U6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 21.5V17"></path><path d="M8 17h8V7a4 4 0 1 0-8 0v10z"></path><path d="M8 10.5L16 7"></path><path d="M8 14.5l8-3.5"></path></g>',1),z6=[U6],q6=(0,c.aZ)({name:"IceCream",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",H6,z6)}}),$6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},K6=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17.657 11.004a6 6 0 1 0-11.315 0"}),(0,c._)("path",{d:"M6.342 11L12 22l5.657-10.996z"})],-1),Y6=[K6],W6=(0,c.aZ)({name:"IceCream2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$6,Y6)}}),G6={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},J6=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5.905 5h3.418a1 1 0 0 1 .928.629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717.926A2.084 2.084 0 0 1 20 13.286V14a1 1 0 0 1-1 1H5.105a1 1 0 0 1-.995-1.1l.8-8a1 1 0 0 1 .995-.9z"></path><path d="M3 19h17a1 1 0 0 0 1-1"></path><path d="M9 15v4"></path><path d="M15 15v4"></path></g>',1),X6=[J6],Q6=(0,c.aZ)({name:"IceSkating",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",G6,X6)}}),n8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="16" rx="3"></rect><circle cx="9" cy="10" r="2"></circle><path d="M15 8h2"></path><path d="M15 12h2"></path><path d="M7 16h10"></path></g>',1),e8=[s8],a8=(0,c.aZ)({name:"Id",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n8,e8)}}),t8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="5" y="3" width="14" height="18" rx="3"></rect><circle cx="12" cy="13" r="2"></circle><path d="M10 6h4"></path><path d="M9 18h6"></path></g>',1),o8=[r8],p8=(0,c.aZ)({name:"IdBadge",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t8,o8)}}),l8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 13h3l3 3h4l3-3h3"})],-1),c8=[i8],u8=(0,c.aZ)({name:"Inbox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l8,c8)}}),d8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6h-7"></path><path d="M20 12h-9"></path><path d="M20 18h-7"></path><path d="M8 8l-4 4l4 4"></path></g>',1),g8=[h8],m8=(0,c.aZ)({name:"IndentDecrease",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d8,g8)}}),k8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6H9"></path><path d="M20 12h-7"></path><path d="M20 18H9"></path><path d="M4 8l4 4l-4 4"></path></g>',1),v8=[b8],w8=(0,c.aZ)({name:"IndentIncrease",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k8,v8)}}),x8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f8=(0,c._)("path",{d:"M9.828 9.172a4 4 0 1 0 0 5.656A10 10 0 0 0 12 12a10 10 0 0 1 2.172-2.828a4 4 0 1 1 0 5.656A10 10 0 0 1 12 12a10 10 0 0 0-2.172-2.828",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),y8=[f8],M8=(0,c.aZ)({name:"Infinity",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x8,y8)}}),_8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M12 8h.01"}),(0,c._)("path",{d:"M11 12h1v4h1"})],-1),S8=[C8],E8=(0,c.aZ)({name:"InfoCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_8,S8)}}),P8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 8h.01"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M11 12h1v4h1"})],-1),A8=[j8],D8=(0,c.aZ)({name:"InfoSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P8,A8)}}),R8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 5h6"}),(0,c._)("path",{d:"M7 19h6"}),(0,c._)("path",{d:"M14 5l-4 14"})],-1),B8=[F8],L8=(0,c.aZ)({name:"Italic",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R8,B8)}}),T8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 14V8a3 3 0 1 1 6 0v8a3 3 0 0 0 6 0v-6"}),(0,c._)("rect",{x:"16",y:"3",width:"4",height:"7",rx:"2"}),(0,c._)("rect",{x:"4",y:"14",width:"4",height:"7",rx:"2"})],-1),N8=[I8],O8=(0,c.aZ)({name:"JumpRope",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T8,N8)}}),V8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="18" cy="4" r="1"></circle><path d="M3 9l4.5 1l3 2.5"></path><path d="M13 21v-8l3-5.5"></path><path d="M8 4.5l4 2l4 1l4 3.5l-2 3.5"></path></g>',1),H8=[Z8],U8=(0,c.aZ)({name:"Karate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V8,H8)}}),z8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q8=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 15v-3.5a2.5 2.5 0 1 1 5 0V15m0-2h-5"}),(0,c._)("path",{d:"M3 9l3 6l3-6"}),(0,c._)("path",{d:"M9 20l6-16"})],-1),$8=[q8],K8=(0,c.aZ)({name:"Kering",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z8,$8)}}),Y8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="8" cy="15" r="4"></circle><path d="M10.85 12.15L19 4"></path><path d="M18 5l2 2"></path><path d="M15 8l2 2"></path></g>',1),G8=[W8],J8=(0,c.aZ)({name:"Key",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y8,G8)}}),X8={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q8=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="6" width="20" height="12" rx="2"></rect><path d="M6 10h0"></path><path d="M10 10h0"></path><path d="M14 10h0"></path><path d="M18 10h0"></path><path d="M6 14v.01"></path><path d="M18 14v.01"></path><path d="M10 14h4"></path></g>',1),n7=[Q8],s7=(0,c.aZ)({name:"Keyboard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X8,n7)}}),e7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},a7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="3" width="20" height="12" rx="2"></rect><path d="M6 7h0"></path><path d="M10 7h0"></path><path d="M14 7h0"></path><path d="M18 7h0"></path><path d="M6 11v.01"></path><path d="M18 11v.01"></path><path d="M10 11h4"></path><path d="M10 21l2-2l2 2"></path></g>',1),t7=[a7],r7=(0,c.aZ)({name:"KeyboardHide",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",e7,t7)}}),o7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},p7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 18H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h2m4 0h10a2 2 0 0 1 2 2v8c0 .554-.226 1.056-.59 1.418"></path><path d="M6 10v.01"></path><path d="M10 10v.01"></path><path d="M14 10v.01"></path><path d="M18 10v.01"></path><path d="M6 14v.01"></path><path d="M18 14v.01"></path><path d="M10 14h4"></path><path d="M3 3l18 18"></path></g>',1),l7=[p7],i7=(0,c.aZ)({name:"KeyboardOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",o7,l7)}}),c7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="2" y="3" width="20" height="12" rx="2"></rect><path d="M6 7h0"></path><path d="M10 7h0"></path><path d="M14 7h0"></path><path d="M18 7h0"></path><path d="M6 11v.01"></path><path d="M18 11v.01"></path><path d="M10 11h4"></path><path d="M10 19l2 2l2-2"></path></g>',1),d7=[u7],h7=(0,c.aZ)({name:"KeyboardShow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c7,d7)}}),g7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},m7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 3v18"></path><path d="M16 3v18"></path><path d="M8 14h8"></path><path d="M8 10h8"></path><path d="M8 6h8"></path><path d="M8 18h8"></path></g>',1),k7=[m7],b7=(0,c.aZ)({name:"Ladder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",g7,k7)}}),v7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},w7=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 20h6"}),(0,c._)("path",{d:"M12 20v-8"}),(0,c._)("path",{d:"M5 12h14l-4-8H9z"})],-1),x7=[w7],f7=(0,c.aZ)({name:"Lamp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",v7,x7)}}),y7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 5h7"></path><path d="M9 3v2c0 4.418-2.239 8-5 8"></path><path d="M5 9c-.003 2.144 2.952 3.908 6.7 4"></path><path d="M12 20l4-9l4 9"></path><path d="M19.1 18h-6.2"></path></g>',1),_7=[M7],C7=(0,c.aZ)({name:"Language",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y7,_7)}}),S7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},E7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 5h7"></path><path d="M7 4c0 4.846 0 7 .5 8"></path><path d="M10 8.5c0 2.286-2 4.5-3.5 4.5S4 11.865 4 11c0-2 1-3 3-3s5 .57 5 2.857c0 1.524-.667 2.571-2 3.143"></path><path d="M12 20l4-9l4 9"></path><path d="M19.1 18h-6.2"></path></g>',1),P7=[E7],j7=(0,c.aZ)({name:"LanguageHiragana",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",S7,P7)}}),A7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},D7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 5h6.586a1 1 0 0 1 .707 1.707L11 8"></path><path d="M8 8c0 1.5.5 3-2 5"></path><path d="M12 20l4-9l4 9"></path><path d="M19.1 18h-6.2"></path></g>',1),R7=[D7],F7=(0,c.aZ)({name:"LanguageKatakana",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",A7,R7)}}),B7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},L7=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.028 13.252C3.371 12.28 3 11.174 3 10c0-3.866 4.03-7 9-7s9 3.134 9 7s-4.03 7-9 7c-1.913 0-3.686-.464-5.144-1.255"}),(0,c._)("circle",{cx:"5",cy:"15",r:"2"}),(0,c._)("path",{d:"M5 17c0 1.42.316 2.805 1 4"})],-1),T7=[L7],I7=(0,c.aZ)({name:"Lasso",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",B7,T7)}}),N7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O7=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2"></path><path d="M10 8H8v2"></path><path d="M8 14v2h2"></path><path d="M14 8h2v2"></path><path d="M16 14v2h-2"></path></g>',1),V7=[O7],Z7=(0,c.aZ)({name:"LayersDifference",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",N7,V7)}}),H7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},U7=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"4",width:"12",height:"12",rx:"2"}),(0,c._)("rect",{x:"4",y:"8",width:"12",height:"12",rx:"2"})],-1),z7=[U7],q7=(0,c.aZ)({name:"LayersIntersect",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",H7,z7)}}),$7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},K7=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"4",width:"12",height:"12",rx:"2"}),(0,c._)("rect",{x:"4",y:"8",width:"12",height:"12",rx:"2"}),(0,c._)("path",{d:"M9 15l6-6"})],-1),Y7=[K7],W7=(0,c.aZ)({name:"LayersIntersect2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$7,Y7)}}),G7={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},J7=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 8.268A2 2 0 0 1 20 10v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h3"}),(0,c._)("path",{d:"M5.003 15.734A2 2 0 0 1 4 14V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3"})],-1),X7=[J7],Q7=(0,c.aZ)({name:"LayersLinked",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",G7,X7)}}),nnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},snn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"4",width:"12",height:"12",rx:"2"}),(0,c._)("path",{d:"M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2"})],-1),enn=[snn],ann=(0,c.aZ)({name:"LayersSubtract",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nnn,enn)}}),tnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rnn=(0,c._)("path",{d:"M16 16v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2V6a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),onn=[rnn],pnn=(0,c.aZ)({name:"LayersUnion",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tnn,onn)}}),lnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},inn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"6",height:"5",rx:"2"}),(0,c._)("rect",{x:"4",y:"13",width:"6",height:"7",rx:"2"}),(0,c._)("rect",{x:"14",y:"4",width:"6",height:"16",rx:"2"})],-1),cnn=[inn],unn=(0,c.aZ)({name:"Layout",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lnn,cnn)}}),dnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hnn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="6" height="5" rx="2"></rect><rect x="4" y="13" width="6" height="7" rx="2"></rect><rect x="14" y="4" width="6" height="7" rx="2"></rect><rect x="14" y="15" width="6" height="5" rx="2"></rect></g>',1),gnn=[hnn],mnn=(0,c.aZ)({name:"Layout2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dnn,gnn)}}),knn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20h16"}),(0,c._)("rect",{x:"9",y:"4",width:"6",height:"12",rx:"2"})],-1),vnn=[bnn],wnn=(0,c.aZ)({name:"LayoutAlignBottom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",knn,vnn)}}),xnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4v5"}),(0,c._)("path",{d:"M12 15v5"}),(0,c._)("rect",{x:"6",y:"9",width:"12",height:"6",rx:"2"})],-1),ynn=[fnn],Mnn=(0,c.aZ)({name:"LayoutAlignCenter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xnn,ynn)}}),_nn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 4v16"}),(0,c._)("rect",{x:"8",y:"9",width:"12",height:"6",rx:"2"})],-1),Snn=[Cnn],Enn=(0,c.aZ)({name:"LayoutAlignLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_nn,Snn)}}),Pnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12h5"}),(0,c._)("path",{d:"M15 12h5"}),(0,c._)("rect",{x:"9",y:"6",width:"6",height:"12",rx:"2"})],-1),Ann=[jnn],Dnn=(0,c.aZ)({name:"LayoutAlignMiddle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pnn,Ann)}}),Rnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 4v16"}),(0,c._)("rect",{x:"4",y:"9",width:"12",height:"6",rx:"2"})],-1),Bnn=[Fnn],Lnn=(0,c.aZ)({name:"LayoutAlignRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rnn,Bnn)}}),Tnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Inn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 4h16"}),(0,c._)("rect",{x:"9",y:"8",width:"6",height:"12",rx:"2"})],-1),Nnn=[Inn],Onn=(0,c.aZ)({name:"LayoutAlignTop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tnn,Nnn)}}),Vnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Znn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M4 9h8"></path><path d="M12 15h8"></path><path d="M12 4v16"></path></g>',1),Hnn=[Znn],Unn=(0,c.aZ)({name:"LayoutBoard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vnn,Hnn)}}),znn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qnn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M4 12h8"></path><path d="M12 15h8"></path><path d="M12 9h8"></path><path d="M12 4v16"></path></g>',1),$nn=[qnn],Knn=(0,c.aZ)({name:"LayoutBoardSplit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",znn,$nn)}}),Ynn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 15h16"})],-1),Gnn=[Wnn],Jnn=(0,c.aZ)({name:"LayoutBottombar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ynn,Gnn)}}),Xnn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qnn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"6",height:"16",rx:"2"}),(0,c._)("rect",{x:"14",y:"4",width:"6",height:"10",rx:"2"})],-1),nsn=[Qnn],ssn=(0,c.aZ)({name:"LayoutCards",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xnn,nsn)}}),esn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},asn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M12 4v16"})],-1),tsn=[asn],rsn=(0,c.aZ)({name:"LayoutColumns",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",esn,tsn)}}),osn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},psn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 4h16"}),(0,c._)("path",{d:"M4 20h16"}),(0,c._)("rect",{x:"6",y:"9",width:"12",height:"6",rx:"2"})],-1),lsn=[psn],isn=(0,c.aZ)({name:"LayoutDistributeHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",osn,lsn)}}),csn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},usn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 4v16"}),(0,c._)("path",{d:"M20 4v16"}),(0,c._)("rect",{x:"9",y:"6",width:"6",height:"12",rx:"2"})],-1),dsn=[usn],hsn=(0,c.aZ)({name:"LayoutDistributeVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",csn,dsn)}}),gsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},msn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="6" height="6" rx="1"></rect><rect x="14" y="4" width="6" height="6" rx="1"></rect><rect x="4" y="14" width="6" height="6" rx="1"></rect><rect x="14" y="14" width="6" height="6" rx="1"></rect></g>',1),ksn=[msn],bsn=(0,c.aZ)({name:"LayoutGrid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gsn,ksn)}}),vsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wsn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="6" height="6" rx="1"></rect><rect x="14" y="4" width="6" height="6" rx="1"></rect><rect x="4" y="14" width="6" height="6" rx="1"></rect><path d="M14 17h6m-3-3v6"></path></g>',1),xsn=[wsn],fsn=(0,c.aZ)({name:"LayoutGridAdd",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vsn,xsn)}}),ysn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Msn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h6"></path><path d="M14 4h6"></path><rect x="4" y="8" width="6" height="12" rx="2"></rect><rect x="14" y="8" width="6" height="6" rx="2"></rect></g>',1),_sn=[Msn],Csn=(0,c.aZ)({name:"LayoutKanban",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ysn,_sn)}}),Ssn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Esn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"6",rx:"2"}),(0,c._)("rect",{x:"4",y:"14",width:"16",height:"6",rx:"2"})],-1),Psn=[Esn],jsn=(0,c.aZ)({name:"LayoutList",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ssn,Psn)}}),Asn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dsn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 9h16"})],-1),Rsn=[Dsn],Fsn=(0,c.aZ)({name:"LayoutNavbar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Asn,Rsn)}}),Bsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lsn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 12h16"})],-1),Tsn=[Lsn],Isn=(0,c.aZ)({name:"LayoutRows",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bsn,Tsn)}}),Nsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Osn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 4v16"})],-1),Vsn=[Osn],Zsn=(0,c.aZ)({name:"LayoutSidebar",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nsn,Vsn)}}),Hsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Usn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 4v16"}),(0,c._)("path",{d:"M15 10l-2 2l2 2"})],-1),zsn=[Usn],qsn=(0,c.aZ)({name:"LayoutSidebarLeftCollapse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hsn,zsn)}}),$sn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ksn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 4v16"}),(0,c._)("path",{d:"M14 10l2 2l-2 2"})],-1),Ysn=[Ksn],Wsn=(0,c.aZ)({name:"LayoutSidebarLeftExpand",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$sn,Ysn)}}),Gsn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jsn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M15 4v16"})],-1),Xsn=[Jsn],Qsn=(0,c.aZ)({name:"LayoutSidebarRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gsn,Xsn)}}),nen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sen=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M15 4v16"}),(0,c._)("path",{d:"M9 10l2 2l-2 2"})],-1),een=[sen],aen=(0,c.aZ)({name:"LayoutSidebarRightCollapse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nen,een)}}),ten={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ren=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M15 4v16"}),(0,c._)("path",{d:"M10 10l-2 2l2 2"})],-1),oen=[ren],pen=(0,c.aZ)({name:"LayoutSidebarRightExpand",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ten,oen)}}),len={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ien=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 21c.5-4.5 2.5-8 7-10"}),(0,c._)("path",{d:"M9 18c6.218 0 10.5-3.288 11-12V4h-4.014c-9 0-11.986 4-12 9c0 1 0 3 2 5h3z"})],-1),cen=[ien],uen=(0,c.aZ)({name:"Leaf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",len,cen)}}),den={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hen=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9.5 11h.01"></path><path d="M14.5 11h.01"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path><path d="M7 5h1V3h8v2h1a3 3 0 0 1 3 3v9a3 3 0 0 1-3 3v1H7v-1a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3"></path></g>',1),gen=[hen],men=(0,c.aZ)({name:"Lego",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",den,gen)}}),ken={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ben=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17.536 3.393c3.905 3.906 3.905 10.237 0 14.143c-3.906 3.905-10.237 3.905-14.143 0L17.536 3.393"></path><path d="M5.868 15.06a6.5 6.5 0 0 0 9.193-9.192"></path><path d="M10.464 10.464l4.597 4.597"></path><path d="M10.464 10.464v6.364"></path><path d="M10.464 10.464h6.364"></path></g>',1),ven=[ben],wen=(0,c.aZ)({name:"Lemon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ken,ven)}}),xen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fen=(0,c._)("path",{d:"M18 4a2 2 0 0 1 1.185 3.611c1.55 2.94.873 6.917-1.892 9.682c-2.765 2.765-6.743 3.442-9.682 1.892a2 2 0 1 1-2.796-2.796c-1.55-2.94-.873-6.917 1.892-9.682c2.765-2.765 6.743-3.442 9.682-1.892A1.999 1.999 0 0 1 18 4z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),yen=[fen],Men=(0,c.aZ)({name:"Lemon2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xen,yen)}}),_en={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cen=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 20V8a4 4 0 0 1 4-4h2a4 4 0 0 1 4 4v12"}),(0,c._)("path",{d:"M7 13h10"})],-1),Sen=[Cen],Een=(0,c.aZ)({name:"LetterA",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_en,Sen)}}),Pen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jen=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 20V4h6a4 4 0 0 1 0 8a4 4 0 0 1 0 8H7"}),(0,c._)("path",{d:"M7 12h6"})],-1),Aen=[jen],Den=(0,c.aZ)({name:"LetterB",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pen,Aen)}}),Ren={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fen=(0,c._)("path",{d:"M18 9a5 5 0 0 0-5-5h-2a5 5 0 0 0-5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5-5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ben=[Fen],Len=(0,c.aZ)({name:"LetterC",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ren,Ben)}}),Ten={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ien=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="17.5" cy="15.5" r="3.5"></circle><path d="M3 19V8.5a3.5 3.5 0 0 1 7 0V19"></path><path d="M3 13h7"></path><path d="M21 12v7"></path></g>',1),Nen=[Ien],Oen=(0,c.aZ)({name:"LetterCase",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ten,Nen)}}),Ven={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zen=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6.5" cy="15.5" r="3.5"></circle><path d="M10 12v7"></path><circle cx="17.5" cy="15.5" r="3.5"></circle><path d="M21 12v7"></path></g>',1),Hen=[Zen],Uen=(0,c.aZ)({name:"LetterCaseLower",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ven,Hen)}}),zen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qen=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6.5" cy="15.5" r="3.5"></circle><path d="M14 19V8.5a3.5 3.5 0 0 1 7 0V19"></path><path d="M14 13h7"></path><path d="M10 12v7"></path></g>',1),$en=[qen],Ken=(0,c.aZ)({name:"LetterCaseToggle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zen,$en)}}),Yen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wen=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19V8.5a3.5 3.5 0 0 1 7 0V19"></path><path d="M3 13h7"></path><path d="M14 19V8.5a3.5 3.5 0 0 1 7 0V19"></path><path d="M14 13h7"></path></g>',1),Gen=[Wen],Jen=(0,c.aZ)({name:"LetterCaseUpper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yen,Gen)}}),Xen={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qen=(0,c._)("path",{d:"M7 4h6a5 5 0 0 1 5 5v6a5 5 0 0 1-5 5H7V4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nan=[Qen],san=(0,c.aZ)({name:"LetterD",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xen,nan)}}),ean={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aan=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 4H7v16h10"}),(0,c._)("path",{d:"M7 12h8"})],-1),tan=[aan],ran=(0,c.aZ)({name:"LetterE",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ean,tan)}}),oan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pan=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 4H7v16"}),(0,c._)("path",{d:"M7 12h8"})],-1),lan=[pan],ian=(0,c.aZ)({name:"LetterF",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oan,lan)}}),can={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uan=(0,c._)("path",{d:"M18 9a5 5 0 0 0-5-5h-2a5 5 0 0 0-5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5-5v-2h-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),dan=[uan],han=(0,c.aZ)({name:"LetterG",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",can,dan)}}),gan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},man=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 4v16"}),(0,c._)("path",{d:"M7 12h10"}),(0,c._)("path",{d:"M7 4v16"})],-1),kan=[man],ban=(0,c.aZ)({name:"LetterH",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gan,kan)}}),van={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wan=(0,c._)("path",{d:"M12 4v16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xan=[wan],fan=(0,c.aZ)({name:"LetterI",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",van,xan)}}),yan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Man=(0,c._)("path",{d:"M17 4v12a4 4 0 0 1-4 4h-2a4 4 0 0 1-4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),_an=[Man],Can=(0,c.aZ)({name:"LetterJ",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yan,_an)}}),San={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ean=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 4v16"}),(0,c._)("path",{d:"M7 12h2l8-8"}),(0,c._)("path",{d:"M9 12l8 8"})],-1),Pan=[Ean],jan=(0,c.aZ)({name:"LetterK",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",San,Pan)}}),Aan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dan=(0,c._)("path",{d:"M7 4v16h10",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ran=[Dan],Fan=(0,c.aZ)({name:"LetterL",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Aan,Ran)}}),Ban={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lan=(0,c._)("path",{d:"M6 20V4l6 14l6-14v16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Tan=[Lan],Ian=(0,c.aZ)({name:"LetterM",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ban,Tan)}}),Nan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oan=(0,c._)("path",{d:"M7 20V4l10 16V4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Van=[Oan],Zan=(0,c.aZ)({name:"LetterN",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nan,Van)}}),Han={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uan=(0,c._)("path",{d:"M18 9a5 5 0 0 0-5-5h-2a5 5 0 0 0-5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5-5V9",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zan=[Uan],qan=(0,c.aZ)({name:"LetterO",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Han,zan)}}),$an={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kan=(0,c._)("path",{d:"M7 20V4h5.5a4 4 0 0 1 0 9H7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Yan=[Kan],Wan=(0,c.aZ)({name:"LetterP",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$an,Yan)}}),Gan={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jan=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 9a5 5 0 0 0-5-5h-2a5 5 0 0 0-5 5v6a5 5 0 0 0 5 5h2a5 5 0 0 0 5-5V9"}),(0,c._)("path",{d:"M13 15l5 5"})],-1),Xan=[Jan],Qan=(0,c.aZ)({name:"LetterQ",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gan,Xan)}}),ntn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},stn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 20V4h5.5a4 4 0 0 1 0 9H7"}),(0,c._)("path",{d:"M12 13l5 7"})],-1),etn=[stn],atn=(0,c.aZ)({name:"LetterR",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ntn,etn)}}),ttn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rtn=(0,c._)("path",{d:"M17 8a4 4 0 0 0-4-4h-2a4 4 0 0 0 0 8h2a4 4 0 0 1 0 8h-2a4 4 0 0 1-4-4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),otn=[rtn],ptn=(0,c.aZ)({name:"LetterS",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ttn,otn)}}),ltn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},itn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 12V6.5a2.5 2.5 0 0 1 5 0V12m0-4H5"></path><path d="M13 4l3 8l3-8"></path><path d="M5 18h14"></path><path d="M17 20l2-2l-2-2"></path><path d="M7 16l-2 2l2 2"></path></g>',1),ctn=[itn],utn=(0,c.aZ)({name:"LetterSpacing",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ltn,ctn)}}),dtn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},htn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 4h12"}),(0,c._)("path",{d:"M12 4v16"})],-1),gtn=[htn],mtn=(0,c.aZ)({name:"LetterT",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dtn,gtn)}}),ktn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},btn=(0,c._)("path",{d:"M6 4v11a5 5 0 0 0 5 5h2a5 5 0 0 0 5-5V4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),vtn=[btn],wtn=(0,c.aZ)({name:"LetterU",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ktn,vtn)}}),xtn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ftn=(0,c._)("path",{d:"M6 4l6 16l6-16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ytn=[ftn],Mtn=(0,c.aZ)({name:"LetterV",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xtn,ytn)}}),_tn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ctn=(0,c._)("path",{d:"M4 4l4 16l4-14l4 14l4-16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Stn=[Ctn],Etn=(0,c.aZ)({name:"LetterW",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_tn,Stn)}}),Ptn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jtn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 4l10 16"}),(0,c._)("path",{d:"M17 4L7 20"})],-1),Atn=[jtn],Dtn=(0,c.aZ)({name:"LetterX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ptn,Atn)}}),Rtn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ftn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 4l5 9l5-9"}),(0,c._)("path",{d:"M12 13v7"})],-1),Btn=[Ftn],Ltn=(0,c.aZ)({name:"LetterY",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rtn,Btn)}}),Ttn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Itn=(0,c._)("path",{d:"M7 4h10L7 20h10",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ntn=[Itn],Otn=(0,c.aZ)({name:"LetterZ",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ttn,Ntn)}}),Vtn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ztn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="18" cy="16" r="3"></circle><path d="M21 13v6"></path><path d="M3 19V9a4 4 0 0 1 4-4a4 4 0 0 1 4 4v10"></path><path d="M3 13h8"></path></g>',1),Htn=[Ztn],Utn=(0,c.aZ)({name:"LettersCase",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vtn,Htn)}}),ztn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qtn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 21H6a3 3 0 0 1-3-3v-1h10v2a2 2 0 0 0 4 0V5a2 2 0 1 1 2 2h-2m2-4H8a3 3 0 0 0-3 3v11"}),(0,c._)("path",{d:"M9 7h4"}),(0,c._)("path",{d:"M9 11h4"})],-1),$tn=[qtn],Ktn=(0,c.aZ)({name:"License",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ztn,$tn)}}),Ytn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wtn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="4"></circle><circle cx="12" cy="12" r="9"></circle><path d="M15 15l3.35 3.35"></path><path d="M9 15l-3.35 3.35"></path><path d="M5.65 5.65L9 9"></path><path d="M18.35 5.65L15 9"></path></g>',1),Gtn=[Wtn],Jtn=(0,c.aZ)({name:"Lifebuoy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ytn,Gtn)}}),Xtn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qtn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"6",cy:"18",r:"2"}),(0,c._)("circle",{cx:"18",cy:"6",r:"2"}),(0,c._)("path",{d:"M7.5 16.5l9-9"})],-1),nrn=[Qtn],srn=(0,c.aZ)({name:"Line",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xtn,nrn)}}),ern={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},arn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h2"}),(0,c._)("path",{d:"M17 12h2"}),(0,c._)("path",{d:"M11 12h2"})],-1),trn=[arn],rrn=(0,c.aZ)({name:"LineDashed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ern,trn)}}),orn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},prn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 12v.01"></path><path d="M8 12v.01"></path><path d="M12 12v.01"></path><path d="M16 12v.01"></path><path d="M20 12v.01"></path></g>',1),lrn=[prn],irn=(0,c.aZ)({name:"LineDotted",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",orn,lrn)}}),crn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},urn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 8l3-3l3 3"></path><path d="M3 16l3 3l3-3"></path><path d="M6 5v14"></path><path d="M13 6h7"></path><path d="M13 12h7"></path><path d="M13 18h7"></path></g>',1),drn=[urn],hrn=(0,c.aZ)({name:"LineHeight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",crn,drn)}}),grn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mrn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 14a3.5 3.5 0 0 0 5 0l4-4a3.5 3.5 0 0 0-5-5l-.5.5"}),(0,c._)("path",{d:"M14 10a3.5 3.5 0 0 0-5 0l-4 4a3.5 3.5 0 0 0 5 5l.5-.5"})],-1),krn=[mrn],brn=(0,c.aZ)({name:"Link",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",grn,krn)}}),vrn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wrn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 6h11"></path><path d="M9 12h11"></path><path d="M9 18h11"></path><path d="M5 6v.01"></path><path d="M5 12v.01"></path><path d="M5 18v.01"></path></g>',1),xrn=[wrn],frn=(0,c.aZ)({name:"List",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vrn,xrn)}}),yrn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mrn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3.5 5.5L5 7l2.5-2.5"></path><path d="M3.5 11.5L5 13l2.5-2.5"></path><path d="M3.5 17.5L5 19l2.5-2.5"></path><path d="M11 6h9"></path><path d="M11 12h9"></path><path d="M11 18h9"></path></g>',1),_rn=[Mrn],Crn=(0,c.aZ)({name:"ListCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yrn,_rn)}}),Srn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ern=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 5h8"></path><path d="M13 9h5"></path><path d="M13 15h8"></path><path d="M13 19h5"></path><rect x="3" y="4" width="6" height="6" rx="1"></rect><rect x="3" y="14" width="6" height="6" rx="1"></rect></g>',1),Prn=[Ern],jrn=(0,c.aZ)({name:"ListDetails",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Srn,Prn)}}),Arn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Drn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 6h9"></path><path d="M11 12h9"></path><path d="M12 18h8"></path><path d="M4 16a2 2 0 1 1 4 0c0 .591-.5 1-1 1.5L4 20h4"></path><path d="M6 10V4L4 6"></path></g>',1),Rrn=[Drn],Frn=(0,c.aZ)({name:"ListNumbers",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Arn,Rrn)}}),Brn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lrn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="15" cy="15" r="4"></circle><path d="M18.5 18.5L21 21"></path><path d="M4 6h16"></path><path d="M4 12h4"></path><path d="M4 18h4"></path></g>',1),Trn=[Lrn],Irn=(0,c.aZ)({name:"ListSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Brn,Trn)}}),Nrn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Orn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="12" r="5"></circle><path d="M15.9 20.11v.01"></path><path d="M19.04 17.61v.01"></path><path d="M20.77 14v.01"></path><path d="M20.77 10v.01"></path><path d="M19.04 6.39v.01"></path><path d="M15.9 3.89v.01"></path><path d="M12 3v.01"></path><path d="M8.1 3.89v.01"></path><path d="M4.96 6.39v.01"></path><path d="M3.23 10v.01"></path><path d="M3.23 14v.01"></path><path d="M4.96 17.61v.01"></path><path d="M8.1 20.11v.01"></path><path d="M12 21v.01"></path></g>',1),Vrn=[Orn],Zrn=(0,c.aZ)({name:"LivePhoto",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nrn,Vrn)}}),Hrn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Urn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><path d="M12 11v.01"></path><path d="M12 18l-3.5-5a4 4 0 1 1 7 0L12 18"></path></g>',1),zrn=[Urn],qrn=(0,c.aZ)({name:"LiveView",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hrn,zrn)}}),$rn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Krn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 6V3"></path><path d="M16.25 7.75L18.4 5.6"></path><path d="M18 12h3"></path><path d="M16.25 16.25l2.15 2.15"></path><path d="M12 18v3"></path><path d="M7.75 16.25L5.6 18.4"></path><path d="M6 12H3"></path><path d="M7.75 7.75L5.6 5.6"></path></g>',1),Yrn=[Krn],Wrn=(0,c.aZ)({name:"Loader",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$rn,Yrn)}}),Grn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jrn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 6V3"}),(0,c._)("path",{d:"M6 12H3"}),(0,c._)("path",{d:"M7.75 7.75L5.6 5.6"})],-1),Xrn=[Jrn],Qrn=(0,c.aZ)({name:"LoaderQuarter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Grn,Xrn)}}),non={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},son=(0,c._)("path",{d:"M21 3l-6.5 18a.55.55 0 0 1-1 0L10 14l-7-3.5a.55.55 0 0 1 0-1L21 3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),eon=[son],aon=(0,c.aZ)({name:"Location",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",non,eon)}}),ton={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ron=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"11",width:"14",height:"10",rx:"2"}),(0,c._)("circle",{cx:"12",cy:"16",r:"1"}),(0,c._)("path",{d:"M8 11V7a4 4 0 0 1 8 0v4"})],-1),oon=[ron],pon=(0,c.aZ)({name:"Lock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ton,oon)}}),lon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ion=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path><rect x="8" y="11" width="8" height="5" rx="1"></rect><path d="M10 11V9a2 2 0 1 1 4 0v2"></path></g>',1),con=[ion],uon=(0,c.aZ)({name:"LockAccess",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lon,con)}}),don={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hon=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M19 19a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h4m4 0h2a2 2 0 0 1 2 2v2"></path><circle cx="12" cy="16" r="1"></circle><path d="M8 11V8m.712-3.278A4 4 0 0 1 16 7v4"></path></g>',1),gon=[hon],mon=(0,c.aZ)({name:"LockOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",don,gon)}}),kon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bon=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"11",width:"14",height:"10",rx:"2"}),(0,c._)("circle",{cx:"12",cy:"16",r:"1"}),(0,c._)("path",{d:"M8 11V6a4 4 0 0 1 8 0"})],-1),von=[bon],won=(0,c.aZ)({name:"LockOpen",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kon,von)}}),xon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fon=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"11",width:"8",height:"5",rx:"1"}),(0,c._)("path",{d:"M10 11V9a2 2 0 1 1 4 0v2"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),yon=[fon],Mon=(0,c.aZ)({name:"LockSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xon,yon)}}),_on={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Con=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2"}),(0,c._)("path",{d:"M20 12H7l3-3m0 6l-3-3"})],-1),Son=[Con],Eon=(0,c.aZ)({name:"Login",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_on,Son)}}),Pon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jon=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2"}),(0,c._)("path",{d:"M7 12h14l-3-3m0 6l3-3"})],-1),Aon=[jon],Don=(0,c.aZ)({name:"Logout",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pon,Aon)}}),Ron={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fon=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="14" cy="10" r="7"></circle><path d="M21 10a3.5 3.5 0 0 0-7 0"></path><path d="M14 10a3.5 3.5 0 0 1-7 0"></path><path d="M14 17a3.5 3.5 0 0 0 0-7"></path><path d="M14 3a3.5 3.5 0 0 0 0 7"></path><path d="M3 21l6-6"></path></g>',1),Bon=[Fon],Lon=(0,c.aZ)({name:"Lollipop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ron,Bon)}}),Ton={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ion=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="6" y="6" width="12" height="14" rx="2"></rect><path d="M9 6V5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v1"></path><path d="M6 10h12"></path><path d="M6 16h12"></path><path d="M9 20v1"></path><path d="M15 20v1"></path></g>',1),Non=[Ion],Oon=(0,c.aZ)({name:"Luggage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ton,Non)}}),Von={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zon=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6.081 20C7.693 20 9 18.665 9 17.02V7.257C9 6.563 8.448 6 7.768 6c-.205 0-.405.052-.584.15l-.13.083C5.594 7.292 4.622 8.88 3.65 12.057c-.42 1.37-.636 2.962-.648 4.775c-.012 1.675 1.261 3.054 2.877 3.161l.203.007z"></path><path d="M17.92 20C16.307 20 15 18.665 15 17.02V7.257C15 6.563 15.552 6 16.233 6c.204 0 .405.052.584.15l.13.083c1.46 1.059 2.432 2.647 3.405 5.824c.42 1.37.636 2.962.648 4.775c.012 1.675-1.261 3.054-2.878 3.161L17.92 20z"></path><path d="M9 12a3 3 0 0 0 3-3a3 3 0 0 0 3 3"></path><path d="M12 4v5"></path></g>',1),Hon=[Zon],Uon=(0,c.aZ)({name:"Lungs",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Von,Hon)}}),zon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qon=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 15a6 6 0 1 0 12 0"></path><path d="M18 15a6 6 0 0 0-6 6"></path><path d="M12 21a6 6 0 0 0-6-6"></path><path d="M12 21V11"></path><path d="M12 11a5 5 0 0 1-5-5V3l3 2l2-2l2 2l3-2v3a5 5 0 0 1-5 5z"></path></g>',1),$on=[qon],Kon=(0,c.aZ)({name:"Macro",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zon,$on)}}),Yon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Won=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 13V5a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v8a2 2 0 0 0 6 0V5a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v8a8 8 0 0 1-16 0"}),(0,c._)("path",{d:"M4 8h5"}),(0,c._)("path",{d:"M15 8h4"})],-1),Gon=[Won],Jon=(0,c.aZ)({name:"Magnet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yon,Gon)}}),Xon={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qon=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2"}),(0,c._)("path",{d:"M3 7l9 6l9-6"})],-1),npn=[Qon],spn=(0,c.aZ)({name:"Mail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xon,npn)}}),epn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},apn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 18H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v7.5"></path><path d="M3 6l9 6l9-6"></path><path d="M15 18h6"></path><path d="M18 15l3 3l-3 3"></path></g>',1),tpn=[apn],rpn=(0,c.aZ)({name:"MailForward",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",epn,tpn)}}),opn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ppn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 9l9 6l9-6l-9-6l-9 6"></path><path d="M21 9v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9"></path><path d="M3 19l6-6"></path><path d="M15 13l6 6"></path></g>',1),lpn=[ppn],ipn=(0,c.aZ)({name:"MailOpened",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",opn,lpn)}}),cpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},upn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 21v-6.5a3.5 3.5 0 0 0-7 0V21h18v-6a4 4 0 0 0-4-4H6.5"}),(0,c._)("path",{d:"M12 11V3h4l2 2l-2 2h-4"}),(0,c._)("path",{d:"M6 15h1"})],-1),dpn=[upn],hpn=(0,c.aZ)({name:"Mailbox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cpn,dpn)}}),gpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mpn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"5",r:"2"}),(0,c._)("path",{d:"M10 22v-5l-1-1v-4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4l-1 1v5"})],-1),kpn=[mpn],bpn=(0,c.aZ)({name:"Man",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gpn,kpn)}}),vpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wpn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="6" r="2"></circle><circle cx="12" cy="6" r="2"></circle><circle cx="19" cy="6" r="2"></circle><circle cx="5" cy="18" r="2"></circle><circle cx="12" cy="18" r="2"></circle><path d="M5 8v8"></path><path d="M12 8v8"></path><path d="M19 8v2a2 2 0 0 1-2 2H5"></path></g>',1),xpn=[wpn],fpn=(0,c.aZ)({name:"ManualGearbox",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vpn,xpn)}}),ypn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mpn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7l6-3l6 3l6-3v13l-6 3l-6-3l-6 3V7"}),(0,c._)("path",{d:"M9 4v13"}),(0,c._)("path",{d:"M15 7v13"})],-1),_pn=[Mpn],Cpn=(0,c.aZ)({name:"Map",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ypn,_pn)}}),Spn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Epn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6v.01"></path><path d="M18 13l-3.5-5a4 4 0 1 1 7 0L18 13"></path><path d="M10.5 4.75L9 4L3 7v13l6-3l6 3l6-3v-2"></path><path d="M9 4v13"></path><path d="M15 15v5"></path></g>',1),Ppn=[Epn],jpn=(0,c.aZ)({name:"Map2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Spn,Ppn)}}),Apn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dpn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"11",r:"3"}),(0,c._)("path",{d:"M17.657 16.657L13.414 20.9a2 2 0 0 1-2.827 0l-4.244-4.243a8 8 0 1 1 11.314 0z"})],-1),Rpn=[Dpn],Fpn=(0,c.aZ)({name:"MapPin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Apn,Rpn)}}),Bpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lpn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M9.44 9.435a3 3 0 0 0 4.126 4.124M15 11a3 3 0 0 0-3-3"}),(0,c._)("path",{d:"M8.048 4.042A8 8 0 0 1 18.96 14.95m-1.8 2.206L13.415 20.9a2 2 0 0 1-2.827 0l-4.244-4.243a8 8 0 0 1-.48-10.79"})],-1),Tpn=[Lpn],Ipn=(0,c.aZ)({name:"MapPinOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bpn,Tpn)}}),Npn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Opn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10.828 9.828a4 4 0 1 0-5.656 0L8 12.657l2.828-2.829z"></path><path d="M8 7v.01"></path><path d="M18.828 17.828a4 4 0 1 0-5.656 0L16 20.657l2.828-2.829z"></path><path d="M16 15v.01"></path></g>',1),Vpn=[Opn],Zpn=(0,c.aZ)({name:"MapPins",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Npn,Vpn)}}),Hpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Upn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 18l-2-1l-6 3V7l6-3l6 3l6-3v10"></path><path d="M9 4v13"></path><path d="M15 7v5"></path><circle cx="16.5" cy="17.5" r="2.5"></circle><path d="M18.5 19.5L21 22"></path></g>',1),zpn=[Upn],qpn=(0,c.aZ)({name:"MapSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hpn,zpn)}}),$pn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kpn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2"}),(0,c._)("path",{d:"M7 15V9l2 2l2-2v6"}),(0,c._)("path",{d:"M14 13l2 2l2-2m-2 2V9"})],-1),Ypn=[Kpn],Wpn=(0,c.aZ)({name:"Markdown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$pn,Ypn)}}),Gpn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jpn=(0,c._)("path",{d:"M4 6a2 2 0 0 1 2-2m3 0h1.5m3 0H15m3 0a2 2 0 0 1 2 2m0 3v1.5m0 3V15m0 3a2 2 0 0 1-2 2m-3 0h-1.5m-3 0H9m-3 0a2 2 0 0 1-2-2m0-3v-1.5m0-3V9m0-3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Xpn=[Jpn],Qpn=(0,c.aZ)({name:"Marquee",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gpn,Xpn)}}),nln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sln=(0,c._)("path",{d:"M4 6V5a1 1 0 0 1 1-1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1-1 1h-1m-5 0h-2m-5 0H5a1 1 0 0 1-1-1v-1m0-5v-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),eln=[sln],aln=(0,c.aZ)({name:"Marquee2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nln,eln)}}),tln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="14" r="5"></circle><path d="M19 5l-5.4 5.4"></path><path d="M19 5h-5"></path><path d="M19 5v5"></path></g>',1),oln=[rln],pln=(0,c.aZ)({name:"Mars",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tln,oln)}}),lln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iln=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),cln=[iln],uln=(0,c.aZ)({name:"Mask",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lln,cln)}}),dln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hln=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19.42 19.41A2 2 0 0 1 18 20H6a2 2 0 0 1-2-2V6c0-.554.225-1.055.588-1.417M8 4h10a2 2 0 0 1 2 2v10"}),(0,c._)("path",{d:"M9.885 9.872a3 3 0 1 0 4.245 4.24m.582-3.396a3.012 3.012 0 0 0-1.438-1.433"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),gln=[hln],mln=(0,c.aZ)({name:"MaskOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dln,gln)}}),kln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="4" cy="17" r="1"></circle><circle cx="9" cy="5" r="1"></circle><path d="M4 22l4-2v-3h12"></path><path d="M11 20h9"></path><path d="M8 14l3-2l1-4c3 1 3 4 3 6"></path></g>',1),vln=[bln],wln=(0,c.aZ)({name:"Massage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kln,vln)}}),xln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fln=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 13l4 4m0-4l-4 4"}),(0,c._)("path",{d:"M20 5h-7L9 19l-3-6H4"})],-1),yln=[fln],Mln=(0,c.aZ)({name:"Math",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xln,yln)}}),_ln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 10h1c1 0 1 1 2.016 3.527C18 16 18 17 19 17h1"></path><path d="M13 17c1.5 0 3-2 4-3.5s2.5-3.5 4-3.5"></path><path d="M3 19c0 1.5.5 2 2 2s2-4 3-9s1.5-9 3-9s2 .5 2 2"></path><path d="M5 12h6"></path></g>',1),Sln=[Cln],Eln=(0,c.aZ)({name:"MathFunction",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_ln,Sln)}}),Pln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12h18"></path><path d="M12 3v18"></path><path d="M16.5 4.5l3 3"></path><path d="M19.5 4.5l-3 3"></path><path d="M6 4v4"></path><path d="M4 6h4"></path><path d="M18 16h.01"></path><path d="M18 20h.01"></path><path d="M4 18h4"></path></g>',1),Aln=[jln],Dln=(0,c.aZ)({name:"MathSymbols",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pln,Aln)}}),Rln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 8V6a2 2 0 0 1 2-2h2"></path><path d="M4 16v2a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v2"></path><path d="M16 20h2a2 2 0 0 0 2-2v-2"></path></g>',1),Bln=[Fln],Lln=(0,c.aZ)({name:"Maximize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rln,Bln)}}),Tln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Iln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13.62 8.382l1.966-1.967A2 2 0 1 1 19 5a2 2 0 1 1-1.413 3.414l-1.82 1.821"></path><ellipse transform="rotate(45 8.025 16.475)" cx="8.025" cy="16.475" rx="7" ry="3"></ellipse><path d="M7.5 16l1 1"></path><path d="M12.975 21.425c3.905-3.906 4.855-9.288 2.121-12.021c-2.733-2.734-8.115-1.784-12.02 2.121"></path></g>',1),Nln=[Iln],Oln=(0,c.aZ)({name:"Meat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tln,Nln)}}),Vln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zln=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4v3M8 4v6m8-6v6"}),(0,c._)("path",{d:"M12 18.5L9 20l.5-3.5l-2-2l3-.5l1.5-3l1.5 3l3 .5l-2 2L15 20z"})],-1),Hln=[Zln],Uln=(0,c.aZ)({name:"Medal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vln,Hln)}}),zln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 3h6l3 7l-6 2l-6-2z"></path><path d="M12 12L9 3"></path><path d="M15 11l-3-8"></path><path d="M12 19.5L9 21l.5-3.5l-2-2l3-.5l1.5-3l1.5 3l3 .5l-2 2L15 21z"></path></g>',1),$ln=[qln],Kln=(0,c.aZ)({name:"Medal2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zln,$ln)}}),Yln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wln=(0,c._)("path",{d:"M13 3a1 1 0 0 1 1 1v4.535l3.928-2.267a1 1 0 0 1 1.366.366l1 1.732a1 1 0 0 1-.366 1.366L16.001 12l3.927 2.269a1 1 0 0 1 .366 1.366l-1 1.732a1 1 0 0 1-1.366.366L14 15.464V20a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-4.536l-3.928 2.268a1 1 0 0 1-1.366-.366l-1-1.732a1 1 0 0 1 .366-1.366L7.999 12L4.072 9.732a1 1 0 0 1-.366-1.366l1-1.732a1 1 0 0 1 1.366-.366L10 8.535V4a1 1 0 0 1 1-1h2z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Gln=[Wln],Jln=(0,c.aZ)({name:"MedicalCross",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yln,Gln)}}),Xln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qln=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 21h8a1 1 0 0 0 1-1V10a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3v10a1 1 0 0 0 1 1z"></path><path d="M10 14h4"></path><path d="M12 12v4"></path><path d="M10 7V4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3"></path></g>',1),nin=[Qln],sin=(0,c.aZ)({name:"MedicineSyrup",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xln,nin)}}),ein={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ain=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 8h16"}),(0,c._)("path",{d:"M4 16h16"})],-1),tin=[ain],rin=(0,c.aZ)({name:"Menu",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ein,tin)}}),oin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M4 12h16"}),(0,c._)("path",{d:"M4 18h16"})],-1),lin=[pin],iin=(0,c.aZ)({name:"Menu2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oin,lin)}}),cin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 21V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H8l-4 4"}),(0,c._)("path",{d:"M8 9h8"}),(0,c._)("path",{d:"M8 13h6"})],-1),din=[uin],hin=(0,c.aZ)({name:"Message",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cin,din)}}),gin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},min=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 20l-3-3H7a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3h-2l-3 3"}),(0,c._)("path",{d:"M8 9h8"}),(0,c._)("path",{d:"M8 13h6"})],-1),kin=[min],bin=(0,c.aZ)({name:"Message2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gin,kin)}}),vin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},win=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 20l1.3-3.9A9 8 0 1 1 7.7 19L3 20"></path><path d="M12 12v.01"></path><path d="M8 12v.01"></path><path d="M16 12v.01"></path></g>',1),xin=[win],fin=(0,c.aZ)({name:"MessageCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vin,xin)}}),yin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Min=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 20l1.3-3.9A9 8 0 1 1 7.7 19L3 20"></path><path d="M12 12v.01"></path><path d="M8 12v.01"></path><path d="M16 12v.01"></path></g>',1),_in=[Min],Cin=(0,c.aZ)({name:"MessageCircle2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yin,_in)}}),Sin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ein=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M8.585 4.581c3.225-1.181 7.032-.616 9.66 1.626c2.983 2.543 3.602 6.525 1.634 9.662m-1.908 2.108C15.185 20.167 11.081 20.642 7.7 19L3 20l1.3-3.9C2.063 12.792 2.811 8.56 6.014 6.016"})],-1),Pin=[Ein],jin=(0,c.aZ)({name:"MessageCircleOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sin,Pin)}}),Ain={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Din=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 21V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H8l-4 4"></path><path d="M12 11v.01"></path><path d="M8 11v.01"></path><path d="M16 11v.01"></path></g>',1),Rin=[Din],Fin=(0,c.aZ)({name:"MessageDots",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ain,Rin)}}),Bin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 21V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H8l-4 4"}),(0,c._)("path",{d:"M10 14v-4a2 2 0 1 1 4 0v4"}),(0,c._)("path",{d:"M14 12h-4"})],-1),Tin=[Lin],Iin=(0,c.aZ)({name:"MessageLanguage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bin,Tin)}}),Nin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M17 17H8l-4 4V8a3 3 0 0 1 1.44-2.563M9.001 5h8a3 3 0 0 1 3 3v6c0 .575-.162 1.112-.442 1.568"})],-1),Vin=[Oin],Zin=(0,c.aZ)({name:"MessageOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nin,Vin)}}),Hin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 21V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H8l-4 4"}),(0,c._)("path",{d:"M10 11h4"}),(0,c._)("path",{d:"M12 9v4"})],-1),zin=[Uin],qin=(0,c.aZ)({name:"MessagePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hin,zin)}}),$in={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 21V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3H8l-4 4"}),(0,c._)("path",{d:"M12 8v3"}),(0,c._)("path",{d:"M12 14v.01"})],-1),Yin=[Kin],Win=(0,c.aZ)({name:"MessageReport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$in,Yin)}}),Gin={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jin=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M21 14l-3-3h-7a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v10"}),(0,c._)("path",{d:"M14 15v2a1 1 0 0 1-1 1H6l-3 3V11a1 1 0 0 1 1-1h2"})],-1),Xin=[Jin],Qin=(0,c.aZ)({name:"Messages",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gin,Xin)}}),ncn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},scn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M11 11a1 1 0 0 1-1-1m0-3.968V4a1 1 0 0 1 1-1h9a1 1 0 0 1 1 1v10l-3-3h-3"}),(0,c._)("path",{d:"M14 15v2a1 1 0 0 1-1 1H6l-3 3V11a1 1 0 0 1 1-1h2"})],-1),ecn=[scn],acn=(0,c.aZ)({name:"MessagesOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ncn,ecn)}}),tcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="2" width="6" height="11" rx="3"></rect><path d="M5 10a7 7 0 0 0 14 0"></path><path d="M8 21h8"></path><path d="M12 17v4"></path></g>',1),ocn=[rcn],pcn=(0,c.aZ)({name:"Microphone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tcn,ocn)}}),lcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},icn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15.002 12.9A5 5 0 1 0 11.1 9"}),(0,c._)("path",{d:"M15.002 12.9L11.1 9.001l-7.513 8.584a2 2 0 1 0 2.827 2.83l8.588-7.515z"})],-1),ccn=[icn],ucn=(0,c.aZ)({name:"Microphone2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lcn,ccn)}}),dcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M9 5a3 3 0 0 1 6 0v5a3 3 0 0 1-.13.874m-2 2A3 3 0 0 1 9 10.002v-1"></path><path d="M5 10a7 7 0 0 0 10.846 5.85m2.002-2A6.967 6.967 0 0 0 19 10"></path><path d="M8 21h8"></path><path d="M12 17v4"></path></g>',1),gcn=[hcn],mcn=(0,c.aZ)({name:"MicrophoneOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dcn,gcn)}}),kcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 21h14"></path><path d="M6 18h2"></path><path d="M7 18v3"></path><path d="M9 11l3 3l6-6l-3-3z"></path><path d="M10.5 12.5L9 14"></path><path d="M17 3l3 3"></path><path d="M12 21a6 6 0 0 0 3.715-10.712"></path></g>',1),vcn=[bcn],wcn=(0,c.aZ)({name:"Microscope",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kcn,vcn)}}),xcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fcn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"13",r:"4"}),(0,c._)("path",{d:"M9 10L8 8H3l2.48 5.788A2 2 0 0 0 7.32 15H8.5"}),(0,c._)("path",{d:"M15 10l1-2h5l-2.48 5.788A2 2 0 0 1 16.68 15H15.5"})],-1),ycn=[fcn],Mcn=(0,c.aZ)({name:"MiliratyAward",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xcn,ycn)}}),_cn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ccn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 7v13H7V7l5-3z"></path><path d="M10 13l2-1l2 1"></path><path d="M10 17l2-1l2 1"></path><path d="M10 9l2-1l2 1"></path></g>',1),Scn=[Ccn],Ecn=(0,c.aZ)({name:"MilitaryRank",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_cn,Scn)}}),Pcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 6h8V4a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2z"></path><path d="M16 6l1.094 1.759a6 6 0 0 1 .906 3.17V19a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2v-8.071a6 6 0 0 1 .906-3.17L8 6"></path><circle cx="12" cy="16" r="2"></circle><path d="M10 10h4"></path></g>',1),Acn=[jcn],Dcn=(0,c.aZ)({name:"Milk",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pcn,Acn)}}),Rcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 19v-2a2 2 0 0 1 2-2h2"></path><path d="M15 5v2a2 2 0 0 0 2 2h2"></path><path d="M5 15h2a2 2 0 0 1 2 2v2"></path><path d="M5 9h2a2 2 0 0 0 2-2V5"></path></g>',1),Bcn=[Fcn],Lcn=(0,c.aZ)({name:"Minimize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rcn,Bcn)}}),Tcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Icn=(0,c._)("path",{d:"M5 12h14",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ncn=[Icn],Ocn=(0,c.aZ)({name:"Minus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tcn,Ncn)}}),Vcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zcn=(0,c._)("path",{d:"M12 5v14",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Hcn=[Zcn],Ucn=(0,c.aZ)({name:"MinusVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vcn,Hcn)}}),zcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 5h3m4 0h9"></path><path d="M3 10h11m4 0h1"></path><path d="M5 15h5m4 0h7"></path><path d="M3 20h9m4 0h3"></path></g>',1),$cn=[qcn],Kcn=(0,c.aZ)({name:"Mist",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zcn,$cn)}}),Ycn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 4.5a9 9 0 0 1 3.864 5.89a2.5 2.5 0 0 1-.29 4.36a9 9 0 0 1-17.137 0a2.5 2.5 0 0 1-.29-4.36a9 9 0 0 1 3.746-5.81"></path><path d="M9.5 16a3.5 3.5 0 0 0 5 0"></path><path d="M8.5 2C10 3 11 5.5 11 7"></path><path d="M12.5 2c1.5 2 2 3.5 2 5"></path><path d="M9 12h.01"></path><path d="M15 12h.01"></path></g>',1),Gcn=[Wcn],Jcn=(0,c.aZ)({name:"MoodBoy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ycn,Gcn)}}),Xcn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qcn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 16a10 10 0 0 1 6-1.5"></path></g>',1),nun=[Qcn],sun=(0,c.aZ)({name:"MoodConfuzed",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xcn,nun)}}),eun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M7 8.5l3 3"></path><path d="M7 11.5l3-3"></path><path d="M14 8.5l3 3"></path><path d="M14 11.5l3-3"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path></g>',1),tun=[aun],run=(0,c.aZ)({name:"MoodCrazyHappy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eun,tun)}}),oun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15.25a3.5 3.5 0 0 1 5 0"></path><path d="M17.566 17.606a2 2 0 1 0 2.897.03L19 16l-1.434 1.606z"></path><path d="M20.865 13.517A8.937 8.937 0 0 0 21 12a9 9 0 1 0-9 9c.69 0 1.36-.076 2-.222"></path></g>',1),lun=[pun],iun=(0,c.aZ)({name:"MoodCry",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oun,lun)}}),cun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9 15h6"></path></g>',1),dun=[uun],hun=(0,c.aZ)({name:"MoodEmpty",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cun,dun)}}),gun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 9h.01"></path><path d="M15 9h.01"></path><path d="M8 13a4 4 0 1 0 8 0m0 0H8"></path></g>',1),kun=[mun],bun=(0,c.aZ)({name:"MoodHappy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gun,kun)}}),vun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path><path d="M12 3a2 2 0 0 0 0 4"></path></g>',1),xun=[wun],fun=(0,c.aZ)({name:"MoodKid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vun,xun)}}),yun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M8 16l2-2l2 2l2-2l2 2"></path></g>',1),_un=[Mun],Cun=(0,c.aZ)({name:"MoodNervous",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yun,_un)}}),Sun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Eun=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 10h.01"}),(0,c._)("path",{d:"M15 10h.01"})],-1),Pun=[Eun],jun=(0,c.aZ)({name:"MoodNeutral",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sun,Pun)}}),Aun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15.25a3.5 3.5 0 0 1 5 0"></path></g>',1),Run=[Dun],Fun=(0,c.aZ)({name:"MoodSad",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Aun,Run)}}),Bun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M9.5 15a3.5 3.5 0 0 0 5 0"></path></g>',1),Tun=[Lun],Iun=(0,c.aZ)({name:"MoodSmile",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bun,Tun)}}),Nun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Oun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 9h.01"></path><path d="M15 9h.01"></path><circle cx="12" cy="15" r="2"></circle></g>',1),Vun=[Oun],Zun=(0,c.aZ)({name:"MoodSuprised",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nun,Vun)}}),Hun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uun=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M9 10h.01"></path><path d="M15 10h.01"></path><path d="M10 14v2a2 2 0 0 0 4 0v-2m1.5 0h-7"></path></g>',1),zun=[Uun],qun=(0,c.aZ)({name:"MoodTongue",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hun,zun)}}),$un={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kun=(0,c._)("path",{d:"M12 3h.393a7.5 7.5 0 0 0 7.92 12.446A9 9 0 1 1 12 2.992z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Yun=[Kun],Wun=(0,c.aZ)({name:"Moon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$un,Yun)}}),Gun={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jun=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16.418 4.157a8 8 0 0 0 0 15.686"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),Xun=[Jun],Qun=(0,c.aZ)({name:"Moon2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gun,Xun)}}),ndn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3h.393a7.5 7.5 0 0 0 7.92 12.446A9 9 0 1 1 12 2.992z"}),(0,c._)("path",{d:"M17 4a2 2 0 0 0 2 2a2 2 0 0 0-2 2a2 2 0 0 0-2-2a2 2 0 0 0 2-2"}),(0,c._)("path",{d:"M19 11h2m-1-1v2"})],-1),edn=[sdn],adn=(0,c.aZ)({name:"MoonStars",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ndn,edn)}}),tdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"18",cy:"17",r:"2"}),(0,c._)("path",{d:"M5 16v1a2 2 0 0 0 4 0v-5H6a3 3 0 0 0-3 3v1h10a6 6 0 0 1 5-4V7a2 2 0 0 0-2-2h-1"}),(0,c._)("path",{d:"M6 9h3"})],-1),odn=[rdn],pdn=(0,c.aZ)({name:"Moped",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tdn,odn)}}),ldn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},idn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="16" r="3"></circle><circle cx="19" cy="16" r="3"></circle><path d="M7.5 14h5l4-4H6m1.5 4l4-4"></path><path d="M13 6h2l1.5 3l2 4"></path></g>',1),cdn=[idn],udn=(0,c.aZ)({name:"Motorbike",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ldn,cdn)}}),ddn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 20h18L14.079 5.388a2.3 2.3 0 0 0-4.158 0L3 20z"}),(0,c._)("path",{d:"M7.5 11l2 2.5L12 11l2 3l2.5-2"})],-1),gdn=[hdn],mdn=(0,c.aZ)({name:"Mountain",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ddn,gdn)}}),kdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"6",y:"3",width:"12",height:"18",rx:"4"}),(0,c._)("path",{d:"M12 7v4"})],-1),vdn=[bdn],wdn=(0,c.aZ)({name:"Mouse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kdn,vdn)}}),xdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fdn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M8 4v16"></path><path d="M16 4v16"></path><path d="M4 8h4"></path><path d="M4 16h4"></path><path d="M4 12h16"></path><path d="M16 8h4"></path><path d="M16 16h4"></path></g>',1),ydn=[fdn],Mdn=(0,c.aZ)({name:"Movie",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xdn,ydn)}}),_dn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.083 5h10.834A1.08 1.08 0 0 1 16 6.077v8.615C16 17.072 14.06 19 11.667 19H7.333C4.94 19 3 17.071 3 14.692V6.077A1.08 1.08 0 0 1 4.083 5"}),(0,c._)("path",{d:"M16 8h2.5c1.38 0 2.5 1.045 2.5 2.333v2.334C21 13.955 19.88 15 18.5 15H16"})],-1),Sdn=[Cdn],Edn=(0,c.aZ)({name:"Mug",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_dn,Sdn)}}),Pdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jdn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 16h2a2 2 0 1 0 0-4H8V8h4"></path><path d="M5 16v.01"></path><path d="M15 16l4-4"></path><path d="M19 16l-4-4"></path></g>',1),Adn=[jdn],Ddn=(0,c.aZ)({name:"Multiplier05X",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pdn,Adn)}}),Rdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fdn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 16V8l-2 2"></path><path d="M10 16h2a2 2 0 1 0 0-4h-2V8h4"></path><path d="M7 16v.01"></path><path d="M17 16l4-4"></path><path d="M21 16l-4-4"></path></g>',1),Bdn=[Fdn],Ldn=(0,c.aZ)({name:"Multiplier15X",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rdn,Bdn)}}),Tdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Idn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 16V8l-2 2"}),(0,c._)("path",{d:"M13 16l4-4"}),(0,c._)("path",{d:"M17 16l-4-4"})],-1),Ndn=[Idn],Odn=(0,c.aZ)({name:"Multiplier1X",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tdn,Ndn)}}),Vdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14 16l4-4"}),(0,c._)("path",{d:"M18 16l-4-4"}),(0,c._)("path",{d:"M6 10a2 2 0 1 1 4 0c0 .591-.417 1.318-.816 1.858L6 16.001h4"})],-1),Hdn=[Zdn],Udn=(0,c.aZ)({name:"Multiplier2X",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vdn,Hdn)}}),zdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 11.1C20 6.626 16.418 3 12 3s-8 3.626-8 8.1a.9.9 0 0 0 .9.9h14.2a.9.9 0 0 0 .9-.9z"}),(0,c._)("path",{d:"M10 12v7a2 2 0 1 0 4 0v-7"})],-1),$dn=[qdn],Kdn=(0,c.aZ)({name:"Mushroom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zdn,$dn)}}),Ydn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wdn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="17" r="3"></circle><circle cx="16" cy="17" r="3"></circle><path d="M9 17V4h10v13"></path><path d="M9 8h10"></path></g>',1),Gdn=[Wdn],Jdn=(0,c.aZ)({name:"Music",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ydn,Gdn)}}),Xdn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qdn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 12h6"}),(0,c._)("path",{d:"M12 9v6"}),(0,c._)("path",{d:"M4 6V5a1 1 0 0 1 1-1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1-1 1h-1m-5 0h-2m-5 0H5a1 1 0 0 1-1-1v-1m0-5v-2m0-5"})],-1),nhn=[Qdn],shn=(0,c.aZ)({name:"NewSection",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xdn,nhn)}}),ehn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ahn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 6h3a1 1 0 0 1 1 1v11a2 2 0 0 1-4 0V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v12a3 3 0 0 0 3 3h11"></path><path d="M8 8h4"></path><path d="M8 12h4"></path><path d="M8 16h4"></path></g>',1),thn=[ahn],rhn=(0,c.aZ)({name:"News",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ehn,thn)}}),ohn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},phn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 20a3 3 0 0 1-3-3V6l5 5"}),(0,c._)("path",{d:"M13 4a3 3 0 0 1 3 3v11l-5-5"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"3"})],-1),lhn=[phn],ihn=(0,c.aZ)({name:"Nfc",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ohn,lhn)}}),chn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uhn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M14 9.75a3.016 3.016 0 0 0-4.163.173a2.993 2.993 0 0 0 0 4.154A3.016 3.016 0 0 0 14 14.25"></path><path d="M6 6l1.5 1.5"></path><path d="M16.5 16.5L18 18"></path></g>',1),dhn=[uhn],hhn=(0,c.aZ)({name:"NoCopyright",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",chn,dhn)}}),ghn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mhn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M10.5 10.5a2.187 2.187 0 0 0-2.914.116a1.928 1.928 0 0 0 0 2.768a2.188 2.188 0 0 0 2.914.116"></path><path d="M16.5 10.5a2.187 2.187 0 0 0-2.914.116a1.928 1.928 0 0 0 0 2.768a2.188 2.188 0 0 0 2.914.116"></path><path d="M6 6l1.5 1.5"></path><path d="M16.5 16.5L18 18"></path></g>',1),khn=[mhn],bhn=(0,c.aZ)({name:"NoCreativeCommons",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ghn,khn)}}),vhn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},whn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M9 10h6"}),(0,c._)("path",{d:"M9 14h6"})],-1),xhn=[whn],fhn=(0,c.aZ)({name:"NoDerivatives",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vhn,xhn)}}),yhn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mhn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 20l7-7"}),(0,c._)("path",{d:"M13 20v-6a1 1 0 0 1 1-1h6V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7"})],-1),_hn=[Mhn],Chn=(0,c.aZ)({name:"Note",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yhn,_hn)}}),Shn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ehn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 4h11a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1m3 0v18"}),(0,c._)("path",{d:"M13 8h2"}),(0,c._)("path",{d:"M13 12h2"})],-1),Phn=[Ehn],jhn=(0,c.aZ)({name:"Notebook",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Shn,Phn)}}),Ahn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dhn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="5" y="3" width="14" height="18" rx="2"></rect><path d="M9 7h6"></path><path d="M9 11h6"></path><path d="M9 15h4"></path></g>',1),Rhn=[Dhn],Fhn=(0,c.aZ)({name:"Notes",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ahn,Rhn)}}),Bhn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lhn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 6H7a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-3"}),(0,c._)("circle",{cx:"17",cy:"7",r:"3"})],-1),Thn=[Lhn],Ihn=(0,c.aZ)({name:"Notification",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bhn,Thn)}}),Nhn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ohn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 16V8"}),(0,c._)("path",{d:"M12 20a4 4 0 0 0 4-4V8a4 4 0 1 0-8 0v8a4 4 0 0 0 4 4z"})],-1),Vhn=[Ohn],Zhn=(0,c.aZ)({name:"Number0",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nhn,Vhn)}}),Hhn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uhn=(0,c._)("path",{d:"M13 20V4L8 9",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zhn=[Uhn],qhn=(0,c.aZ)({name:"Number1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hhn,zhn)}}),$hn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Khn=(0,c._)("path",{d:"M8 8a4 4 0 1 1 8 0c0 1.098-.564 2.025-1.159 2.815L8 20h8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Yhn=[Khn],Whn=(0,c.aZ)({name:"Number2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$hn,Yhn)}}),Ghn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jhn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 12a4 4 0 1 0-4-4"}),(0,c._)("path",{d:"M8 16a4 4 0 1 0 4-4"})],-1),Xhn=[Jhn],Qhn=(0,c.aZ)({name:"Number3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ghn,Xhn)}}),ngn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sgn=(0,c._)("path",{d:"M15 20V5L7 16h10",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),egn=[sgn],agn=(0,c.aZ)({name:"Number4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ngn,egn)}}),tgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rgn=(0,c._)("path",{d:"M8 20h4a4 4 0 1 0 0-8H8V4h8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ogn=[rgn],pgn=(0,c.aZ)({name:"Number5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tgn,ogn)}}),lgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ign=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 16a4 4 0 1 0 8 0v-1a4 4 0 1 0-8 0"}),(0,c._)("path",{d:"M16 8a4 4 0 1 0-8 0v8"})],-1),cgn=[ign],ugn=(0,c.aZ)({name:"Number6",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lgn,cgn)}}),dgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hgn=(0,c._)("path",{d:"M8 4h8l-4 16",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ggn=[hgn],mgn=(0,c.aZ)({name:"Number7",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dgn,ggn)}}),kgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"8",r:"4"}),(0,c._)("circle",{cx:"12",cy:"16",r:"4"})],-1),vgn=[bgn],wgn=(0,c.aZ)({name:"Number8",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kgn,vgn)}}),xgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 8a4 4 0 1 0-8 0v1a4 4 0 1 0 8 0"}),(0,c._)("path",{d:"M8 16a4 4 0 1 0 8 0V8"})],-1),ygn=[fgn],Mgn=(0,c.aZ)({name:"Number9",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xgn,ygn)}}),_gn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 6c2.941 0 5.685.847 8 2.31L18 18H6L4 8.309A14.93 14.93 0 0 1 12 6z"}),(0,c._)("path",{d:"M10 12h4"}),(0,c._)("path",{d:"M12 10v4"})],-1),Sgn=[Cgn],Egn=(0,c.aZ)({name:"Nurse",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_gn,Sgn)}}),Pgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jgn=(0,c._)("path",{d:"M8.7 3h6.6c.3 0 .5.1.7.3L20.7 8c.2.2.3.4.3.7v6.6c0 .3-.1.5-.3.7L16 20.7c-.2.2-.4.3-.7.3H8.7c-.3 0-.5-.1-.7-.3L3.3 16c-.2-.2-.3-.4-.3-.7V8.7c0-.3.1-.5.3-.7L8 3.3c.2-.2.4-.3.7-.3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Agn=[jgn],Dgn=(0,c.aZ)({name:"Octagon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pgn,Agn)}}),Rgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7.647 3.653L8 3.3c.2-.2.4-.3.7-.3h6.6c.3 0 .5.1.7.3L20.7 8c.2.2.3.4.3.7v6.6c0 .3-.1.5-.3.7l-.35.35m-1.997 1.997L16 20.7c-.2.2-.4.3-.7.3H8.7c-.3 0-.5-.1-.7-.3L3.3 16c-.2-.2-.3-.4-.3-.7V8.7c0-.3.1-.5.3-.7l2.35-2.35"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),Bgn=[Fgn],Lgn=(0,c.aZ)({name:"OctagonOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rgn,Bgn)}}),Tgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ign=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 21l-1-4l-2-3V8"></path><path d="M5 14l-1-3l4-3l3 2l3 .5"></path><circle cx="8" cy="4" r="1"></circle><path d="M7 17l-2 4"></path><path d="M16 21v-8.5a1.5 1.5 0 0 1 3 0v.5"></path></g>',1),Ngn=[Ign],Ogn=(0,c.aZ)({name:"Old",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tgn,Ngn)}}),Vgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zgn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="9" r="3"></circle><circle cx="18" cy="9" r="3"></circle><circle cx="12" cy="9" r="3"></circle><circle cx="9" cy="15" r="3"></circle><circle cx="15" cy="15" r="3"></circle></g>',1),Hgn=[Zgn],Ugn=(0,c.aZ)({name:"Olympics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vgn,Hgn)}}),zgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qgn=(0,c._)("path",{d:"M4 19h5v-1a7.35 7.35 0 1 1 6 0v1h5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$gn=[qgn],Kgn=(0,c.aZ)({name:"Omega",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zgn,$gn)}}),Ygn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("circle",{cx:"9",cy:"12",r:".5",fill:"currentColor"}),(0,c._)("circle",{cx:"15",cy:"12",r:".5",fill:"currentColor"})],-1),Ggn=[Wgn],Jgn=(0,c.aZ)({name:"Outlet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ygn,Ggn)}}),Xgn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qgn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 9v5a5 5 0 0 0 10 0V9"}),(0,c._)("path",{d:"M5 5h14"})],-1),nmn=[Qgn],smn=(0,c.aZ)({name:"Overline",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xgn,nmn)}}),emn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},amn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3l8 4.5v9L12 21l-8-4.5v-9L12 3"></path><path d="M12 12l8-4.5"></path><path d="M12 12v9"></path><path d="M12 12L4 7.5"></path><path d="M16 5.25l-8 4.5"></path></g>',1),tmn=[amn],rmn=(0,c.aZ)({name:"Package",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",emn,tmn)}}),omn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pmn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5.636 5.636a9 9 0 0 1 13.397.747L13.414 12l5.619 5.617A9 9 0 1 1 5.636 5.636z"}),(0,c._)("circle",{cx:"11.5",cy:"7.5",r:"1",fill:"currentColor"})],-1),lmn=[pmn],imn=(0,c.aZ)({name:"Pacman",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",omn,lmn)}}),cmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},umn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M19 18v1a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-1"></path><path d="M3 14h3m4.5 0h3m4.5 0h3"></path><path d="M5 10V5a2 2 0 0 1 2-2h7l5 5v2"></path></g>',1),dmn=[umn],hmn=(0,c.aZ)({name:"PageBreak",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cmn,dmn)}}),gmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mmn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"5",y:"3",width:"14",height:"6",rx:"2"}),(0,c._)("path",{d:"M19 6h1a2 2 0 0 1 2 2a5 5 0 0 1-5 5h-5v2"}),(0,c._)("rect",{x:"10",y:"15",width:"4",height:"6",rx:"1"})],-1),kmn=[mmn],bmn=(0,c.aZ)({name:"Paint",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gmn,kmn)}}),vmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wmn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 21a9 9 0 1 1 0-18a9 8 0 0 1 9 8a4.5 4 0 0 1-4.5 4H14a2 2 0 0 0-1 3.75A1.3 1.3 0 0 1 12 21"></path><circle cx="7.5" cy="10.5" r=".5" fill="currentColor"></circle><circle cx="12" cy="7.5" r=".5" fill="currentColor"></circle><circle cx="16.5" cy="10.5" r=".5" fill="currentColor"></circle></g>',1),xmn=[wmn],fmn=(0,c.aZ)({name:"Palette",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vmn,xmn)}}),ymn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mmn=(0,c._)("path",{d:"M4.338 5.53c5.106 1.932 10.211 1.932 15.317.002A1 1 0 0 1 21 6.466v11c0 .692-.692 1.2-1.34.962c-5.107-1.932-10.214-1.932-15.321 0A.993.993 0 0 1 3 17.493V6.466a1 1 0 0 1 1.338-.935z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),_mn=[Mmn],Cmn=(0,c.aZ)({name:"PanoramaHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ymn,_mn)}}),Smn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Emn=(0,c._)("path",{d:"M18.463 4.338c-1.932 5.106-1.932 10.211 0 15.317A1 1 0 0 1 17.529 21h-11c-.692 0-1.208-.692-.962-1.34c1.932-5.107 1.932-10.214 0-15.321C5.321 3.691 5.81 3 6.502 3H17.53c.693 0 1.18.691.935 1.338z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Pmn=[Emn],jmn=(0,c.aZ)({name:"PanoramaVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Smn,Pmn)}}),Amn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dmn=(0,c._)("path",{d:"M15 7l-6.5 6.5a1.5 1.5 0 0 0 3 3L18 10a3 3 0 0 0-6-6l-6.5 6.5a4.5 4.5 0 0 0 9 9L21 13",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Rmn=[Dmn],Fmn=(0,c.aZ)({name:"Paperclip",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Amn,Rmn)}}),Bmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lmn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 12a10 10 0 1 0-20 0"></path><path d="M22 12c0-1.66-1.46-3-3.25-3c-1.8 0-3.25 1.34-3.25 3c0-1.66-1.57-3-3.5-3s-3.5 1.34-3.5 3c0-1.66-1.46-3-3.25-3C3.45 9 2 10.34 2 12"></path><path d="M2 12l10 10l-3.5-10"></path><path d="M15.5 12L12 22l10-10"></path></g>',1),Tmn=[Lmn],Imn=(0,c.aZ)({name:"Parachute",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bmn,Tmn)}}),Nmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Omn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 4a12.25 12.25 0 0 0 0 16"}),(0,c._)("path",{d:"M17 4a12.25 12.25 0 0 1 0 16"})],-1),Vmn=[Omn],Zmn=(0,c.aZ)({name:"Parentheses",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nmn,Vmn)}}),Hmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Umn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 16V8h4a2 2 0 0 1 0 4H9"})],-1),zmn=[Umn],qmn=(0,c.aZ)({name:"Parking",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hmn,zmn)}}),$mn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kmn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14.7 13.5C13.6 11.504 13.259 11 12 11c-1.259 0-1.736.755-2.836 2.747c-.942 1.703-2.846 1.845-3.321 3.291c-.097.265-.145.677-.143.962c0 1.176.787 2 1.8 2c1.259 0 3.004-1 4.5-1s3.241 1 4.5 1c1.013 0 1.8-.823 1.8-2c0-.285-.049-.697-.146-.962c-.475-1.451-2.512-1.835-3.454-3.538z"></path><path d="M20.188 8.082A1.039 1.039 0 0 0 19.782 8h-.015c-.735.012-1.56.75-1.993 1.866c-.519 1.335-.28 2.7.538 3.052c.129.055.267.082.406.082c.739 0 1.575-.742 2.011-1.866c.516-1.335.273-2.7-.54-3.052z"></path><path d="M9.474 9c.055 0 .109-.004.163-.011c.944-.128 1.533-1.346 1.32-2.722C10.754 4.97 9.91 4 9.025 4c-.055 0-.109.004-.163.011c-.944.128-1.533 1.346-1.32 2.722C7.746 8.026 8.59 9 9.475 9z"></path><path d="M16.456 6.733c.214-1.376-.375-2.594-1.32-2.722A1.164 1.164 0 0 0 14.974 4c-.885 0-1.728.97-1.93 2.267c-.214 1.376.375 2.594 1.32 2.722c.054.007.108.011.162.011c.885 0 1.73-.974 1.93-2.267z"></path><path d="M5.69 12.918c.816-.352 1.054-1.719.536-3.052C5.79 8.742 4.955 8 4.217 8c-.14 0-.277.027-.407.082c-.816.352-1.054 1.719-.536 3.052C3.71 12.258 4.545 13 5.283 13c.14 0 .277-.027.407-.082z"></path></g>',1),Ymn=[Kmn],Wmn=(0,c.aZ)({name:"Paw",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$mn,Ymn)}}),Gmn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jmn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 3v18"></path><path d="M12 12l6.3 6.3"></path><path d="M12 12l-6.3 6.3"></path></g>',1),Xmn=[Jmn],Qmn=(0,c.aZ)({name:"Peace",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gmn,Xmn)}}),nkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},skn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20h4L18.5 9.5a1.5 1.5 0 0 0-4-4L4 16v4"}),(0,c._)("path",{d:"M13.5 6.5l4 4"})],-1),ekn=[skn],akn=(0,c.aZ)({name:"Pencil",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nkn,ekn)}}),tkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 21h4"}),(0,c._)("path",{d:"M10 21V3"}),(0,c._)("path",{d:"M10 4l9 4l-9 4"})],-1),okn=[rkn],pkn=(0,c.aZ)({name:"Pennant",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tkn,okn)}}),lkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ikn=(0,c._)("path",{d:"M13.2 3.394l7.033 5.237a2 2 0 0 1 .7 2.247l-2.973 8.764A2 2 0 0 1 16.066 21h-8.12a2 2 0 0 1-1.9-1.373L3.15 10.862a2 2 0 0 1 .696-2.225L10.804 3.4a2 2 0 0 1 2.397-.006z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ckn=[ikn],ukn=(0,c.aZ)({name:"Pentagon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lkn,ckn)}}),dkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 11c0 2.21-2.239 4-5 4s-5-1.79-5-4a8 8 0 1 0 16 0a3 3 0 0 0-6 0"}),(0,c._)("path",{d:"M16 8c0-2 2-4 4-4"})],-1),gkn=[hkn],mkn=(0,c.aZ)({name:"Pepper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dkn,gkn)}}),kkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"17",cy:"17",r:"1"}),(0,c._)("circle",{cx:"7",cy:"7",r:"1"}),(0,c._)("path",{d:"M6 18L18 6"})],-1),vkn=[bkn],wkn=(0,c.aZ)({name:"Percentage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kkn,vkn)}}),xkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fkn=(0,c._)("path",{d:"M6.141 4.163l12 1.714a1 1 0 0 1 .859.99v10.266a1 1 0 0 1-.859.99l-12 1.714A1 1 0 0 1 5 18.847V5.153a1 1 0 0 1 1.141-.99z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),ykn=[fkn],Mkn=(0,c.aZ)({name:"Perspective",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xkn,ykn)}}),_kn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ckn=(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Skn=[Ckn],Ekn=(0,c.aZ)({name:"Phone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_kn,Skn)}}),Pkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 7a2 2 0 0 1 2 2"}),(0,c._)("path",{d:"M15 3a6 6 0 0 1 6 6"})],-1),Akn=[jkn],Dkn=(0,c.aZ)({name:"PhoneCall",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pkn,Akn)}}),Rkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fkn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"></path><path d="M15 7v.01"></path><path d="M18 7v.01"></path><path d="M21 7v.01"></path></g>',1),Bkn=[Fkn],Lkn=(0,c.aZ)({name:"PhoneCalling",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rkn,Bkn)}}),Tkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ikn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 6l2 2l4-4"})],-1),Nkn=[Ikn],Okn=(0,c.aZ)({name:"PhoneCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tkn,Nkn)}}),Vkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 9l5-5"}),(0,c._)("path",{d:"M15 5v4h4"})],-1),Hkn=[Zkn],Ukn=(0,c.aZ)({name:"PhoneIncoming",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vkn,Hkn)}}),zkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 21L21 3"}),(0,c._)("path",{d:"M5.831 14.161A15.946 15.946 0 0 1 3 6a2 2 0 0 1 2-2h4l2 5l-2.5 1.5c.108.22.223.435.345.645m1.751 2.277A11.03 11.03 0 0 0 13.5 15.5L15 13l5 2v4a2 2 0 0 1-2 2a15.963 15.963 0 0 1-10.344-4.657"})],-1),$kn=[qkn],Kkn=(0,c.aZ)({name:"PhoneOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zkn,$kn)}}),Ykn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 9l5-5"}),(0,c._)("path",{d:"M16 4h4v4"})],-1),Gkn=[Wkn],Jkn=(0,c.aZ)({name:"PhoneOutgoing",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ykn,Gkn)}}),Xkn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qkn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M20 3v4"}),(0,c._)("path",{d:"M16 3v4"})],-1),nbn=[Qkn],sbn=(0,c.aZ)({name:"PhonePause",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xkn,nbn)}}),ebn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},abn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M15 6h6m-3-3v6"})],-1),tbn=[abn],rbn=(0,c.aZ)({name:"PhonePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ebn,tbn)}}),obn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pbn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4h4l2 5l-2.5 1.5a11 11 0 0 0 5 5L15 13l5 2v4a2 2 0 0 1-2 2A16 16 0 0 1 3 6a2 2 0 0 1 2-2"}),(0,c._)("path",{d:"M16 4l4 4m0-4l-4 4"})],-1),lbn=[pbn],ibn=(0,c.aZ)({name:"PhoneX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",obn,lbn)}}),cbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ubn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 8h.01"></path><rect x="4" y="4" width="16" height="16" rx="3"></rect><path d="M4 15l4-4a3 5 0 0 1 3 0l5 5"></path><path d="M14 14l1-1a3 5 0 0 1 3 0l2 2"></path></g>',1),dbn=[ubn],hbn=(0,c.aZ)({name:"Photo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cbn,dbn)}}),gbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mbn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M15 8h.01"></path><path d="M19.121 19.122A3 3 0 0 1 17 20H7a3 3 0 0 1-3-3V7c0-.833.34-1.587.888-2.131M8 4h9a3 3 0 0 1 3 3v9"></path><path d="M4 15l4-4c.928-.893 2.072-.893 3 0l5 5"></path><path d="M16.32 12.34c.577-.059 1.162.162 1.68.66l2 2"></path></g>',1),kbn=[mbn],bbn=(0,c.aZ)({name:"PhotoOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gbn,kbn)}}),vbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wbn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 15l-1-3l4-2l4 1h3.5"></path><circle cx="4" cy="19" r="1"></circle><circle cx="12" cy="6" r="1"></circle><path d="M12 17v-7"></path><path d="M8 20h7l1-4l4-2"></path><path d="M18 20h3"></path></g>',1),xbn=[wbn],fbn=(0,c.aZ)({name:"Physotherapist",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vbn,xbn)}}),ybn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mbn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v4"}),(0,c._)("rect",{x:"14",y:"14",width:"7",height:"5",rx:"1"})],-1),_bn=[Mbn],Cbn=(0,c.aZ)({name:"PictureInPicture",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ybn,_bn)}}),Sbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ebn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v4"></path><rect x="14" y="14" width="7" height="5" rx="1"></rect><path d="M7 9l4 4"></path><path d="M7 12V9h3"></path></g>',1),Pbn=[Ebn],jbn=(0,c.aZ)({name:"PictureInPictureOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sbn,Pbn)}}),Abn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dbn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M11 19H5a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v4"></path><rect x="14" y="14" width="7" height="5" rx="1"></rect><path d="M7 9l4 4"></path><path d="M8 13h3v-3"></path></g>',1),Rbn=[Dbn],Fbn=(0,c.aZ)({name:"PictureInPictureOn",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Abn,Rbn)}}),Bbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lbn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M11 5H5a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-4"}),(0,c._)("rect",{transform:"matrix(1 0 0 -1 0 15)",x:"14",y:"5",width:"7",height:"5",rx:"1"})],-1),Tbn=[Lbn],Ibn=(0,c.aZ)({name:"PictureInPictureTop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bbn,Tbn)}}),Nbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Obn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 11v.01"}),(0,c._)("path",{d:"M16 3v3.803A6.019 6.019 0 0 1 18.658 10h1.341a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-1.342a6.008 6.008 0 0 1-1.658 2.473V18.5a1.5 1.5 0 0 1-3 0v-.583a6.04 6.04 0 0 1-1 .083h-4a6.04 6.04 0 0 1-1-.083v.583a1.5 1.5 0 0 1-3 0v-2L5 16.473A6 6 0 0 1 8.999 6h2.5l4.5-3z"})],-1),Vbn=[Obn],Zbn=(0,c.aZ)({name:"Pig",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nbn,Vbn)}}),Hbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ubn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.5 12.5l8-8a4.94 4.94 0 0 1 7 7l-8 8a4.94 4.94 0 0 1-7-7"}),(0,c._)("path",{d:"M8.5 8.5l7 7"})],-1),zbn=[Ubn],qbn=(0,c.aZ)({name:"Pill",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hbn,zbn)}}),$bn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kbn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="8" cy="8" r="5"></circle><circle cx="17" cy="17" r="4"></circle><path d="M4.5 4.5l7 7"></path><path d="M19.5 14.5l-5 5"></path></g>',1),Ybn=[Kbn],Wbn=(0,c.aZ)({name:"Pills",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$bn,Ybn)}}),Gbn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jbn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 4.5l-4 4L7 10l-1.5 1.5l7 7L14 17l1.5-4l4-4"}),(0,c._)("path",{d:"M9 15l-4.5 4.5"}),(0,c._)("path",{d:"M14.5 4L20 9.5"})],-1),Xbn=[Jbn],Qbn=(0,c.aZ)({name:"Pin",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gbn,Xbn)}}),nvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},svn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 4v6l-2 4v2h10v-2l-2-4V4"}),(0,c._)("path",{d:"M12 16v5"}),(0,c._)("path",{d:"M8 4h8"})],-1),evn=[svn],avn=(0,c.aZ)({name:"Pinned",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nvn,evn)}}),tvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rvn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M15 4.5l-3.249 3.249m-2.57 1.433L7 10l-1.5 1.5l7 7L14 17l.82-2.186m1.43-2.563L19.5 9"></path><path d="M9 15l-4.5 4.5"></path><path d="M14.5 4L20 9.5"></path></g>',1),ovn=[rvn],pvn=(0,c.aZ)({name:"PinnedOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tvn,ovn)}}),lvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ivn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 21.5c-3.04 0-5.952-.714-8.5-1.983L12 3l8.5 16.517A19.09 19.09 0 0 1 12 21.5z"></path><path d="M5.38 15.866a14.94 14.94 0 0 0 6.815 1.634a14.944 14.944 0 0 0 6.502-1.479"></path><path d="M13 11.01V11"></path><path d="M11 14v-.01"></path></g>',1),cvn=[ivn],uvn=(0,c.aZ)({name:"Pizza",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lvn,cvn)}}),dvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hvn=(0,c._)("path",{d:"M16 10h4a2 2 0 0 1 0 4h-4l-4 7H9l2-7H7l-2 2H2l2-4l-2-4h3l2 2h4L9 3h3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),gvn=[hvn],mvn=(0,c.aZ)({name:"Plane",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dvn,gvn)}}),kvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15.157 11.81l4.83 1.295a2 2 0 0 1-1.036 3.863L4.462 13.086L3.117 6.514l2.898.776l1.414 2.45l2.898.776l-.12-7.279l2.898.777z"}),(0,c._)("path",{d:"M3 21h18"})],-1),vvn=[bvn],wvn=(0,c.aZ)({name:"PlaneArrival",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kvn,vvn)}}),xvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14.639 10.258l4.83-1.294a2 2 0 0 1 1.035 3.863L6.015 16.71l-4.45-5.02l2.897-.776l2.45 1.414l2.897-.776l-3.743-6.244l2.898-.777z"}),(0,c._)("path",{d:"M3 21h18"})],-1),yvn=[fvn],Mvn=(0,c.aZ)({name:"PlaneDeparture",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xvn,yvn)}}),_vn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 11.085h5a2 2 0 1 1 0 4H5l-3-6h3l2 2h3l-2-7h3l4 7z"}),(0,c._)("path",{d:"M3 21h18"})],-1),Svn=[Cvn],Evn=(0,c.aZ)({name:"PlaneInflight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_vn,Svn)}}),Pvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18.816 13.58c2.292 2.138 3.546 4 3.092 4.9c-.745 1.46-5.783-.259-11.255-3.838c-5.47-3.579-9.304-7.664-8.56-9.123c.464-.91 2.926-.444 5.803.805"}),(0,c._)("circle",{cx:"12",cy:"12",r:"7"})],-1),Avn=[jvn],Dvn=(0,c.aZ)({name:"Planet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pvn,Avn)}}),Rvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fvn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 15h10v4a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2v-4z"></path><path d="M12 9a6 6 0 0 0-6-6H3v2a6 6 0 0 0 6 6h3"></path><path d="M12 11a6 6 0 0 1 6-6h3v1a6 6 0 0 1-6 6h-3"></path><path d="M12 15V9"></path></g>',1),Bvn=[Fvn],Lvn=(0,c.aZ)({name:"Plant",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rvn,Bvn)}}),Tvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ivn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 9a10 10 0 1 0 20 0"></path><path d="M12 19A10 10 0 0 1 22 9"></path><path d="M2 9a10 10 0 0 1 10 10"></path><path d="M12 4a9.7 9.7 0 0 1 2.99 7.5"></path><path d="M9.01 11.5A9.7 9.7 0 0 1 12 4"></path></g>',1),Nvn=[Ivn],Ovn=(0,c.aZ)({name:"Plant2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tvn,Nvn)}}),Vvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zvn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect transform="rotate(90 12 12)" x="3" y="5" width="18" height="14" rx="2"></rect><path d="M8 6h.01"></path><path d="M16 18h.01"></path><path d="M12 16l-3-4l3-4l3 4z"></path></g>',1),Hvn=[Zvn],Uvn=(0,c.aZ)({name:"PlayCard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vvn,Hvn)}}),zvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14l-7-8z"}),(0,c._)("rect",{x:"5",y:"16",width:"14",height:"4",rx:"1"})],-1),$vn=[qvn],Kvn=(0,c.aZ)({name:"PlayerEject",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zvn,$vn)}}),Yvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wvn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"6",y:"5",width:"4",height:"14",rx:"1"}),(0,c._)("rect",{x:"14",y:"5",width:"4",height:"14",rx:"1"})],-1),Gvn=[Wvn],Jvn=(0,c.aZ)({name:"PlayerPause",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yvn,Gvn)}}),Xvn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qvn=(0,c._)("path",{d:"M7 4v16l13-8z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nwn=[Qvn],swn=(0,c.aZ)({name:"PlayerPlay",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xvn,nwn)}}),ewn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},awn=(0,c._)("circle",{cx:"12",cy:"12",r:"7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),twn=[awn],rwn=(0,c.aZ)({name:"PlayerRecord",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ewn,twn)}}),own={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pwn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 5v14L8 12z"}),(0,c._)("path",{d:"M4 5v14"})],-1),lwn=[pwn],iwn=(0,c.aZ)({name:"PlayerSkipBack",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",own,lwn)}}),cwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uwn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 5v14l12-7z"}),(0,c._)("path",{d:"M20 5v14"})],-1),dwn=[uwn],hwn=(0,c.aZ)({name:"PlayerSkipForward",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cwn,dwn)}}),gwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mwn=(0,c._)("rect",{x:"5",y:"5",width:"14",height:"14",rx:"2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),kwn=[mwn],bwn=(0,c.aZ)({name:"PlayerStop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gwn,kwn)}}),vwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wwn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 5v14l8-7z"}),(0,c._)("path",{d:"M14 5v14l8-7z"})],-1),xwn=[wwn],fwn=(0,c.aZ)({name:"PlayerTrackNext",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vwn,xwn)}}),ywn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mwn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M21 5v14l-8-7z"}),(0,c._)("path",{d:"M10 5v14l-8-7z"})],-1),_wn=[Mwn],Cwn=(0,c.aZ)({name:"PlayerTrackPrev",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ywn,_wn)}}),Swn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ewn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="14" cy="17" r="3"></circle><path d="M17 17V4h4"></path><path d="M13 5H3"></path><path d="M3 9h10"></path><path d="M9 13H3"></path></g>',1),Pwn=[Ewn],jwn=(0,c.aZ)({name:"Playlist",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Swn,Pwn)}}),Awn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dwn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 8H5"></path><path d="M5 12h9"></path><path d="M11 16H5"></path><path d="M15 16h6"></path><path d="M18 13v6"></path></g>',1),Rwn=[Dwn],Fwn=(0,c.aZ)({name:"PlaylistAdd",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Awn,Rwn)}}),Bwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lwn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 8H5"></path><path d="M5 12h7"></path><path d="M12 16H5"></path><path d="M16 14l4 4"></path><path d="M20 14l-4 4"></path></g>',1),Twn=[Lwn],Iwn=(0,c.aZ)({name:"PlaylistX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bwn,Twn)}}),Nwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Own=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 6l8 8l-2 2a5.657 5.657 0 1 1-8-8l2-2z"></path><path d="M4 20l4-4"></path><path d="M15 4l-3.5 3.5"></path><path d="M20 9l-3.5 3.5"></path></g>',1),Vwn=[Own],Zwn=(0,c.aZ)({name:"Plug",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nwn,Vwn)}}),Hwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Uwn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 12l5 5l-1.5 1.5a3.536 3.536 0 1 1-5-5L7 12z"></path><path d="M17 12l-5-5l1.5-1.5a3.536 3.536 0 1 1 5 5L17 12z"></path><path d="M3 21l2.5-2.5"></path><path d="M18.5 5.5L21 3"></path><path d="M10 11l-2 2"></path><path d="M13 14l-2 2"></path></g>',1),zwn=[Uwn],qwn=(0,c.aZ)({name:"PlugConnected",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hwn,zwn)}}),$wn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kwn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M5 12h14"})],-1),Ywn=[Kwn],Wwn=(0,c.aZ)({name:"Plus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$wn,Ywn)}}),Gwn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jwn=(0,c._)("circle",{cx:"12",cy:"12",r:"4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Xwn=[Jwn],Qwn=(0,c.aZ)({name:"Point",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gwn,Xwn)}}),nxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9",cy:"9",r:"9",transform:"translate(3 3)"}),(0,c._)("circle",{cx:"12",cy:"12",r:"3"}),(0,c._)("path",{d:"M3 12h6m6 0h6"})],-1),exn=[sxn],axn=(0,c.aZ)({name:"Pokeball",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nxn,exn)}}),txn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M4 16h16"></path><path d="M4 12l3-3c.928-.893 2.072-.893 3 0l4 4"></path><path d="M13 12l2-2c.928-.893 2.072-.893 3 0l2 2"></path><path d="M14 7h.01"></path></g>',1),oxn=[rxn],pxn=(0,c.aZ)({name:"Polaroid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",txn,oxn)}}),lxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ixn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="5" r="2"></circle><circle cx="19" cy="8" r="2"></circle><circle cx="5" cy="11" r="2"></circle><circle cx="15" cy="19" r="2"></circle><path d="M6.5 9.5l3.5-3"></path><path d="M14 5.5L17 7"></path><path d="M18.5 10L16 17"></path><path d="M13.5 17.5l-7-5"></path></g>',1),cxn=[ixn],uxn=(0,c.aZ)({name:"Polygon",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lxn,cxn)}}),dxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1"></path><path d="M2 16a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1"></path><path d="M15 12V4.5a1.5 1.5 0 0 1 3 0"></path><path d="M9 12V4.5a1.5 1.5 0 0 0-3 0"></path><path d="M15 5H9"></path><path d="M9 10h6"></path></g>',1),gxn=[hxn],mxn=(0,c.aZ)({name:"Pool",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dxn,gxn)}}),kxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 6a7.75 7.75 0 1 0 10 0"}),(0,c._)("path",{d:"M12 4v8"})],-1),vxn=[bxn],wxn=(0,c.aZ)({name:"Power",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kxn,vxn)}}),xxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"5",r:"1"}),(0,c._)("path",{d:"M7 20h8l-4-4V9l4 3l2-2"})],-1),yxn=[fxn],Mxn=(0,c.aZ)({name:"Pray",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xxn,yxn)}}),_xn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M13.867 9.75c-.246-.48-.708-.769-1.2-.75h-1.334C10.597 9 10 9.67 10 10.5c0 .827.597 1.499 1.333 1.499h1.334c.736 0 1.333.671 1.333 1.5c0 .828-.597 1.499-1.333 1.499h-1.334c-.492.019-.954-.27-1.2-.75"></path><path d="M12 7v2"></path><path d="M12 15v2"></path></g>',1),Sxn=[Cxn],Exn=(0,c.aZ)({name:"PremiumRights",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_xn,Sxn)}}),Pxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 19V3h4.5a4.5 4.5 0 1 1 0 9H6"}),(0,c._)("path",{d:"M19 21l-9-9"}),(0,c._)("path",{d:"M13 21l6-6"})],-1),Axn=[jxn],Dxn=(0,c.aZ)({name:"Prescription",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pxn,Axn)}}),Rxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 4h18"></path><path d="M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4"></path><path d="M12 16v4"></path><path d="M9 20h6"></path><path d="M8 12l3-3l2 2l3-3"></path></g>',1),Bxn=[Fxn],Lxn=(0,c.aZ)({name:"Presentation",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Rxn,Bxn)}}),Txn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ixn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 12V8"></path><path d="M15 12v-2"></path><path d="M12 12v-1"></path><path d="M3 4h18"></path><path d="M4 4v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4"></path><path d="M12 16v4"></path><path d="M9 20h6"></path></g>',1),Nxn=[Ixn],Oxn=(0,c.aZ)({name:"PresentationAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Txn,Nxn)}}),Vxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 17h2a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h2"}),(0,c._)("path",{d:"M17 9V5a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v4"}),(0,c._)("rect",{x:"7",y:"13",width:"10",height:"8",rx:"2"})],-1),Hxn=[Zxn],Uxn=(0,c.aZ)({name:"Printer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vxn,Hxn)}}),zxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 4v16"></path><path d="M14 4v16"></path><path d="M6 4v5"></path><path d="M6 15v5"></path><path d="M10 4v5"></path><path d="M11 9H5v6h6z"></path><path d="M10 15v5"></path><path d="M8 12h-.01"></path></g>',1),$xn=[qxn],Kxn=(0,c.aZ)({name:"Prison",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zxn,$xn)}}),Yxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wxn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 7l5 5l-5 5"}),(0,c._)("path",{d:"M13 17h6"})],-1),Gxn=[Wxn],Jxn=(0,c.aZ)({name:"Prompt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yxn,Gxn)}}),Xxn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qxn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="13" r="3"></circle><path d="M14.167 10.5c.722-1.538 1.156-3.043 1.303-4.514C15.69 4.356 14.708 3 12 3S8.31 4.357 8.53 5.986c.147 1.471.581 2.976 1.303 4.514"></path><path d="M13.169 16.751c.97 1.395 2.057 2.523 3.257 3.386c1.3 1.006 2.967.833 4.321-1.512c1.354-2.345.67-3.874-.85-4.498c-1.348-.608-2.868-.985-4.562-1.128"></path><path d="M8.664 12.999c-1.693.143-3.213.52-4.56 1.128c-1.522.623-2.206 2.153-.852 4.498s3.02 2.517 4.321 1.512c1.2-.863 2.287-1.991 3.258-3.386"></path></g>',1),nfn=[Qxn],sfn=(0,c.aZ)({name:"Propeller",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xxn,nfn)}}),efn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},afn=(0,c._)("path",{d:"M4 7h3a1 1 0 0 0 1-1V5a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-1a2 2 0 0 0-4 0v1a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h1a2 2 0 0 0 0-4H4a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),tfn=[afn],rfn=(0,c.aZ)({name:"Puzzle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",efn,tfn)}}),ofn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pfn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M12 4v2.5a.5.5 0 0 1-.5.5a1.5 1.5 0 0 0 0 3a.5.5 0 0 1 .5.5V12"></path><path d="M12 12v1.5a.5.5 0 0 0 .5.5a1.5 1.5 0 0 1 0 3a.5.5 0 0 0-.5.5V20"></path><path d="M20 12h-2.5a.5.5 0 0 1-.5-.5a1.5 1.5 0 0 0-3 0a.5.5 0 0 1-.5.5H12"></path><path d="M12 12h-1.5a.5.5 0 0 0-.5.5a1.5 1.5 0 0 1-3 0a.5.5 0 0 0-.5-.5H4"></path></g>',1),lfn=[pfn],ifn=(0,c.aZ)({name:"Puzzle2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ofn,lfn)}}),cfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ufn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17l9 4l9-4l-9-14z"}),(0,c._)("path",{d:"M12 3v18"})],-1),dfn=[ufn],hfn=(0,c.aZ)({name:"Pyramid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cfn,dfn)}}),gfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mfn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="6" height="6" rx="1"></rect><path d="M7 17v.01"></path><rect x="14" y="4" width="6" height="6" rx="1"></rect><path d="M7 7v.01"></path><rect x="4" y="14" width="6" height="6" rx="1"></rect><path d="M17 7v.01"></path><path d="M14 14h3"></path><path d="M20 14v.01"></path><path d="M14 14v3"></path><path d="M14 20h3"></path><path d="M17 17h3"></path><path d="M20 17v3"></path></g>',1),kfn=[mfn],bfn=(0,c.aZ)({name:"Qrcode",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gfn,kfn)}}),vfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wfn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 8a3.5 3 0 0 1 3.5-3h1A3.5 3 0 0 1 16 8a3 3 0 0 1-2 3a3 4 0 0 0-2 4"}),(0,c._)("path",{d:"M12 19v.01"})],-1),xfn=[wfn],ffn=(0,c.aZ)({name:"QuestionMark",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vfn,xfn)}}),yfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mfn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 11H6a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v6c0 2.667-1.333 4.333-4 5"}),(0,c._)("path",{d:"M19 11h-4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v6c0 2.667-1.333 4.333-4 5"})],-1),_fn=[Mfn],Cfn=(0,c.aZ)({name:"Quote",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yfn,_fn)}}),Sfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Efn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 3L4.629 6.749A1 1 0 0 0 4 7.677V19a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1H4.5"></path><path d="M4 12h16"></path><path d="M7 12v-2"></path><path d="M17 16v.01"></path><path d="M13 16v.01"></path></g>',1),Pfn=[Efn],jfn=(0,c.aZ)({name:"Radio",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sfn,Pfn)}}),Afn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Dfn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13.5 14.6l3 5.19A9 9 0 0 0 21 12h-6a3 3 0 0 1-1.5 2.6"}),(0,c._)("path",{d:"M13.5 9.4l3-5.19a9 9 0 0 0-9 0l3 5.19a3 3 0 0 1 3 0"}),(0,c._)("path",{d:"M10.5 14.6l-3 5.19A9 9 0 0 1 3 12h6a3 3 0 0 0 1.5 2.6"})],-1),Rfn=[Dfn],Ffn=(0,c.aZ)({name:"Radioactive",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Afn,Rfn)}}),Bfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lfn=(0,c._)("path",{d:"M19 19h-6a8 8 0 0 1-8-8V5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Tfn=[Lfn],Ifn=(0,c.aZ)({name:"RadiusBottomLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bfn,Tfn)}}),Nfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ofn=(0,c._)("path",{d:"M19 5v6a8 8 0 0 1-8 8H5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Vfn=[Ofn],Zfn=(0,c.aZ)({name:"RadiusBottomRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Nfn,Vfn)}}),Hfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ufn=(0,c._)("path",{d:"M5 19v-6a8 8 0 0 1 8-8h6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zfn=[Ufn],qfn=(0,c.aZ)({name:"RadiusTopLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hfn,zfn)}}),$fn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kfn=(0,c._)("path",{d:"M5 5h6a8 8 0 0 1 8 8v6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Yfn=[Kfn],Wfn=(0,c.aZ)({name:"RadiusTopRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$fn,Yfn)}}),Gfn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jfn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M22 17c0-5.523-4.477-10-10-10S2 11.477 2 17"}),(0,c._)("path",{d:"M18 17a6 6 0 1 0-12 0"}),(0,c._)("path",{d:"M14 17a2 2 0 1 0-4 0"})],-1),Xfn=[Jfn],Qfn=(0,c.aZ)({name:"Rainbow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gfn,Xfn)}}),nyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},syn=(0,c._)("path",{d:"M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2l-3 2M9 7h6m-6 4h6m-2 4h2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),eyn=[syn],ayn=(0,c.aZ)({name:"Receipt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nyn,eyn)}}),tyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ryn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2l-3 2"}),(0,c._)("path",{d:"M14 8h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H10m2 0v1.5m0-9V8"})],-1),oyn=[ryn],pyn=(0,c.aZ)({name:"Receipt2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tyn,oyn)}}),lyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iyn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 21V5m2-2h10a2 2 0 0 1 2 2v10m0 4.01V21l-3-2l-2 2l-2-2l-2 2l-2-2l-3 2"></path><path d="M11 7h4"></path><path d="M9 11h2"></path><path d="M13 15h2"></path><path d="M15 11v.01"></path><path d="M3 3l18 18"></path></g>',1),cyn=[iyn],uyn=(0,c.aZ)({name:"ReceiptOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lyn,cyn)}}),dyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2l-3 2"}),(0,c._)("path",{d:"M15 14v-2a2 2 0 0 0-2-2H9l2-2m0 4l-2-2"})],-1),gyn=[hyn],myn=(0,c.aZ)({name:"ReceiptRefund",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dyn,gyn)}}),kyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},byn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 14l6-6"></path><circle cx="9.5" cy="8.5" r=".5" fill="currentColor"></circle><circle cx="14.5" cy="13.5" r=".5" fill="currentColor"></circle><path d="M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16l-3-2l-2 2l-2-2l-2 2l-2-2l-3 2"></path></g>',1),vyn=[byn],wyn=(0,c.aZ)({name:"ReceiptTax",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kyn,vyn)}}),xyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fyn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7.038 4.5a9 9 0 0 0-2.495 2.47"></path><path d="M3.186 10.209a9 9 0 0 0 0 3.508"></path><path d="M4.5 16.962a9 9 0 0 0 2.47 2.495"></path><path d="M10.209 20.814a9 9 0 0 0 3.5 0"></path><path d="M16.962 19.5a9 9 0 0 0 2.495-2.47"></path><path d="M20.814 13.791a9 9 0 0 0 0-3.508"></path><path d="M19.5 7.038a9 9 0 0 0-2.47-2.495"></path><path d="M13.791 3.186a9 9 0 0 0-3.508-.02"></path><path d="M12 8l-2 4h4l-2 4"></path><path d="M12 21a9 9 0 0 0 0-18"></path></g>',1),yyn=[fyn],Myn=(0,c.aZ)({name:"Recharging",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xyn,yyn)}}),_yn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Cyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"12",r:"3"}),(0,c._)("circle",{cx:"17",cy:"12",r:"3"}),(0,c._)("path",{d:"M7 15h10"})],-1),Syn=[Cyn],Eyn=(0,c.aZ)({name:"RecordMail",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_yn,Syn)}}),Pyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jyn=(0,c._)("rect",{x:"3",y:"5",width:"18",height:"14",rx:"2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Ayn=[jyn],Dyn=(0,c.aZ)({name:"Rectangle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pyn,Ayn)}}),Ryn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Fyn=(0,c._)("rect",{x:"5",y:"3",width:"14",height:"18",rx:"2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),Byn=[Fyn],Lyn=(0,c.aZ)({name:"RectangleVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ryn,Byn)}}),Tyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Iyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 17l-2 2l2 2m-2-2h9a2 2 0 0 0 1.75-2.75l-.55-1"}),(0,c._)("path",{d:"M8.536 11l-.732-2.732L5.072 9m2.732-.732l-4.5 7.794a2 2 0 0 0 1.506 2.89l1.141.024"}),(0,c._)("path",{d:"M15.464 11l2.732.732L18.928 9m-.732 2.732l-4.5-7.794a2 2 0 0 0-3.256-.14l-.591.976"})],-1),Nyn=[Iyn],Oyn=(0,c.aZ)({name:"Recycle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Tyn,Nyn)}}),Vyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 11A8.1 8.1 0 0 0 4.5 9M4 5v4h4"}),(0,c._)("path",{d:"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"})],-1),Hyn=[Zyn],Uyn=(0,c.aZ)({name:"Refresh",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vyn,Hyn)}}),zyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qyn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 11A8.1 8.1 0 0 0 4.5 9M4 5v4h4"></path><path d="M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"></path><path d="M12 9v3"></path><path d="M12 15h.01"></path></g>',1),$yn=[qyn],Kyn=(0,c.aZ)({name:"RefreshAlert",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zyn,$yn)}}),Yyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Wyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 11A8.1 8.1 0 0 0 4.5 9M4 5v4h4"}),(0,c._)("path",{d:"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"})],-1),Gyn=[Wyn],Jyn=(0,c.aZ)({name:"RefreshDot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Yyn,Gyn)}}),Xyn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qyn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("path",{d:"M10 15V9h2a2 2 0 1 1 0 4h-2"}),(0,c._)("path",{d:"M14 15l-2-2"})],-1),nMn=[Qyn],sMn=(0,c.aZ)({name:"Registered",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xyn,nMn)}}),eMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M15 14v-4l3 4v-4"></path><path d="M6 14v-4l3 4v-4"></path><path d="M12 10.5v.01"></path><path d="M12 13.5v.01"></path></g>',1),tMn=[aMn],rMn=(0,c.aZ)({name:"RelationManyToMany",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eMn,tMn)}}),oMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M7 10h1v4"></path><path d="M14 14v-4l3 4v-4"></path><path d="M11 10.5v.01"></path><path d="M11 13.5v.01"></path></g>',1),lMn=[pMn],iMn=(0,c.aZ)({name:"RelationOneToMany",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oMn,lMn)}}),cMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M8 10h1v4"></path><path d="M15 10h1v4"></path><path d="M12 10.5v.01"></path><path d="M12 13.5v.01"></path></g>',1),dMn=[uMn],hMn=(0,c.aZ)({name:"RelationOneToOne",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cMn,dMn)}}),gMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mMn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12V9a3 3 0 0 1 3-3h13m-3-3l3 3l-3 3"}),(0,c._)("path",{d:"M20 12v3a3 3 0 0 1-3 3H4m3 3l-3-3l3-3"})],-1),kMn=[mMn],bMn=(0,c.aZ)({name:"Repeat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gMn,kMn)}}),vMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wMn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12V9a3 3 0 0 1 3-3h13m-3-3l3 3l-3 3"}),(0,c._)("path",{d:"M20 12v3a3 3 0 0 1-3 3H4m3 3l-3-3l3-3"}),(0,c._)("path",{d:"M11 11l1-1v4"})],-1),xMn=[wMn],fMn=(0,c.aZ)({name:"RepeatOnce",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vMn,xMn)}}),yMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="6" height="6" rx="1"></rect><rect x="15" y="15" width="6" height="6" rx="1"></rect><path d="M21 11V8a2 2 0 0 0-2-2h-6l3 3m0-6l-3 3"></path><path d="M3 13v3a2 2 0 0 0 2 2h6l-3-3m0 6l3-3"></path></g>',1),_Mn=[MMn],CMn=(0,c.aZ)({name:"Replace",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yMn,_Mn)}}),SMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 5H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h5.697"></path><path d="M18 14v4h4"></path><path d="M18 11V7a2 2 0 0 0-2-2h-2"></path><rect x="8" y="3" width="6" height="4" rx="2"></rect><circle cx="18" cy="18" r="4"></circle><path d="M8 11h4"></path><path d="M8 15h3"></path></g>',1),PMn=[EMn],jMn=(0,c.aZ)({name:"Report",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SMn,PMn)}}),AMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M9 17v-5"></path><path d="M12 17v-1"></path><path d="M15 17v-3"></path></g>',1),RMn=[DMn],FMn=(0,c.aZ)({name:"ReportAnalytics",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AMn,RMn)}}),BMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M10 14h4"></path><path d="M12 12v4"></path></g>',1),TMn=[LMn],IMn=(0,c.aZ)({name:"ReportMedical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BMn,TMn)}}),NMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"></path><rect x="9" y="3" width="6" height="4" rx="2"></rect><path d="M14 11h-2.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H10"></path><path d="M12 17v1m0-8v1"></path></g>',1),VMn=[OMn],ZMn=(0,c.aZ)({name:"ReportMoney",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NMn,VMn)}}),HMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UMn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 5H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h5.697"></path><path d="M18 12V7a2 2 0 0 0-2-2h-2"></path><rect x="8" y="3" width="6" height="4" rx="2"></rect><path d="M8 11h4"></path><path d="M8 15h3"></path><circle cx="16.5" cy="17.5" r="2.5"></circle><path d="M18.5 19.5L21 22"></path></g>',1),zMn=[UMn],qMn=(0,c.aZ)({name:"ReportSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HMn,zMn)}}),$Mn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KMn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 11v8a1 1 0 0 0 1 1h8M4 6V5a1 1 0 0 1 1-1h1m5 0h2m5 0h1a1 1 0 0 1 1 1v1m0 5v2m0 5v1a1 1 0 0 1-1 1h-1"}),(0,c._)("path",{d:"M4 12h7a1 1 0 0 1 1 1v7"})],-1),YMn=[KMn],WMn=(0,c.aZ)({name:"Resize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Mn,YMn)}}),GMn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JMn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7c3-2 6-2 9 0s6 2 9 0"}),(0,c._)("path",{d:"M3 17c3-2 6-2 9 0s6 2 9 0"}),(0,c._)("path",{d:"M3 12c3-2 6-2 9 0s6 2 9 0"})],-1),XMn=[JMn],QMn=(0,c.aZ)({name:"Ripple",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GMn,XMn)}}),n_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},s_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10.5 20.4l-6.9-6.9c-.781-.781-.781-2.219 0-3l6.9-6.9c.781-.781 2.219-.781 3 0l6.9 6.9c.781.781.781 2.219 0 3l-6.9 6.9c-.781.781-2.219.781-3 0z"}),(0,c._)("path",{d:"M9 14v-2c0-.59.414-1 1-1h5"}),(0,c._)("path",{d:"M13 9l2 2l-2 2"})],-1),e_n=[s_n],a_n=(0,c.aZ)({name:"RoadSign",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",n_n,e_n)}}),t_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r_n=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 7h10a2 2 0 0 1 2 2v1l1 1v3l-1 1v3a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-3l-1-1v-3l1-1V9a2 2 0 0 1 2-2z"></path><path d="M10 16h4"></path><circle cx="8.5" cy="11.5" r=".5" fill="currentColor"></circle><circle cx="15.5" cy="11.5" r=".5" fill="currentColor"></circle><path d="M9 7L8 3"></path><path d="M15 7l1-4"></path></g>',1),o_n=[r_n],p_n=(0,c.aZ)({name:"Robot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t_n,o_n)}}),l_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},i_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3-5a9 9 0 0 0 6-8a3 3 0 0 0-3-3a9 9 0 0 0-8 6a6 6 0 0 0-5 3"}),(0,c._)("path",{d:"M7 14a6 6 0 0 0-3 6a6 6 0 0 0 6-3"}),(0,c._)("circle",{cx:"15",cy:"9",r:"1"})],-1),c_n=[i_n],u_n=(0,c.aZ)({name:"Rocket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",l_n,c_n)}}),d_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},h_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5.905 5h3.418a1 1 0 0 1 .928.629l1.143 2.856a3 3 0 0 0 2.207 1.83l4.717.926A2.084 2.084 0 0 1 20 13.286V14a1 1 0 0 1-1 1H5.105a1 1 0 0 1-.995-1.1l.8-8a1 1 0 0 1 .995-.9z"}),(0,c._)("circle",{cx:"8",cy:"17",r:"2"}),(0,c._)("circle",{cx:"16",cy:"17",r:"2"})],-1),g_n=[h_n],m_n=(0,c.aZ)({name:"RollerSkating",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",d_n,g_n)}}),k_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b_n=(0,c._)("path",{d:"M19.95 11a8 8 0 1 0-.5 4m.5 5v-5h-5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),v_n=[b_n],w_n=(0,c.aZ)({name:"Rotate",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k_n,v_n)}}),x_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},f_n=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 4.55a8 8 0 0 0-6 14.9M9 15v5H4"></path><path d="M18.37 7.16v.01"></path><path d="M13 19.94v.01"></path><path d="M16.84 18.37v.01"></path><path d="M19.37 15.1v.01"></path><path d="M19.94 11v.01"></path></g>',1),y_n=[f_n],M_n=(0,c.aZ)({name:"Rotate2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",x_n,y_n)}}),__n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},C_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 16h4v4"}),(0,c._)("path",{d:"M19.458 11.042c.86-2.366.722-4.58-.6-5.9c-2.272-2.274-7.185-1.045-10.973 2.743c-3.788 3.788-5.017 8.701-2.744 10.974c2.227 2.226 6.987 1.093 10.74-2.515"})],-1),S_n=[C_n],E_n=(0,c.aZ)({name:"Rotate360",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",__n,S_n)}}),P_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j_n=(0,c._)("path",{d:"M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),A_n=[j_n],D_n=(0,c.aZ)({name:"RotateClockwise",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P_n,A_n)}}),R_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},F_n=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 4.55a8 8 0 0 1 6 14.9M15 15v5h5"></path><path d="M5.63 7.16v.01"></path><path d="M4.06 11v.01"></path><path d="M4.63 15.1v.01"></path><path d="M7.16 18.37v.01"></path><path d="M11 19.94v.01"></path></g>',1),B_n=[F_n],L_n=(0,c.aZ)({name:"RotateClockwise2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",R_n,B_n)}}),T_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},I_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19.95 11a8 8 0 1 0-.5 4m.5 5v-5h-5"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"})],-1),N_n=[I_n],O_n=(0,c.aZ)({name:"RotateDot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",T_n,N_n)}}),V_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Z_n=(0,c._)("path",{d:"M10.09 4.01l.496-.495a2 2 0 0 1 2.828 0l7.071 7.07a2 2 0 0 1 0 2.83l-7.07 7.07a2 2 0 0 1-2.83 0l-7.07-7.07a2 2 0 0 1 0-2.83L7.05 7.05H3.062m3.988 3.988V7.05",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),H_n=[Z_n],U_n=(0,c.aZ)({name:"RotateRectangle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",V_n,H_n)}}),z_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},q_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"6",cy:"19",r:"2"}),(0,c._)("circle",{cx:"18",cy:"5",r:"2"}),(0,c._)("path",{d:"M12 19h4.5a3.5 3.5 0 0 0 0-7h-8a3.5 3.5 0 0 1 0-7H12"})],-1),$_n=[q_n],K_n=(0,c.aZ)({name:"Route",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",z_n,$_n)}}),Y_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},W_n=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="13" width="18" height="8" rx="2"></rect><path d="M17 17v.01"></path><path d="M13 17v.01"></path><path d="M15 13v-2"></path><path d="M11.75 8.75a4 4 0 0 1 6.5 0"></path><path d="M8.5 6.5a8 8 0 0 1 13 0"></path></g>',1),G_n=[W_n],J_n=(0,c.aZ)({name:"Router",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Y_n,G_n)}}),X_n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Q_n=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 6v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1z"}),(0,c._)("path",{d:"M12 15v4"}),(0,c._)("path",{d:"M14 17h-4"})],-1),nCn=[Q_n],sCn=(0,c.aZ)({name:"RowInsertBottom",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",X_n,nCn)}}),eCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aCn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 18v-4a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1z"}),(0,c._)("path",{d:"M12 9V5"}),(0,c._)("path",{d:"M10 7h4"})],-1),tCn=[aCn],rCn=(0,c.aZ)({name:"RowInsertTop",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eCn,tCn)}}),oCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pCn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"5",cy:"19",r:"1"}),(0,c._)("path",{d:"M4 4a16 16 0 0 1 16 16"}),(0,c._)("path",{d:"M4 11a9 9 0 0 1 9 9"})],-1),lCn=[pCn],iCn=(0,c.aZ)({name:"Rss",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oCn,lCn)}}),cCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 4h14a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-7a1 1 0 0 0-1 1v7a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1"></path><path d="M4 8h2"></path><path d="M4 12h3"></path><path d="M4 16h2"></path><path d="M8 4v2"></path><path d="M12 4v3"></path><path d="M16 4v2"></path></g>',1),dCn=[uCn],hCn=(0,c.aZ)({name:"Ruler",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cCn,dCn)}}),gCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3l4 4L7 21l-4-4z"></path><path d="M16 7l-1.5-1.5"></path><path d="M13 10l-1.5-1.5"></path><path d="M10 13l-1.5-1.5"></path><path d="M7 16l-1.5-1.5"></path></g>',1),kCn=[mCn],bCn=(0,c.aZ)({name:"Ruler2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gCn,kCn)}}),vCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="13" cy="4" r="1"></circle><path d="M4 17l5 1l.75-1.5"></path><path d="M15 21v-4l-4-3l1-6"></path><path d="M7 12V9l5-1l3 3l3 1"></path></g>',1),xCn=[wCn],fCn=(0,c.aZ)({name:"Run",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vCn,xCn)}}),yCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1"></path><path d="M4 18l-1-3h18l-1 3"></path><path d="M11 12h7l-7-9v9"></path><path d="M8 7l-2 5"></path></g>',1),_Cn=[MCn],CCn=(0,c.aZ)({name:"Sailboat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yCn,_Cn)}}),SCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ECn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 13v.01"></path><path d="M10 16v.01"></path><path d="M14 16v.01"></path><path d="M7.5 8h9l-.281-2.248A2 2 0 0 0 14.234 4H9.766A2 2 0 0 0 7.78 5.752L7.5 8z"></path><path d="M7.5 8l-1.612 9.671A2 2 0 0 0 7.861 20h8.278a2 2 0 0 0 1.973-2.329L16.5 8"></path></g>',1),PCn=[ECn],jCn=(0,c.aZ)({name:"Salt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SCn,PCn)}}),ACn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3.707 6.293l2.586-2.586a1 1 0 0 1 1.414 0l5.586 5.586a1 1 0 0 1 0 1.414l-2.586 2.586a1 1 0 0 1-1.414 0L3.707 7.707a1 1 0 0 1 0-1.414z"></path><path d="M6 10l-3 3l3 3l3-3"></path><path d="M10 6l3-3l3 3l-3 3"></path><path d="M12 12l1.5 1.5"></path><path d="M14.5 17a2.5 2.5 0 0 0 2.5-2.5"></path><path d="M15 21a6 6 0 0 0 6-6"></path></g>',1),RCn=[DCn],FCn=(0,c.aZ)({name:"Satellite",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ACn,RCn)}}),BCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LCn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5.5 5.5A2.5 2.5 0 0 0 3 8c0 7.18 5.82 13 13 13a2.5 2.5 0 1 0 0-5a8 8 0 0 1-8-8a2.5 2.5 0 0 0-2.5-2.5z"}),(0,c._)("path",{d:"M5.195 5.519L3.952 3.53A1 1 0 0 1 4.8 2h1.392a1 1 0 0 1 .848 1.53L5.795 5.52"}),(0,c._)("path",{d:"M18.482 18.225l1.989-1.243a1 1 0 0 1 1.53.848v1.392a1 1 0 0 1-1.53.848l-1.991-1.245"})],-1),TCn=[LCn],ICn=(0,c.aZ)({name:"Sausage",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BCn,TCn)}}),NCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 20h10"></path><path d="M6 6l6-1l6 1"></path><path d="M12 3v17"></path><path d="M9 12L6 6l-3 6a3 3 0 0 0 6 0"></path><path d="M21 12l-3-6l-3 6a3 3 0 0 0 6 0"></path></g>',1),VCn=[OCn],ZCn=(0,c.aZ)({name:"Scale",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NCn,VCn)}}),HCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UCn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"3",width:"18",height:"18",rx:"4"}),(0,c._)("path",{d:"M12 7c1.956 0 3.724.802 4.994 2.095l-2.956 2.904A3 3 0 0 0 12 11.2a3 3 0 0 0-2.038.798L7.006 9.095A6.979 6.979 0 0 1 12 7z"})],-1),zCn=[UCn],qCn=(0,c.aZ)({name:"ScaleOutline",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HCn,zCn)}}),$Cn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KCn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7V6a2 2 0 0 1 2-2h2"></path><path d="M4 17v1a2 2 0 0 0 2 2h2"></path><path d="M16 4h2a2 2 0 0 1 2 2v1"></path><path d="M16 20h2a2 2 0 0 0 2-2v-1"></path><path d="M5 12h14"></path></g>',1),YCn=[KCn],WCn=(0,c.aZ)({name:"Scan",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Cn,YCn)}}),GCn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JCn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M22 9L12 5L2 9l10 4l10-4v6"}),(0,c._)("path",{d:"M6 10.6V16a6 3 0 0 0 12 0v-5.4"})],-1),XCn=[JCn],QCn=(0,c.aZ)({name:"School",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GCn,XCn)}}),nSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sSn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="7" r="3"></circle><circle cx="6" cy="17" r="3"></circle><path d="M8.6 8.6L19 19"></path><path d="M8.6 15.4L19 5"></path></g>',1),eSn=[sSn],aSn=(0,c.aZ)({name:"Scissors",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nSn,eSn)}}),tSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"18",cy:"17",r:"2"}),(0,c._)("circle",{cx:"6",cy:"17",r:"2"}),(0,c._)("path",{d:"M8 17h5a6 6 0 0 1 5-5V7a2 2 0 0 0-2-2h-1"})],-1),oSn=[rSn],pSn=(0,c.aZ)({name:"Scooter",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tSn,oSn)}}),lSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iSn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="18" cy="17" r="2"></circle><circle cx="6" cy="17" r="2"></circle><path d="M8 17h5a6 6 0 0 1 5-5V7a2 2 0 0 0-2-2h-1"></path><path d="M10 4L8 8h3l-2 4"></path></g>',1),cSn=[iSn],uSn=(0,c.aZ)({name:"ScooterElectric",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lSn,cSn)}}),dSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hSn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12v3a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h9"></path><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M17 4h4v4"></path><path d="M16 9l5-5"></path></g>',1),gSn=[hSn],mSn=(0,c.aZ)({name:"ScreenShare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dSn,gSn)}}),kSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bSn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12v3a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h9"></path><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"></path><path d="M17 8l4-4m-4 0l4 4"></path></g>',1),vSn=[bSn],wSn=(0,c.aZ)({name:"ScreenShareOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kSn,vSn)}}),xSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 7h12a1 1 0 0 1 1 1v4.5a2.5 2.5 0 0 1-2.5 2.5H14a2 2 0 0 1-2-2a2 2 0 1 0-4 0a2 2 0 0 1-2 2h-.5A2.5 2.5 0 0 1 3 12.5V8a1 1 0 0 1 1-1z"}),(0,c._)("path",{d:"M10 17a2 2 0 0 0 2 2h3.5a5.5 5.5 0 0 0 5.5-5.5V4"})],-1),ySn=[fSn],MSn=(0,c.aZ)({name:"ScubaMask",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xSn,ySn)}}),_Sn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"10",cy:"10",r:"7"}),(0,c._)("path",{d:"M21 21l-6-6"})],-1),SSn=[CSn],ESn=(0,c.aZ)({name:"Search",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Sn,SSn)}}),PSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jSn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 20h.01"></path><path d="M4 20h.01"></path><path d="M8 20h.01"></path><path d="M12 20h.01"></path><path d="M16 20h.01"></path><path d="M20 4h.01"></path><path d="M4 4h.01"></path><path d="M8 4h.01"></path><path d="M12 4h.01"></path><path d="M16 4h0"></path><rect x="4" y="8" width="16" height="8" rx="1"></rect></g>',1),ASn=[jSn],DSn=(0,c.aZ)({name:"Section",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PSn,ASn)}}),RSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 10a6 6 0 0 0-6-6H3v2a6 6 0 0 0 6 6h3"}),(0,c._)("path",{d:"M12 14a6 6 0 0 1 6-6h3v1a6 6 0 0 1-6 6h-3"}),(0,c._)("path",{d:"M12 20V10"})],-1),BSn=[FSn],LSn=(0,c.aZ)({name:"Seeding",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RSn,BSn)}}),TSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ISn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 11l3 3l3-3"})],-1),NSn=[ISn],OSn=(0,c.aZ)({name:"Select",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TSn,NSn)}}),VSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 9l4-4l4 4"}),(0,c._)("path",{d:"M16 15l-4 4l-4-4"})],-1),HSn=[ZSn],USn=(0,c.aZ)({name:"Selector",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VSn,HSn)}}),zSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 14L21 3"}),(0,c._)("path",{d:"M21 3l-6.5 18a.55.55 0 0 1-1 0L10 14l-7-3.5a.55.55 0 0 1 0-1L21 3"})],-1),$Sn=[qSn],KSn=(0,c.aZ)({name:"Send",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zSn,$Sn)}}),YSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 12v.01"}),(0,c._)("path",{d:"M7 12h10"}),(0,c._)("path",{d:"M21 12v.01"})],-1),GSn=[WSn],JSn=(0,c.aZ)({name:"Separator",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YSn,GSn)}}),XSn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QSn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12h16"}),(0,c._)("path",{d:"M8 8l4-4l4 4"}),(0,c._)("path",{d:"M16 16l-4 4l-4-4"})],-1),nEn=[QSn],sEn=(0,c.aZ)({name:"SeparatorHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XSn,nEn)}}),eEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aEn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4v16"}),(0,c._)("path",{d:"M8 8l-4 4l4 4"}),(0,c._)("path",{d:"M16 16l4-4l-4-4"})],-1),tEn=[aEn],rEn=(0,c.aZ)({name:"SeparatorVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eEn,tEn)}}),oEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="4" width="18" height="8" rx="3"></rect><rect x="3" y="12" width="18" height="8" rx="3"></rect><path d="M7 8v.01"></path><path d="M7 16v.01"></path></g>',1),lEn=[pEn],iEn=(0,c.aZ)({name:"Server",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oEn,lEn)}}),cEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uEn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 9H6.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H5"}),(0,c._)("path",{d:"M13 15V9l3 4l3-4v6"})],-1),dEn=[uEn],hEn=(0,c.aZ)({name:"Servicemark",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cEn,dEn)}}),gEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mEn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066-2.573c-.94-1.543.826-3.31 2.37-2.37c1 .608 2.296.07 2.572-1.065z"}),(0,c._)("circle",{cx:"12",cy:"12",r:"3"})],-1),kEn=[mEn],bEn=(0,c.aZ)({name:"Settings",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gEn,kEn)}}),vEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wEn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066-2.573c-.94-1.543.826-3.31 2.37-2.37c1 .608 2.296.07 2.572-1.065z"}),(0,c._)("path",{d:"M10 9v6l5-3z"})],-1),xEn=[wEn],fEn=(0,c.aZ)({name:"SettingsAutomation",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vEn,xEn)}}),yEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M13 12h5"></path><path d="M13 15h4"></path><path d="M13 18h1"></path><path d="M13 9h4"></path><path d="M13 6h1"></path></g>',1),_En=[MEn],CEn=(0,c.aZ)({name:"Shadow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yEn,_En)}}),SEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5.634 5.638a9 9 0 0 0 12.728 12.727m1.68-2.32A9 9 0 0 0 7.956 3.957"></path><path d="M16 12h2"></path><path d="M13 15h2"></path><path d="M13 18h1"></path><path d="M13 9h4"></path><path d="M13 6h1"></path><path d="M3 3l18 18"></path></g>',1),PEn=[EEn],jEn=(0,c.aZ)({name:"ShadowOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SEn,PEn)}}),AEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="5" r="2"></circle><circle cx="19" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><circle cx="19" cy="19" r="2"></circle><path d="M5 7v10"></path><path d="M7 5h10"></path><path d="M7 19h10"></path><path d="M19 7v10"></path></g>',1),REn=[DEn],FEn=(0,c.aZ)({name:"Shape",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AEn,REn)}}),BEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="5" r="2"></circle><circle cx="19" cy="19" r="2"></circle><circle cx="19" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><path d="M6.5 17.5l11-11M5 7v10M19 7v10"></path></g>',1),TEn=[LEn],IEn=(0,c.aZ)({name:"Shape2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BEn,TEn)}}),NEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="5" r="2"></circle><circle cx="19" cy="19" r="2"></circle><circle cx="19" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><path d="M7 5h10M5 7v10M19 7v10"></path></g>',1),VEn=[OEn],ZEn=(0,c.aZ)({name:"Shape3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NEn,VEn)}}),HEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UEn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="6" r="3"></circle><circle cx="18" cy="18" r="3"></circle><path d="M8.7 10.7l6.6-3.4"></path><path d="M8.7 13.3l6.6 3.4"></path></g>',1),zEn=[UEn],qEn=(0,c.aZ)({name:"Share",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HEn,zEn)}}),$En={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KEn=(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),YEn=[KEn],WEn=(0,c.aZ)({name:"Shield",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$En,YEn)}}),GEn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JEn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M9 12l2 2l4-4"}),(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3"})],-1),XEn=[JEn],QEn=(0,c.aZ)({name:"ShieldCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GEn,XEn)}}),nPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3"}),(0,c._)("path",{d:"M12 3v18"}),(0,c._)("path",{d:"M3.5 12h17"})],-1),ePn=[sPn],aPn=(0,c.aZ)({name:"ShieldCheckered",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nPn,ePn)}}),tPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3"}),(0,c._)("path",{d:"M4 14l8-3l8 3"})],-1),oPn=[rPn],pPn=(0,c.aZ)({name:"ShieldChevron",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tPn,oPn)}}),lPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3"}),(0,c._)("circle",{cx:"12",cy:"11",r:"1"}),(0,c._)("path",{d:"M12 12v2.5"})],-1),cPn=[iPn],uPn=(0,c.aZ)({name:"ShieldLock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lPn,cPn)}}),dPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M17.669 17.669A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6c.797.036 1.589 0 2.366-.126m3.092-.912A12 12 0 0 0 12 3a12 12 0 0 0 8.5 3a12 12 0 0 1-1.117 9.379"})],-1),gPn=[hPn],mPn=(0,c.aZ)({name:"ShieldOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dPn,gPn)}}),kPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21A12 12 0 0 1 3.5 6A12 12 0 0 0 12 3"}),(0,c._)("path",{d:"M10 10l4 4m0-4l-4 4"})],-1),vPn=[bPn],wPn=(0,c.aZ)({name:"ShieldX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kPn,vPn)}}),xPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 20a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1"></path><path d="M4 18l-1-5h18l-2 4"></path><path d="M5 13V7h8l4 6"></path><path d="M7 7V3H6"></path></g>',1),yPn=[fPn],MPn=(0,c.aZ)({name:"Ship",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xPn,yPn)}}),_Pn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CPn=(0,c._)("path",{d:"M15 4l6 2v5h-3v8a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-8H3V6l6-2a3 3 0 0 0 6 0",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),SPn=[CPn],EPn=(0,c.aZ)({name:"Shirt",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Pn,SPn)}}),PPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 6h5.426a1 1 0 0 1 .863.496l1.064 1.823a3 3 0 0 0 1.896 1.407l4.677 1.114A4 4 0 0 1 21 14.73V17a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1z"></path><path d="M14 13l1-2"></path><path d="M8 18v-1a4 4 0 0 0-4-4H3"></path><path d="M10 12l1.5-3"></path></g>',1),APn=[jPn],DPn=(0,c.aZ)({name:"Shoe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PPn,APn)}}),RPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="19" r="2"></circle><circle cx="17" cy="19" r="2"></circle><path d="M17 17H6V3H4"></path><path d="M6 5l14 1l-1 7H6"></path></g>',1),BPn=[FPn],LPn=(0,c.aZ)({name:"ShoppingCart",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RPn,BPn)}}),TPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="19" r="2"></circle><circle cx="17" cy="19" r="2"></circle><path d="M17 17H6V3H4"></path><path d="M20 6l-1 7H6"></path><path d="M10 10l6-6"></path><circle cx="10.5" cy="4.5" r=".5"></circle><circle cx="15.5" cy="9.5" r=".5"></circle></g>',1),NPn=[IPn],OPn=(0,c.aZ)({name:"ShoppingCartDiscount",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TPn,NPn)}}),VPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="19" r="2"></circle><path d="M17 17a2 2 0 1 0 2 2"></path><path d="M17 17H6V6"></path><path d="M9.239 5.231L20 6l-1 7h-2m-4 0H6"></path><path d="M3 3l18 18"></path></g>',1),HPn=[ZPn],UPn=(0,c.aZ)({name:"ShoppingCartOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VPn,HPn)}}),zPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="19" r="2"></circle><circle cx="17" cy="19" r="2"></circle><path d="M17 17H6V3H4"></path><path d="M6 5l6.005.429m7.138 6.573L19 13H6"></path><path d="M15 6h6m-3-3v6"></path></g>',1),$Pn=[qPn],KPn=(0,c.aZ)({name:"ShoppingCartPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zPn,$Pn)}}),YPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WPn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="19" r="2"></circle><circle cx="17" cy="19" r="2"></circle><path d="M17 17H6V3H4"></path><path d="M6 5l7.999.571m5.43 4.43L19 13H6"></path><path d="M17 3l4 4"></path><path d="M21 3l-4 4"></path></g>',1),GPn=[WPn],JPn=(0,c.aZ)({name:"ShoppingCartX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YPn,GPn)}}),XPn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QPn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"10",width:"16",height:"5",rx:"1"}),(0,c._)("path",{d:"M17 10V6a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v4m5 5v5m4-5v2m-8-2v3"})],-1),njn=[QPn],sjn=(0,c.aZ)({name:"Shredder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XPn,njn)}}),ejn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ajn=(0,c._)("path",{d:"M3 17c3.333-3.333 5-6 5-8c0-3-1-3-2-3S3.968 7.085 4 9c.034 2.048 1.658 4.877 2.5 6C8 17 9 17.5 10 16l2-3c.333 2.667 1.333 4 3 4c.53 0 2.639-2 3-2c.517 0 1.517.667 3 2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),tjn=[ajn],rjn=(0,c.aZ)({name:"Signature",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ejn,tjn)}}),ojn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pjn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="15" width="6" height="6" rx="2"></rect><rect x="15" y="15" width="6" height="6" rx="2"></rect><rect x="9" y="3" width="6" height="6" rx="2"></rect><path d="M6 15v-1a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v1"></path><path d="M12 9v3"></path></g>',1),ljn=[pjn],ijn=(0,c.aZ)({name:"Sitemap",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ojn,ljn)}}),cjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ujn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"15",r:"2"}),(0,c._)("circle",{cx:"17",cy:"15",r:"2"}),(0,c._)("path",{d:"M3 9a2 1 0 0 0 2 1h14a2 1 0 0 0 2-1"})],-1),djn=[ujn],hjn=(0,c.aZ)({name:"Skateboard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cjn,djn)}}),gjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mjn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19h15a4 4 0 0 0 4-4"></path><path d="M16 15H7a4 4 0 0 1-4-4V5l1.243 1.243A6 6 0 0 0 8.485 8H12v2a2 2 0 0 0 2 2h.5a1.5 1.5 0 0 0 1.5-1.5a1.5 1.5 0 0 1 3 0V12a3 3 0 0 1-3 3z"></path><path d="M15 15v4"></path><path d="M7 15v4"></path></g>',1),kjn=[mjn],bjn=(0,c.aZ)({name:"Sleigh",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gjn,kjn)}}),vjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wjn=(0,c._)("path",{d:"M3 19L18 4l3 3l-6 6l2 2a14 14 0 0 1-14 4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xjn=[wjn],fjn=(0,c.aZ)({name:"Slice",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vjn,xjn)}}),yjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mjn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 6h.01"></path><rect x="3" y="3" width="18" height="14" rx="3"></rect><path d="M3 13l4-4a3 5 0 0 1 3 0l4 4"></path><path d="M13 12l2-2a3 5 0 0 1 3 0l3 3"></path><path d="M8 21h.01"></path><path d="M12 21h.01"></path><path d="M16 21h.01"></path></g>',1),_jn=[Mjn],Cjn=(0,c.aZ)({name:"Slideshow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yjn,_jn)}}),Sjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ejn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M19 8.71l-5.333-4.148a2.666 2.666 0 0 0-3.274 0L5.059 8.71a2.665 2.665 0 0 0-1.029 2.105v7.2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-7.2c0-.823-.38-1.6-1.03-2.105"}),(0,c._)("path",{d:"M16 15c-2.21 1.333-5.792 1.333-8 0"})],-1),Pjn=[Ejn],jjn=(0,c.aZ)({name:"SmartHome",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Sjn,Pjn)}}),Ajn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Djn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"3",y:"13",width:"18",height:"4",rx:"1"}),(0,c._)("path",{d:"M8 13v4"}),(0,c._)("path",{d:"M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5"})],-1),Rjn=[Djn],Fjn=(0,c.aZ)({name:"Smoking",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Ajn,Rjn)}}),Bjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ljn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13v4"></path><path d="M16 5v.5a2 2 0 0 0 2 2a2 2 0 0 1 2 2v.5"></path><path d="M3 3l18 18"></path><path d="M17 13h3a1 1 0 0 1 1 1v2c0 .28-.115.533-.3.714M17 17H4a1 1 0 0 1-1-1v-2a1 1 0 0 1 1-1h9"></path></g>',1),Tjn=[Ljn],Ijn=(0,c.aZ)({name:"SmokingNo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bjn,Tjn)}}),Njn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ojn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 4l2 1l2-1m-2-2v6.5l3 1.72"></path><path d="M17.928 6.268l.134 2.232l1.866 1.232M20.66 7l-5.629 3.25l.01 3.458"></path><path d="M19.928 14.268L18.062 15.5l-.134 2.232M20.66 17l-5.629-3.25l-2.99 1.738"></path><path d="M14 20l-2-1l-2 1m2 2v-6.5l-3-1.72"></path><path d="M6.072 17.732L5.938 15.5l-1.866-1.232M3.34 17l5.629-3.25l-.01-3.458"></path><path d="M4.072 9.732L5.938 8.5l.134-2.232M3.34 7l5.629 3.25l2.99-1.738"></path></g>',1),Vjn=[Ojn],Zjn=(0,c.aZ)({name:"Snowflake",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Njn,Vjn)}}),Hjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Ujn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="3"></circle><path d="M3 9h3v6H3z"></path><path d="M18 9h3v6h-3z"></path><rect x="3" y="5" width="18" height="14" rx="2"></rect><path d="M12 5v14"></path></g>',1),zjn=[Ujn],qjn=(0,c.aZ)({name:"SoccerField",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Hjn,zjn)}}),$jn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kjn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><circle cx="19" cy="19" r="2"></circle><circle cx="12" cy="14" r="3"></circle><path d="M12 7v4"></path><path d="M6.7 17.8l2.8-2"></path><path d="M17.3 17.8l-2.8-2"></path></g>',1),Yjn=[Kjn],Wjn=(0,c.aZ)({name:"Social",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$jn,Yjn)}}),Gjn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Jjn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 3v6l4.798 5.142a4 4 0 0 1-5.441 5.86l-6.736-6.41A2 2 0 0 1 5 12.141V3h8z"}),(0,c._)("path",{d:"M7.895 15.768C8.603 15.047 9 14.091 9 13a4 4 0 0 0-4-4"})],-1),Xjn=[Jjn],Qjn=(0,c.aZ)({name:"Sock",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Gjn,Xjn)}}),nAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sAn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 11a2 2 0 0 1 2 2v1h12v-1a2 2 0 1 1 4 0v5a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-5a2 2 0 0 1 2-2z"}),(0,c._)("path",{d:"M4 11V8a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3v3"}),(0,c._)("path",{d:"M12 5v9"})],-1),eAn=[sAn],aAn=(0,c.aZ)({name:"Sofa",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nAn,eAn)}}),tAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 6h7"></path><path d="M4 12h7"></path><path d="M4 18h9"></path><path d="M15 9l3-3l3 3"></path><path d="M18 6v12"></path></g>',1),oAn=[rAn],pAn=(0,c.aZ)({name:"SortAscending",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tAn,oAn)}}),lAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 9l3-3l3 3"></path><rect x="5" y="5" width="5" height="5" rx=".5"></rect><rect x="5" y="14" width="5" height="5" rx=".5"></rect><path d="M17 6v12"></path></g>',1),cAn=[iAn],uAn=(0,c.aZ)({name:"SortAscending2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lAn,cAn)}}),dAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 10V5c0-1.38.62-2 2-2s2 .62 2 2v5m0-3h-4"></path><path d="M19 21h-4l4-7h-4"></path><path d="M4 15l3 3l3-3"></path><path d="M7 6v12"></path></g>',1),gAn=[hAn],mAn=(0,c.aZ)({name:"SortAscendingLetters",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dAn,gAn)}}),kAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 15l3 3l3-3"></path><path d="M7 6v12"></path><path d="M17 3a2 2 0 0 1 2 2v3a2 2 0 1 1-4 0V5a2 2 0 0 1 2-2z"></path><circle cx="17" cy="16" r="2"></circle><path d="M19 16v3a2 2 0 0 1-2 2h-1.5"></path></g>',1),vAn=[bAn],wAn=(0,c.aZ)({name:"SortAscendingNumbers",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kAn,vAn)}}),xAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 6h9"></path><path d="M4 12h7"></path><path d="M4 18h7"></path><path d="M15 15l3 3l3-3"></path><path d="M18 6v12"></path></g>',1),yAn=[fAn],MAn=(0,c.aZ)({name:"SortDescending",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xAn,yAn)}}),_An={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="5" y="5" width="5" height="5" rx=".5"></rect><rect x="5" y="14" width="5" height="5" rx=".5"></rect><path d="M14 15l3 3l3-3"></path><path d="M17 18V6"></path></g>',1),SAn=[CAn],EAn=(0,c.aZ)({name:"SortDescending2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_An,SAn)}}),PAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 21v-5c0-1.38.62-2 2-2s2 .62 2 2v5m0-3h-4"></path><path d="M19 10h-4l4-7h-4"></path><path d="M4 15l3 3l3-3"></path><path d="M7 6v12"></path></g>',1),AAn=[jAn],DAn=(0,c.aZ)({name:"SortDescendingLetters",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PAn,AAn)}}),RAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 15l3 3l3-3"></path><path d="M7 6v12"></path><path d="M17 14a2 2 0 0 1 2 2v3a2 2 0 1 1-4 0v-3a2 2 0 0 1 2-2z"></path><circle cx="17" cy="5" r="2"></circle><path d="M19 5v3a2 2 0 0 1-2 2h-1.5"></path></g>',1),BAn=[FAn],LAn=(0,c.aZ)({name:"SortDescendingNumbers",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RAn,BAn)}}),TAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IAn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 19h18"></path><path d="M3 11h18a8 8 0 0 1-8 8h-2a8 8 0 0 1-8-8z"></path><path d="M9 8V5"></path><path d="M12 5v3"></path><path d="M15 5v3"></path></g>',1),NAn=[IAn],OAn=(0,c.aZ)({name:"Soup",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TAn,NAn)}}),VAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZAn=(0,c._)("path",{d:"M4 10v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),HAn=[ZAn],UAn=(0,c.aZ)({name:"Space",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VAn,HAn)}}),zAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qAn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 20h-2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"}),(0,c._)("path",{d:"M4 20h2a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H4"}),(0,c._)("path",{d:"M12 8v8"})],-1),$An=[qAn],KAn=(0,c.aZ)({name:"SpacingHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zAn,$An)}}),YAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WAn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20v-2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v2"}),(0,c._)("path",{d:"M4 4v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4"}),(0,c._)("path",{d:"M16 12H8"})],-1),GAn=[WAn],JAn=(0,c.aZ)({name:"SpacingVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YAn,GAn)}}),XAn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QAn=(0,c._)("path",{d:"M12 3l4.919 4.5c.61.587 1.177 1.177 1.703 1.771a5.527 5.527 0 0 1 .264 6.979c-1.18 1.56-3.338 1.92-4.886.75v1l1 3H9l1-3v-1c-1.54 1.07-3.735.772-4.886-.75a5.527 5.527 0 0 1 .264-6.979A30.883 30.883 0 0 1 7.081 7.5A1541.72 1541.72 0 0 1 12 3z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),nDn=[QAn],sDn=(0,c.aZ)({name:"Spade",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XAn,nDn)}}),eDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 8a3 3 0 0 1 0 6"}),(0,c._)("path",{d:"M10 8v11a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-5"}),(0,c._)("path",{d:"M12 8h0l4.524-3.77A.9.9 0 0 1 18 4.922v12.156a.9.9 0 0 1-1.476.692L12 14H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h8"})],-1),tDn=[aDn],rDn=(0,c.aZ)({name:"Speakerphone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eDn,tDn)}}),oDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17h13.4a3 3 0 0 0 2.5-1.34L22 11h0h-6.23a4 4 0 0 0-1.49.29l-3.56 1.42a4 4 0 0 1-1.49.29H5.5h0h-1L3 17z"}),(0,c._)("path",{d:"M6 13l1.5-5"}),(0,c._)("path",{d:"M6 8h8l2 3"})],-1),lDn=[pDn],iDn=(0,c.aZ)({name:"Speedboat",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oDn,lDn)}}),cDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"2"}),(0,c._)("circle",{cx:"12",cy:"14",r:"2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"8"})],-1),dDn=[uDn],hDn=(0,c.aZ)({name:"SportBillard",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cDn,dDn)}}),gDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mDn=(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),kDn=[mDn],bDn=(0,c.aZ)({name:"Square",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gDn,kDn)}}),vDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1-4 0v-4a2 2 0 0 1 2-2z"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),xDn=[wDn],fDn=(0,c.aZ)({name:"Square0",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vDn,xDn)}}),yDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 16V8l-2 2"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),_Dn=[MDn],CDn=(0,c.aZ)({name:"Square1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yDn,_Dn)}}),SDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 10a2 2 0 1 1 4 0c0 .591-.417 1.318-.816 1.858L10 16.001h4"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),PDn=[EDn],jDn=(0,c.aZ)({name:"Square2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SDn,PDn)}}),ADn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 12a2 2 0 1 0-2-2"}),(0,c._)("path",{d:"M10 14a2 2 0 1 0 2-2"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),RDn=[DDn],FDn=(0,c.aZ)({name:"Square3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ADn,RDn)}}),BDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 16V8l-4 6h5"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),TDn=[LDn],IDn=(0,c.aZ)({name:"Square4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BDn,TDn)}}),NDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ODn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 16h2a2 2 0 1 0 0-4h-2V8h4"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),VDn=[ODn],ZDn=(0,c.aZ)({name:"Square5",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NDn,VDn)}}),HDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{transform:"rotate(180 12 14)",cx:"12",cy:"14",r:"2"}),(0,c._)("path",{d:"M14 10a2 2 0 1 0-4 0v4"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),zDn=[UDn],qDn=(0,c.aZ)({name:"Square6",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HDn,zDn)}}),$Dn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 8h4l-2 8"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),YDn=[KDn],WDn=(0,c.aZ)({name:"Square7",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Dn,YDn)}}),GDn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JDn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"2"}),(0,c._)("circle",{cx:"12",cy:"14",r:"2"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),XDn=[JDn],QDn=(0,c.aZ)({name:"Square8",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GDn,XDn)}}),nRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"10",r:"2"}),(0,c._)("path",{d:"M10 14a2 2 0 1 0 4 0v-4"}),(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"})],-1),eRn=[sRn],aRn=(0,c.aZ)({name:"Square9",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nRn,eRn)}}),tRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 12l2 2l4-4"})],-1),oRn=[rRn],pRn=(0,c.aZ)({name:"SquareCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tRn,oRn)}}),lRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("circle",{cx:"12",cy:"12",r:"1"})],-1),cRn=[iRn],uRn=(0,c.aZ)({name:"SquareDot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lRn,cRn)}}),dRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 9l6 6"})],-1),gRn=[hRn],mRn=(0,c.aZ)({name:"SquareForbid",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dRn,gRn)}}),kRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 15l6-6"})],-1),vRn=[bRn],wRn=(0,c.aZ)({name:"SquareForbid2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kRn,vRn)}}),xRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fRn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 4v16"></path><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M12 13l7.5-7.5"></path><path d="M12 18l8-8"></path><path d="M15 20l5-5"></path><path d="M12 8l4-4"></path></g>',1),yRn=[fRn],MRn=(0,c.aZ)({name:"SquareHalf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xRn,yRn)}}),_Rn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 12h6"})],-1),SRn=[CRn],ERn=(0,c.aZ)({name:"SquareMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Rn,SRn)}}),PRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 4h10a2 2 0 0 1 2 2v10m-.584 3.412A1.994 1.994 0 0 1 18 20H6a2 2 0 0 1-2-2V6c0-.552.224-1.052.586-1.414"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),ARn=[jRn],DRn=(0,c.aZ)({name:"SquareOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PRn,ARn)}}),RRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M9 12h6"}),(0,c._)("path",{d:"M12 9v6"})],-1),BRn=[FRn],LRn=(0,c.aZ)({name:"SquarePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RRn,BRn)}}),TRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IRn=(0,c._)("path",{d:"M3 12h2l4 8l4-16h8",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),NRn=[IRn],ORn=(0,c.aZ)({name:"SquareRoot",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TRn,NRn)}}),VRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M13 12h1c1 0 1 1 2.016 3.527C17 18 17 19 18 19h1"}),(0,c._)("path",{d:"M12 19c1.5 0 3-2 4-3.5s2.5-3.5 4-3.5"}),(0,c._)("path",{d:"M3 12h1l3 8l3-16h10"})],-1),HRn=[ZRn],URn=(0,c.aZ)({name:"SquareRoot2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VRn,HRn)}}),zRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qRn=(0,c._)("path",{d:"M10.5 20.4l-6.9-6.9c-.781-.781-.781-2.219 0-3l6.9-6.9c.781-.781 2.219-.781 3 0l6.9 6.9c.781.781.781 2.219 0 3l-6.9 6.9c-.781.781-2.219.781-3 0z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),$Rn=[qRn],KRn=(0,c.aZ)({name:"SquareRotated",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zRn,$Rn)}}),YRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WRn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16.964 16.952l-3.462 3.461c-.782.783-2.222.783-3.004 0l-6.911-6.91c-.783-.783-.783-2.223 0-3.005l3.455-3.456m2.003-2.003l1.453-1.452c.782-.783 2.222-.783 3.004 0l6.911 6.91c.783.783.783 2.223 0 3.005l-1.448 1.45"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),GRn=[WRn],JRn=(0,c.aZ)({name:"SquareRotatedOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YRn,GRn)}}),XRn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QRn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2v20"></path><path d="M14 20H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h8"></path><path d="M20 6a2 2 0 0 0-2-2"></path><path d="M18 20a2 2 0 0 0 2-2"></path><path d="M20 10v4"></path></g>',1),nFn=[QRn],sFn=(0,c.aZ)({name:"SquareToggle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XRn,nFn)}}),eFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aFn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 12H2"></path><path d="M4 14V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8"></path><path d="M18 20a2 2 0 0 0 2-2"></path><path d="M4 18a2 2 0 0 0 2 2"></path><path d="M14 20h-4"></path></g>',1),tFn=[aFn],rFn=(0,c.aZ)({name:"SquareToggleHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eFn,tFn)}}),oFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M10 10l4 4m0-4l-4 4"})],-1),lFn=[pFn],iFn=(0,c.aZ)({name:"SquareX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oFn,lFn)}}),cFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"8",y:"8",width:"12",height:"12",rx:"2"}),(0,c._)("path",{d:"M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2"}),(0,c._)("path",{d:"M8.586 19.414L19.413 8.587"})],-1),dFn=[uFn],hFn=(0,c.aZ)({name:"SquaresDiagonal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cFn,dFn)}}),gFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mFn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="8" width="12" height="12" rx="2"></rect><path d="M8 14.5l6.492-6.492"></path><path d="M13.496 20.004L20 13.5l-6.504 6.504z"></path><path d="M8.586 19.414L19.413 8.587"></path><path d="M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2"></path></g>',1),kFn=[mFn],bFn=(0,c.aZ)({name:"SquaresFilled",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gFn,kFn)}}),vFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 6l-8 4l8 4l8-4l-8-4"}),(0,c._)("path",{d:"M4 14l8 4l8-4"})],-1),xFn=[wFn],fFn=(0,c.aZ)({name:"Stack",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vFn,xFn)}}),yFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 4L4 8l8 4l8-4l-8-4"}),(0,c._)("path",{d:"M4 12l8 4l8-4"}),(0,c._)("path",{d:"M4 16l8 4l8-4"})],-1),_Fn=[MFn],CFn=(0,c.aZ)({name:"Stack2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yFn,_Fn)}}),SFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EFn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2L4 6l8 4l8-4l-8-4"></path><path d="M4 10l8 4l8-4"></path><path d="M4 18l8 4l8-4"></path><path d="M4 14l8 4l8-4"></path></g>',1),PFn=[EFn],jFn=(0,c.aZ)({name:"Stack3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SFn,PFn)}}),AFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DFn=(0,c._)("path",{d:"M4 18h4v-4h4v-4h4V6h4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),RFn=[DFn],FFn=(0,c.aZ)({name:"Stairs",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AFn,RFn)}}),BFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20h4v-4h4v-4h4V8h4"}),(0,c._)("path",{d:"M11 4l-7 7V7m4 4H4"})],-1),TFn=[LFn],IFn=(0,c.aZ)({name:"StairsDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BFn,TFn)}}),NFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20h4v-4h4v-4h4V8h4"}),(0,c._)("path",{d:"M4 11l7-7v4M7 4h4"})],-1),VFn=[OFn],ZFn=(0,c.aZ)({name:"StairsUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NFn,VFn)}}),HFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UFn=(0,c._)("path",{d:"M12 17.75l-6.172 3.245l1.179-6.873l-5-4.867l6.9-1l3.086-6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zFn=[UFn],qFn=(0,c.aZ)({name:"Star",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HFn,zFn)}}),$Fn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KFn=(0,c._)("path",{d:"M12 17.75l-6.172 3.245l1.179-6.873l-5-4.867l6.9-1l3.086-6.253z",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),YFn=[KFn],WFn=(0,c.aZ)({name:"StarHalf",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Fn,YFn)}}),GFn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JFn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M10.012 6.016l1.981-4.014l3.086 6.253l6.9 1l-4.421 4.304m.012 4.01l.588 3.426L12 17.75l-6.172 3.245l1.179-6.873l-5-4.867l6.327-.917"})],-1),XFn=[JFn],QFn=(0,c.aZ)({name:"StarOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GFn,XFn)}}),nBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17.8 19.817l-2.172 1.138a.392.392 0 0 1-.568-.41l.415-2.411l-1.757-1.707a.389.389 0 0 1 .217-.665l2.428-.352l1.086-2.193a.392.392 0 0 1 .702 0l1.086 2.193l2.428.352a.39.39 0 0 1 .217.665l-1.757 1.707l.414 2.41a.39.39 0 0 1-.567.411L17.8 19.817z"}),(0,c._)("path",{d:"M6.2 19.817l-2.172 1.138a.392.392 0 0 1-.568-.41l.415-2.411l-1.757-1.707a.389.389 0 0 1 .217-.665l2.428-.352l1.086-2.193a.392.392 0 0 1 .702 0l1.086 2.193l2.428.352a.39.39 0 0 1 .217.665l-1.757 1.707l.414 2.41a.39.39 0 0 1-.567.411L6.2 19.817z"}),(0,c._)("path",{d:"M12 9.817l-2.172 1.138a.392.392 0 0 1-.568-.41l.415-2.411l-1.757-1.707a.389.389 0 0 1 .217-.665l2.428-.352l1.086-2.193a.392.392 0 0 1 .702 0l1.086 2.193l2.428.352a.39.39 0 0 1 .217.665l-1.757 1.707l.414 2.41a.39.39 0 0 1-.567.411L12 9.817z"})],-1),eBn=[sBn],aBn=(0,c.aZ)({name:"Stars",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nBn,eBn)}}),tBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rBn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><circle cx="12" cy="12" r="2"></circle><path d="M12 14v7"></path><path d="M10 12l-6.75-2"></path><path d="M14 12l6.75-2"></path></g>',1),oBn=[rBn],pBn=(0,c.aZ)({name:"SteeringWheel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tBn,oBn)}}),lBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iBn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3v12"></path><path d="M16 11l-4 4"></path><path d="M8 11l4 4"></path><circle cx="12" cy="20" r="1"></circle></g>',1),cBn=[iBn],uBn=(0,c.aZ)({name:"StepInto",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lBn,cBn)}}),dBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hBn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3v12"></path><path d="M16 7l-4-4"></path><path d="M8 7l4-4"></path><circle cx="12" cy="20" r="1"></circle></g>',1),gBn=[hBn],mBn=(0,c.aZ)({name:"StepOut",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dBn,gBn)}}),kBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bBn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 4H5a2 2 0 0 0-2 2v3.5h0a5.5 5.5 0 0 0 11 0V6a2 2 0 0 0-2-2h-1"></path><path d="M8 15a6 6 0 1 0 12 0v-3"></path><path d="M11 3v2"></path><path d="M6 3v2"></path><circle cx="20" cy="10" r="2"></circle></g>',1),vBn=[bBn],wBn=(0,c.aZ)({name:"Stethoscope",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kBn,vBn)}}),xBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 12l-2 .5A6 6 0 0 1 11.5 6l.5-2l8 8"}),(0,c._)("path",{d:"M20 12a8 8 0 1 1-8-8"})],-1),yBn=[fBn],MBn=(0,c.aZ)({name:"Sticker",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xBn,yBn)}}),_Bn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 12h14"}),(0,c._)("path",{d:"M16 6.5A4 2 0 0 0 12 5h-1a3.5 3.5 0 0 0 0 7h2a3.5 3.5 0 0 1 0 7h-1.5a4 2 0 0 1-4-1.5"})],-1),SBn=[CBn],EBn=(0,c.aZ)({name:"Strikethrough",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Bn,SBn)}}),PBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 11v6h2l1-1.5L9 17h10a3 3 0 0 0 0-6H9h0l-3 1.5L5 11H3z"}),(0,c._)("path",{d:"M17 11l-1-3h-5l-1 3"}),(0,c._)("path",{d:"M13 8V6a1 1 0 0 1 1-1h1"})],-1),ABn=[jBn],DBn=(0,c.aZ)({name:"Submarine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PBn,ABn)}}),RBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 7l8 10m-8 0l8-10"}),(0,c._)("path",{d:"M21 20h-4l3.5-4a1.73 1.73 0 0 0-3.5-2"})],-1),BBn=[FBn],LBn=(0,c.aZ)({name:"Subscript",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RBn,BBn)}}),TBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IBn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 9h6"></path><path d="M4 5h4"></path><path d="M6 5v11a1 1 0 0 0 1 1h5"></path><rect x="12" y="7" width="8" height="4" rx="1"></rect><rect x="12" y="15" width="8" height="4" rx="1"></rect></g>',1),NBn=[IBn],OBn=(0,c.aZ)({name:"Subtask",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TBn,NBn)}}),VBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZBn=(0,c._)("path",{d:"M18 16v2a1 1 0 0 1-1 1H6l6-7l-6-7h11a1 1 0 0 1 1 1v2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),HBn=[ZBn],UBn=(0,c.aZ)({name:"Sum",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VBn,HBn)}}),zBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"4"}),(0,c._)("path",{d:"M3 12h1m8-9v1m8 8h1m-9 8v1M5.6 5.6l.7.7m12.1-.7l-.7.7m0 11.4l.7.7m-12.1-.7l-.7.7"})],-1),$Bn=[qBn],KBn=(0,c.aZ)({name:"Sun",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zBn,$Bn)}}),YBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M16 12a4 4 0 0 0-4-4M9.166 9.177a4 4 0 0 0 5.66 5.654"}),(0,c._)("path",{d:"M3 12h1m8-9v1m8 8h1m-9 8v1M5.6 5.6l.7.7m12.1-.7l-.7.7m0 11.4l.7.7m-12.1-.7l-.7.7"})],-1),GBn=[WBn],JBn=(0,c.aZ)({name:"SunOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YBn,GBn)}}),XBn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QBn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17h1m16 0h1M5.6 10.6l.7.7m12.1-.7l-.7.7M8 17a4 4 0 0 1 8 0"}),(0,c._)("path",{d:"M3 21h18"}),(0,c._)("path",{d:"M12 9V3l3 3M9 6l3-3"})],-1),nLn=[QBn],sLn=(0,c.aZ)({name:"Sunrise",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XBn,nLn)}}),eLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aLn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17h1m16 0h1M5.6 10.6l.7.7m12.1-.7l-.7.7M8 17a4 4 0 0 1 8 0"}),(0,c._)("path",{d:"M3 21h18"}),(0,c._)("path",{d:"M12 3v6l3-3M9 6l3 3"})],-1),tLn=[aLn],rLn=(0,c.aZ)({name:"Sunset",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eLn,tLn)}}),oLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pLn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 7l8 10m-8 0l8-10"}),(0,c._)("path",{d:"M21 11h-4l3.5-4A1.73 1.73 0 0 0 17 5"})],-1),lLn=[pLn],iLn=(0,c.aZ)({name:"Superscript",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oLn,lLn)}}),cLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uLn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"16",cy:"9",r:"1"}),(0,c._)("path",{d:"M6 11l4-2l3.5 3l-1.5 2"}),(0,c._)("path",{d:"M3 16.75A2.4 2.4 0 0 0 4 17a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 2-1a2.4 2.4 0 0 1 2-1a2.4 2.4 0 0 1 2 1a2.4 2.4 0 0 0 2 1a2.4 2.4 0 0 0 1-.25"})],-1),dLn=[uLn],hLn=(0,c.aZ)({name:"Swimming",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cLn,dLn)}}),gLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 4h4v4"></path><path d="M14.75 9.25L19 4"></path><path d="M5 19l4-4"></path><path d="M15 19h4v-4"></path><path d="M5 5l14 14"></path></g>',1),kLn=[mLn],bLn=(0,c.aZ)({name:"Switch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gLn,kLn)}}),vLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 17h5l1.67-2.386m3.66-5.227L15 7h6"></path><path d="M18 4l3 3l-3 3"></path><path d="M3 7h5l7 10h6"></path><path d="M18 20l3-3l-3-3"></path></g>',1),xLn=[wLn],fLn=(0,c.aZ)({name:"Switch2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vLn,xLn)}}),yLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 17h2.397a5 5 0 0 0 4.096-2.133l.177-.253m3.66-5.227l.177-.254A5 5 0 0 1 17.603 7H21"></path><path d="M18 4l3 3l-3 3"></path><path d="M3 7h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734A5 5 0 0 0 17.603 17H21"></path><path d="M18 20l3-3l-3-3"></path></g>',1),_Ln=[MLn],CLn=(0,c.aZ)({name:"Switch3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yLn,_Ln)}}),SLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ELn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 3l4 4l-4 4"></path><path d="M10 7h10"></path><path d="M8 13l-4 4l4 4"></path><path d="M4 17h9"></path></g>',1),PLn=[ELn],jLn=(0,c.aZ)({name:"SwitchHorizontal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SLn,PLn)}}),ALn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 8l4-4l4 4"></path><path d="M7 4v9"></path><path d="M13 16l4 4l4-4"></path><path d="M17 10v10"></path></g>',1),RLn=[DLn],FLn=(0,c.aZ)({name:"SwitchVertical",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",ALn,RLn)}}),BLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LLn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"4",y:"4",width:"16",height:"16",rx:"2"}),(0,c._)("path",{d:"M4 10h16"}),(0,c._)("path",{d:"M10 4v16"})],-1),TLn=[LLn],ILn=(0,c.aZ)({name:"Table",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BLn,TLn)}}),NLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OLn=(0,c._)("path",{d:"M11.5 20H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v7.5M4 10h16M10 4v16m4-1h7m-3-3l3 3l-3 3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),VLn=[OLn],ZLn=(0,c.aZ)({name:"TableExport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NLn,VLn)}}),HLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ULn=(0,c._)("path",{d:"M4 13.5V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6M4 10h16M10 4v11.5M2 19h7m-3-3l3 3l-3 3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),zLn=[ULn],qLn=(0,c.aZ)({name:"TableImport",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HLn,zLn)}}),$Ln={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 4h10a2 2 0 0 1 2 2v10m-.588 3.417c-.362.36-.86.583-1.412.583H6a2 2 0 0 1-2-2V6c0-.552.224-1.053.586-1.414"></path><path d="M4 10h6m4 0h6"></path><path d="M10 4v2m0 4v10"></path><path d="M3 3l18 18"></path></g>',1),YLn=[KLn],WLn=(0,c.aZ)({name:"TableOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Ln,YLn)}}),GLn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JLn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M7 16H3l3.47-4.66A2 2 0 1 0 3 9.8"></path><path d="M10 16V8h4"></path><path d="M10 12h3"></path><path d="M17 16v-6a2 2 0 0 1 4 0v6"></path><path d="M17 13h4"></path></g>',1),XLn=[JLn],QLn=(0,c.aZ)({name:"Tabler2Fa",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GLn,XLn)}}),nTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sTn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 17.6l-2-1.1V14"></path><path d="M4 10V7.5l2-1.1"></path><path d="M10 4.1L12 3l2 1.1"></path><path d="M18 6.4l2 1.1V10"></path><path d="M20 14v2.5l-2 1.12"></path><path d="M14 19.9L12 21l-2-1.1"></path><path d="M12 12l2-1.1"></path><path d="M18 8.6l2-1.1"></path><path d="M12 12v2.5"></path><path d="M12 18.5V21"></path><path d="M12 12l-2-1.12"></path><path d="M6 8.6L4 7.5"></path></g>',1),eTn=[sTn],aTn=(0,c.aZ)({name:"Tabler3DCubeSphere",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nTn,eTn)}}),tTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"8.5",cy:"8.5",r:"1",fill:"currentColor"}),(0,c._)("path",{d:"M4 7v3.859c0 .537.213 1.052.593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l4.834-4.834a2.025 2.025 0 0 0 0-2.864L12.29 4.593A2.025 2.025 0 0 0 10.859 4H7a3 3 0 0 0-3 3z"})],-1),oTn=[rTn],pTn=(0,c.aZ)({name:"Tag",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tTn,oTn)}}),lTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7.792 7.793a1 1 0 0 0 1.414 1.414"}),(0,c._)("path",{d:"M4.88 4.877A2.99 2.99 0 0 0 4 7v3.859c0 .537.213 1.052.593 1.432l8.116 8.116a2.025 2.025 0 0 0 2.864 0l2.416-2.416m2.002-2.002l.416-.416a2.025 2.025 0 0 0 0-2.864L12.29 4.593A2.025 2.025 0 0 0 10.859 4H8"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),cTn=[iTn],uTn=(0,c.aZ)({name:"TagOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lTn,cTn)}}),dTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7.859 6H5.025A2.025 2.025 0 0 0 3 8.025v2.834c0 .537.213 1.052.593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834-2.834a2.025 2.025 0 0 0 0-2.864L9.29 6.593A2.025 2.025 0 0 0 7.859 6z"}),(0,c._)("path",{d:"M17.573 18.407l2.834-2.834a2.025 2.025 0 0 0 0-2.864L13.29 5.593"}),(0,c._)("path",{d:"M6 9h-.01"})],-1),gTn=[hTn],mTn=(0,c.aZ)({name:"Tags",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dTn,gTn)}}),kTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bTn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 6h-.975A2.025 2.025 0 0 0 3 8.025v2.834c0 .537.213 1.052.593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834-2.834c.028-.028.055-.056.08-.085"></path><path d="M17.573 18.407l.418-.418m1.997-1.997l.419-.419a2.025 2.025 0 0 0 0-2.864L13.29 5.593"></path><path d="M6 9h-.01"></path><path d="M3 3l18 18"></path></g>',1),vTn=[bTn],wTn=(0,c.aZ)({name:"TagsOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kTn,vTn)}}),xTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fTn=(0,c._)("path",{d:"M12 5v14",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),yTn=[fTn],MTn=(0,c.aZ)({name:"Tallymark1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xTn,yTn)}}),_Tn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 5v14"}),(0,c._)("path",{d:"M14 5v14"})],-1),STn=[CTn],ETn=(0,c.aZ)({name:"Tallymark2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Tn,STn)}}),PTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 5v14"}),(0,c._)("path",{d:"M12 5v14"}),(0,c._)("path",{d:"M16 5v14"})],-1),ATn=[jTn],DTn=(0,c.aZ)({name:"Tallymark3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PTn,ATn)}}),RTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FTn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 5v14"></path><path d="M10 5v14"></path><path d="M14 5v14"></path><path d="M18 5v14"></path></g>',1),BTn=[FTn],LTn=(0,c.aZ)({name:"Tallymark4",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RTn,BTn)}}),TTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ITn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 5v14"></path><path d="M10 5v14"></path><path d="M14 5v14"></path><path d="M18 5v14"></path><path d="M3 17L21 7"></path></g>',1),NTn=[ITn],OTn=(0,c.aZ)({name:"Tallymarks",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TTn,NTn)}}),VTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"2",y:"12",width:"18",height:"6",rx:"3"}),(0,c._)("path",{d:"M6 12l1-5h5l3 5"}),(0,c._)("path",{d:"M21 9h-7.8"})],-1),HTn=[ZTn],UTn=(0,c.aZ)({name:"Tank",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VTn,HTn)}}),zTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"1"}),(0,c._)("circle",{cx:"12",cy:"12",r:"5"}),(0,c._)("circle",{cx:"12",cy:"12",r:"9"})],-1),$Tn=[qTn],KTn=(0,c.aZ)({name:"Target",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zTn,$Tn)}}),YTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M10 13.5a4 4 0 1 0 4 0V5a2 2 0 0 0-4 0v8.5"}),(0,c._)("path",{d:"M10 9h4"})],-1),GTn=[WTn],JTn=(0,c.aZ)({name:"Temperature",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YTn,GTn)}}),XTn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QTn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"6",cy:"8",r:"2"}),(0,c._)("path",{d:"M20 9a3 3 0 0 0-3-3h-1a3 3 0 0 0-3 3v6a3 3 0 0 0 3 3h1a3 3 0 0 0 3-3"})],-1),nIn=[QTn],sIn=(0,c.aZ)({name:"TemperatureCelsius",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XTn,nIn)}}),eIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"6",cy:"8",r:"2"}),(0,c._)("path",{d:"M13 12h5"}),(0,c._)("path",{d:"M20 6h-6a1 1 0 0 0-1 1v11"})],-1),tIn=[aIn],rIn=(0,c.aZ)({name:"TemperatureFahrenheit",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eIn,tIn)}}),oIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 13.5a4 4 0 1 0 4 0V5a2 2 0 0 0-4 0v8.5"}),(0,c._)("path",{d:"M8 9h4"}),(0,c._)("path",{d:"M16 9h6"})],-1),lIn=[pIn],iIn=(0,c.aZ)({name:"TemperatureMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oIn,lIn)}}),cIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uIn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 13.5a4 4 0 1 0 4 0V5a2 2 0 0 0-4 0v8.5"></path><path d="M8 9h4"></path><path d="M16 9h6"></path><path d="M19 6v6"></path></g>',1),dIn=[uIn],hIn=(0,c.aZ)({name:"TemperaturePlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cIn,dIn)}}),gIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mIn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="4" rx="1"></rect><rect x="4" y="12" width="6" height="8" rx="1"></rect><path d="M14 12h6"></path><path d="M14 16h6"></path><path d="M14 20h6"></path></g>',1),kIn=[mIn],bIn=(0,c.aZ)({name:"Template",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gIn,kIn)}}),vIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wIn=(0,c._)("path",{d:"M11 14l4 6h6L12 4L3 20h6l4-6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),xIn=[wIn],fIn=(0,c.aZ)({name:"Tent",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vIn,xIn)}}),yIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 7l5 5l-5 5"}),(0,c._)("path",{d:"M12 19h7"})],-1),_In=[MIn],CIn=(0,c.aZ)({name:"Terminal",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yIn,_In)}}),SIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 9l3 3l-3 3"}),(0,c._)("path",{d:"M13 15h3"}),(0,c._)("rect",{x:"3",y:"4",width:"18",height:"16",rx:"2"})],-1),PIn=[EIn],jIn=(0,c.aZ)({name:"Terminal2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SIn,PIn)}}),AIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M16 4l3 3L6.65 19.35a1.5 1.5 0 0 1-3-3L16 4"}),(0,c._)("path",{d:"M10 10h6"}),(0,c._)("path",{d:"M19 15l1.5 1.6a2 2 0 1 1-3 0L19 15"})],-1),RIn=[DIn],FIn=(0,c.aZ)({name:"TestPipe",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AIn,RIn)}}),BIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LIn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 19h14"></path><path d="M17 21l2-2l-2-2"></path><path d="M16 4H9.5a3.5 3.5 0 0 0 0 7h.5"></path><path d="M14 15V4"></path><path d="M10 15V4"></path></g>',1),TIn=[LIn],IIn=(0,c.aZ)({name:"TextDirectionLtr",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BIn,TIn)}}),NIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OIn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 4H9.5a3.5 3.5 0 0 0 0 7h.5"></path><path d="M14 15V4"></path><path d="M10 15V4"></path><path d="M5 19h14"></path><path d="M7 21l-2-2l2-2"></path></g>',1),VIn=[OIn],ZIn=(0,c.aZ)({name:"TextDirectionRtl",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NIn,VIn)}}),HIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UIn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="5" r="2"></circle><circle cx="19" cy="5" r="2"></circle><circle cx="5" cy="19" r="2"></circle><circle cx="19" cy="19" r="2"></circle><path d="M5 7v10"></path><path d="M7 5h10"></path><path d="M7 19h10"></path><path d="M19 7v10"></path><path d="M10 10h4"></path><path d="M12 14v-4"></path></g>',1),zIn=[UIn],qIn=(0,c.aZ)({name:"TextResize",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HIn,zIn)}}),$In={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h16"}),(0,c._)("path",{d:"M4 18h5"}),(0,c._)("path",{d:"M4 12h13a3 3 0 0 1 0 6h-4l2-2m0 4l-2-2"})],-1),YIn=[KIn],WIn=(0,c.aZ)({name:"TextWrap",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$In,YIn)}}),GIn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JIn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 6h10"}),(0,c._)("path",{d:"M4 18h10"}),(0,c._)("path",{d:"M4 12h17l-3-3m0 6l3-3"})],-1),XIn=[JIn],QIn=(0,c.aZ)({name:"TextWrapDisabled",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GIn,XIn)}}),nNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M19 5a2.828 2.828 0 0 1 0 4l-8 8H7v-4l8-8a2.828 2.828 0 0 1 4 0z"></path><path d="M16 7l-1.5-1.5"></path><path d="M13 10l-1.5-1.5"></path><path d="M10 13l-1.5-1.5"></path><path d="M7 17l-3 3"></path></g>',1),eNn=[sNn],aNn=(0,c.aZ)({name:"Thermometer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nNn,eNn)}}),tNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rNn=(0,c._)("path",{d:"M7 13V5a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h3a4 4 0 0 1 4 4v1a2 2 0 0 0 4 0v-5h3a2 2 0 0 0 2-2l-1-5a2 3 0 0 0-2-2h-7a3 3 0 0 0-3 3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),oNn=[rNn],pNn=(0,c.aZ)({name:"ThumbDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tNn,oNn)}}),lNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iNn=(0,c._)("path",{d:"M7 11v8a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1v-7a1 1 0 0 1 1-1h3a4 4 0 0 0 4-4V6a2 2 0 0 1 4 0v5h3a2 2 0 0 1 2 2l-1 5a2 3 0 0 1-2 2h-7a3 3 0 0 1-3-3",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),cNn=[iNn],uNn=(0,c.aZ)({name:"ThumbUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lNn,cNn)}}),dNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 5v2"></path><path d="M15 11v2"></path><path d="M15 17v2"></path><path d="M5 5h14a2 2 0 0 1 2 2v3a2 2 0 0 0 0 4v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3a2 2 0 0 0 0-4V7a2 2 0 0 1 2-2"></path></g>',1),gNn=[hNn],mNn=(0,c.aZ)({name:"Ticket",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dNn,gNn)}}),kNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8.56 3.69a9 9 0 0 0-2.92 1.95"></path><path d="M3.69 8.56A9 9 0 0 0 3 12"></path><path d="M3.69 15.44a9 9 0 0 0 1.95 2.92"></path><path d="M8.56 20.31A9 9 0 0 0 12 21"></path><path d="M15.44 20.31a9 9 0 0 0 2.92-1.95"></path><path d="M20.31 15.44A9 9 0 0 0 21 12"></path><path d="M20.31 8.56a9 9 0 0 0-1.95-2.92"></path><path d="M15.44 3.69A9 9 0 0 0 12 3"></path><circle cx="12" cy="12" r="2"></circle></g>',1),vNn=[bNn],wNn=(0,c.aZ)({name:"TiltShift",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kNn,vNn)}}),xNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="5" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M7 18h8m4 0h2v-6a5 7 0 0 0-5-7h-1l1.5 7H21"></path><path d="M12 18V5h3"></path><path d="M3 17v-5h9"></path></g>',1),yNn=[fNn],MNn=(0,c.aZ)({name:"Tir",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xNn,yNn)}}),_Nn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CNn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"8",cy:"12",r:"2"}),(0,c._)("rect",{x:"2",y:"6",width:"20",height:"12",rx:"6"})],-1),SNn=[CNn],ENn=(0,c.aZ)({name:"ToggleLeft",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Nn,SNn)}}),PNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jNn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"16",cy:"12",r:"2"}),(0,c._)("rect",{x:"2",y:"6",width:"20",height:"12",rx:"6"})],-1),ANn=[jNn],DNn=(0,c.aZ)({name:"ToggleRight",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PNn,ANn)}}),RNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><ellipse cx="6" cy="10" rx="3" ry="7"></ellipse><path d="M21 10c0-3.866-1.343-7-3-7"></path><path d="M6 3h12"></path><path d="M21 10v10l-3-1l-3 2l-3-3l-3 2V10"></path><path d="M6 10h.01"></path></g>',1),BNn=[FNn],LNn=(0,c.aZ)({name:"ToiletPaper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RNn,BNn)}}),TNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},INn=(0,c._)("path",{d:"M7 10h3V7L6.5 3.5a6 6 0 0 1 8 8l6 6a2 2 0 0 1-3 3l-6-6a6 6 0 0 1-8-8L7 10",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),NNn=[INn],ONn=(0,c.aZ)({name:"Tool",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TNn,NNn)}}),VNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 21h4L20 8a1.5 1.5 0 0 0-4-4L3 17v4"></path><path d="M14.5 5.5l4 4"></path><path d="M12 8L7 3L3 7l5 5"></path><path d="M7 8L5.5 9.5"></path><path d="M16 12l5 5l-4 4l-5-5"></path><path d="M16 17l-1.5 1.5"></path></g>',1),HNn=[ZNn],UNn=(0,c.aZ)({name:"Tools",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VNn,HNn)}}),zNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 3h8l-1 9H5z"></path><path d="M7 18h2v3H7z"></path><path d="M20 3v12h-5c-.023-3.681.184-7.406 5-12z"></path><path d="M20 15v6h-1v-3"></path><path d="M8 12v6"></path></g>',1),$Nn=[qNn],KNn=(0,c.aZ)({name:"ToolsKitchen",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zNn,$Nn)}}),YNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WNn=(0,c._)("path",{d:"M19 3v12h-5c-.023-3.681.184-7.406 5-12zm0 12v6h-1v-3M8 4v17M5 4v3a3 3 0 1 0 6 0V4",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),GNn=[WNn],JNn=(0,c.aZ)({name:"ToolsKitchen2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YNn,GNn)}}),XNn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QNn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 4H3"></path><path d="M13 16H7"></path><path d="M11 20h4"></path><path d="M6 8h14"></path><path d="M4 12h12"></path></g>',1),nOn=[QNn],sOn=(0,c.aZ)({name:"Tornado",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XNn,nOn)}}),eOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M5 4h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5"></path><path d="M5 14h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H5"></path><path d="M10 7h4a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-4"></path><path d="M15 12h5"></path></g>',1),tOn=[aOn],rOn=(0,c.aZ)({name:"Tournament",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eOn,tOn)}}),oOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pOn=(0,c._)("path",{d:"M4 15L15 4m5 5L9 20m-4-8l7 7M8.5 8.5l7 7M12 5l7 7",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),lOn=[pOn],iOn=(0,c.aZ)({name:"Track",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oOn,lOn)}}),cOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="15" r="4"></circle><path d="M7 15v.01"></path><circle cx="19" cy="17" r="2"></circle><path d="M10.5 17H17"></path><path d="M20 15.2V11a1 1 0 0 0-1-1h-6l-2-5H5v6.5"></path><path d="M18 5h-1a1 1 0 0 0-1 1v4"></path></g>',1),dOn=[uOn],hOn=(0,c.aZ)({name:"Tractor",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cOn,dOn)}}),gOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mOn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4.5 9h5M7 9v6"}),(0,c._)("path",{d:"M13 15V9l3 4l3-4v6"})],-1),kOn=[mOn],bOn=(0,c.aZ)({name:"Trademark",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gOn,kOn)}}),vOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20h16"></path><path d="M9.4 10h5.2"></path><path d="M7.8 15h8.4"></path><path d="M6 20l5-15h2l5 15"></path></g>',1),xOn=[wOn],fOn=(0,c.aZ)({name:"TrafficCone",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vOn,xOn)}}),yOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="7" y="2" width="10" height="20" rx="5"></rect><circle cx="12" cy="7" r="1"></circle><circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="17" r="1"></circle></g>',1),_On=[MOn],COn=(0,c.aZ)({name:"TrafficLights",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yOn,_On)}}),SOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 13c0-3.87-3.37-7-10-7H3"></path><path d="M3 15h16a2 2 0 0 0 2-2"></path><path d="M3 6v5h17.5"></path><path d="M3 10v4"></path><path d="M8 11V6"></path><path d="M13 11V6.5"></path><path d="M3 19h18"></path></g>',1),POn=[EOn],jOn=(0,c.aZ)({name:"Train",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SOn,POn)}}),AOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DOn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 18v3h16V7l-8-4l-8 4v3"}),(0,c._)("path",{d:"M4 14h9"}),(0,c._)("path",{d:"M10 11l3 3l-3 3"})],-1),ROn=[DOn],FOn=(0,c.aZ)({name:"TransferIn",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AOn,ROn)}}),BOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LOn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 19v2h16V7l-8-4l-8 4v2"}),(0,c._)("path",{d:"M13 14H4"}),(0,c._)("path",{d:"M7 11l-3 3l3 3"})],-1),TOn=[LOn],IOn=(0,c.aZ)({name:"TransferOut",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BOn,TOn)}}),NOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7h16"></path><path d="M10 11v6"></path><path d="M14 11v6"></path><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12"></path><path d="M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3"></path></g>',1),VOn=[OOn],ZOn=(0,c.aZ)({name:"Trash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NOn,VOn)}}),HOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M4 7h3m4 0h9"></path><path d="M10 11v6"></path><path d="M14 14v3"></path><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l.077-.923"></path><path d="M18.384 14.373L19 7"></path><path d="M9 5V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3"></path></g>',1),zOn=[UOn],qOn=(0,c.aZ)({name:"TrashOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HOn,zOn)}}),$On={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 7h16"></path><path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12"></path><path d="M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3"></path><path d="M10 12l4 4m0-4l-4 4"></path></g>',1),YOn=[KOn],WOn=(0,c.aZ)({name:"TrashX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$On,YOn)}}),GOn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JOn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 13l-2-2"></path><path d="M12 12l2-2"></path><path d="M12 21V8"></path><path d="M9.824 15.995a3 3 0 0 1-2.743-3.69a2.998 2.998 0 0 1 .304-4.833A3 3 0 0 1 12 3.765a3 3 0 0 1 4.614 3.707a2.997 2.997 0 0 1 .305 4.833A3 3 0 0 1 14 16h-4z"></path></g>',1),XOn=[JOn],QOn=(0,c.aZ)({name:"Tree",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GOn,XOn)}}),nVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sVn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 5l3 3l-2 1l4 4l-3 1l4 4h-9"></path><path d="M15 21v-3"></path><path d="M8 13l-2-2"></path><path d="M8 12l2-2"></path><path d="M8 21V8"></path><path d="M5.824 15.995a3 3 0 0 1-2.743-3.69a2.998 2.998 0 0 1 .304-4.833A3 3 0 0 1 8 3.765a3 3 0 0 1 4.614 3.707a2.997 2.997 0 0 1 .305 4.833A3 3 0 0 1 10 16H6z"></path></g>',1),eVn=[sVn],aVn=(0,c.aZ)({name:"Trees",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nVn,eVn)}}),tVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 7l6 6l4-4l8 8"}),(0,c._)("path",{d:"M21 10v7h-7"})],-1),oVn=[rVn],pVn=(0,c.aZ)({name:"TrendingDown",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tVn,oVn)}}),lVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 6h5l7 10h6"}),(0,c._)("path",{d:"M18 19l3-3l-3-3"})],-1),cVn=[iVn],uVn=(0,c.aZ)({name:"TrendingDown2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lVn,cVn)}}),dVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 6h2.397a5 5 0 0 1 4.096 2.133l4.014 5.734A5 5 0 0 0 17.603 16H21"}),(0,c._)("path",{d:"M18 19l3-3l-3-3"})],-1),gVn=[hVn],mVn=(0,c.aZ)({name:"TrendingDown3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dVn,gVn)}}),kVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 17l6-6l4 4l8-8"}),(0,c._)("path",{d:"M14 7h7v7"})],-1),vVn=[bVn],wVn=(0,c.aZ)({name:"TrendingUp",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kVn,vVn)}}),xVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 5l3 3l-3 3"}),(0,c._)("path",{d:"M3 18h5l7-10h6"})],-1),yVn=[fVn],MVn=(0,c.aZ)({name:"TrendingUp2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xVn,yVn)}}),_Vn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 5l3 3l-3 3"}),(0,c._)("path",{d:"M3 18h2.397a5 5 0 0 0 4.096-2.133l4.014-5.734A5 5 0 0 1 17.603 8H21"})],-1),SVn=[CVn],EVn=(0,c.aZ)({name:"TrendingUp3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Vn,SVn)}}),PVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jVn=(0,c._)("path",{d:"M5 19h14a2 2 0 0 0 1.84-2.75L13.74 4a2 2 0 0 0-3.5 0l-7.1 12.25A2 2 0 0 0 4.89 19",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),AVn=[jVn],DVn=(0,c.aZ)({name:"Triangle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PVn,AVn)}}),RVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 19h14m1.986-2.014a2 2 0 0 0-.146-.736L13.74 4a2 2 0 0 0-3.5 0l-.825 1.424m-1.467 2.53L3.14 16.25A2 2 0 0 0 4.89 19"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),BVn=[FVn],LVn=(0,c.aZ)({name:"TriangleOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RVn,BVn)}}),TVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3l-4 7h8z"}),(0,c._)("circle",{cx:"17",cy:"17",r:"3"}),(0,c._)("rect",{x:"4",y:"14",width:"6",height:"6",rx:"1"})],-1),NVn=[IVn],OVn=(0,c.aZ)({name:"TriangleSquareCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",TVn,NVn)}}),VVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 6l2-2v3a7 7 0 0 0 14 0V4l2 2"}),(0,c._)("path",{d:"M12 21V3l-2 2m4 0l-2-2"})],-1),HVn=[ZVn],UVn=(0,c.aZ)({name:"Trident",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VVn,HVn)}}),zVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qVn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 21h8"></path><path d="M12 17v4"></path><path d="M7 4h10"></path><path d="M17 4v8a5 5 0 0 1-10 0V4"></path><circle cx="5" cy="9" r="2"></circle><circle cx="19" cy="9" r="2"></circle></g>',1),$Vn=[qVn],KVn=(0,c.aZ)({name:"Trophy",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zVn,$Vn)}}),YVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WVn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"7",cy:"17",r:"2"}),(0,c._)("circle",{cx:"17",cy:"17",r:"2"}),(0,c._)("path",{d:"M5 17H3V6a1 1 0 0 1 1-1h9v12m-4 0h6m4 0h2v-6h-8m0-5h5l3 5"})],-1),GVn=[WVn],JVn=(0,c.aZ)({name:"Truck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YVn,GVn)}}),XVn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QVn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M5 17H3v-4M2 5h11v12m-4 0h6m4 0h2v-6h-8m0-5h5l3 5"></path><path d="M3 9h4"></path></g>',1),nZn=[QVn],sZn=(0,c.aZ)({name:"TruckDelivery",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XVn,nZn)}}),eZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="17" r="2"></circle><path d="M15.585 15.586a2 2 0 0 0 2.826 2.831"></path><path d="M5 17H3V6a1 1 0 0 1 1-1h1m3.96 0H13v4m0 4v4m-4 0h6m6 0v-6h-6m-2-5h5l3 5"></path><path d="M3 3l18 18"></path></g>',1),tZn=[aZn],rZn=(0,c.aZ)({name:"TruckOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eZn,tZn)}}),oZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="7" cy="17" r="2"></circle><circle cx="17" cy="17" r="2"></circle><path d="M5 17H3V6a1 1 0 0 1 1-1h9v6H8l2 2m0-4l-2 2"></path><path d="M9 17h6"></path><path d="M13 6h5l3 5v6h-2"></path></g>',1),lZn=[pZn],iZn=(0,c.aZ)({name:"TruckReturn",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oZn,lZn)}}),cZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 20h3"></path><path d="M14 20h7"></path><path d="M6.9 15h6.9"></path><path d="M10.2 6.3L16 20"></path><path d="M5 20l6-16h2l7 16"></path></g>',1),dZn=[uZn],hZn=(0,c.aZ)({name:"Typography",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cZn,dZn)}}),gZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},mZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 12a8 8 0 0 1 16 0z"}),(0,c._)("path",{d:"M12 12v6a2 2 0 0 0 4 0"})],-1),kZn=[mZn],bZn=(0,c.aZ)({name:"Umbrella",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",gZn,kZn)}}),vZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},wZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M7 5v5a5 5 0 0 0 10 0V5"}),(0,c._)("path",{d:"M5 19h14"})],-1),xZn=[wZn],fZn=(0,c.aZ)({name:"Underline",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",vZn,xZn)}}),yZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 14a3.5 3.5 0 0 0 5 0l4-4a3.5 3.5 0 0 0-5-5l-.5.5"></path><path d="M14 10a3.5 3.5 0 0 0-5 0l-4 4a3.5 3.5 0 0 0 5 5l.5-.5"></path><path d="M16 21v-2"></path><path d="M19 16h2"></path><path d="M3 8h2"></path><path d="M8 3v2"></path></g>',1),_Zn=[MZn],CZn=(0,c.aZ)({name:"Unlink",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yZn,_Zn)}}),SZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},EZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2"}),(0,c._)("path",{d:"M7 9l5-5l5 5"}),(0,c._)("path",{d:"M12 4v12"})],-1),PZn=[EZn],jZn=(0,c.aZ)({name:"Upload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",SZn,PZn)}}),AZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},DZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 16v-4a4 4 0 0 1 8 0v4"}),(0,c._)("path",{d:"M3 12h1m8-9v1m8 8h1M5.6 5.6l.7.7m12.1-.7l-.7.7"}),(0,c._)("rect",{x:"6",y:"16",width:"12",height:"4",rx:"1"})],-1),RZn=[DZn],FZn=(0,c.aZ)({name:"Urgent",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",AZn,RZn)}}),BZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="19" r="2"></circle><path d="M12 17V5.5"></path><path d="M7 10v3l5 3"></path><path d="M12 14.5l5-2V10"></path><path d="M16 10h2V8h-2z"></path><circle cx="7" cy="9" r="1"></circle><path d="M10 5.5h4L12 3z"></path></g>',1),TZn=[LZn],IZn=(0,c.aZ)({name:"Usb",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BZn,TZn)}}),NZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},OZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"7",r:"4"}),(0,c._)("path",{d:"M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"})],-1),VZn=[OZn],ZZn=(0,c.aZ)({name:"User",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",NZn,VZn)}}),HZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},UZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9",cy:"7",r:"4"}),(0,c._)("path",{d:"M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"}),(0,c._)("path",{d:"M16 11l2 2l4-4"})],-1),zZn=[UZn],qZn=(0,c.aZ)({name:"UserCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",HZn,zZn)}}),$Zn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KZn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("circle",{cx:"12",cy:"10",r:"3"}),(0,c._)("path",{d:"M6.168 18.849A4 4 0 0 1 10 16h4a4 4 0 0 1 3.834 2.855"})],-1),YZn=[KZn],WZn=(0,c.aZ)({name:"UserCircle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Zn,YZn)}}),GZn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},JZn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="7" r="4"></circle><path d="M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"></path><path d="M19 7v3"></path><path d="M19 14v.01"></path></g>',1),XZn=[JZn],QZn=(0,c.aZ)({name:"UserExclamation",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",GZn,XZn)}}),nHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},sHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9",cy:"7",r:"4"}),(0,c._)("path",{d:"M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"}),(0,c._)("path",{d:"M16 11h6"})],-1),eHn=[sHn],aHn=(0,c.aZ)({name:"UserMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",nHn,eHn)}}),tHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M14.274 10.291a4 4 0 1 0-5.554-5.58m-.548 3.453a4.01 4.01 0 0 0 2.62 2.65"}),(0,c._)("path",{d:"M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 1.147.167m2.685 2.681A4 4 0 0 1 18 19v2"}),(0,c._)("path",{d:"M3 3l18 18"})],-1),oHn=[rHn],pHn=(0,c.aZ)({name:"UserOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tHn,oHn)}}),lHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},iHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9",cy:"7",r:"4"}),(0,c._)("path",{d:"M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"}),(0,c._)("path",{d:"M16 11h6m-3-3v6"})],-1),cHn=[iHn],uHn=(0,c.aZ)({name:"UserPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",lHn,cHn)}}),dHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},hHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="7" r="4"></circle><path d="M6 21v-2a4 4 0 0 1 4-4h1"></path><circle cx="16.5" cy="17.5" r="2.5"></circle><path d="M18.5 19.5L21 22"></path></g>',1),gHn=[hHn],mHn=(0,c.aZ)({name:"UserSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",dHn,gHn)}}),kHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"9",cy:"7",r:"4"}),(0,c._)("path",{d:"M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"}),(0,c._)("path",{d:"M17 9l4 4m0-4l-4 4"})],-1),vHn=[bHn],wHn=(0,c.aZ)({name:"UserX",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kHn,vHn)}}),xHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},fHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="7" r="4"></circle><path d="M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path><path d="M21 21v-2a4 4 0 0 0-3-3.85"></path></g>',1),yHn=[fHn],MHn=(0,c.aZ)({name:"Users",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",xHn,yHn)}}),_Hn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},CHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 3l4 4"></path><path d="M19 5l-4.5 4.5"></path><path d="M11.5 6.5l6 6"></path><path d="M16.5 11.5L10 18H6v-4l6.5-6.5"></path><path d="M7.5 12.5L9 14"></path><path d="M10.5 9.5L12 11"></path><path d="M3 21l3-3"></path></g>',1),SHn=[CHn],EHn=(0,c.aZ)({name:"Vaccine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",_Hn,SHn)}}),PHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="3" width="6" height="3" rx="1"></rect><path d="M10 6v.98c0 .877-.634 1.626-1.5 1.77c-.866.144-1.5.893-1.5 1.77V19a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-8.48c0-.877-.634-1.626-1.5-1.77A1.795 1.795 0 0 1 14 6.98V6"></path><path d="M7 12h10"></path><path d="M7 18h10"></path><path d="M11 15h2"></path></g>',1),AHn=[jHn],DHn=(0,c.aZ)({name:"VaccineBottle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PHn,AHn)}}),RHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},FHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 4C2.5 9 2.5 14 5 20M19 4c2.5 5 2.5 10 0 16M9 9h1c1 0 1 1 2.016 3.527C13 15 13 16 14 16h1"}),(0,c._)("path",{d:"M8 16c1.5 0 3-2 4-3.5S14.5 9 16 9"})],-1),BHn=[FHn],LHn=(0,c.aZ)({name:"Variable",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",RHn,BHn)}}),THn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},IHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="4" height="4" rx="1"></rect><rect x="17" y="3" width="4" height="4" rx="1"></rect><rect x="17" y="17" width="4" height="4" rx="1"></rect><rect x="3" y="17" width="4" height="4" rx="1"></rect><path d="M5 7v10"></path><path d="M19 7v10"></path><path d="M7 5h10"></path><path d="M7 19h10"></path></g>',1),NHn=[IHn],OHn=(0,c.aZ)({name:"Vector",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",THn,NHn)}}),VHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="4" height="4" rx="1"></rect><rect x="17" y="17" width="4" height="4" rx="1"></rect><path d="M7 5h7"></path><path d="M10 19h7"></path><circle cx="9" cy="19" r="1"></circle><circle cx="15" cy="5" r="1"></circle><path d="M7 5.5a5 6.5 0 0 1 5 6.5a5 6.5 0 0 0 5 6.5"></path></g>',1),HHn=[ZHn],UHn=(0,c.aZ)({name:"VectorBeizer2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VHn,HHn)}}),zHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},qHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="14" width="4" height="4" rx="1"></rect><rect x="17" y="14" width="4" height="4" rx="1"></rect><rect x="10" y="6" width="4" height="4" rx="1"></rect><path d="M10 8.5A6 6 0 0 0 5 14"></path><path d="M14 8.5a6 6 0 0 1 5 5.5"></path><path d="M10 8H4"></path><path d="M20 8h-6"></path><circle cx="3" cy="8" r="1"></circle><circle cx="21" cy="8" r="1"></circle></g>',1),$Hn=[qHn],KHn=(0,c.aZ)({name:"VectorBezier",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",zHn,$Hn)}}),YHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},WHn=(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="10" y="4" width="4" height="4" rx="1"></rect><rect x="3" y="17" width="4" height="4" rx="1"></rect><rect x="17" y="17" width="4" height="4" rx="1"></rect><path d="M6.5 17.1l5-9.1"></path><path d="M17.5 17.1l-5-9.1"></path><path d="M7 19h10"></path></g>',1),GHn=[WHn],JHn=(0,c.aZ)({name:"VectorTriangle",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",YHn,GHn)}}),XHn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QHn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"9",r:"5"}),(0,c._)("path",{d:"M12 14v7"}),(0,c._)("path",{d:"M9 18h6"})],-1),nUn=[QHn],sUn=(0,c.aZ)({name:"Venus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XHn,nUn)}}),eUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},aUn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("rect",{x:"10",y:"5",width:"10",height:"14",rx:"2"}),(0,c._)("path",{d:"M7 7v10"}),(0,c._)("path",{d:"M4 8v8"})],-1),tUn=[aUn],rUn=(0,c.aZ)({name:"Versions",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",eUn,tUn)}}),oUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},pUn=(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 10l4.553-2.276A1 1 0 0 1 21 8.618v6.764a1 1 0 0 1-1.447.894L15 14v-4z"}),(0,c._)("rect",{x:"3",y:"6",width:"12",height:"12",rx:"2"})],-1),lUn=[pUn],iUn=(0,c.aZ)({name:"Video",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",oUn,lUn)}}),cUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 10l4.553-2.276A1 1 0 0 1 21 8.618v6.764a1 1 0 0 1-1.447.894L15 14v-4z"}),(0,c._)("rect",{x:"3",y:"6",width:"12",height:"12",rx:"2"}),(0,c._)("path",{d:"M7 12h4"})],-1)],dUn=(0,c.aZ)({name:"VideoMinus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cUn,uUn)}}),hUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 3l18 18"}),(0,c._)("path",{d:"M15 11v-1l4.553-2.276A1 1 0 0 1 21 8.618v6.764a1 1 0 0 1-.675.946"}),(0,c._)("path",{d:"M10 6h3a2 2 0 0 1 2 2v3m0 4v1a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1"})],-1)],mUn=(0,c.aZ)({name:"VideoOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hUn,gUn)}}),kUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 10l4.553-2.276A1 1 0 0 1 21 8.618v6.764a1 1 0 0 1-1.447.894L15 14v-4z"></path><rect x="3" y="6" width="12" height="12" rx="2"></rect><path d="M7 12h4"></path><path d="M9 10v4"></path></g>',1)],vUn=(0,c.aZ)({name:"VideoPlus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kUn,bUn)}}),wUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"12",r:"9"}),(0,c._)("ellipse",{cx:"12",cy:"12",rx:"4",ry:"9"}),(0,c._)("ellipse",{cx:"12",cy:"12",rx:"4",ry:"9",transform:"rotate(90 12 12)"})],-1)],fUn=(0,c.aZ)({name:"View360",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wUn,xUn)}}),yUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},MUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 3v4"></path><path d="M12 21v-3"></path><path d="M3 12h4"></path><path d="M21 12h-3"></path><path d="M12 12v.01"></path></g>',1)],_Un=(0,c.aZ)({name:"Viewfinder",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yUn,MUn)}}),CUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},SUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12h7L7 9m0 6l3-3"></path><path d="M21 12h-7l3-3m0 6l-3-3"></path><path d="M9 6V3h6v3"></path><path d="M9 18v3h6v-3"></path></g>',1)],EUn=(0,c.aZ)({name:"ViewportNarrow",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",CUn,SUn)}}),PUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 12H3l3-3m0 6l-3-3"></path><path d="M14 12h7l-3-3m0 6l3-3"></path><path d="M3 6V3h18v3"></path><path d="M3 18v3h18v-3"></path></g>',1)],AUn=(0,c.aZ)({name:"ViewportWide",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",PUn,jUn)}}),DUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},RUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16.004 3.937A9 9 0 1 0 21 12"></path><circle cx="12" cy="12" r="1"></circle><circle cx="20" cy="4" r="1"></circle><path d="M20 4l-3.5 10l-2.5 2"></path></g>',1)],FUn=(0,c.aZ)({name:"Vinyl",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",DUn,RUn)}}),BUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},LUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"></circle><path d="M12 7V3m-1 0h2"></path><path d="M15.536 8.464l2.828-2.828m-.707-.707l1.414 1.414"></path><path d="M17 12h4m0-1v2"></path><path d="M15.536 15.536l2.828 2.828m.707-.707l-1.414 1.414"></path><path d="M12 17v4m1 0h-2"></path><path d="M8.464 15.536l-2.828 2.828m.707.707L4.93 17.657"></path><path d="M7 12H3m0 1v-2"></path><path d="M8.464 8.464L5.636 5.636m-.707.707L6.343 4.93"></path></g>',1)],TUn=(0,c.aZ)({name:"Virus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",BUn,LUn)}}),IUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},NUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3l18 18"></path><path d="M8.469 8.46a5 5 0 0 0 7.058 7.084m1.386-2.608a5 5 0 0 0-5.826-5.853"></path><path d="M12 7V3m-1 0h2"></path><path d="M15.536 8.464l2.828-2.828m-.707-.707l1.414 1.414"></path><path d="M17 12h4m0-1v2"></path><path d="M18.364 18.364l-.707.707"></path><path d="M12 17v4m1 0h-2"></path><path d="M8.464 15.536l-2.828 2.828m.707.707L4.93 17.657"></path><path d="M7 12H3m0 1v-2"></path><path d="M5.636 5.636l-.707.707"></path></g>',1)],OUn=(0,c.aZ)({name:"VirusOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",IUn,NUn)}}),VUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ZUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 12a5 5 0 1 0-5 5"></path><path d="M12 7V3m-1 0h2"></path><path d="M15.536 8.464l2.828-2.828m-.707-.707l1.414 1.414"></path><path d="M17 12h4m0-1v2"></path><path d="M12 17v4m1 0h-2"></path><path d="M8.464 15.536l-2.828 2.828m.707.707L4.93 17.657"></path><path d="M7 12H3m0 1v-2"></path><path d="M8.464 8.464L5.636 5.636m-.707.707L6.343 4.93"></path><circle cx="17.5" cy="17.5" r="2.5"></circle><path d="M19.5 19.5L22 22"></path></g>',1)],HUn=(0,c.aZ)({name:"VirusSearch",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",VUn,ZUn)}}),UUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zUn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M10 19H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6a2 2 0 0 1 2 2a2 2 0 0 1 2-2h6a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-6a2 2 0 0 0-2 2a2 2 0 0 0-2-2z"></path><path d="M12 5v16"></path><path d="M7 7h1"></path><path d="M7 11h1"></path><path d="M16 7h1"></path><path d="M16 11h1"></path><path d="M16 15h1"></path></g>',1)],qUn=(0,c.aZ)({name:"Vocabulary",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",UUn,zUn)}}),$Un={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},KUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 8a5 5 0 0 1 0 8"}),(0,c._)("path",{d:"M17.7 5a9 9 0 0 1 0 14"}),(0,c._)("path",{d:"M6 15H4a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h2l3.5-4.5A.8.8 0 0 1 11 5v14a.8.8 0 0 1-1.5.5L6 15"})],-1)],YUn=(0,c.aZ)({name:"Volume",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$Un,KUn)}}),WUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},GUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M15 8a5 5 0 0 1 0 8"}),(0,c._)("path",{d:"M6 15H4a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h2l3.5-4.5A.8.8 0 0 1 11 5v14a.8.8 0 0 1-1.5.5L6 15"})],-1)],JUn=(0,c.aZ)({name:"Volume2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",WUn,GUn)}}),XUn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},QUn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 15H4a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h2l3.5-4.5A.8.8 0 0 1 11 5v14a.8.8 0 0 1-1.5.5L6 15"}),(0,c._)("path",{d:"M16 10l4 4m0-4l-4 4"})],-1)],nzn=(0,c.aZ)({name:"Volume3",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",XUn,QUn)}}),szn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},ezn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="13" cy="4" r="1"></circle><path d="M7 21l3-4"></path><path d="M16 21l-2-4l-3-3l1-6"></path><path d="M6 12l2-3l4-1l3 3l3 1"></path></g>',1)],azn=(0,c.aZ)({name:"Walk",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",szn,ezn)}}),tzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rzn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="4" width="16" height="16" rx="2"></rect><path d="M4 8h16"></path><path d="M20 12H4"></path><path d="M4 16h16"></path><path d="M9 4v4"></path><path d="M14 8v4"></path><path d="M8 12v4"></path><path d="M16 12v4"></path><path d="M11 16v4"></path></g>',1)],ozn=(0,c.aZ)({name:"Wall",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tzn,rzn)}}),pzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M17 8V5a1 1 0 0 0-1-1H6a2 2 0 0 0 0 4h12a1 1 0 0 1 1 1v3m0 4v3a1 1 0 0 1-1 1H6a2 2 0 0 1-2-2V6"}),(0,c._)("path",{d:"M20 12v4h-4a2 2 0 0 1 0-4h4"})],-1)],izn=(0,c.aZ)({name:"Wallet",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pzn,lzn)}}),czn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M8 6h10a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H6"}),(0,c._)("circle",{cx:"6",cy:"18",r:"2"}),(0,c._)("path",{d:"M8 18V6a2 2 0 1 0-4 0v12"})],-1)],dzn=(0,c.aZ)({name:"Wallpaper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",czn,uzn)}}),hzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gzn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 21L21 6l-3-3L3 18l3 3"></path><path d="M15 6l3 3"></path><path d="M9 3a2 2 0 0 0 2 2a2 2 0 0 0-2 2a2 2 0 0 0-2-2a2 2 0 0 0 2-2"></path><path d="M19 13a2 2 0 0 0 2 2a2 2 0 0 0-2 2a2 2 0 0 0-2-2a2 2 0 0 0 2-2"></path></g>',1)],mzn=(0,c.aZ)({name:"Wand",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hzn,gzn)}}),kzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bzn=[(0,c._)("path",{d:"M3 12h5l4 8V4l4 8h5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1)],vzn=(0,c.aZ)({name:"WaveSawTool",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kzn,bzn)}}),wzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xzn=[(0,c._)("path",{d:"M21 12h-2c-.894 0-1.662-.857-1.761-2c-.296-3.45-.749-6-2.749-6s-2.5 3.582-2.5 8s-.5 8-2.5 8s-2.452-2.547-2.749-6c-.1-1.147-.867-2-1.763-2h-2",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1)],fzn=(0,c.aZ)({name:"WaveSine",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wzn,xzn)}}),yzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mzn=[(0,c._)("path",{d:"M3 12h5v8h4V4h4v8h5",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1)],_zn=(0,c.aZ)({name:"WaveSquare",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yzn,Mzn)}}),Czn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Szn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 18h.01"></path><path d="M9.172 15.172a4 4 0 0 1 5.656 0"></path><path d="M6.343 12.343a8 8 0 0 1 11.314 0"></path><path d="M3.515 9.515c4.686-4.687 12.284-4.687 17 0"></path></g>',1)],Ezn=(0,c.aZ)({name:"Wifi",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Czn,Szn)}}),Pzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jzn=[(0,c._)("path",{d:"M12 18h.01",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1)],Azn=(0,c.aZ)({name:"Wifi0",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pzn,jzn)}}),Dzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 18h.01"}),(0,c._)("path",{d:"M9.172 15.172a4 4 0 0 1 5.656 0"})],-1)],Fzn=(0,c.aZ)({name:"Wifi1",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dzn,Rzn)}}),Bzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 18h.01"}),(0,c._)("path",{d:"M9.172 15.172a4 4 0 0 1 5.656 0"}),(0,c._)("path",{d:"M6.343 12.343a8 8 0 0 1 11.314 0"})],-1)],Tzn=(0,c.aZ)({name:"Wifi2",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bzn,Lzn)}}),Izn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nzn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 18h.01"></path><path d="M9.172 15.172a4 4 0 0 1 5.656 0"></path><path d="M6.343 12.343a7.963 7.963 0 0 1 3.864-2.14m4.163.155a7.965 7.965 0 0 1 3.287 2"></path><path d="M3.515 9.515A12 12 0 0 1 7.059 7.06m3.101-.92a12 12 0 0 1 10.325 3.374"></path><path d="M3 3l18 18"></path></g>',1)],Ozn=(0,c.aZ)({name:"WifiOff",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Izn,Nzn)}}),Vzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 8h8.5a2.5 2.5 0 1 0-2.34-3.24"}),(0,c._)("path",{d:"M3 12h15.5a2.5 2.5 0 1 1-2.34 3.24"}),(0,c._)("path",{d:"M4 16h5.5a2.5 2.5 0 1 1-2.34 3.24"})],-1)],Hzn=(0,c.aZ)({name:"Wind",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vzn,Zzn)}}),Uzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zzn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 12c2.76 0 5-2.01 5-4.5S14.76 3 12 3v9z"></path><path d="M12 12c0 2.76 2.01 5 4.5 5s4.5-2.24 4.5-5h-9z"></path><path d="M12 12c-2.76 0-5 2.01-5 4.5S9.24 21 12 21v-9z"></path><path d="M12 12c0-2.76-2.01-5-4.5-5S3 9.24 3 12h9z"></path></g>',1)],qzn=(0,c.aZ)({name:"Windmill",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uzn,zzn)}}),$zn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 3c-3.866 0-7 3.272-7 7v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V10c0-3.728-3.134-7-7-7z"}),(0,c._)("path",{d:"M5 13h14"}),(0,c._)("path",{d:"M12 3v18"})],-1)],Yzn=(0,c.aZ)({name:"Window",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$zn,Kzn)}}),Wzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gzn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"18",r:"1"}),(0,c._)("path",{d:"M3 9l5.5 5.5a5 5 0 0 1 7 0L21 9A12 12 0 0 0 3 9"}),(0,c._)("path",{d:"M12 18L9.8 5.2"})],-1)],Jzn=(0,c.aZ)({name:"Wiper",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wzn,Gzn)}}),Xzn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qzn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="20" r="1"></circle><path d="M3 11l5.5 5.5a5 5 0 0 1 7 0L21 11a12 12 0 0 0-18 0"></path><path d="M12 20V6"></path><path d="M4 6a4 4 0 0 1 .4-1.8"></path><path d="M7 2.1a4 4 0 0 1 2 0"></path><path d="M12 6a4 4 0 0 0-.4-1.8"></path><path d="M12 6a4 4 0 0 1 .4-1.8"></path><path d="M15 2.1a4 4 0 0 1 2 0"></path><path d="M20 6a4 4 0 0 0-.4-1.8"></path></g>',1)],nqn=(0,c.aZ)({name:"WiperWash",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xzn,Qzn)}}),sqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},eqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"12",cy:"5",r:"2"}),(0,c._)("path",{d:"M10 22v-4H8l2-6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1l2 6h-2v4"})],-1)],aqn=(0,c.aZ)({name:"Woman",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",sqn,eqn)}}),tqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},rqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M3.6 9h16.8"></path><path d="M3.6 15h16.8"></path><path d="M11.5 3a17 17 0 0 0 0 18"></path><path d="M12.5 3a17 17 0 0 1 0 18"></path></g>',1)],oqn=(0,c.aZ)({name:"World",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",tqn,rqn)}}),pqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},lqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12a9 9 0 1 0-9 9"></path><path d="M3.6 9h16.8"></path><path d="M3.6 15H12"></path><path d="M11.578 3a17 17 0 0 0 0 18"></path><path d="M12.5 3c1.719 2.755 2.5 5.876 2.5 9"></path><path d="M18 14v7m-3-3l3 3l3-3"></path></g>',1)],iqn=(0,c.aZ)({name:"WorldDownload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",pqn,lqn)}}),cqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},uqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M4.6 7h14.8"></path><path d="M3 12h18"></path><path d="M4.6 17h14.8"></path></g>',1)],dqn=(0,c.aZ)({name:"WorldLatitude",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",cqn,uqn)}}),hqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},gqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M11.5 3a11.2 11.2 0 0 0 0 18"></path><path d="M12.5 3a11.2 11.2 0 0 1 0 18"></path><path d="M12 3v18"></path></g>',1)],mqn=(0,c.aZ)({name:"WorldLongitude",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",hqn,gqn)}}),kqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},bqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12a9 9 0 1 0-9 9"></path><path d="M3.6 9h16.8"></path><path d="M3.6 15H12"></path><path d="M11.578 3a17 17 0 0 0 0 18"></path><path d="M12.5 3c1.719 2.755 2.5 5.876 2.5 9"></path><path d="M18 21v-7m3 3l-3-3l-3 3"></path></g>',1)],vqn=(0,c.aZ)({name:"WorldUpload",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",kqn,bqn)}}),wqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},xqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="19" cy="13" r="2"></circle><circle cx="4" cy="17" r="2"></circle><circle cx="13" cy="17" r="2"></circle><path d="M13 19H4"></path><path d="M4 15h9"></path><path d="M8 12V7h2a3 3 0 0 1 3 3v5"></path><path d="M5 15v-2a1 1 0 0 1 1-1h7"></path><path d="M19 11V4l-6 7"></path></g>',1)],fqn=(0,c.aZ)({name:"WreckingBall",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",wqn,xqn)}}),yqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Mqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M20 17V5c0-1.121-.879-2-2-2s-2 .879-2 2v12l2 2l2-2z"}),(0,c._)("path",{d:"M16 7h4"}),(0,c._)("path",{d:"M18 19H5a2 2 0 1 1 0-4h4a2 2 0 1 0 0-4H6"})],-1)],_qn=(0,c.aZ)({name:"Writing",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",yqn,Mqn)}}),Cqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Sqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 19c3.333-2 5-4 5-6c0-3-1-3-2-3s-2.032 1.085-2 3c.034 2.048 1.658 2.877 2.5 4C8 19 9 19.5 10 18c.667-1 1.167-1.833 1.5-2.5c1 2.333 2.333 3.5 4 3.5H18"}),(0,c._)("path",{d:"M20 17V5c0-1.121-.879-2-2-2s-2 .879-2 2v12l2 2l2-2z"}),(0,c._)("path",{d:"M16 7h4"})],-1)],Eqn=(0,c.aZ)({name:"WritingSign",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Cqn,Sqn)}}),Pqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},jqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M18 6L6 18"}),(0,c._)("path",{d:"M6 6l12 12"})],-1)],Aqn=(0,c.aZ)({name:"X",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Pqn,jqn)}}),Dqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Rqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 3a4.5 4.5 0 0 0 0 9a4.5 4.5 0 0 1 0 9"></path><circle cx="12" cy="7.5" r=".5" fill="currentColor"></circle><circle cx="12" cy="16.5" r=".5" fill="currentColor"></circle></g>',1)],Fqn=(0,c.aZ)({name:"YinYang",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Dqn,Rqn)}}),Bqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Lqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 10l3-3l3 3l3-3l3 3l3-3l3 3"}),(0,c._)("path",{d:"M3 17l3-3l3 3l3-3l3 3l3-3l3 3"})],-1)],Tqn=(0,c.aZ)({name:"ZodiacAquarius",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Bqn,Lqn)}}),Iqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Nqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M12 5a5 5 0 1 0-4 8"}),(0,c._)("path",{d:"M16 13a5 5 0 1 0-4-8"}),(0,c._)("path",{d:"M12 21V5"})],-1)],Oqn=(0,c.aZ)({name:"ZodiacAries",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Iqn,Nqn)}}),Vqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Zqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="12" r="3"></circle><path d="M3 12a10 6.5 0 0 1 14-6.5"></path><path d="M21 12a10 6.5 0 0 1-14 6.5"></path></g>',1)],Hqn=(0,c.aZ)({name:"ZodiacCancer",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Vqn,Zqn)}}),Uqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},zqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 4a3 3 0 0 1 3 3v9"}),(0,c._)("path",{d:"M7 7a3 3 0 0 1 6 0v11a3 3 0 0 1-3 3"}),(0,c._)("circle",{cx:"16",cy:"17",r:"3"})],-1)],qqn=(0,c.aZ)({name:"ZodiacCapricorn",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Uqn,zqn)}}),$qn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Kqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 3a21 21 0 0 0 18 0"></path><path d="M3 21a21 21 0 0 1 18 0"></path><path d="M7 4.5v15"></path><path d="M17 4.5v15"></path></g>',1)],Yqn=(0,c.aZ)({name:"ZodiacGemini",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",$qn,Kqn)}}),Wqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Gqn=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 17a4 4 0 1 0 8 0"></path><circle cx="6" cy="16" r="3"></circle><circle cx="11" cy="7" r="4"></circle><path d="M7 7c0 3 2 5 2 9"></path><path d="M15 7c0 4-2 6-2 10"></path></g>',1)],Jqn=(0,c.aZ)({name:"ZodiacLeo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Wqn,Gqn)}}),Xqn={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},Qqn=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 20h14"}),(0,c._)("path",{d:"M5 17h5v-.3a7 7 0 1 1 4 0v.3h5"})],-1)],n$n=(0,c.aZ)({name:"ZodiacLibra",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",Xqn,Qqn)}}),s$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},e$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M5 3a21 21 0 0 1 0 18"}),(0,c._)("path",{d:"M19 3a21 21 0 0 0 0 18"}),(0,c._)("path",{d:"M5 12h14"})],-1)],a$n=(0,c.aZ)({name:"ZodiacPisces",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",s$n,e$n)}}),t$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},r$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M4 20L20 4"}),(0,c._)("path",{d:"M13 4h7v7"}),(0,c._)("path",{d:"M6.5 12.5l5 5"})],-1)],o$n=(0,c.aZ)({name:"ZodiacSagittarius",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",t$n,r$n)}}),p$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},l$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M3 4a2 2 0 0 1 2 2v9"}),(0,c._)("path",{d:"M5 6a2 2 0 0 1 4 0v9"}),(0,c._)("path",{d:"M9 6a2 2 0 0 1 4 0v10a3 3 0 0 0 3 3h5l-3-3m0 6l3-3"})],-1)],i$n=(0,c.aZ)({name:"ZodiacScorpio",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",p$n,l$n)}}),c$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},u$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("path",{d:"M6 3a6 6 0 0 0 12 0"}),(0,c._)("circle",{cx:"12",cy:"15",r:"6"})],-1)],d$n=(0,c.aZ)({name:"ZodiacTaurus",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",c$n,u$n)}}),h$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},g$n=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 4a2 2 0 0 1 2 2v9"></path><path d="M5 6a2 2 0 0 1 4 0v9"></path><path d="M9 6a2 2 0 0 1 4 0v10a7 5 0 0 0 7 5"></path><path d="M12 21a7 5 0 0 0 7-5v-2a3 3 0 0 0-6 0"></path></g>',1)],m$n=(0,c.aZ)({name:"ZodiacVirgo",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",h$n,g$n)}}),k$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},b$n=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="10" r="7"></circle><path d="M8 8l4 4"></path><path d="M12 8l-4 4"></path><path d="M21 21l-6-6"></path></g>',1)],v$n=(0,c.aZ)({name:"ZoomCancel",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",k$n,b$n)}}),w$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},x$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"10",cy:"10",r:"7"}),(0,c._)("path",{d:"M21 21l-6-6"}),(0,c._)("path",{d:"M7 10l2 2l4-4"})],-1)],f$n=(0,c.aZ)({name:"ZoomCheck",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",w$n,x$n)}}),y$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},M$n=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="10" r="7"></circle><path d="M7 10h6"></path><path d="M10 7v6"></path><path d="M21 21l-6-6"></path></g>',1)],_$n=(0,c.aZ)({name:"ZoomIn",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",y$n,M$n)}}),C$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},S$n=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="10" r="7"></circle><path d="M21 21l-6-6"></path><path d="M12 7H9.5a1.5 1.5 0 0 0 0 3h1a1.5 1.5 0 0 1 0 3H8"></path><path d="M10 13v1m0-8v1"></path></g>',1)],E$n=(0,c.aZ)({name:"ZoomMoney",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",C$n,S$n)}}),P$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},j$n=[(0,c._)("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[(0,c._)("circle",{cx:"10",cy:"10",r:"7"}),(0,c._)("path",{d:"M7 10h6"}),(0,c._)("path",{d:"M21 21l-6-6"})],-1)],A$n=(0,c.aZ)({name:"ZoomOut",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",P$n,j$n)}}),D$n={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},R$n=[(0,c.uE)('<g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="10" cy="10" r="7"></circle><path d="M21 21l-6-6"></path><path d="M10 13v.01"></path><path d="M10 10a1.5 1.5 0 1 0-1.14-2.474"></path></g>',1)],F$n=(0,c.aZ)({name:"ZoomQuestion",render:function(n,s){return(0,c.wg)(),(0,c.iD)("svg",D$n,R$n)}});var B$n,L$n;(L$n=B$n||(B$n={})).left="left",L$n.right="right",L$n.top="top",L$n.bottom="bottom";const T$n=(0,c.aZ)({name:"Xicons",props:{icon:{type:String,default:""},iconPosition:{type:String,default:"left"},iconSize:{type:[String,Number],default:18},iconColor:{type:String,default:"inherit"},text:{type:String,default:""},textColor:{type:String,default:"inherit"},textSize:{type:[String,Number],default:"14"},link:{type:String,default:"javascript:void(0)"}},setup(n,{slots:s}){const{icon:e,iconSize:t,iconColor:r,textColor:o,textSize:p}=(0,g.BK)(n);return{icon:e,iconStyle:(0,c.Fl)((()=>({color:r.value,width:`${t.value}px`,height:`${t.value}px`,fontSize:`${t.value}px`}))),textStyle:(0,c.Fl)((()=>({color:o.value,fontSize:`${p.value}px`}))),slots:s,icons:a}}}),I$n=(0,e(3744).Z)(T$n,[["render",function(n,s,e,a,t,r){return(0,c.wg)(),(0,c.iD)("a",{class:(0,u.C_)(["icon-container",n.iconPosition]),href:n.link},[n.icon?((0,c.wg)(),(0,c.j4)((0,c.LL)(n.icons[n.icon]),{key:0,style:(0,u.j5)(n.iconStyle)},null,8,["style"])):(0,c.kq)("",!0),n.text||n.slots.default?((0,c.wg)(),(0,c.iD)("span",{key:1,style:(0,u.j5)(n.textStyle)},[(0,c.WI)(n.$slots,"default",{},(()=>[(0,c.Uk)((0,u.zw)(n.text),1)]))],4)):(0,c.kq)("",!0)],10,h)}]]),N$n=(0,c.aZ)({name:"CodeGroup",setup(n,{slots:s}){const e=(0,g.iH)(-1),a=(0,g.iH)([]);return()=>{var n;const t=((null==(n=s.default)?void 0:n.call(s))||[]).filter((n=>"CodeGroupItem"===n.type.name)).map((n=>(null===n.props&&(n.props={}),n)));return 0===t.length?null:(e.value<0||e.value>t.length-1?(e.value=t.findIndex((n=>""===n.props.active||!0===n.props.active)),-1===e.value&&(e.value=0)):t.forEach(((n,s)=>{n.props.active=s===e.value})),(0,c.h)("div",{class:"code-group"},[(0,c.h)("div",{class:"code-group__nav"},(0,c.h)("ul",{class:"code-group__ul"},t.map(((n,s)=>{const t=s===e.value;return(0,c.h)("li",{class:"code-group__li"},(0,c.h)("button",{ref:n=>{n&&(a.value[s]=n)},class:{"code-group__nav-tab":!0,"code-group__nav-tab-active":t},ariaPressed:t,ariaExpanded:t,onClick:()=>e.value=s,onKeydown:n=>((n,s)=>{" "===n.key||"Enter"===n.key?(n.preventDefault(),e.value=s):"ArrowRight"===n.key?(n.preventDefault(),((n=e.value)=>{n<a.value.length-1?e.value=n+1:e.value=0,a.value[e.value].focus()})(s)):"ArrowLeft"===n.key&&(n.preventDefault(),((n=e.value)=>{e.value=n>0?n-1:a.value.length-1,a.value[e.value].focus()})(s))})(n,s)},(0,c.h)(I$n,{icon:"FileCode",text:n.props.title,"text-size":12,"text-size":12})))})))),t]))}}}),O$n={class:"vue-preview-container"},V$n={key:0,class:"preview-container"},Z$n=(0,c.aZ)({props:["component"],setup:n=>(s,e)=>((0,c.wg)(),(0,c.iD)("div",O$n,["undefined"!==n.component?((0,c.wg)(),(0,c.iD)("div",V$n,[((0,c.wg)(),(0,c.j4)((0,c.LL)(n.component)))])):(0,c.kq)("",!0),(0,c.WI)(s.$slots,"default")]))}),H$n=["aria-selected"],U$n=(0,c.aZ)({name:"CodeGroupItem"}),z$n=(0,c.aZ)({...U$n,props:{title:{type:String,required:!0},active:{type:Boolean,required:!1,default:!1}},setup:n=>(s,e)=>((0,c.wg)(),(0,c.iD)("div",{class:(0,u.C_)(["code-group-item",{"code-group-item__active":n.active}]),"aria-selected":n.active},[(0,c.WI)(s.$slots,"default")],10,H$n))});function q$n(n){Object.keys(t).forEach((s=>{n.component(s,t[s])}))}function $$n(n){n.component("NavbarSearch",(()=>{const s=n.component("Docsearch")||n.component("SearchBox");return s?(0,c.h)(s):null}))}},1084:(n,s,e)=>{"use strict";e.d(s,{Z:()=>u});var a=e(7621),t=e(6252),r=e(2262),o=e(221),p=e(2119);const l=(0,t.aZ)({name:"Valine",props:{options:{type:Object,default:()=>({})}},setup(n){(0,p.yj)();const{options:s}=(0,r.BK)(n),a=async()=>{const{default:n}=await e.e(8388).then(e.t.bind(e,8388,23));new n({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname,...s.value})};return(0,t.bv)((()=>{a()})),{initValine:a}},render:()=>(0,t.h)("div",{class:"reco-valine-wrapper"},(0,t.h)("div",{id:"valine"})),watch:{$route(n,s){s.path!==n.path&&setTimeout((()=>{this.initValine()}),300)}}}),i=(0,t.aZ)({components:{Valine:l},props:{hideComments:{type:Boolean,default:!0}},setup(n){const{solution:s,options:e}=(0,o.x)(),{hideComments:a}=(0,r.BK)(n),p="valine"===s.value?l:"";return()=>p?(0,t.h)(p,{options:e.value,style:"display: "+(a.value?"none":"block")}):null}}),c=(0,t.aZ)({name:"ValineViews",props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},setup(n){const s=(0,a.WF)(),e=(0,p.yj)(),{idVal:o,numStyle:l,flagTitle:i}=(0,r.BK)(n);return()=>{return(0,t.h)("span",{id:(n=o.value||e.path,s.value.base.slice(0,s.value.base.length-1)+n),class:"leancloud-visitors","data-flag-title":i.value},(0,t.h)("a",{class:"leancloud-visitors-count",style:l.value}));var n}}}),u=(0,a.vW)((({app:n})=>{n.component("Comments",(n=>(0,t.h)(i,{...n}))),n.component("ValineViews",(n=>(0,t.h)(c,{...n})))}))},221:(n,s,e)=>{"use strict";e.d(s,{x:()=>r});var a=e(6252),t=e(6333);function r(){const n=(0,t.X6)();return{solution:(0,a.Fl)((()=>n.value.valineConfig?"valine":"")),options:(0,a.Fl)((()=>n.value.valineConfig||{}))}}},2721:(n,s,e)=>{"use strict";e.d(s,{Z:()=>i});var a=e(6252),t=e(7621),r=e(7270);const o={"/categories/Algorithm/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"Algorithm",pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}]},"/categories/CSS/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"CSS",pages:[{data:{key:"v-c8e1aa5a",path:"/blogs/CSS/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],git:{},filePathRelative:"blogs/CSS/文本溢出.md"},key:"v-c8e1aa5a",path:"/blogs/CSS/wenbenyichu.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],content:"\r\n## 文本溢出样式解决方法\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\noverflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）\r\n\r\nwhite-space: nowrap；（设置文字在一行显示，不能换行）\r\n\r\ntext-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\r\n```\r\n\r\n**纯 CSS 实现方案**\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\n-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数,2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\r\n\r\ndisplay: -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\r\n\r\n-webkit-box-orient: vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\r\n\r\noverflow: hidden；（文本溢出限定的宽度就隐藏内容）\r\n\r\ntext-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)\r\n```\r\n\r\n**优点**\r\n\r\n- 响应式截断\r\n- 文本溢出范围才显示省略号，否则不显示省略号\r\n- 省略号显示位置刚好\r\n\r\n  ![123](https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png)\r\n",contentRendered:'<h2 id="文本溢出样式解决方法" tabindex="-1"><a class="header-anchor" href="#文本溢出样式解决方法" aria-hidden="true">#</a> 文本溢出样式解决方法</h2>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文字长度超出限定宽度，则隐藏超出的内容）\n\n<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap；（设置文字在一行显示，不能换行）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>纯 CSS 实现方案</strong></p>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2；（用来限制在一个块元素显示的文本的行数<span class="token punctuation">,</span>2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\n\n<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\n\n<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\n\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文本溢出限定的宽度就隐藏内容）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>优点</strong></p>\n<ul>\n<li>\n<p>响应式截断</p>\n</li>\n<li>\n<p>文本溢出范围才显示省略号，否则不显示省略号</p>\n</li>\n<li>\n<p>省略号显示位置刚好</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png" alt="123"></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/CSS/文本溢出.html",pathLocale:"/",permalink:null,routeMeta:{title:"css文本溢出省略解决方法"},slug:"文本溢出",filePath:"/root/blog/blogs/CSS/文本溢出.md",filePathRelative:"blogs/CSS/文本溢出.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.vue",componentFilePathRelative:"pages/blogs/CSS/文本溢出.html.vue",componentFileChunkName:"v-c8e1aa5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.js",dataFilePathRelative:"pages/blogs/CSS/文本溢出.html.js",dataFileChunkName:"v-c8e1aa5a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/CSS/文本溢出.html",htmlFilePathRelative:"blogs/CSS/文本溢出.html"}]},"/categories/NodeJS/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"NodeJS",pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}]},"/categories/notes/1/":{pageSize:10,total:10,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"notes",pages:[{data:{key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],git:{},filePathRelative:"blogs/notes/Arduino_Libraries.md"},key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],content:'\r\n## How to create a Arduino Libraries\r\n\r\n1. 在`Arduino`目录下的`libraries`中新建一个自命名文件夹\r\n\r\n2. 添加同名`.cpp` `.h`文件\r\n\r\n   ```cpp\r\n   # My_libraries.h\r\n   #ifndef My_libraries\r\n   #include <Arduino.h>\r\n   void Test();\r\n   #endif\r\n   ```\r\n\r\n   ```cpp\r\n   # My_libraries.cpp\r\n   #include <Arduino.h>\r\n   void Test(){\r\n   \tSerial.println("Hello!");\r\n   \tdelay(1000);\r\n   }\r\n   ```\r\n\r\n3. （可选）创建`example`文件夹，再创建`example.ino`\r\n\r\n   ```cpp\r\n   #include <Arduino.h>\r\n   #include "My_libraries.h" // 引入自己的库\r\n\r\n   void setup(){\r\n       Serial.begin(115200);\r\n       Test();\r\n   }\r\n   void loop(){\r\n       Test();\r\n   }\r\n   ```\r\n\r\n**其余自行搜索，仅提供简单示例模板**\r\n',contentRendered:'<h2 id="how-to-create-a-arduino-libraries" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-arduino-libraries" aria-hidden="true">#</a> How to create a Arduino Libraries</h2>\n<ol>\n<li>\n<p>在<code>Arduino</code>目录下的<code>libraries</code>中新建一个自命名文件夹</p>\n</li>\n<li>\n<p>添加同名<code>.cpp</code> <code>.h</code>文件</p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>h</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">My_libraries</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>cpp</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tSerial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n<li>\n<p>（可选）创建<code>example</code>文件夹，再创建<code>example.ino</code></p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"My_libraries.h"</span> <span class="token comment">// 引入自己的库</span></span>\n\n<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ol>\n<p><strong>其余自行搜索，仅提供简单示例模板</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Arduino_Libraries.html",pathLocale:"/",permalink:null,routeMeta:{title:"拥有Arduino自己的库"},slug:"Arduino_Libraries",filePath:"/root/blog/blogs/notes/Arduino_Libraries.md",filePathRelative:"blogs/notes/Arduino_Libraries.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.vue",componentFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.vue",componentFileChunkName:"v-7f956b1c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.js",dataFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.js",dataFileChunkName:"v-7f956b1c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Arduino_Libraries.html",htmlFilePathRelative:"blogs/notes/Arduino_Libraries.html"},{data:{key:"v-9e971e66",path:"/blogs/notes/%E8%B4%A1%E7%8C%AE%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],git:{},filePathRelative:"blogs/notes/贡献项目代码.md"},key:"v-9e971e66",path:"/blogs/notes/gongxianxiangmudaima.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],content:'\r\n## 贡献项目代码\r\n\r\n### Fork\r\n\r\n`Fork`项目\r\n\r\n### Clone\r\n\r\n`git clone`项目\r\n\r\n### Branch\r\n\r\n`git checkout -b 你的branch名`\r\n\r\n### Code\r\n\r\n修改代码\r\n\r\n### git\r\n\r\n`git add .` `git commit -m "这次我修改了XX"` `git push origin 你的branch名`\r\n\r\n### Pull Request\r\n\r\n去自己 fork 的项目提交 pull request\r\n',contentRendered:'<h2 id="贡献项目代码" tabindex="-1"><a class="header-anchor" href="#贡献项目代码" aria-hidden="true">#</a> 贡献项目代码</h2>\n<h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3>\n<p><code>Fork</code>项目</p>\n<h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> Clone</h3>\n<p><code>git clone</code>项目</p>\n<h3 id="branch" tabindex="-1"><a class="header-anchor" href="#branch" aria-hidden="true">#</a> Branch</h3>\n<p><code>git checkout -b 你的branch名</code></p>\n<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3>\n<p>修改代码</p>\n<h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h3>\n<p><code>git add .</code> <code>git commit -m &quot;这次我修改了XX&quot;</code> <code>git push origin 你的branch名</code></p>\n<h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3>\n<p>去自己 fork 的项目提交 pull request</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/贡献项目代码.html",pathLocale:"/",permalink:null,routeMeta:{title:"贡献项目代码姿势"},slug:"贡献项目代码",filePath:"/root/blog/blogs/notes/贡献项目代码.md",filePathRelative:"blogs/notes/贡献项目代码.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.vue",componentFilePathRelative:"pages/blogs/notes/贡献项目代码.html.vue",componentFileChunkName:"v-9e971e66",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.js",dataFilePathRelative:"pages/blogs/notes/贡献项目代码.html.js",dataFileChunkName:"v-9e971e66",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/贡献项目代码.html",htmlFilePathRelative:"blogs/notes/贡献项目代码.html"},{data:{key:"v-516955de",path:"/blogs/notes/ESP8266%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91SDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],git:{},filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md"},key:"v-516955de",path:"/blogs/notes/ESP8266lianjiealiyunSDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],content:"\r\n**ESP8266 连接阿里云**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## ESP8266 连接阿里云\r\n\r\n**最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。**\r\n\r\n**第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置**\r\n\r\n> Arduino IDE 配置\r\n>\r\n> - 首选项 - `附加开发板管理器网址` 输入 `https://arduino.esp8266.com/stable/package_esp8266com_index.json`\r\n> - 工具 - 开发板 - 开发板管理器 - 搜索 `8266` 并安装\r\n\r\n**为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）**\r\n\r\n[Arduino-Aliyun-IoT-SDK](https://github.com/yu-tou/arduino-aliyun-iot-sdk)**，这个是 Arduino 的阿里 IOT 库，官方仓库。**\r\n\r\n**使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。**\r\n\r\n**然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到`PubSubClient.h`修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。**\r\n\r\n[感谢填坑者！](https://www.codenong.com/cs107032096/)\r\n\r\n**最后连接。**\r\n\r\n---\r\n",contentRendered:'<p><strong>ESP8266 连接阿里云</strong></p>\n\x3c!-- more --\x3e\n<h2 id="esp8266-连接阿里云" tabindex="-1"><a class="header-anchor" href="#esp8266-连接阿里云" aria-hidden="true">#</a> ESP8266 连接阿里云</h2>\n<p><strong>最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。</strong></p>\n<p><strong>第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置</strong></p>\n<blockquote>\n<p>Arduino IDE 配置</p>\n<ul>\n<li>首选项 - <code>附加开发板管理器网址</code> 输入 <code>https://arduino.esp8266.com/stable/package_esp8266com_index.json</code></li>\n<li>工具 - 开发板 - 开发板管理器 - 搜索 <code>8266</code> 并安装</li>\n</ul>\n</blockquote>\n<p><strong>为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）</strong></p>\n<p><a href="https://github.com/yu-tou/arduino-aliyun-iot-sdk" target="_blank" rel="noopener noreferrer">Arduino-Aliyun-IoT-SDK<ExternalLinkIcon/></a><strong>，这个是 Arduino 的阿里 IOT 库，官方仓库。</strong></p>\n<p><strong>使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。</strong></p>\n<p><strong>然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到<code>PubSubClient.h</code>修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。</strong></p>\n<p><a href="https://www.codenong.com/cs107032096/" target="_blank" rel="noopener noreferrer">感谢填坑者！<ExternalLinkIcon/></a></p>\n<p><strong>最后连接。</strong></p>\n<hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/ESP8266连接阿里云SDK.html",pathLocale:"/",permalink:null,routeMeta:{title:"ESP8266连接阿里云SDK"},slug:"ESP8266连接阿里云SDK",filePath:"/root/blog/blogs/notes/ESP8266连接阿里云SDK.md",filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFileChunkName:"v-516955de",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFileChunkName:"v-516955de",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/ESP8266连接阿里云SDK.html",htmlFilePathRelative:"blogs/notes/ESP8266连接阿里云SDK.html"},{data:{key:"v-d8264f08",path:"/blogs/notes/Docker%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],git:{},filePathRelative:"blogs/notes/Docker命令合集.md"},key:"v-d8264f08",path:"/blogs/notes/Dockerminglingheji.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],content:'\r\nDocker以及Dockerfile命令合集-持续更新。\r\n\x3c!-- more --\x3e\r\n\r\n## Docker\r\n\r\n**build镜像(有Dockerfile)**\r\n\r\n```shell\r\ndocker build -t myimage --network host .\r\n```\r\n\r\n> myimage是自定义镜像名，可自行更改, -t [命名]\r\n>\r\n> 公司配备一般还要加上 --network host才能访问请求网络\r\n\r\n**实例化一个容器**\r\n\r\n```shell\r\ndocker run -d --name bili --network host --restart unless-stopped -p 9090:9090 -p 8022:22 myimage\r\n```\r\n\r\n> -d 在后台运行容器\r\n>\r\n> -p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p） \r\n>\r\n> myimage 镜像名字\r\n>\r\n> -it  i是保持输入，t是将日志绑定伪终端输出\r\n>\r\n> --restart unless-stopped 这个适用于自动重开容器\r\n\r\n**进入容器内部**\r\n\r\n```shell\r\ndocker exec -it 容器id/容器名字 bash\r\n```\r\n\r\n## 如何优雅的退出容器但是不停止容器运行？\r\n  `ctrl`+`P`+`Q` **切记，如果你有热键绑定，先取消**\r\n  然后`docker ps`就能看到你的容器在运行\r\n\r\n**查看镜像或者容器**\r\n\r\n```\r\n#镜像\r\ndocker images\r\n\r\n#容器(正在运行的)\r\ndocker ps\r\n\r\n#容器(所有)\r\ndocker ps -a\r\n```\r\n\r\n**删除容器**\r\n\r\n```\r\ndocker stop 容器id && docker rm 容器id\r\n```\r\n\r\n> 如果容器实例没有运行，执行后半句,容器id也可以是名字\r\n\r\n**删除镜像**\r\n\r\n```\r\ndocker rmi 镜像id/镜像名字\r\n#如果提示无法删除，有attach其他镜像，则执行下面语句\r\ndocker rmi -f 镜像id/镜像名字\r\n```\r\n\r\n> 先要暂停和删除该镜像下的所有容器才能删除镜像\r\n\r\n**查看容器运行失败日志**\r\n\r\n很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息\r\n\r\n```\r\n# 获取日志地址\r\ndocker inspect --format \'{{.LogPath}}\' 容器id\r\n# 这时会打印一串地址，复制\r\n# 通过cat命令查看日志\r\ncat 刚刚复制的地址\r\n\r\n```\r\n\r\n**查看容器运行时日志**\r\n\r\n```\r\n# 适用日志不多，因为是把全部日志输出(打印实时log)\r\ndocker logs -f 容器名字\r\n\r\n# 输出最近10条日志\r\ndocker logs --tail 10 容器名字\r\n\r\n# 筛选log(查找“error”)\r\ndocker logs | grep error\r\n```\r\n\r\n**如果进入了虚拟终端`-it`，使用`ctrl`+`P` `Q`(一起按) 达成退出但不停止容器运行**\r\n\r\n## Dockerfile\r\n\r\n**Dockerfile：一个文件命名为Dockerfile，无后缀**\r\n\r\n```dockerfile\r\nFROM python\r\n# FROM 指定基础镜像\r\n\r\nCOPY ./app /app\r\n# COPY [文件1/文件夹1] [路径]\r\n# 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径\r\n\r\nWORKDIR /app\r\n# 指定工作目录\r\n\r\nRUN apt-get update -y && \\\r\n\tapt-get install -y vim && \\\r\n\tpip3 install -r requirements.txt\r\n# RUN 执行命令，务必命令使用&&连起来(\\：意思换行)\r\n\r\nCMD ["python3","main.py"]\r\n# CMD 容器启动时执行的命令\r\n\r\nEXPOSE 9090\r\n# 声明暴露指定端口，并不是真的暴露，帮助理解\r\n```\r\n\r\n## Docker hub\r\n\r\n现有一个`docker hub`账号和新建一个公开仓库\r\n\r\n```shell\r\n# 1\r\ndocker tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\r\n\r\n# 2 \r\ndocker login\r\n\r\n# 3 \r\ndocker push 目标仓库名字/用户名:tag\r\n```\r\n\r\n',contentRendered:'<p>Docker以及Dockerfile命令合集-持续更新。</p>\n\x3c!-- more --\x3e\n<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>\n<p><strong>build镜像(有Dockerfile)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> build -t myimage --network <span class="token function">host</span> <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>myimage是自定义镜像名，可自行更改, -t [命名]</p>\n<p>公司配备一般还要加上 --network host才能访问请求网络</p>\n</blockquote>\n<p><strong>实例化一个容器</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name bili --network <span class="token function">host</span> --restart unless-stopped -p <span class="token number">9090</span>:9090 -p <span class="token number">8022</span>:22 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>-d 在后台运行容器</p>\n<p>-p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p）</p>\n<p>myimage 镜像名字</p>\n<p>-it  i是保持输入，t是将日志绑定伪终端输出</p>\n<p>--restart unless-stopped 这个适用于自动重开容器</p>\n</blockquote>\n<p><strong>进入容器内部</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it 容器id/容器名字 <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何优雅的退出容器但是不停止容器运行" tabindex="-1"><a class="header-anchor" href="#如何优雅的退出容器但是不停止容器运行" aria-hidden="true">#</a> 如何优雅的退出容器但是不停止容器运行？</h2>\n<p><code>ctrl</code>+<code>P</code>+<code>Q</code> <strong>切记，如果你有热键绑定，先取消</strong>\n然后<code>docker ps</code>就能看到你的容器在运行</p>\n<p><strong>查看镜像或者容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>#镜像\ndocker images\n\n#容器(正在运行的)\ndocker ps\n\n#容器(所有)\ndocker ps -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>删除容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker stop 容器id &amp;&amp; docker rm 容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>如果容器实例没有运行，执行后半句,容器id也可以是名字</p>\n</blockquote>\n<p><strong>删除镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rmi 镜像id/镜像名字\n#如果提示无法删除，有attach其他镜像，则执行下面语句\ndocker rmi -f 镜像id/镜像名字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>先要暂停和删除该镜像下的所有容器才能删除镜像</p>\n</blockquote>\n<p><strong>查看容器运行失败日志</strong></p>\n<p>很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 获取日志地址\ndocker inspect --format \'{{.LogPath}}\' 容器id\n# 这时会打印一串地址，复制\n# 通过cat命令查看日志\ncat 刚刚复制的地址\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>查看容器运行时日志</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 适用日志不多，因为是把全部日志输出(打印实时log)\ndocker logs -f 容器名字\n\n# 输出最近10条日志\ndocker logs --tail 10 容器名字\n\n# 筛选log(查找“error”)\ndocker logs | grep error\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>如果进入了虚拟终端<code>-it</code>，使用<code>ctrl</code>+<code>P</code> <code>Q</code>(一起按) 达成退出但不停止容器运行</strong></p>\n<h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2>\n<p><strong>Dockerfile：一个文件命名为Dockerfile，无后缀</strong></p>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python</span>\n<span class="token comment"># FROM 指定基础镜像</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./app /app</span>\n<span class="token comment"># COPY [文件1/文件夹1] [路径]</span>\n<span class="token comment"># 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径</span>\n\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>\n<span class="token comment"># 指定工作目录</span>\n\n<span class="token instruction"><span class="token keyword">RUN</span> apt-get update -y &amp;&amp; <span class="token operator">\\</span>\n\tapt-get install -y vim &amp;&amp; <span class="token operator">\\</span>\n\tpip3 install -r requirements.txt</span>\n<span class="token comment"># RUN 执行命令，务必命令使用&amp;&amp;连起来(\\：意思换行)</span>\n\n<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"python3"</span>,<span class="token string">"main.py"</span>]</span>\n<span class="token comment"># CMD 容器启动时执行的命令</span>\n\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9090</span>\n<span class="token comment"># 声明暴露指定端口，并不是真的暴露，帮助理解</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker hub</h2>\n<p>现有一个<code>docker hub</code>账号和新建一个公开仓库</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 1</span>\n<span class="token function">docker</span> tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\n\n<span class="token comment"># 2 </span>\n<span class="token function">docker</span> login\n\n<span class="token comment"># 3 </span>\n<span class="token function">docker</span> push 目标仓库名字/用户名:tag\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Docker命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker命令合集"},slug:"Docker命令合集",filePath:"/root/blog/blogs/notes/Docker命令合集.md",filePathRelative:"blogs/notes/Docker命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/Docker命令合集.html.vue",componentFileChunkName:"v-d8264f08",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/Docker命令合集.html.js",dataFileChunkName:"v-d8264f08",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Docker命令合集.html",htmlFilePathRelative:"blogs/notes/Docker命令合集.html"},{data:{key:"v-60868ce6",path:"/blogs/notes/gitignore%E6%95%99%E5%AD%A6.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/notes/gitignore教学.md"},key:"v-60868ce6",path:"/blogs/notes/gitignorejiaoxue.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],content:'\r\n**.gitignore是一个好东西**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n**.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件**\r\n\r\n**Q：我写了规则在里面，怎么上传的时候没有生效**\r\n\r\n**A：git缓存需要清除**\r\n\r\n```sh\r\n# solution\r\ngit rm -r --cached .\r\ngit add .\r\ngit commit -m "update .gitignore"\r\n```\r\n\r\n**Pycharm的.gitignore**\r\n\r\n```sh\r\n# Created by .ignore support plugin (hsz.mobi)\r\n### Python template\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\n# 如果有前端打包的项目这里要去掉 dist/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n### VirtualEnv template\r\n# Virtualenv\r\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\r\n.Python\r\n[Bb]in\r\n[Ii]nclude\r\n[Ll]ib\r\n[Ll]ib64\r\n[Ll]ocal\r\n[Ss]cripts\r\npyvenv.cfg\r\n.venv\r\npip-selfcheck.json\r\n### JetBrains template\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff:\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/dictionaries\r\n.idea/vcs.xml\r\n.idea/jsLibraryMappings.xml\r\n\r\n# Sensitive or high-churn files:\r\n.idea/dataSources.ids\r\n.idea/dataSources.xml\r\n.idea/dataSources.local.xml\r\n.idea/sqlDataSources.xml\r\n.idea/dynamic.xml\r\n.idea/uiDesigner.xml\r\n\r\n# Gradle:\r\n.idea/gradle.xml\r\n.idea/libraries\r\n\r\n# Mongo Explorer plugin:\r\n.idea/mongoSettings.xml\r\n\r\n.idea/\r\n\r\n## File-based project format:\r\n*.iws\r\n\r\n## Plugin-specific files:\r\n\r\n# IntelliJ\r\n/out/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n```\r\n\r\n',contentRendered:'<p><strong>.gitignore是一个好东西</strong></p>\n\x3c!-- more --\x3e\n<p><strong>.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件</strong></p>\n<p><strong>Q：我写了规则在里面，怎么上传的时候没有生效</strong></p>\n<p><strong>A：git缓存需要清除</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># solution</span>\n<span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">"update .gitignore"</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Pycharm的.gitignore</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># Created by .ignore support plugin (hsz.mobi)</span>\n<span class="token comment">### Python template</span>\n<span class="token comment"># Byte-compiled / optimized / DLL files</span>\n__pycache__/\n*.py<span class="token punctuation">[</span>cod<span class="token punctuation">]</span>\n*<span class="token variable">$py</span>.class\n\n<span class="token comment"># C extensions</span>\n*.so\n\n<span class="token comment"># Distribution / packaging</span>\n.Python\nenv/\nbuild/\ndevelop-eggs/\n<span class="token comment"># 如果有前端打包的项目这里要去掉 dist/</span>\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n<span class="token comment"># PyInstaller</span>\n<span class="token comment">#  Usually these files are written by a python script from a template</span>\n<span class="token comment">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span>\n*.manifest\n*.spec\n\n<span class="token comment"># Installer logs</span>\npip-log.txt\npip-delete-this-directory.txt\n\n<span class="token comment"># Unit test / coverage reports</span>\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n<span class="token comment"># Translations</span>\n*.mo\n*.pot\n\n<span class="token comment"># Django stuff:</span>\n*.log\nlocal_settings.py\n\n<span class="token comment"># Flask stuff:</span>\ninstance/\n.webassets-cache\n\n<span class="token comment"># Scrapy stuff:</span>\n.scrapy\n\n<span class="token comment"># Sphinx documentation</span>\ndocs/_build/\n\n<span class="token comment"># PyBuilder</span>\ntarget/\n\n<span class="token comment"># IPython Notebook</span>\n.ipynb_checkpoints\n\n<span class="token comment"># pyenv</span>\n.python-version\n\n<span class="token comment"># celery beat schedule file</span>\ncelerybeat-schedule\n\n<span class="token comment"># dotenv</span>\n.env\n\n<span class="token comment"># virtualenv</span>\nvenv/\nENV/\n\n<span class="token comment"># Spyder project settings</span>\n.spyderproject\n\n<span class="token comment"># Rope project settings</span>\n.ropeproject\n<span class="token comment">### VirtualEnv template</span>\n<span class="token comment"># Virtualenv</span>\n<span class="token comment"># http://iamzed.com/2009/05/07/a-primer-on-virtualenv/</span>\n.Python\n<span class="token punctuation">[</span>Bb<span class="token punctuation">]</span>in\n<span class="token punctuation">[</span>Ii<span class="token punctuation">]</span>nclude\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib64\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ocal\n<span class="token punctuation">[</span>Ss<span class="token punctuation">]</span>cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n<span class="token comment">### JetBrains template</span>\n<span class="token comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm</span>\n<span class="token comment"># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span>\n\n<span class="token comment"># User-specific stuff:</span>\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n<span class="token comment"># Sensitive or high-churn files:</span>\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n<span class="token comment"># Gradle:</span>\n.idea/gradle.xml\n.idea/libraries\n\n<span class="token comment"># Mongo Explorer plugin:</span>\n.idea/mongoSettings.xml\n\n.idea/\n\n<span class="token comment">## File-based project format:</span>\n*.iws\n\n<span class="token comment">## Plugin-specific files:</span>\n\n<span class="token comment"># IntelliJ</span>\n/out/\n\n<span class="token comment"># mpeltonen/sbt-idea plugin</span>\n.idea_modules/\n\n<span class="token comment"># JIRA plugin</span>\natlassian-ide-plugin.xml\n\n<span class="token comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span>\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/gitignore教学.html",pathLocale:"/",permalink:null,routeMeta:{title:"gitignore教学"},slug:"gitignore教学",filePath:"/root/blog/blogs/notes/gitignore教学.md",filePathRelative:"blogs/notes/gitignore教学.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.vue",componentFilePathRelative:"pages/blogs/notes/gitignore教学.html.vue",componentFileChunkName:"v-60868ce6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.js",dataFilePathRelative:"pages/blogs/notes/gitignore教学.html.js",dataFileChunkName:"v-60868ce6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/gitignore教学.html",htmlFilePathRelative:"blogs/notes/gitignore教学.html"},{data:{key:"v-3cc188f4",path:"/blogs/notes/pipenv%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],git:{},filePathRelative:"blogs/notes/pipenv命令合集.md"},key:"v-3cc188f4",path:"/blogs/notes/pipenvminglingheji.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],content:"\r\npipenv命令合集。\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## pipenv指南\r\n\r\n### 特点\r\n\r\n- 不需要再维护requirements.txt，用pipfile和pipfile.lock\r\n- 兼容多个python版本\r\n\r\n### 安装\r\n\r\n```sh\r\npip install pipenv\r\n```\r\n\r\n### 常用命令\r\n\r\n```\r\n# 安装包\r\npipenv install\r\n# pipenv install flask\r\n\r\n# 激活当前项目的虚拟环境\r\npipenv shell\r\n\r\n# 安装开发依赖包\r\npipenv install pytest --dev\r\n\r\n# 图形显示包依赖关系\r\npipenv graph\r\n\r\n# 生成lockfile\r\npipenv lock\r\n\r\n# 删除所有的安装包\r\npipenv uninstall --all\r\n```\r\n\r\n",contentRendered:'<p>pipenv命令合集。</p>\n\x3c!-- more --\x3e\n<h2 id="pipenv指南" tabindex="-1"><a class="header-anchor" href="#pipenv指南" aria-hidden="true">#</a> pipenv指南</h2>\n<h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3>\n<ul>\n<li>不需要再维护requirements.txt，用pipfile和pipfile.lock</li>\n<li>兼容多个python版本</li>\n</ul>\n<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>pip <span class="token function">install</span> pipenv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 安装包\npipenv install\n# pipenv install flask\n\n# 激活当前项目的虚拟环境\npipenv shell\n\n# 安装开发依赖包\npipenv install pytest --dev\n\n# 图形显示包依赖关系\npipenv graph\n\n# 生成lockfile\npipenv lock\n\n# 删除所有的安装包\npipenv uninstall --all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/pipenv命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"pipenv命令合集"},slug:"pipenv命令合集",filePath:"/root/blog/blogs/notes/pipenv命令合集.md",filePathRelative:"blogs/notes/pipenv命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.vue",componentFileChunkName:"v-3cc188f4",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.js",dataFileChunkName:"v-3cc188f4",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/pipenv命令合集.html",htmlFilePathRelative:"blogs/notes/pipenv命令合集.html"},{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"},{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-54860d63",path:"/blogs/notes/clash%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],git:{},filePathRelative:"blogs/notes/clash使用技巧.md"},key:"v-54860d63",path:"/blogs/notes/clashshiyongjiqiao.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],content:'\r\n**clash基本操作指南，（~~基于有机场的~~）阅读本文1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## install\r\n\r\n[官方下载连接](https://github.com/Fndroid/clash_for_windows_pkg/releases)\r\n\r\n**下载好后，打开clash**\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\r\n\r\n**建议下载你~~机场~~的profile，然后import导入，点一下profile启用**\r\n\r\n## Tips\r\n\r\n![profile](https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png)\r\n\r\n**国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode->rule**\r\n\r\n**或者**\r\n\r\n![open](https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png)\r\n\r\n**我不建议把其他流量设置为国外流量，我会解释为什么这样做**\r\n\r\n**[谷歌商店搜索安装switchyomega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon)**\r\n\r\n**比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png)\r\n\r\n**回到我们clash的Profiles界面，选择下图这个**\r\n\r\n![profiles](https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png)\r\n\r\n- 选择添加ADD\r\n\r\n  ![add](https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png)\r\n\r\n- content 写入`hupu.com`,  type选择 `DOMAIN-SUFFIX` , Proxy选择 `Direct`\r\n\r\n**当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择`Direct`，如果遇到别的网站需要代理的，选择`国外流量`即可**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png)\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理**\r\n\r\n## 最后\r\n\r\n**为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的**',contentRendered:'<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>\n<p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">官方下载连接<ExternalLinkIcon/></a></p>\n<p><strong>下载好后，打开clash</strong></p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\n<p><strong>建议下载你<s>机场</s>的profile，然后import导入，点一下profile启用</strong></p>\n<h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png" alt="profile"></p>\n<p><strong>国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode-&gt;rule</strong></p>\n<p><strong>或者</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png" alt="open"></p>\n<p><strong>我不建议把其他流量设置为国外流量，我会解释为什么这样做</strong></p>\n<p><strong><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">谷歌商店搜索安装switchyomega<ExternalLinkIcon/></a></strong></p>\n<p><strong>比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png" alt="hupu"></p>\n<p><strong>回到我们clash的Profiles界面，选择下图这个</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png" alt="profiles"></p>\n<ul>\n<li>\n<p>选择添加ADD</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png" alt="add"></p>\n</li>\n<li>\n<p>content 写入<code>hupu.com</code>,  type选择 <code>DOMAIN-SUFFIX</code> , Proxy选择 <code>Direct</code></p>\n</li>\n</ul>\n<p><strong>当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择<code>Direct</code>，如果遇到别的网站需要代理的，选择<code>国外流量</code>即可</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png" alt="hupu"></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理</strong></p>\n<h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2>\n<p><strong>为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/clash使用技巧.html",pathLocale:"/",permalink:null,routeMeta:{title:"clash使用技巧"},slug:"clash使用技巧",filePath:"/root/blog/blogs/notes/clash使用技巧.md",filePathRelative:"blogs/notes/clash使用技巧.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.vue",componentFilePathRelative:"pages/blogs/notes/clash使用技巧.html.vue",componentFileChunkName:"v-54860d63",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.js",dataFilePathRelative:"pages/blogs/notes/clash使用技巧.html.js",dataFileChunkName:"v-54860d63",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/clash使用技巧.html",htmlFilePathRelative:"blogs/notes/clash使用技巧.html"},{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}]},"/categories/tech/1/":{pageSize:10,total:14,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"tech",pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-fb3507ea",path:"/blogs/tech/%E8%90%8C%E6%96%B0nginx%E9%85%8D%E7%BD%AE.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],git:{},filePathRelative:"blogs/tech/萌新nginx配置.md"},key:"v-fb3507ea",path:"/blogs/tech/mengxinnginxpeizhi.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],content:'\r\n**2分钟简单学习nginx配置。**\r\n\x3c!-- more --\x3e\r\n\r\n### 配置\r\n\r\n简单直接跑起来\r\n\r\n```sh\r\nserver {\r\n\t# 监听8080端口,简单体验的话，写不写无所谓\r\n    listen 8080;\r\n    # 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.\r\n    server_name yourdomain.com;\r\n    # 配置静态文件,/表示根目录\r\n    location / {\r\n        root            /usr/share/nginx/html;\r\n        index           index.html;\r\n        try_files       $uri $uri/ /index.html;\r\n\r\n }\r\n\t# 访问yourdomian.com/upload 会转发域名到baidu.com\r\n\t# 剩下是配置请求头\r\n    #location /upload {\r\n    #    proxy_pass http://baidu.com;\r\n    #    add_header Access-Control-Allow-Origin *;\r\n    #    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";\r\n    #    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";\r\n    #    add_header Access-Control-Allow-Credentials true;\r\n#}\r\n}\r\n```\r\n\r\n',contentRendered:'<p><strong>2分钟简单学习nginx配置。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3>\n<p>简单直接跑起来</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>server <span class="token punctuation">{</span>\n\t<span class="token comment"># 监听8080端口,简单体验的话，写不写无所谓</span>\n    listen <span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token comment"># 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.</span>\n    server_name yourdomain.com<span class="token punctuation">;</span>\n    <span class="token comment"># 配置静态文件,/表示根目录</span>\n    location / <span class="token punctuation">{</span>\n        root            /usr/share/nginx/html<span class="token punctuation">;</span>\n        index           index.html<span class="token punctuation">;</span>\n        try_files       <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>\n\n <span class="token punctuation">}</span>\n\t<span class="token comment"># 访问yourdomian.com/upload 会转发域名到baidu.com</span>\n\t<span class="token comment"># 剩下是配置请求头</span>\n    <span class="token comment">#location /upload {</span>\n    <span class="token comment">#    proxy_pass http://baidu.com;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Origin *;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Credentials true;</span>\n<span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/萌新nginx配置.html",pathLocale:"/",permalink:null,routeMeta:{title:"萌新nginx配置"},slug:"萌新nginx配置",filePath:"/root/blog/blogs/tech/萌新nginx配置.md",filePathRelative:"blogs/tech/萌新nginx配置.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.vue",componentFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.vue",componentFileChunkName:"v-fb3507ea",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.js",dataFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.js",dataFileChunkName:"v-fb3507ea",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/萌新nginx配置.html",htmlFilePathRelative:"blogs/tech/萌新nginx配置.html"},{data:{key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],git:{},filePathRelative:"blogs/tech/Eslint.md"},key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],content:"## ESlint\r\n\r\n**ESlint有很多种安装方式，不过我建议大家是采用`npm`方式来熟悉**\r\n\r\n**当然不止ESlint这一种静态分析工具，各有所爱罢了**\r\n\r\n### **配置**\r\n\r\nESlint不是项目的必要依赖项，**仅仅是开发环境需要用到.**\r\n\r\n```shell\r\nnpm install eslint --save-dev\r\n\r\n// 安装成功后，初始化默认的ESlint\r\nnode_modules/.bin/eslint --init\r\n```\r\n\r\n该配置会保存到`.eslintrc.js`文件\r\n\r\n```javascript\r\nmodule.exports = {\r\n    'env': {\r\n        'commonjs': true,\r\n        'es2021': true,\r\n        'node': true\r\n    },\r\n    'extends': 'eslint:recommended',\r\n    'parserOptions': {\r\n        'ecmaVersion': 12\r\n    },\r\n    'rules': {\r\n        'indent': [\r\n            'error',\r\n            4\r\n        ],\r\n        'linebreak-style': [\r\n            'error',\r\n            'unix'\r\n        ],\r\n        'quotes': [\r\n            'error',\r\n            'single'\r\n        ],\r\n        'semi': [\r\n            'error',\r\n            'never'\r\n        ],\r\n        'eqeqeq': 'error',\r\n        'no-trailing-spaces': 'error',\r\n        'object-curly-spacing': [\r\n            'error', 'always'\r\n        ],\r\n        'arrow-spacing': [\r\n            'error', { 'before': true, 'after': true }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n**更改缩进级别为两个空格**\r\n\r\n```json\r\n\"indent\": [\r\n    \"error\",\r\n    2\r\n],\r\n```\r\n\r\n**使用`ESlint`检查可以用以下命令或者配置一个`npm`脚本**\r\n\r\n```\r\nnode_modules/.bin/eslint index.js\r\n```\r\n\r\n脚本\r\n\r\n```json\r\n{\r\n  // ...\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    // ...\r\n    \"lint\": \"eslint .\"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n`npm run build`会检查项目中的每一个文件，**我们并不希望一些文件被检查**\r\n\r\n**根目录新建一个`.eslintignore`文件**\r\n\r\n```shell\r\nbuild\r\n// 或者不需要检查的\r\n```\r\n\r\n**我们配置好之后自然是完善一套规则**\r\n\r\n**增加`eqeqeq`规则，除了三个相等号之外，相等要被检查。规则在`rules`字段下添加**\r\n\r\n```json\r\n{\r\n  // ...\r\n  'rules': {\r\n    // ...\r\n   'eqeqeq': 'error',\r\n    // 比如避免不必要的拖尾空格，大括号之间有一个空格等等\r\n      'no-trailing-spaces': 'error',\r\n    'object-curly-spacing': [\r\n        'error', 'always'\r\n    ],\r\n    'arrow-spacing': [\r\n        'error', { 'before': true, 'after': true }\r\n    ]\r\n  },\r\n    // 警告不出现在控制台。\r\n    'no-console': 0\r\n}\r\n```\r\n\r\n**还有其他的流行规则风范比如[Airbnb](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb)**\r\n\r\n",contentRendered:'<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESlint</h2>\n<p><strong>ESlint有很多种安装方式，不过我建议大家是采用<code>npm</code>方式来熟悉</strong></p>\n<p><strong>当然不止ESlint这一种静态分析工具，各有所爱罢了</strong></p>\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <strong>配置</strong></h3>\n<p>ESlint不是项目的必要依赖项，<strong>仅仅是开发环境需要用到.</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev\n\n// 安装成功后，初始化默认的ESlint\nnode_modules/.bin/eslint --init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该配置会保存到<code>.eslintrc.js</code>文件</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'env\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'commonjs\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'es2021\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'node\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'extends\'</span><span class="token operator">:</span> <span class="token string">\'eslint:recommended\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'parserOptions\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'ecmaVersion\'</span><span class="token operator">:</span> <span class="token number">12</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'rules\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'indent\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token number">4</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'linebreak-style\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'unix\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'quotes\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'single\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'semi\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'never\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'eqeqeq\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'no-trailing-spaces\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'object-curly-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'always\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'arrow-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">\'before\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">\'after\'</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>更改缩进级别为两个空格</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"error"</span><span class="token punctuation">,</span>\n    <span class="token number">2</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用<code>ESlint</code>检查可以用以下命令或者配置一个<code>npm</code>脚本</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>node_modules/.bin/eslint index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>脚本</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node index.js"</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint ."</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>npm run build</code>会检查项目中的每一个文件，<strong>我们并不希望一些文件被检查</strong></p>\n<p><strong>根目录新建一个<code>.eslintignore</code>文件</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>build\n// 或者不需要检查的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>我们配置好之后自然是完善一套规则</strong></p>\n<p><strong>增加<code>eqeqeq</code>规则，除了三个相等号之外，相等要被检查。规则在<code>rules</code>字段下添加</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  \'rules\'<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n   \'eqeqeq\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    <span class="token comment">// 比如避免不必要的拖尾空格，大括号之间有一个空格等等</span>\n      \'no-trailing-spaces\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    \'object-curly-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> \'always\'\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \'arrow-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> <span class="token punctuation">{</span> \'before\'<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> \'after\'<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 警告不出现在控制台。</span>\n    \'no-console\'<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>还有其他的流行规则风范比如<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb" target="_blank" rel="noopener noreferrer">Airbnb<ExternalLinkIcon/></a></strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Eslint.html",pathLocale:"/",permalink:null,routeMeta:{title:"Eslint项目配置"},slug:"Eslint",filePath:"/root/blog/blogs/tech/Eslint.md",filePathRelative:"blogs/tech/Eslint.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.vue",componentFilePathRelative:"pages/blogs/tech/Eslint.html.vue",componentFileChunkName:"v-21adab26",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.js",dataFilePathRelative:"pages/blogs/tech/Eslint.html.js",dataFileChunkName:"v-21adab26",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Eslint.html",htmlFilePathRelative:"blogs/tech/Eslint.html"},{data:{key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],git:{},filePathRelative:"blogs/tech/npm.md"},key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],content:'## NodeJS\r\n\r\n几乎所有的JavaScript项目都是使用node包管理器定义的，也就是`npm`\r\n\r\n使用`npm`的一个明确说明是位于项目根目录的`package.json`\r\n\r\n```shell\r\nnpm install axios\r\nnpm install json-server --save-dev\r\n```\r\n\r\n**参数间有差别，`axios`被安装为应用的运行时依赖项`--save`,程序本身需要库的存在，另一个`json-server`是作为开发依赖项`--save-dev`,程序本身不需要它。**\r\n\r\n### Init\r\n\r\n```shell\r\nnpm init\r\n// 定义\r\n{\r\n  // ...\r\n  "scripts": {\r\n    "start": "node index.js",\r\n    "test": "echo \\"Error: no test specified\\" && exit 1"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n> 生成`package.json`文件\r\n\r\n```shell\r\n"express": "^4.17.1"\r\n// ^:安装版本至少为4.17.1\r\n```\r\n\r\n### nodemon\r\n\r\n```\r\nnpm install --save-dev nodemon\r\n```\r\n\r\n**热加载,同时在`package.json`中添加一个`dev`命令`nodemon xxx.js`**\r\n\r\n`npm run dev`\r\n\r\n',contentRendered:'<h2 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> NodeJS</h2>\n<p>几乎所有的JavaScript项目都是使用node包管理器定义的，也就是<code>npm</code></p>\n<p>使用<code>npm</code>的一个明确说明是位于项目根目录的<code>package.json</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios\n<span class="token function">npm</span> <span class="token function">install</span> json-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>参数间有差别，<code>axios</code>被安装为应用的运行时依赖项<code>--save</code>,程序本身需要库的存在，另一个<code>json-server</code>是作为开发依赖项<code>--save-dev</code>,程序本身不需要它。</strong></p>\n<h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> Init</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> init\n// 定义\n<span class="token punctuation">{</span>\n  // <span class="token punctuation">..</span>.\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"start"</span><span class="token builtin class-name">:</span> <span class="token string">"node index.js"</span>,\n    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\\&quot;">\\"</span>Error: no test specified<span class="token entity" title="\\&quot;">\\"</span> &amp;&amp; exit 1"</span>\n  <span class="token punctuation">}</span>,\n  // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote>\n<p>生成<code>package.json</code>文件</p>\n</blockquote>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">"express"</span><span class="token builtin class-name">:</span> <span class="token string">"^4.17.1"</span>\n// ^:安装版本至少为4.17.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm install --save-dev nodemon\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>热加载,同时在<code>package.json</code>中添加一个<code>dev</code>命令<code>nodemon xxx.js</code></strong></p>\n<p><code>npm run dev</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/npm.html",pathLocale:"/",permalink:null,routeMeta:{title:"npm基础"},slug:"npm",filePath:"/root/blog/blogs/tech/npm.md",filePathRelative:"blogs/tech/npm.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.vue",componentFilePathRelative:"pages/blogs/tech/npm.html.vue",componentFileChunkName:"v-008bc010",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.js",dataFilePathRelative:"pages/blogs/tech/npm.html.js",dataFileChunkName:"v-008bc010",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/npm.html",htmlFilePathRelative:"blogs/tech/npm.html"},{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"},{data:{key:"v-7f7426c5",path:"/blogs/tech/%E6%8D%A2%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%8B%E5%A5%BD%E7%9A%84%E5%AD%97%E4%BD%93.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],git:{},filePathRelative:"blogs/tech/换一个程序员友好的字体.md"},key:"v-7f7426c5",path:"/blogs/tech/huanyigechengxuyuanyouhaodeziti.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],content:"\r\n**介绍一个对程序员比较舒服的字体**\r\n\r\n## 使用\r\n\r\n先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装\r\n\r\n然后开启IDE（比如VS CODE）调到设置或者`ctrl + ,`快捷打开设置 \r\n\r\n![image-20210328231737883](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png)\r\n\r\n**添加完没有生效，请重新打开IDE**\r\n\r\n## JetBrains Mono \r\n\r\n**一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的**\r\n\r\n**当然对于一些视力或者别的爱好~~粗~~的人选择Extra Bold**\r\n\r\n![image-20210328231517174](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png)\r\n\r\n## Cascadia Code\r\n\r\n具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点",contentRendered:'<p><strong>介绍一个对程序员比较舒服的字体</strong></p>\n<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装</p>\n<p>然后开启IDE（比如VS CODE）调到设置或者<code>ctrl + ,</code>快捷打开设置</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png" alt="image-20210328231737883"></p>\n<p><strong>添加完没有生效，请重新打开IDE</strong></p>\n<h2 id="jetbrains-mono" tabindex="-1"><a class="header-anchor" href="#jetbrains-mono" aria-hidden="true">#</a> JetBrains Mono</h2>\n<p><strong>一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的</strong></p>\n<p><strong>当然对于一些视力或者别的爱好<s>粗</s>的人选择Extra Bold</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png" alt="image-20210328231517174"></p>\n<h2 id="cascadia-code" tabindex="-1"><a class="header-anchor" href="#cascadia-code" aria-hidden="true">#</a> Cascadia Code</h2>\n<p>具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/换一个程序员友好的字体.html",pathLocale:"/",permalink:null,routeMeta:{title:"对程序员友好的字体"},slug:"换一个程序员友好的字体",filePath:"/root/blog/blogs/tech/换一个程序员友好的字体.md",filePathRelative:"blogs/tech/换一个程序员友好的字体.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFileChunkName:"v-7f7426c5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.js",dataFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.js",dataFileChunkName:"v-7f7426c5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/换一个程序员友好的字体.html",htmlFilePathRelative:"blogs/tech/换一个程序员友好的字体.html"},{data:{key:"v-08e31ac5",path:"/blogs/tech/%E7%BA%A2%E7%B1%B3AC2100%E5%88%B7%E6%9C%BA.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],git:{},filePathRelative:"blogs/tech/红米AC2100刷机.md"},key:"v-08e31ac5",path:"/blogs/tech/hongmiAC2100shuaji.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],content:"\r\n**从恩山那里学习总结过来的，单刀直入。[感谢大大](http://openwrt.ink:88/archives/s-breed)**\r\n\r\n\r\n\r\n## 前期准备\r\n\r\n[红米AC2100-2.0.7固件](http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin)\r\n\r\n[Padavan固件-下载redmi211.trx](http://openwrt.ink:8666/Padavan/)\r\n\r\nXShell（自行下载）\r\n\r\n> **如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代**\r\n\r\n**红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了**\r\n\r\n**本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪**\r\n\r\n\r\n\r\n## 开始\r\n\r\n综合步骤如果看不懂可以参考[此视频](https://www.bilibili.com/video/BV1Zf4y1v74o)\r\n\r\n**首先登录进[路由器管理地址](192.168.31.1)**\r\n\r\n**点系统状态，手动升级，升级红米ac2100-2.0.7固件**\r\n\r\n**等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址**\r\n\r\n**此时地址会变为**`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/web/home#router`\r\n\r\n复制下来`<STOK>`\r\n\r\n替换stok`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/api/misystem/set_config_iotdev?bssid=Xiaomi&user_id=longdike&ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B` \r\n\r\n**然后将网址复制下来粘贴网页打开，会显示`\"code\":0`代表成功**\r\n\r\n打开xshell，连接`192.168.31.1` 用户名为`root` 密码`admin`\r\n\r\n**直接输入一下命令刷入Breed，并等待20s**\r\n\r\n```\r\ncd /tmp && wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n\r\n或者下面命令：\r\ncd /tmp && wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n```\r\n\r\n**正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）**\r\n\r\n**路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入`192.168.1.1`进入breed**\r\n\r\n**找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存**\r\n\r\n**点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面**\r\n\r\n**开启5G频道->160HZ，冲冲冲**\r\n\r\n",contentRendered:'<p><strong>从恩山那里学习总结过来的，单刀直入。<a href="http://openwrt.ink:88/archives/s-breed" target="_blank" rel="noopener noreferrer">感谢大大<ExternalLinkIcon/></a></strong></p>\n<h2 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h2>\n<p><a href="http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin" target="_blank" rel="noopener noreferrer">红米AC2100-2.0.7固件<ExternalLinkIcon/></a></p>\n<p><a href="http://openwrt.ink:8666/Padavan/" target="_blank" rel="noopener noreferrer">Padavan固件-下载redmi211.trx<ExternalLinkIcon/></a></p>\n<p>XShell（自行下载）</p>\n<blockquote>\n<p><strong>如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代</strong></p>\n</blockquote>\n<p><strong>红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了</strong></p>\n<p><strong>本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪</strong></p>\n<h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2>\n<p>综合步骤如果看不懂可以参考<a href="https://www.bilibili.com/video/BV1Zf4y1v74o" target="_blank" rel="noopener noreferrer">此视频<ExternalLinkIcon/></a></p>\n<p><strong>首先登录进<a href="192.168.31.1">路由器管理地址</a></strong></p>\n<p><strong>点系统状态，手动升级，升级红米ac2100-2.0.7固件</strong></p>\n<p><strong>等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址</strong></p>\n<p><strong>此时地址会变为</strong><code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</code></p>\n<p>复制下来<code>&lt;STOK&gt;</code></p>\n<p>替换stok<code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20\'s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg\'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</code></p>\n<p><strong>然后将网址复制下来粘贴网页打开，会显示<code>&quot;code&quot;:0</code>代表成功</strong></p>\n<p>打开xshell，连接<code>192.168.31.1</code> 用户名为<code>root</code> 密码<code>admin</code></p>\n<p><strong>直接输入一下命令刷入Breed，并等待20s</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n\n或者下面命令：\ncd /tmp &amp;&amp; wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）</strong></p>\n<p><strong>路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入<code>192.168.1.1</code>进入breed</strong></p>\n<p><strong>找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存</strong></p>\n<p><strong>点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面</strong></p>\n<p><strong>开启5G频道-&gt;160HZ，冲冲冲</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/红米AC2100刷机.html",pathLocale:"/",permalink:null,routeMeta:{title:"红米AC2100刷机"},slug:"红米AC2100刷机",filePath:"/root/blog/blogs/tech/红米AC2100刷机.md",filePathRelative:"blogs/tech/红米AC2100刷机.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.vue",componentFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.vue",componentFileChunkName:"v-08e31ac5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.js",dataFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.js",dataFileChunkName:"v-08e31ac5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/红米AC2100刷机.html",htmlFilePathRelative:"blogs/tech/红米AC2100刷机.html"},{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"},{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"}]},"/categories/tech/2/":{pageSize:10,total:14,currentPage:2,currentClassificationKey:"categories",currentClassificationValue:"tech",pages:[{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"},{data:{key:"v-e3b887da",path:"/blogs/tech/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/tech/第一篇博客学习.md"},key:"v-e3b887da",path:"/blogs/tech/diyipianbokexuexi.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],content:'\r\n**阅读本文大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n::: tip\r\n\r\n前期\r\n\r\n```json\r\n# 初始化 最好不要用全局安装（yarn 未收录)\r\nnpm install @vuepress-reco/theme-cli\r\ntheme-cli init\r\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\r\n# 然后是输入名字、描述、作者名字\r\n# 选择blog和doc无大区别我选择blog\r\n\r\n# 安装\r\nnpm install\r\n\r\n# 运行(等加载完,点开localhost那个链接就可以看到自己的网站，帅不帅？)\r\nnpm run dev\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！\r\n\r\n\r\n```json\r\n# 创建github仓库,网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\r\n# 则不需要设置base属性，把.vuepress\\config.js的"dest":"public"删除\r\n# 删除的目的是：打包在默认的dist文件夹.\r\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\r\n\r\n"base":"/你仓库的名字/",\r\n\r\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\r\n\r\nnpm run build\r\n\r\n# 这时候.vuepress文件夹会多出一个dist文件夹\r\n\r\ncd .vuepress\\dist\r\n\r\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\r\n\r\ngit init\r\ngit add .\r\ngit commit -m "deploy"\r\ngit push\r\ngit remote add origin 你项目地址(https)\r\ngit push -u origin master -f\r\n# 这个push 会创建一个master分支，进入仓库 setting\r\n```\r\n\r\n然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了\r\n\r\n:::\r\n\r\n# 关于目录结构\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png)\r\n\r\n::: tip\r\n\r\n一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？\r\n\r\n> dist是运行了`npm run build`所产生的目录，没必要动它\r\n>\r\n> blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E4%BB%A3%E7%A0%81.png)\r\n\r\n> docs是导航栏的docs里面写的文章不用写类别会自动归类到docs\r\n\r\n**基本就这样了!**\r\n\r\n:::',contentRendered:'<p><strong>阅读本文大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>前期</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 初始化 最好不要用全局安装（yarn 未收录)\nnpm install @vuepress-reco/theme-cli\ntheme-cli init\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\n# 然后是输入名字、描述、作者名字\n# 选择blog和doc无大区别我选择blog\n\n# 安装\nnpm install\n\n# 运行(等加载完<span class="token punctuation">,</span>点开localhost那个链接就可以看到自己的网站，帅不帅？)\nnpm run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 创建github仓库<span class="token punctuation">,</span>网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\n# 则不需要设置base属性，把.vuepress\\config.js的<span class="token property">"dest"</span><span class="token operator">:</span><span class="token string">"public"</span>删除\n# 删除的目的是：打包在默认的dist文件夹.\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\n\n<span class="token property">"base"</span><span class="token operator">:</span><span class="token string">"/你仓库的名字/"</span><span class="token punctuation">,</span>\n\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\n\nnpm run build\n\n# 这时候.vuepress文件夹会多出一个dist文件夹\n\ncd .vuepress\\dist\n\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\n\ngit init\ngit add .\ngit commit -m <span class="token string">"deploy"</span>\ngit push\ngit remote add origin 你项目地址(https)\ngit push -u origin master -f\n# 这个push 会创建一个master分支，进入仓库 setting\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了</p>\n</div><h1 id="关于目录结构" tabindex="-1"><a class="header-anchor" href="#关于目录结构" aria-hidden="true">#</a> 关于目录结构</h1>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/项目结构.png" alt=""></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？</p>\n<blockquote>\n<p>dist是运行了<code>npm run build</code>所产生的目录，没必要动它</p>\n<p>blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类</p>\n</blockquote>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/代码.png" alt=""></p>\n<blockquote>\n<p>docs是导航栏的docs里面写的文章不用写类别会自动归类到docs</p>\n</blockquote>\n<p><strong>基本就这样了!</strong></p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/第一篇博客学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"第一篇踩坑@vuepress-reco/theme-cli"},slug:"第一篇博客学习",filePath:"/root/blog/blogs/tech/第一篇博客学习.md",filePathRelative:"blogs/tech/第一篇博客学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.vue",componentFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.vue",componentFileChunkName:"v-e3b887da",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.js",dataFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.js",dataFileChunkName:"v-e3b887da",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/第一篇博客学习.html",htmlFilePathRelative:"blogs/tech/第一篇博客学习.html"}]},"/categories/Python/1/":{pageSize:10,total:5,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"Python",pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-66e05561",path:"/blogs/Python/%E9%87%8D%E6%9E%84%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],git:{},filePathRelative:"blogs/Python/重构项目记录(fastapi).md"},key:"v-66e05561",path:"/blogs/Python/zhonggouxiangmujilu(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],content:'**从WSGI到ASGI**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n自从说了要从`Flask`到`Fastapi`转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。\r\n\r\n### 改造过程\r\n\r\n此次的实验项目是之前的[上传视频项目](https://github.com/googidaddy/bili_upload_tool)，由于是传统的`WSGI`架构，加上`Flask`是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)\r\n\r\n```\r\n--docker-compose.yaml\r\n--Docker-main\r\n----main.py\r\n----Dockerfile\r\n--nginx\r\n----nginx.conf\r\n----Dockerfile\r\n```\r\n\r\n\r\n\r\n#### Flask变Fastapi\r\n\r\n**对比来说，改动地方不多，**\r\n\r\n- 首先用pipenv配置好Fastapi相关环境\r\n\r\n- 把模板搭载放在了nginx，可以翻看**萌新nginx配置**那一篇。\r\n\r\n- 增加[请求验证](https://fastapi.tiangolo.com/tutorial/body/)\r\n\r\n  ```python\r\n  from pydantic import BaseModel\r\n  # 对数据有验证\r\n  class Item(BaseModel):\r\n      a: str\r\n      b: str\r\n      c: str\r\n      d: str\r\n  # 去掉__main__程序里uvicorn启动程序\r\n  ```\r\n\r\n- 原来的数据处理部分变更成异步async/await\r\n\r\n#### 增加nginx反向代理\r\n\r\n```dockerfile\r\nFROM nginx:alpine\r\n\r\nCOPY ./dist /usr/share/nginx/html/\r\n\r\nCOPY nginx.conf /etc/nginx/conf.d/\r\n```\r\n\r\n**解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。**\r\n\r\n> ps：nginx配置在那个教程\r\n\r\n#### 增加docker-compose\r\n\r\n使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。\r\n\r\n```yaml\r\nversion: "3.9"\r\nservices:\r\n  web:\r\n    build: nginx\r\n    ports:\r\n      - 8080:8080\r\n\r\n  api:\r\n    build: Docker-main\r\n    ports:\r\n    - 9090:9090\r\n```\r\n\r\n### 总结\r\n\r\n这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,**有些默认配置的坑(--host --port)**，\r\n\r\n',contentRendered:'<p><strong>从WSGI到ASGI</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>自从说了要从<code>Flask</code>到<code>Fastapi</code>转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。</p>\n<h3 id="改造过程" tabindex="-1"><a class="header-anchor" href="#改造过程" aria-hidden="true">#</a> 改造过程</h3>\n<p>此次的实验项目是之前的<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">上传视频项目<ExternalLinkIcon/></a>，由于是传统的<code>WSGI</code>架构，加上<code>Flask</code>是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>--docker-compose.yaml\n--Docker-main\n----main.py\n----Dockerfile\n--nginx\n----nginx.conf\n----Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="flask变fastapi" tabindex="-1"><a class="header-anchor" href="#flask变fastapi" aria-hidden="true">#</a> Flask变Fastapi</h4>\n<p><strong>对比来说，改动地方不多，</strong></p>\n<ul>\n<li>\n<p>首先用pipenv配置好Fastapi相关环境</p>\n</li>\n<li>\n<p>把模板搭载放在了nginx，可以翻看<strong>萌新nginx配置</strong>那一篇。</p>\n</li>\n<li>\n<p>增加<a href="https://fastapi.tiangolo.com/tutorial/body/" target="_blank" rel="noopener noreferrer">请求验证<ExternalLinkIcon/></a></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token comment"># 对数据有验证</span>\n<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    a<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    b<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    c<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    d<span class="token punctuation">:</span> <span class="token builtin">str</span>\n<span class="token comment"># 去掉__main__程序里uvicorn启动程序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>\n<li>\n<p>原来的数据处理部分变更成异步async/await</p>\n</li>\n</ul>\n<h4 id="增加nginx反向代理" tabindex="-1"><a class="header-anchor" href="#增加nginx反向代理" aria-hidden="true">#</a> 增加nginx反向代理</h4>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html/</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> nginx.conf /etc/nginx/conf.d/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。</strong></p>\n<blockquote>\n<p>ps：nginx配置在那个教程</p>\n</blockquote>\n<h4 id="增加docker-compose" tabindex="-1"><a class="header-anchor" href="#增加docker-compose" aria-hidden="true">#</a> 增加docker-compose</h4>\n<p>使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>\n\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> Docker<span class="token punctuation">-</span>main\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3>\n<p>这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,<strong>有些默认配置的坑(--host --port)</strong>，</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/重构项目记录(fastapi).html",pathLocale:"/",permalink:null,routeMeta:{title:"重构项目记录(fastapi)"},slug:"重构项目记录(fastapi)",filePath:"/root/blog/blogs/Python/重构项目记录(fastapi).md",filePathRelative:"blogs/Python/重构项目记录(fastapi).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFileChunkName:"v-66e05561",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.js",dataFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.js",dataFileChunkName:"v-66e05561",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/重构项目记录(fastapi).html",htmlFilePathRelative:"blogs/Python/重构项目记录(fastapi).html"},{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"},{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"},{data:{key:"v-2fb64b5c",path:"/blogs/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],git:{},filePathRelative:"blogs/Python/正则表达式.md"},key:"v-2fb64b5c",path:"/blogs/Python/zhengzebiaodashi.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],content:'## 正则表达式\r\n\r\n### 按类型匹配\r\n\r\n```python\r\n#按类型匹配\r\n\\d : 任何数字\r\n\\D : 不是数字\r\n\\s : 任何 white space, 如 [\\t\\n\\r\\f\\v]\r\n\\S : 不是 white space\r\n\\w : 任何大小写字母, 数字和 “” [a-zA-Z0-9]\r\n\\W : 不是 \\w\r\n\\b : 空白字符 (只在某个字的开头或结尾)\r\n\\B : 空白字符 (不在某个字的开头或结尾)\r\n\\\\ : 匹配 \\\r\n. : 匹配任何字符 (除了 \\n)\r\n^ : 匹配开头\r\n$ : 匹配结尾\r\n? : 前面的字符可有可无\r\n* : 重复零次或多次\r\n+ : 重复一次或多次\r\n{n, m} : 重复 n 至 m 次\r\n{n} : 重复 n 次\r\n```\r\n\r\n 如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r"^I" 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 `re.search()` 可以对每一行单独处理.  这个参数就是 `flags=re.M`, 或者这样写也行 `flags=re.MULTILINE`              \r\n\r\n```python\r\nstring = """\r\ndog runs to cat.\r\nI run to dog.\r\n"""\r\nprint(re.search(r"^I", string))                 # None\r\nprint(re.search(r"^I", string, flags=re.M))  \r\n# <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\r\n```\r\n\r\n```python\r\nmatch = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\r\nprint(match.group())                   # 021523, Date: Feb/12/2017\r\nprint(match.group(1))                  # 021523\r\nprint(match.group(2))                  # Date: Feb/12/2017\r\n我们甚至可以为找到的内容分组, 使用 () 能轻松实现这件事. \r\n通过分组, 我们能轻松定位所找到的内容. \r\n比如在这个 (\\d+) 组里, 需要找到的是一些数字, \r\n在 (.+) 这个组里, 我们会找到 “Date: “ 后面的所有内容. \r\n当使用 match.group() 时, 他会返回所有组里的内容, \r\n//group(1) 021523\r\n而如果给 .group(2) 里加一个数, 它就能定位你需要返回哪个组里的信息.\r\n```\r\n\r\n### findall\r\n\r\n```python\r\n# findall 找到所有项返回一个列表\r\nprint(re.findall(r"r[ua]n", "run ran ren"))    \r\n# [\'run\', \'ran\']\r\n\r\n# | : or\r\nprint(re.findall(r"(run|ran)", "run ran ren")) \r\n# [\'run\', \'ran\']\r\n```\r\n\r\n### 如何巧妙的替换、分割字符串\r\n\r\n```python\r\nprint(re.sub(r"r[au]ns", "catches", "dog runs to cat"))  \r\n# dog catches to cat\r\n\r\nprint(re.split(r"[,;\\.]", "a;b,c.d;e"))  \r\n# [\'a\', \'b\', \'c\', \'d\', \'e\']\r\n```\r\n\r\n### 封装一个正则表达式\r\n\r\n```python\r\ncompiled_re = re.compile(r"r[ua]n")\r\nprint(compiled_re.search("dog ran to cat")) \r\n# <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\r\n```\r\n\r\n',contentRendered:'<h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2>\n<h3 id="按类型匹配" tabindex="-1"><a class="header-anchor" href="#按类型匹配" aria-hidden="true">#</a> 按类型匹配</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#按类型匹配</span>\n\\d <span class="token punctuation">:</span> 任何数字\n\\D <span class="token punctuation">:</span> 不是数字\n\\s <span class="token punctuation">:</span> 任何 white space<span class="token punctuation">,</span> 如 <span class="token punctuation">[</span>\\t\\n\\r\\f\\v<span class="token punctuation">]</span>\n\\S <span class="token punctuation">:</span> 不是 white space\n\\w <span class="token punctuation">:</span> 任何大小写字母<span class="token punctuation">,</span> 数字和 “” <span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\n\\W <span class="token punctuation">:</span> 不是 \\w\n\\b <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>只在某个字的开头或结尾<span class="token punctuation">)</span>\n\\B <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>不在某个字的开头或结尾<span class="token punctuation">)</span>\n\\\\ <span class="token punctuation">:</span> 匹配 \\\n<span class="token punctuation">.</span> <span class="token punctuation">:</span> 匹配任何字符 <span class="token punctuation">(</span>除了 \\n<span class="token punctuation">)</span>\n<span class="token operator">^</span> <span class="token punctuation">:</span> 匹配开头\n$ <span class="token punctuation">:</span> 匹配结尾\n? <span class="token punctuation">:</span> 前面的字符可有可无\n<span class="token operator">*</span> <span class="token punctuation">:</span> 重复零次或多次\n<span class="token operator">+</span> <span class="token punctuation">:</span> 重复一次或多次\n<span class="token punctuation">{</span>n<span class="token punctuation">,</span> m<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 至 m 次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r&quot;^I&quot; 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 <code>re.search()</code> 可以对每一行单独处理.  这个参数就是 <code>flags=re.M</code>, 或者这样写也行 <code>flags=re.MULTILINE</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>string <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\ndog runs to cat.\nI run to dog.\n"""</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># None</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(18, 19), match=\'I\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"(\\d+), Date: (.+)"</span><span class="token punctuation">,</span> <span class="token string">"ID: 021523, Date: Feb/12/2017"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 021523, Date: Feb/12/2017</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 021523</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># Date: Feb/12/2017</span>\n我们甚至可以为找到的内容分组<span class="token punctuation">,</span> 使用 <span class="token punctuation">(</span><span class="token punctuation">)</span> 能轻松实现这件事<span class="token punctuation">.</span> \n通过分组<span class="token punctuation">,</span> 我们能轻松定位所找到的内容<span class="token punctuation">.</span> \n比如在这个 <span class="token punctuation">(</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span> 组里<span class="token punctuation">,</span> 需要找到的是一些数字<span class="token punctuation">,</span> \n在 <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token punctuation">)</span> 这个组里<span class="token punctuation">,</span> 我们会找到 “Date<span class="token punctuation">:</span> “ 后面的所有内容<span class="token punctuation">.</span> \n当使用 <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> 时<span class="token punctuation">,</span> 他会返回所有组里的内容<span class="token punctuation">,</span> \n<span class="token operator">//</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">021523</span>\n而如果给 <span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 里加一个数<span class="token punctuation">,</span> 它就能定位你需要返回哪个组里的信息<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="findall" tabindex="-1"><a class="header-anchor" href="#findall" aria-hidden="true">#</a> findall</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># findall 找到所有项返回一个列表</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    \n<span class="token comment"># [\'run\', \'ran\']</span>\n\n<span class="token comment"># | : or</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"(run|ran)"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># [\'run\', \'ran\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="如何巧妙的替换、分割字符串" tabindex="-1"><a class="header-anchor" href="#如何巧妙的替换、分割字符串" aria-hidden="true">#</a> 如何巧妙的替换、分割字符串</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"r[au]ns"</span><span class="token punctuation">,</span> <span class="token string">"catches"</span><span class="token punctuation">,</span> <span class="token string">"dog runs to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># dog catches to cat</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r"[,;\\.]"</span><span class="token punctuation">,</span> <span class="token string">"a;b,c.d;e"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># [\'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="封装一个正则表达式" tabindex="-1"><a class="header-anchor" href="#封装一个正则表达式" aria-hidden="true">#</a> 封装一个正则表达式</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>compiled_re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>compiled_re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"dog ran to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(4, 7), match=\'ran\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/正则表达式.html",pathLocale:"/",permalink:null,routeMeta:{title:"正则表达式"},slug:"正则表达式",filePath:"/root/blog/blogs/Python/正则表达式.md",filePathRelative:"blogs/Python/正则表达式.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.vue",componentFilePathRelative:"pages/blogs/Python/正则表达式.html.vue",componentFileChunkName:"v-2fb64b5c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.js",dataFilePathRelative:"pages/blogs/Python/正则表达式.html.js",dataFileChunkName:"v-2fb64b5c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/正则表达式.html",htmlFilePathRelative:"blogs/Python/正则表达式.html"}]},"/categories/Vue3/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"categories",currentClassificationValue:"Vue3",pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"},{data:{key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-notes-1.md"},key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],content:'\r\n**阅读本文大概需要10分钟**\r\n\x3c!-- more --\x3e\r\n\r\n**先认识代码变动和部分新特性**\r\n\r\n::: tip\r\n\r\n### 认识重要 API\r\n\r\n```javascript\r\nimport {\r\n    createApp,\t\t// 创建一个APP实例\r\n    onMounted,\t\t// 生命周期写法变了\r\n    computed,\t\t// 方法变了\r\n    watch,\t\t\t// 同上\r\n    watchEffect,\t// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行\r\n    reactive,\t\t// 传入一个普通对象返回一个响应式对象\r\n    ref,\t\t\t// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用\r\n    toRef,\t\t\t// 为一个reactive对象的属性创建一个ref\r\n    toRefs,\t\t\t// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _createApp_\r\n\r\n```javascript\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\ncreateApp(App).mount("#app");\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _onMounted_\r\n\r\n```javascript\r\nimport { onMounted, defineComponent } from "vue";\r\nexport default defineComponent({\r\n  setup() {\r\n    // 使用需要放在setup()里面\r\n    onMounted(() => {\r\n      console.log("冲冲冲");\r\n    });\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _computed_\r\n\r\n```javascript\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(1);\r\nconst result = computed(() => count.value + 1);\r\n// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象\r\n// 对象的话，是不是对象.value就很好理解下面为什么这样写了？\r\nconsole.log(result.value); // 2\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _watch_\r\n\r\n```javascript\r\nimport { reactive, watch } from "vue";\r\n\r\nconst state = reactive({ count: 0 });\r\n//reactive 接受一个普通对象，返回一个响应式对象\r\n// state已经是一个响应式对象了，所以取值就是对象.count\r\nwatch(\r\n  () => state.count,\r\n  (count, prevCount) => {\r\n    // todo\r\n  }\r\n);\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### :star: _reactive 单独使用情况_\r\n\r\n```javascript\r\nimport { reactive } from "vue";\r\n\r\nconst a = reactive({ count: 0 });\r\na.count++;\r\nconsole.log(a.count); // 1\r\n```\r\n\r\n#### :star2: 返回给组件形式一\r\n\r\n```javascript\r\n// 组件\r\n<template>\r\n    <p> {{ a.count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\n// 逻辑\r\nimport { reactive, defineComponent } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    return { a };\r\n  },\r\n});\r\n```\r\n\r\n#### _:star2:返回组件形式二 & toRefs_\r\n\r\n```javascript\r\n<template>\r\n  <p> {{ count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\nimport { reactive, defineComponent, toRefs } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    // toRefs把响应式对象转为普通对象\r\n    // 再解析一下就是，toRefs是一个解封过程，reactive是封装过程\r\n    return { ...toRefs(a) };\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _ref_\r\n\r\n```javascript\r\n// ref 接受一个参数，并返回一个响应式且可以改变的对象。\r\n// 同时ref拥有一个指向内部值得单一属性.value\r\n\r\nconst count = ref(0);\r\nconsole.log(count.value); // 0\r\n\r\ncount.value++;\r\nconsole.log(count.value); // 1\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _toRef_\r\n\r\n```javascript\r\nimport { defineComponent, toRef, reactive } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({\r\n      cow: 0,\r\n      bug: 1,\r\n    });\r\n    // toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)\r\n    const count = toRef(a, "cow");\r\n    // 相当于 const count = ref(0)\r\n    // count 已经是cow的响应式对象了，所以值是不是该？\r\n    count.value++; // 这时a.cow已经被改变了\r\n    console.log(a.cow); // 1\r\n    // 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？\r\n\r\n    a.cow++;\r\n    console.log(count.value); // 2\r\n    // 这里是不是能理解ref传递了？\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n# Vue3 整体纵览\r\n\r\n### 一、setup 函数\r\n\r\n​ **setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法**\r\n\r\n​ **Vue3 去掉了 data 返回的格式，统一再 setup 返回**\r\n\r\n​\r\n\r\n### 二、生命周期\r\n\r\n```\r\nsetup() {\r\n    onMounted(() => {\r\n      console.log(\'组件挂载\');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      console.log(\'组件卸载\');\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\'组件更新\');\r\n    });\r\n\r\n    onBeforeUpdate(() => {\r\n      console.log(\'组件将要更新\');\r\n    });\r\n\r\n    onActivated(() => {\r\n      console.log(\'keepAlive 组件 激活\');\r\n    });\r\n\r\n    onDeactivated(() => {\r\n      console.log(\'keepAlive 组件 非激活\');\r\n    });\r\n    return {};\r\n  },\r\n\r\n```\r\n\r\n### 三、vue-router\r\n\r\n```javascript\r\nimport { useRoute, useRouter } from "vue-router";\r\n\r\nconst route = useRoute(); // 相当于 vue2 中的this.$route\r\nconst router = useRouter(); // 相当于 vue2 中的this.$router\r\n\r\n// route   用于获取当前路由数据\r\n// router  用于路由跳转\r\n```\r\n\r\n### 四、vuex\r\n\r\n​ **注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应**\r\n\r\n```javascript\r\nimport {useStore} from \'vuex\'\r\n\r\nsetup(){\r\n    const store = useStore(); // 相当于 vue2中的 this.$store\r\n    store.dispatch(); // 通过store对象来dispatch 派发异步任务\r\n    store.commit(); // commit 修改store数据\r\n\r\n    let category = computed(() => store.state.home.currentCagegory\r\n    return { category }\r\n}\r\n\r\n```\r\n\r\n## vue-vite 搭建项目\r\n\r\n::: tip\r\n\r\n```javascript\r\n# 初始化项目\r\nnpm init vite-app vue3-composition-api-demo\r\n# 进入目录\r\ncd vue3-composition-api-demo\r\n# 安装依赖\r\nnpm install\r\n# 运行项目\r\nnpm run dev\r\n\r\n```\r\n\r\n:::\r\n\r\n### 五、setup()\r\n\r\n::: tip\r\nsetup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.\r\n\r\n```javascript\r\nsetup(props, context) {\r\n  // Attributes (Non-reactive object)\r\n  console.log(context.attrs)\r\n\r\n  // Slots (Non-reactive object)\r\n  console.log(context.slots)\r\n\r\n  // Emit Events (Method)\r\n  console.log(context.emit)\r\n}\r\n\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n## 日后再更新。\r\n',contentRendered:'<p><strong>阅读本文大概需要10分钟</strong></p>\n\x3c!-- more --\x3e\n<p><strong>先认识代码变动和部分新特性</strong></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="认识重要-api" tabindex="-1"><a class="header-anchor" href="#认识重要-api" aria-hidden="true">#</a> 认识重要 API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp<span class="token punctuation">,</span>\t\t<span class="token comment">// 创建一个APP实例</span>\n    onMounted<span class="token punctuation">,</span>\t\t<span class="token comment">// 生命周期写法变了</span>\n    computed<span class="token punctuation">,</span>\t\t<span class="token comment">// 方法变了</span>\n    watch<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 同上</span>\n    watchEffect<span class="token punctuation">,</span>\t<span class="token comment">// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行</span>\n    reactive<span class="token punctuation">,</span>\t\t<span class="token comment">// 传入一个普通对象返回一个响应式对象</span>\n    ref<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用</span>\n    toRef<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 为一个reactive对象的属性创建一个ref</span>\n    toRefs<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp" aria-hidden="true">#</a> <em>createApp</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span>\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> <em>onMounted</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用需要放在setup()里面</span>\n    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"冲冲冲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <em>computed</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象</span>\n<span class="token comment">// 对象的话，是不是对象.value就很好理解下面为什么这样写了？</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> <em>watch</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//reactive 接受一个普通对象，返回一个响应式对象</span>\n<span class="token comment">// state已经是一个响应式对象了，所以取值就是对象.count</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// todo</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="reactive-单独使用情况" tabindex="-1"><a class="header-anchor" href="#reactive-单独使用情况" aria-hidden="true">#</a> ⭐ <em>reactive 单独使用情况</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\na<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="返回给组件形式一" tabindex="-1"><a class="header-anchor" href="#返回给组件形式一" aria-hidden="true">#</a> 🌟 返回给组件形式一</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 组件</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 逻辑</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="返回组件形式二-torefs" tabindex="-1"><a class="header-anchor" href="#返回组件形式二-torefs" aria-hidden="true">#</a> <em>🌟返回组件形式二 &amp; toRefs</em></h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">></span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> toRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRefs把响应式对象转为普通对象</span>\n    <span class="token comment">// 再解析一下就是，toRefs是一个解封过程，reactive是封装过程</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <em>ref</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// ref 接受一个参数，并返回一个响应式且可以改变的对象。</span>\n<span class="token comment">// 同时ref拥有一个指向内部值得单一属性.value</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="toref" tabindex="-1"><a class="header-anchor" href="#toref" aria-hidden="true">#</a> <em>toRef</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">cow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">bug</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"cow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 相当于 const count = ref(0)</span>\n    <span class="token comment">// count 已经是cow的响应式对象了，所以值是不是该？</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 这时a.cow已经被改变了</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>cow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n    <span class="token comment">// 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？</span>\n\n    a<span class="token punctuation">.</span>cow<span class="token operator">++</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n    <span class="token comment">// 这里是不是能理解ref传递了？</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><hr>\n<h1 id="vue3-整体纵览" tabindex="-1"><a class="header-anchor" href="#vue3-整体纵览" aria-hidden="true">#</a> Vue3 整体纵览</h1>\n<h3 id="一、setup-函数" tabindex="-1"><a class="header-anchor" href="#一、setup-函数" aria-hidden="true">#</a> 一、setup 函数</h3>\n<p>​ <strong>setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法</strong></p>\n<p>​ <strong>Vue3 去掉了 data 返回的格式，统一再 setup 返回</strong></p>\n<p>​</p>\n<h3 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期" aria-hidden="true">#</a> 二、生命周期</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>setup() {\n    onMounted(() => {\n      console.log(\'组件挂载\');\n    });\n\n    onUnmounted(() => {\n      console.log(\'组件卸载\');\n    });\n\n    onUpdated(() => {\n      console.log(\'组件更新\');\n    });\n\n    onBeforeUpdate(() => {\n      console.log(\'组件将要更新\');\n    });\n\n    onActivated(() => {\n      console.log(\'keepAlive 组件 激活\');\n    });\n\n    onDeactivated(() => {\n      console.log(\'keepAlive 组件 非激活\');\n    });\n    return {};\n  },\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="三、vue-router" tabindex="-1"><a class="header-anchor" href="#三、vue-router" aria-hidden="true">#</a> 三、vue-router</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$route</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$router</span>\n\n<span class="token comment">// route   用于获取当前路由数据</span>\n<span class="token comment">// router  用于路由跳转</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="四、vuex" tabindex="-1"><a class="header-anchor" href="#四、vuex" aria-hidden="true">#</a> 四、vuex</h3>\n<p>​ <strong>注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2中的 this.$store</span>\n    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过store对象来dispatch 派发异步任务</span>\n    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// commit 修改store数据</span>\n\n    <span class="token keyword">let</span> category <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>currentCagegory\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> category <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="vue-vite-搭建项目" tabindex="-1"><a class="header-anchor" href="#vue-vite-搭建项目" aria-hidden="true">#</a> vue-vite 搭建项目</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code># 初始化项目\nnpm init vite<span class="token operator">-</span>app vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 进入目录\ncd vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 安装依赖\nnpm install\n# 运行项目\nnpm run dev\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h3 id="五、setup" tabindex="-1"><a class="header-anchor" href="#五、setup" aria-hidden="true">#</a> 五、setup()</h3>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>setup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Attributes (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>\n\n  <span class="token comment">// Slots (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>\n\n  <span class="token comment">// Emit Events (Method)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><hr>\n<h2 id="日后再更新。" tabindex="-1"><a class="header-anchor" href="#日后再更新。" aria-hidden="true">#</a> 日后再更新。</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3-notes-1.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3笔记"},slug:"Vue3-notes-1",filePath:"/root/blog/blogs/Vue3/Vue3-notes-1.md",filePathRelative:"blogs/Vue3/Vue3-notes-1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFileChunkName:"v-2b8dfb6e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.js",dataFileChunkName:"v-2b8dfb6e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3-notes-1.html",htmlFilePathRelative:"blogs/Vue3/Vue3-notes-1.html"}]},"/tags/suanfa/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"suanfa",pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}]},"/tags/Algorithm/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"Algorithm",pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}]},"/tags/css/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"css",pages:[{data:{key:"v-c8e1aa5a",path:"/blogs/CSS/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],git:{},filePathRelative:"blogs/CSS/文本溢出.md"},key:"v-c8e1aa5a",path:"/blogs/CSS/wenbenyichu.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],content:"\r\n## 文本溢出样式解决方法\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\noverflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）\r\n\r\nwhite-space: nowrap；（设置文字在一行显示，不能换行）\r\n\r\ntext-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\r\n```\r\n\r\n**纯 CSS 实现方案**\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\n-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数,2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\r\n\r\ndisplay: -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\r\n\r\n-webkit-box-orient: vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\r\n\r\noverflow: hidden；（文本溢出限定的宽度就隐藏内容）\r\n\r\ntext-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)\r\n```\r\n\r\n**优点**\r\n\r\n- 响应式截断\r\n- 文本溢出范围才显示省略号，否则不显示省略号\r\n- 省略号显示位置刚好\r\n\r\n  ![123](https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png)\r\n",contentRendered:'<h2 id="文本溢出样式解决方法" tabindex="-1"><a class="header-anchor" href="#文本溢出样式解决方法" aria-hidden="true">#</a> 文本溢出样式解决方法</h2>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文字长度超出限定宽度，则隐藏超出的内容）\n\n<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap；（设置文字在一行显示，不能换行）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>纯 CSS 实现方案</strong></p>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2；（用来限制在一个块元素显示的文本的行数<span class="token punctuation">,</span>2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\n\n<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\n\n<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\n\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文本溢出限定的宽度就隐藏内容）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>优点</strong></p>\n<ul>\n<li>\n<p>响应式截断</p>\n</li>\n<li>\n<p>文本溢出范围才显示省略号，否则不显示省略号</p>\n</li>\n<li>\n<p>省略号显示位置刚好</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png" alt="123"></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/CSS/文本溢出.html",pathLocale:"/",permalink:null,routeMeta:{title:"css文本溢出省略解决方法"},slug:"文本溢出",filePath:"/root/blog/blogs/CSS/文本溢出.md",filePathRelative:"blogs/CSS/文本溢出.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.vue",componentFilePathRelative:"pages/blogs/CSS/文本溢出.html.vue",componentFileChunkName:"v-c8e1aa5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.js",dataFilePathRelative:"pages/blogs/CSS/文本溢出.html.js",dataFileChunkName:"v-c8e1aa5a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/CSS/文本溢出.html",htmlFilePathRelative:"blogs/CSS/文本溢出.html"}]},"/tags/NodeJS/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"NodeJS",pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}]},"/tags/json/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"json",pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}]},"/tags/excel/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"excel",pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}]},"/tags/arduino/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"arduino",pages:[{data:{key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],git:{},filePathRelative:"blogs/notes/Arduino_Libraries.md"},key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],content:'\r\n## How to create a Arduino Libraries\r\n\r\n1. 在`Arduino`目录下的`libraries`中新建一个自命名文件夹\r\n\r\n2. 添加同名`.cpp` `.h`文件\r\n\r\n   ```cpp\r\n   # My_libraries.h\r\n   #ifndef My_libraries\r\n   #include <Arduino.h>\r\n   void Test();\r\n   #endif\r\n   ```\r\n\r\n   ```cpp\r\n   # My_libraries.cpp\r\n   #include <Arduino.h>\r\n   void Test(){\r\n   \tSerial.println("Hello!");\r\n   \tdelay(1000);\r\n   }\r\n   ```\r\n\r\n3. （可选）创建`example`文件夹，再创建`example.ino`\r\n\r\n   ```cpp\r\n   #include <Arduino.h>\r\n   #include "My_libraries.h" // 引入自己的库\r\n\r\n   void setup(){\r\n       Serial.begin(115200);\r\n       Test();\r\n   }\r\n   void loop(){\r\n       Test();\r\n   }\r\n   ```\r\n\r\n**其余自行搜索，仅提供简单示例模板**\r\n',contentRendered:'<h2 id="how-to-create-a-arduino-libraries" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-arduino-libraries" aria-hidden="true">#</a> How to create a Arduino Libraries</h2>\n<ol>\n<li>\n<p>在<code>Arduino</code>目录下的<code>libraries</code>中新建一个自命名文件夹</p>\n</li>\n<li>\n<p>添加同名<code>.cpp</code> <code>.h</code>文件</p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>h</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">My_libraries</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>cpp</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tSerial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n<li>\n<p>（可选）创建<code>example</code>文件夹，再创建<code>example.ino</code></p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"My_libraries.h"</span> <span class="token comment">// 引入自己的库</span></span>\n\n<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ol>\n<p><strong>其余自行搜索，仅提供简单示例模板</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Arduino_Libraries.html",pathLocale:"/",permalink:null,routeMeta:{title:"拥有Arduino自己的库"},slug:"Arduino_Libraries",filePath:"/root/blog/blogs/notes/Arduino_Libraries.md",filePathRelative:"blogs/notes/Arduino_Libraries.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.vue",componentFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.vue",componentFileChunkName:"v-7f956b1c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.js",dataFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.js",dataFileChunkName:"v-7f956b1c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Arduino_Libraries.html",htmlFilePathRelative:"blogs/notes/Arduino_Libraries.html"}]},"/tags/git/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"git",pages:[{data:{key:"v-9e971e66",path:"/blogs/notes/%E8%B4%A1%E7%8C%AE%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],git:{},filePathRelative:"blogs/notes/贡献项目代码.md"},key:"v-9e971e66",path:"/blogs/notes/gongxianxiangmudaima.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],content:'\r\n## 贡献项目代码\r\n\r\n### Fork\r\n\r\n`Fork`项目\r\n\r\n### Clone\r\n\r\n`git clone`项目\r\n\r\n### Branch\r\n\r\n`git checkout -b 你的branch名`\r\n\r\n### Code\r\n\r\n修改代码\r\n\r\n### git\r\n\r\n`git add .` `git commit -m "这次我修改了XX"` `git push origin 你的branch名`\r\n\r\n### Pull Request\r\n\r\n去自己 fork 的项目提交 pull request\r\n',contentRendered:'<h2 id="贡献项目代码" tabindex="-1"><a class="header-anchor" href="#贡献项目代码" aria-hidden="true">#</a> 贡献项目代码</h2>\n<h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3>\n<p><code>Fork</code>项目</p>\n<h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> Clone</h3>\n<p><code>git clone</code>项目</p>\n<h3 id="branch" tabindex="-1"><a class="header-anchor" href="#branch" aria-hidden="true">#</a> Branch</h3>\n<p><code>git checkout -b 你的branch名</code></p>\n<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3>\n<p>修改代码</p>\n<h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h3>\n<p><code>git add .</code> <code>git commit -m &quot;这次我修改了XX&quot;</code> <code>git push origin 你的branch名</code></p>\n<h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3>\n<p>去自己 fork 的项目提交 pull request</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/贡献项目代码.html",pathLocale:"/",permalink:null,routeMeta:{title:"贡献项目代码姿势"},slug:"贡献项目代码",filePath:"/root/blog/blogs/notes/贡献项目代码.md",filePathRelative:"blogs/notes/贡献项目代码.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.vue",componentFilePathRelative:"pages/blogs/notes/贡献项目代码.html.vue",componentFileChunkName:"v-9e971e66",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.js",dataFilePathRelative:"pages/blogs/notes/贡献项目代码.html.js",dataFileChunkName:"v-9e971e66",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/贡献项目代码.html",htmlFilePathRelative:"blogs/notes/贡献项目代码.html"}]},"/tags/dockerfile/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"dockerfile",pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"}]},"/tags/docker/1/":{pageSize:10,total:4,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"docker",pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"}]},"/tags/flask/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"flask",pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}]},"/tags/fastapi/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"fastapi",pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-66e05561",path:"/blogs/Python/%E9%87%8D%E6%9E%84%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],git:{},filePathRelative:"blogs/Python/重构项目记录(fastapi).md"},key:"v-66e05561",path:"/blogs/Python/zhonggouxiangmujilu(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],content:'**从WSGI到ASGI**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n自从说了要从`Flask`到`Fastapi`转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。\r\n\r\n### 改造过程\r\n\r\n此次的实验项目是之前的[上传视频项目](https://github.com/googidaddy/bili_upload_tool)，由于是传统的`WSGI`架构，加上`Flask`是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)\r\n\r\n```\r\n--docker-compose.yaml\r\n--Docker-main\r\n----main.py\r\n----Dockerfile\r\n--nginx\r\n----nginx.conf\r\n----Dockerfile\r\n```\r\n\r\n\r\n\r\n#### Flask变Fastapi\r\n\r\n**对比来说，改动地方不多，**\r\n\r\n- 首先用pipenv配置好Fastapi相关环境\r\n\r\n- 把模板搭载放在了nginx，可以翻看**萌新nginx配置**那一篇。\r\n\r\n- 增加[请求验证](https://fastapi.tiangolo.com/tutorial/body/)\r\n\r\n  ```python\r\n  from pydantic import BaseModel\r\n  # 对数据有验证\r\n  class Item(BaseModel):\r\n      a: str\r\n      b: str\r\n      c: str\r\n      d: str\r\n  # 去掉__main__程序里uvicorn启动程序\r\n  ```\r\n\r\n- 原来的数据处理部分变更成异步async/await\r\n\r\n#### 增加nginx反向代理\r\n\r\n```dockerfile\r\nFROM nginx:alpine\r\n\r\nCOPY ./dist /usr/share/nginx/html/\r\n\r\nCOPY nginx.conf /etc/nginx/conf.d/\r\n```\r\n\r\n**解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。**\r\n\r\n> ps：nginx配置在那个教程\r\n\r\n#### 增加docker-compose\r\n\r\n使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。\r\n\r\n```yaml\r\nversion: "3.9"\r\nservices:\r\n  web:\r\n    build: nginx\r\n    ports:\r\n      - 8080:8080\r\n\r\n  api:\r\n    build: Docker-main\r\n    ports:\r\n    - 9090:9090\r\n```\r\n\r\n### 总结\r\n\r\n这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,**有些默认配置的坑(--host --port)**，\r\n\r\n',contentRendered:'<p><strong>从WSGI到ASGI</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>自从说了要从<code>Flask</code>到<code>Fastapi</code>转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。</p>\n<h3 id="改造过程" tabindex="-1"><a class="header-anchor" href="#改造过程" aria-hidden="true">#</a> 改造过程</h3>\n<p>此次的实验项目是之前的<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">上传视频项目<ExternalLinkIcon/></a>，由于是传统的<code>WSGI</code>架构，加上<code>Flask</code>是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>--docker-compose.yaml\n--Docker-main\n----main.py\n----Dockerfile\n--nginx\n----nginx.conf\n----Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="flask变fastapi" tabindex="-1"><a class="header-anchor" href="#flask变fastapi" aria-hidden="true">#</a> Flask变Fastapi</h4>\n<p><strong>对比来说，改动地方不多，</strong></p>\n<ul>\n<li>\n<p>首先用pipenv配置好Fastapi相关环境</p>\n</li>\n<li>\n<p>把模板搭载放在了nginx，可以翻看<strong>萌新nginx配置</strong>那一篇。</p>\n</li>\n<li>\n<p>增加<a href="https://fastapi.tiangolo.com/tutorial/body/" target="_blank" rel="noopener noreferrer">请求验证<ExternalLinkIcon/></a></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token comment"># 对数据有验证</span>\n<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    a<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    b<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    c<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    d<span class="token punctuation">:</span> <span class="token builtin">str</span>\n<span class="token comment"># 去掉__main__程序里uvicorn启动程序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>\n<li>\n<p>原来的数据处理部分变更成异步async/await</p>\n</li>\n</ul>\n<h4 id="增加nginx反向代理" tabindex="-1"><a class="header-anchor" href="#增加nginx反向代理" aria-hidden="true">#</a> 增加nginx反向代理</h4>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html/</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> nginx.conf /etc/nginx/conf.d/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。</strong></p>\n<blockquote>\n<p>ps：nginx配置在那个教程</p>\n</blockquote>\n<h4 id="增加docker-compose" tabindex="-1"><a class="header-anchor" href="#增加docker-compose" aria-hidden="true">#</a> 增加docker-compose</h4>\n<p>使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>\n\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> Docker<span class="token punctuation">-</span>main\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3>\n<p>这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,<strong>有些默认配置的坑(--host --port)</strong>，</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/重构项目记录(fastapi).html",pathLocale:"/",permalink:null,routeMeta:{title:"重构项目记录(fastapi)"},slug:"重构项目记录(fastapi)",filePath:"/root/blog/blogs/Python/重构项目记录(fastapi).md",filePathRelative:"blogs/Python/重构项目记录(fastapi).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFileChunkName:"v-66e05561",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.js",dataFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.js",dataFileChunkName:"v-66e05561",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/重构项目记录(fastapi).html",htmlFilePathRelative:"blogs/Python/重构项目记录(fastapi).html"}]},"/tags/nginx/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"nginx",pages:[{data:{key:"v-fb3507ea",path:"/blogs/tech/%E8%90%8C%E6%96%B0nginx%E9%85%8D%E7%BD%AE.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],git:{},filePathRelative:"blogs/tech/萌新nginx配置.md"},key:"v-fb3507ea",path:"/blogs/tech/mengxinnginxpeizhi.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],content:'\r\n**2分钟简单学习nginx配置。**\r\n\x3c!-- more --\x3e\r\n\r\n### 配置\r\n\r\n简单直接跑起来\r\n\r\n```sh\r\nserver {\r\n\t# 监听8080端口,简单体验的话，写不写无所谓\r\n    listen 8080;\r\n    # 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.\r\n    server_name yourdomain.com;\r\n    # 配置静态文件,/表示根目录\r\n    location / {\r\n        root            /usr/share/nginx/html;\r\n        index           index.html;\r\n        try_files       $uri $uri/ /index.html;\r\n\r\n }\r\n\t# 访问yourdomian.com/upload 会转发域名到baidu.com\r\n\t# 剩下是配置请求头\r\n    #location /upload {\r\n    #    proxy_pass http://baidu.com;\r\n    #    add_header Access-Control-Allow-Origin *;\r\n    #    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";\r\n    #    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";\r\n    #    add_header Access-Control-Allow-Credentials true;\r\n#}\r\n}\r\n```\r\n\r\n',contentRendered:'<p><strong>2分钟简单学习nginx配置。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3>\n<p>简单直接跑起来</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>server <span class="token punctuation">{</span>\n\t<span class="token comment"># 监听8080端口,简单体验的话，写不写无所谓</span>\n    listen <span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token comment"># 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.</span>\n    server_name yourdomain.com<span class="token punctuation">;</span>\n    <span class="token comment"># 配置静态文件,/表示根目录</span>\n    location / <span class="token punctuation">{</span>\n        root            /usr/share/nginx/html<span class="token punctuation">;</span>\n        index           index.html<span class="token punctuation">;</span>\n        try_files       <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>\n\n <span class="token punctuation">}</span>\n\t<span class="token comment"># 访问yourdomian.com/upload 会转发域名到baidu.com</span>\n\t<span class="token comment"># 剩下是配置请求头</span>\n    <span class="token comment">#location /upload {</span>\n    <span class="token comment">#    proxy_pass http://baidu.com;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Origin *;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Credentials true;</span>\n<span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/萌新nginx配置.html",pathLocale:"/",permalink:null,routeMeta:{title:"萌新nginx配置"},slug:"萌新nginx配置",filePath:"/root/blog/blogs/tech/萌新nginx配置.md",filePathRelative:"blogs/tech/萌新nginx配置.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.vue",componentFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.vue",componentFileChunkName:"v-fb3507ea",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.js",dataFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.js",dataFileChunkName:"v-fb3507ea",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/萌新nginx配置.html",htmlFilePathRelative:"blogs/tech/萌新nginx配置.html"}]},"/tags/pycharm/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"pycharm",pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"}]},"/tags/yuanchengkaifa/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"yuanchengkaifa",pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"}]},"/tags/python/1/":{pageSize:10,total:5,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"python",pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"},{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"},{data:{key:"v-2fb64b5c",path:"/blogs/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],git:{},filePathRelative:"blogs/Python/正则表达式.md"},key:"v-2fb64b5c",path:"/blogs/Python/zhengzebiaodashi.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],content:'## 正则表达式\r\n\r\n### 按类型匹配\r\n\r\n```python\r\n#按类型匹配\r\n\\d : 任何数字\r\n\\D : 不是数字\r\n\\s : 任何 white space, 如 [\\t\\n\\r\\f\\v]\r\n\\S : 不是 white space\r\n\\w : 任何大小写字母, 数字和 “” [a-zA-Z0-9]\r\n\\W : 不是 \\w\r\n\\b : 空白字符 (只在某个字的开头或结尾)\r\n\\B : 空白字符 (不在某个字的开头或结尾)\r\n\\\\ : 匹配 \\\r\n. : 匹配任何字符 (除了 \\n)\r\n^ : 匹配开头\r\n$ : 匹配结尾\r\n? : 前面的字符可有可无\r\n* : 重复零次或多次\r\n+ : 重复一次或多次\r\n{n, m} : 重复 n 至 m 次\r\n{n} : 重复 n 次\r\n```\r\n\r\n 如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r"^I" 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 `re.search()` 可以对每一行单独处理.  这个参数就是 `flags=re.M`, 或者这样写也行 `flags=re.MULTILINE`              \r\n\r\n```python\r\nstring = """\r\ndog runs to cat.\r\nI run to dog.\r\n"""\r\nprint(re.search(r"^I", string))                 # None\r\nprint(re.search(r"^I", string, flags=re.M))  \r\n# <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\r\n```\r\n\r\n```python\r\nmatch = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\r\nprint(match.group())                   # 021523, Date: Feb/12/2017\r\nprint(match.group(1))                  # 021523\r\nprint(match.group(2))                  # Date: Feb/12/2017\r\n我们甚至可以为找到的内容分组, 使用 () 能轻松实现这件事. \r\n通过分组, 我们能轻松定位所找到的内容. \r\n比如在这个 (\\d+) 组里, 需要找到的是一些数字, \r\n在 (.+) 这个组里, 我们会找到 “Date: “ 后面的所有内容. \r\n当使用 match.group() 时, 他会返回所有组里的内容, \r\n//group(1) 021523\r\n而如果给 .group(2) 里加一个数, 它就能定位你需要返回哪个组里的信息.\r\n```\r\n\r\n### findall\r\n\r\n```python\r\n# findall 找到所有项返回一个列表\r\nprint(re.findall(r"r[ua]n", "run ran ren"))    \r\n# [\'run\', \'ran\']\r\n\r\n# | : or\r\nprint(re.findall(r"(run|ran)", "run ran ren")) \r\n# [\'run\', \'ran\']\r\n```\r\n\r\n### 如何巧妙的替换、分割字符串\r\n\r\n```python\r\nprint(re.sub(r"r[au]ns", "catches", "dog runs to cat"))  \r\n# dog catches to cat\r\n\r\nprint(re.split(r"[,;\\.]", "a;b,c.d;e"))  \r\n# [\'a\', \'b\', \'c\', \'d\', \'e\']\r\n```\r\n\r\n### 封装一个正则表达式\r\n\r\n```python\r\ncompiled_re = re.compile(r"r[ua]n")\r\nprint(compiled_re.search("dog ran to cat")) \r\n# <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\r\n```\r\n\r\n',contentRendered:'<h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2>\n<h3 id="按类型匹配" tabindex="-1"><a class="header-anchor" href="#按类型匹配" aria-hidden="true">#</a> 按类型匹配</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#按类型匹配</span>\n\\d <span class="token punctuation">:</span> 任何数字\n\\D <span class="token punctuation">:</span> 不是数字\n\\s <span class="token punctuation">:</span> 任何 white space<span class="token punctuation">,</span> 如 <span class="token punctuation">[</span>\\t\\n\\r\\f\\v<span class="token punctuation">]</span>\n\\S <span class="token punctuation">:</span> 不是 white space\n\\w <span class="token punctuation">:</span> 任何大小写字母<span class="token punctuation">,</span> 数字和 “” <span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\n\\W <span class="token punctuation">:</span> 不是 \\w\n\\b <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>只在某个字的开头或结尾<span class="token punctuation">)</span>\n\\B <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>不在某个字的开头或结尾<span class="token punctuation">)</span>\n\\\\ <span class="token punctuation">:</span> 匹配 \\\n<span class="token punctuation">.</span> <span class="token punctuation">:</span> 匹配任何字符 <span class="token punctuation">(</span>除了 \\n<span class="token punctuation">)</span>\n<span class="token operator">^</span> <span class="token punctuation">:</span> 匹配开头\n$ <span class="token punctuation">:</span> 匹配结尾\n? <span class="token punctuation">:</span> 前面的字符可有可无\n<span class="token operator">*</span> <span class="token punctuation">:</span> 重复零次或多次\n<span class="token operator">+</span> <span class="token punctuation">:</span> 重复一次或多次\n<span class="token punctuation">{</span>n<span class="token punctuation">,</span> m<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 至 m 次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r&quot;^I&quot; 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 <code>re.search()</code> 可以对每一行单独处理.  这个参数就是 <code>flags=re.M</code>, 或者这样写也行 <code>flags=re.MULTILINE</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>string <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\ndog runs to cat.\nI run to dog.\n"""</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># None</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(18, 19), match=\'I\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"(\\d+), Date: (.+)"</span><span class="token punctuation">,</span> <span class="token string">"ID: 021523, Date: Feb/12/2017"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 021523, Date: Feb/12/2017</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 021523</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># Date: Feb/12/2017</span>\n我们甚至可以为找到的内容分组<span class="token punctuation">,</span> 使用 <span class="token punctuation">(</span><span class="token punctuation">)</span> 能轻松实现这件事<span class="token punctuation">.</span> \n通过分组<span class="token punctuation">,</span> 我们能轻松定位所找到的内容<span class="token punctuation">.</span> \n比如在这个 <span class="token punctuation">(</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span> 组里<span class="token punctuation">,</span> 需要找到的是一些数字<span class="token punctuation">,</span> \n在 <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token punctuation">)</span> 这个组里<span class="token punctuation">,</span> 我们会找到 “Date<span class="token punctuation">:</span> “ 后面的所有内容<span class="token punctuation">.</span> \n当使用 <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> 时<span class="token punctuation">,</span> 他会返回所有组里的内容<span class="token punctuation">,</span> \n<span class="token operator">//</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">021523</span>\n而如果给 <span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 里加一个数<span class="token punctuation">,</span> 它就能定位你需要返回哪个组里的信息<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="findall" tabindex="-1"><a class="header-anchor" href="#findall" aria-hidden="true">#</a> findall</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># findall 找到所有项返回一个列表</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    \n<span class="token comment"># [\'run\', \'ran\']</span>\n\n<span class="token comment"># | : or</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"(run|ran)"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># [\'run\', \'ran\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="如何巧妙的替换、分割字符串" tabindex="-1"><a class="header-anchor" href="#如何巧妙的替换、分割字符串" aria-hidden="true">#</a> 如何巧妙的替换、分割字符串</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"r[au]ns"</span><span class="token punctuation">,</span> <span class="token string">"catches"</span><span class="token punctuation">,</span> <span class="token string">"dog runs to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># dog catches to cat</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r"[,;\\.]"</span><span class="token punctuation">,</span> <span class="token string">"a;b,c.d;e"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># [\'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="封装一个正则表达式" tabindex="-1"><a class="header-anchor" href="#封装一个正则表达式" aria-hidden="true">#</a> 封装一个正则表达式</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>compiled_re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>compiled_re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"dog ran to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(4, 7), match=\'ran\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/正则表达式.html",pathLocale:"/",permalink:null,routeMeta:{title:"正则表达式"},slug:"正则表达式",filePath:"/root/blog/blogs/Python/正则表达式.md",filePathRelative:"blogs/Python/正则表达式.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.vue",componentFilePathRelative:"pages/blogs/Python/正则表达式.html.vue",componentFileChunkName:"v-2fb64b5c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.js",dataFilePathRelative:"pages/blogs/Python/正则表达式.html.js",dataFileChunkName:"v-2fb64b5c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/正则表达式.html",htmlFilePathRelative:"blogs/Python/正则表达式.html"},{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"}]},"/tags/pypi/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"pypi",pages:[{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"}]},"/tags/dockermingling/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"dockermingling",pages:[{data:{key:"v-d8264f08",path:"/blogs/notes/Docker%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],git:{},filePathRelative:"blogs/notes/Docker命令合集.md"},key:"v-d8264f08",path:"/blogs/notes/Dockerminglingheji.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],content:'\r\nDocker以及Dockerfile命令合集-持续更新。\r\n\x3c!-- more --\x3e\r\n\r\n## Docker\r\n\r\n**build镜像(有Dockerfile)**\r\n\r\n```shell\r\ndocker build -t myimage --network host .\r\n```\r\n\r\n> myimage是自定义镜像名，可自行更改, -t [命名]\r\n>\r\n> 公司配备一般还要加上 --network host才能访问请求网络\r\n\r\n**实例化一个容器**\r\n\r\n```shell\r\ndocker run -d --name bili --network host --restart unless-stopped -p 9090:9090 -p 8022:22 myimage\r\n```\r\n\r\n> -d 在后台运行容器\r\n>\r\n> -p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p） \r\n>\r\n> myimage 镜像名字\r\n>\r\n> -it  i是保持输入，t是将日志绑定伪终端输出\r\n>\r\n> --restart unless-stopped 这个适用于自动重开容器\r\n\r\n**进入容器内部**\r\n\r\n```shell\r\ndocker exec -it 容器id/容器名字 bash\r\n```\r\n\r\n## 如何优雅的退出容器但是不停止容器运行？\r\n  `ctrl`+`P`+`Q` **切记，如果你有热键绑定，先取消**\r\n  然后`docker ps`就能看到你的容器在运行\r\n\r\n**查看镜像或者容器**\r\n\r\n```\r\n#镜像\r\ndocker images\r\n\r\n#容器(正在运行的)\r\ndocker ps\r\n\r\n#容器(所有)\r\ndocker ps -a\r\n```\r\n\r\n**删除容器**\r\n\r\n```\r\ndocker stop 容器id && docker rm 容器id\r\n```\r\n\r\n> 如果容器实例没有运行，执行后半句,容器id也可以是名字\r\n\r\n**删除镜像**\r\n\r\n```\r\ndocker rmi 镜像id/镜像名字\r\n#如果提示无法删除，有attach其他镜像，则执行下面语句\r\ndocker rmi -f 镜像id/镜像名字\r\n```\r\n\r\n> 先要暂停和删除该镜像下的所有容器才能删除镜像\r\n\r\n**查看容器运行失败日志**\r\n\r\n很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息\r\n\r\n```\r\n# 获取日志地址\r\ndocker inspect --format \'{{.LogPath}}\' 容器id\r\n# 这时会打印一串地址，复制\r\n# 通过cat命令查看日志\r\ncat 刚刚复制的地址\r\n\r\n```\r\n\r\n**查看容器运行时日志**\r\n\r\n```\r\n# 适用日志不多，因为是把全部日志输出(打印实时log)\r\ndocker logs -f 容器名字\r\n\r\n# 输出最近10条日志\r\ndocker logs --tail 10 容器名字\r\n\r\n# 筛选log(查找“error”)\r\ndocker logs | grep error\r\n```\r\n\r\n**如果进入了虚拟终端`-it`，使用`ctrl`+`P` `Q`(一起按) 达成退出但不停止容器运行**\r\n\r\n## Dockerfile\r\n\r\n**Dockerfile：一个文件命名为Dockerfile，无后缀**\r\n\r\n```dockerfile\r\nFROM python\r\n# FROM 指定基础镜像\r\n\r\nCOPY ./app /app\r\n# COPY [文件1/文件夹1] [路径]\r\n# 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径\r\n\r\nWORKDIR /app\r\n# 指定工作目录\r\n\r\nRUN apt-get update -y && \\\r\n\tapt-get install -y vim && \\\r\n\tpip3 install -r requirements.txt\r\n# RUN 执行命令，务必命令使用&&连起来(\\：意思换行)\r\n\r\nCMD ["python3","main.py"]\r\n# CMD 容器启动时执行的命令\r\n\r\nEXPOSE 9090\r\n# 声明暴露指定端口，并不是真的暴露，帮助理解\r\n```\r\n\r\n## Docker hub\r\n\r\n现有一个`docker hub`账号和新建一个公开仓库\r\n\r\n```shell\r\n# 1\r\ndocker tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\r\n\r\n# 2 \r\ndocker login\r\n\r\n# 3 \r\ndocker push 目标仓库名字/用户名:tag\r\n```\r\n\r\n',contentRendered:'<p>Docker以及Dockerfile命令合集-持续更新。</p>\n\x3c!-- more --\x3e\n<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>\n<p><strong>build镜像(有Dockerfile)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> build -t myimage --network <span class="token function">host</span> <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>myimage是自定义镜像名，可自行更改, -t [命名]</p>\n<p>公司配备一般还要加上 --network host才能访问请求网络</p>\n</blockquote>\n<p><strong>实例化一个容器</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name bili --network <span class="token function">host</span> --restart unless-stopped -p <span class="token number">9090</span>:9090 -p <span class="token number">8022</span>:22 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>-d 在后台运行容器</p>\n<p>-p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p）</p>\n<p>myimage 镜像名字</p>\n<p>-it  i是保持输入，t是将日志绑定伪终端输出</p>\n<p>--restart unless-stopped 这个适用于自动重开容器</p>\n</blockquote>\n<p><strong>进入容器内部</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it 容器id/容器名字 <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何优雅的退出容器但是不停止容器运行" tabindex="-1"><a class="header-anchor" href="#如何优雅的退出容器但是不停止容器运行" aria-hidden="true">#</a> 如何优雅的退出容器但是不停止容器运行？</h2>\n<p><code>ctrl</code>+<code>P</code>+<code>Q</code> <strong>切记，如果你有热键绑定，先取消</strong>\n然后<code>docker ps</code>就能看到你的容器在运行</p>\n<p><strong>查看镜像或者容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>#镜像\ndocker images\n\n#容器(正在运行的)\ndocker ps\n\n#容器(所有)\ndocker ps -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>删除容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker stop 容器id &amp;&amp; docker rm 容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>如果容器实例没有运行，执行后半句,容器id也可以是名字</p>\n</blockquote>\n<p><strong>删除镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rmi 镜像id/镜像名字\n#如果提示无法删除，有attach其他镜像，则执行下面语句\ndocker rmi -f 镜像id/镜像名字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>先要暂停和删除该镜像下的所有容器才能删除镜像</p>\n</blockquote>\n<p><strong>查看容器运行失败日志</strong></p>\n<p>很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 获取日志地址\ndocker inspect --format \'{{.LogPath}}\' 容器id\n# 这时会打印一串地址，复制\n# 通过cat命令查看日志\ncat 刚刚复制的地址\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>查看容器运行时日志</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 适用日志不多，因为是把全部日志输出(打印实时log)\ndocker logs -f 容器名字\n\n# 输出最近10条日志\ndocker logs --tail 10 容器名字\n\n# 筛选log(查找“error”)\ndocker logs | grep error\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>如果进入了虚拟终端<code>-it</code>，使用<code>ctrl</code>+<code>P</code> <code>Q</code>(一起按) 达成退出但不停止容器运行</strong></p>\n<h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2>\n<p><strong>Dockerfile：一个文件命名为Dockerfile，无后缀</strong></p>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python</span>\n<span class="token comment"># FROM 指定基础镜像</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./app /app</span>\n<span class="token comment"># COPY [文件1/文件夹1] [路径]</span>\n<span class="token comment"># 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径</span>\n\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>\n<span class="token comment"># 指定工作目录</span>\n\n<span class="token instruction"><span class="token keyword">RUN</span> apt-get update -y &amp;&amp; <span class="token operator">\\</span>\n\tapt-get install -y vim &amp;&amp; <span class="token operator">\\</span>\n\tpip3 install -r requirements.txt</span>\n<span class="token comment"># RUN 执行命令，务必命令使用&amp;&amp;连起来(\\：意思换行)</span>\n\n<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"python3"</span>,<span class="token string">"main.py"</span>]</span>\n<span class="token comment"># CMD 容器启动时执行的命令</span>\n\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9090</span>\n<span class="token comment"># 声明暴露指定端口，并不是真的暴露，帮助理解</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker hub</h2>\n<p>现有一个<code>docker hub</code>账号和新建一个公开仓库</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 1</span>\n<span class="token function">docker</span> tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\n\n<span class="token comment"># 2 </span>\n<span class="token function">docker</span> login\n\n<span class="token comment"># 3 </span>\n<span class="token function">docker</span> push 目标仓库名字/用户名:tag\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Docker命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker命令合集"},slug:"Docker命令合集",filePath:"/root/blog/blogs/notes/Docker命令合集.md",filePathRelative:"blogs/notes/Docker命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/Docker命令合集.html.vue",componentFileChunkName:"v-d8264f08",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/Docker命令合集.html.js",dataFileChunkName:"v-d8264f08",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Docker命令合集.html",htmlFilePathRelative:"blogs/notes/Docker命令合集.html"}]},"/tags/gitignore/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"gitignore",pages:[{data:{key:"v-60868ce6",path:"/blogs/notes/gitignore%E6%95%99%E5%AD%A6.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/notes/gitignore教学.md"},key:"v-60868ce6",path:"/blogs/notes/gitignorejiaoxue.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],content:'\r\n**.gitignore是一个好东西**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n**.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件**\r\n\r\n**Q：我写了规则在里面，怎么上传的时候没有生效**\r\n\r\n**A：git缓存需要清除**\r\n\r\n```sh\r\n# solution\r\ngit rm -r --cached .\r\ngit add .\r\ngit commit -m "update .gitignore"\r\n```\r\n\r\n**Pycharm的.gitignore**\r\n\r\n```sh\r\n# Created by .ignore support plugin (hsz.mobi)\r\n### Python template\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\n# 如果有前端打包的项目这里要去掉 dist/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n### VirtualEnv template\r\n# Virtualenv\r\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\r\n.Python\r\n[Bb]in\r\n[Ii]nclude\r\n[Ll]ib\r\n[Ll]ib64\r\n[Ll]ocal\r\n[Ss]cripts\r\npyvenv.cfg\r\n.venv\r\npip-selfcheck.json\r\n### JetBrains template\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff:\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/dictionaries\r\n.idea/vcs.xml\r\n.idea/jsLibraryMappings.xml\r\n\r\n# Sensitive or high-churn files:\r\n.idea/dataSources.ids\r\n.idea/dataSources.xml\r\n.idea/dataSources.local.xml\r\n.idea/sqlDataSources.xml\r\n.idea/dynamic.xml\r\n.idea/uiDesigner.xml\r\n\r\n# Gradle:\r\n.idea/gradle.xml\r\n.idea/libraries\r\n\r\n# Mongo Explorer plugin:\r\n.idea/mongoSettings.xml\r\n\r\n.idea/\r\n\r\n## File-based project format:\r\n*.iws\r\n\r\n## Plugin-specific files:\r\n\r\n# IntelliJ\r\n/out/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n```\r\n\r\n',contentRendered:'<p><strong>.gitignore是一个好东西</strong></p>\n\x3c!-- more --\x3e\n<p><strong>.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件</strong></p>\n<p><strong>Q：我写了规则在里面，怎么上传的时候没有生效</strong></p>\n<p><strong>A：git缓存需要清除</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># solution</span>\n<span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">"update .gitignore"</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Pycharm的.gitignore</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># Created by .ignore support plugin (hsz.mobi)</span>\n<span class="token comment">### Python template</span>\n<span class="token comment"># Byte-compiled / optimized / DLL files</span>\n__pycache__/\n*.py<span class="token punctuation">[</span>cod<span class="token punctuation">]</span>\n*<span class="token variable">$py</span>.class\n\n<span class="token comment"># C extensions</span>\n*.so\n\n<span class="token comment"># Distribution / packaging</span>\n.Python\nenv/\nbuild/\ndevelop-eggs/\n<span class="token comment"># 如果有前端打包的项目这里要去掉 dist/</span>\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n<span class="token comment"># PyInstaller</span>\n<span class="token comment">#  Usually these files are written by a python script from a template</span>\n<span class="token comment">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span>\n*.manifest\n*.spec\n\n<span class="token comment"># Installer logs</span>\npip-log.txt\npip-delete-this-directory.txt\n\n<span class="token comment"># Unit test / coverage reports</span>\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n<span class="token comment"># Translations</span>\n*.mo\n*.pot\n\n<span class="token comment"># Django stuff:</span>\n*.log\nlocal_settings.py\n\n<span class="token comment"># Flask stuff:</span>\ninstance/\n.webassets-cache\n\n<span class="token comment"># Scrapy stuff:</span>\n.scrapy\n\n<span class="token comment"># Sphinx documentation</span>\ndocs/_build/\n\n<span class="token comment"># PyBuilder</span>\ntarget/\n\n<span class="token comment"># IPython Notebook</span>\n.ipynb_checkpoints\n\n<span class="token comment"># pyenv</span>\n.python-version\n\n<span class="token comment"># celery beat schedule file</span>\ncelerybeat-schedule\n\n<span class="token comment"># dotenv</span>\n.env\n\n<span class="token comment"># virtualenv</span>\nvenv/\nENV/\n\n<span class="token comment"># Spyder project settings</span>\n.spyderproject\n\n<span class="token comment"># Rope project settings</span>\n.ropeproject\n<span class="token comment">### VirtualEnv template</span>\n<span class="token comment"># Virtualenv</span>\n<span class="token comment"># http://iamzed.com/2009/05/07/a-primer-on-virtualenv/</span>\n.Python\n<span class="token punctuation">[</span>Bb<span class="token punctuation">]</span>in\n<span class="token punctuation">[</span>Ii<span class="token punctuation">]</span>nclude\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib64\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ocal\n<span class="token punctuation">[</span>Ss<span class="token punctuation">]</span>cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n<span class="token comment">### JetBrains template</span>\n<span class="token comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm</span>\n<span class="token comment"># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span>\n\n<span class="token comment"># User-specific stuff:</span>\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n<span class="token comment"># Sensitive or high-churn files:</span>\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n<span class="token comment"># Gradle:</span>\n.idea/gradle.xml\n.idea/libraries\n\n<span class="token comment"># Mongo Explorer plugin:</span>\n.idea/mongoSettings.xml\n\n.idea/\n\n<span class="token comment">## File-based project format:</span>\n*.iws\n\n<span class="token comment">## Plugin-specific files:</span>\n\n<span class="token comment"># IntelliJ</span>\n/out/\n\n<span class="token comment"># mpeltonen/sbt-idea plugin</span>\n.idea_modules/\n\n<span class="token comment"># JIRA plugin</span>\natlassian-ide-plugin.xml\n\n<span class="token comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span>\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/gitignore教学.html",pathLocale:"/",permalink:null,routeMeta:{title:"gitignore教学"},slug:"gitignore教学",filePath:"/root/blog/blogs/notes/gitignore教学.md",filePathRelative:"blogs/notes/gitignore教学.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.vue",componentFilePathRelative:"pages/blogs/notes/gitignore教学.html.vue",componentFileChunkName:"v-60868ce6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.js",dataFilePathRelative:"pages/blogs/notes/gitignore教学.html.js",dataFileChunkName:"v-60868ce6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/gitignore教学.html",htmlFilePathRelative:"blogs/notes/gitignore教学.html"}]},"/tags/pipenv/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"pipenv",pages:[{data:{key:"v-3cc188f4",path:"/blogs/notes/pipenv%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],git:{},filePathRelative:"blogs/notes/pipenv命令合集.md"},key:"v-3cc188f4",path:"/blogs/notes/pipenvminglingheji.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],content:"\r\npipenv命令合集。\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## pipenv指南\r\n\r\n### 特点\r\n\r\n- 不需要再维护requirements.txt，用pipfile和pipfile.lock\r\n- 兼容多个python版本\r\n\r\n### 安装\r\n\r\n```sh\r\npip install pipenv\r\n```\r\n\r\n### 常用命令\r\n\r\n```\r\n# 安装包\r\npipenv install\r\n# pipenv install flask\r\n\r\n# 激活当前项目的虚拟环境\r\npipenv shell\r\n\r\n# 安装开发依赖包\r\npipenv install pytest --dev\r\n\r\n# 图形显示包依赖关系\r\npipenv graph\r\n\r\n# 生成lockfile\r\npipenv lock\r\n\r\n# 删除所有的安装包\r\npipenv uninstall --all\r\n```\r\n\r\n",contentRendered:'<p>pipenv命令合集。</p>\n\x3c!-- more --\x3e\n<h2 id="pipenv指南" tabindex="-1"><a class="header-anchor" href="#pipenv指南" aria-hidden="true">#</a> pipenv指南</h2>\n<h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3>\n<ul>\n<li>不需要再维护requirements.txt，用pipfile和pipfile.lock</li>\n<li>兼容多个python版本</li>\n</ul>\n<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>pip <span class="token function">install</span> pipenv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 安装包\npipenv install\n# pipenv install flask\n\n# 激活当前项目的虚拟环境\npipenv shell\n\n# 安装开发依赖包\npipenv install pytest --dev\n\n# 图形显示包依赖关系\npipenv graph\n\n# 生成lockfile\npipenv lock\n\n# 删除所有的安装包\npipenv uninstall --all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/pipenv命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"pipenv命令合集"},slug:"pipenv命令合集",filePath:"/root/blog/blogs/notes/pipenv命令合集.md",filePathRelative:"blogs/notes/pipenv命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.vue",componentFileChunkName:"v-3cc188f4",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.js",dataFileChunkName:"v-3cc188f4",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/pipenv命令合集.html",htmlFilePathRelative:"blogs/notes/pipenv命令合集.html"}]},"/tags/Eslint/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"Eslint",pages:[{data:{key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],git:{},filePathRelative:"blogs/tech/Eslint.md"},key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],content:"## ESlint\r\n\r\n**ESlint有很多种安装方式，不过我建议大家是采用`npm`方式来熟悉**\r\n\r\n**当然不止ESlint这一种静态分析工具，各有所爱罢了**\r\n\r\n### **配置**\r\n\r\nESlint不是项目的必要依赖项，**仅仅是开发环境需要用到.**\r\n\r\n```shell\r\nnpm install eslint --save-dev\r\n\r\n// 安装成功后，初始化默认的ESlint\r\nnode_modules/.bin/eslint --init\r\n```\r\n\r\n该配置会保存到`.eslintrc.js`文件\r\n\r\n```javascript\r\nmodule.exports = {\r\n    'env': {\r\n        'commonjs': true,\r\n        'es2021': true,\r\n        'node': true\r\n    },\r\n    'extends': 'eslint:recommended',\r\n    'parserOptions': {\r\n        'ecmaVersion': 12\r\n    },\r\n    'rules': {\r\n        'indent': [\r\n            'error',\r\n            4\r\n        ],\r\n        'linebreak-style': [\r\n            'error',\r\n            'unix'\r\n        ],\r\n        'quotes': [\r\n            'error',\r\n            'single'\r\n        ],\r\n        'semi': [\r\n            'error',\r\n            'never'\r\n        ],\r\n        'eqeqeq': 'error',\r\n        'no-trailing-spaces': 'error',\r\n        'object-curly-spacing': [\r\n            'error', 'always'\r\n        ],\r\n        'arrow-spacing': [\r\n            'error', { 'before': true, 'after': true }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n**更改缩进级别为两个空格**\r\n\r\n```json\r\n\"indent\": [\r\n    \"error\",\r\n    2\r\n],\r\n```\r\n\r\n**使用`ESlint`检查可以用以下命令或者配置一个`npm`脚本**\r\n\r\n```\r\nnode_modules/.bin/eslint index.js\r\n```\r\n\r\n脚本\r\n\r\n```json\r\n{\r\n  // ...\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    // ...\r\n    \"lint\": \"eslint .\"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n`npm run build`会检查项目中的每一个文件，**我们并不希望一些文件被检查**\r\n\r\n**根目录新建一个`.eslintignore`文件**\r\n\r\n```shell\r\nbuild\r\n// 或者不需要检查的\r\n```\r\n\r\n**我们配置好之后自然是完善一套规则**\r\n\r\n**增加`eqeqeq`规则，除了三个相等号之外，相等要被检查。规则在`rules`字段下添加**\r\n\r\n```json\r\n{\r\n  // ...\r\n  'rules': {\r\n    // ...\r\n   'eqeqeq': 'error',\r\n    // 比如避免不必要的拖尾空格，大括号之间有一个空格等等\r\n      'no-trailing-spaces': 'error',\r\n    'object-curly-spacing': [\r\n        'error', 'always'\r\n    ],\r\n    'arrow-spacing': [\r\n        'error', { 'before': true, 'after': true }\r\n    ]\r\n  },\r\n    // 警告不出现在控制台。\r\n    'no-console': 0\r\n}\r\n```\r\n\r\n**还有其他的流行规则风范比如[Airbnb](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb)**\r\n\r\n",contentRendered:'<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESlint</h2>\n<p><strong>ESlint有很多种安装方式，不过我建议大家是采用<code>npm</code>方式来熟悉</strong></p>\n<p><strong>当然不止ESlint这一种静态分析工具，各有所爱罢了</strong></p>\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <strong>配置</strong></h3>\n<p>ESlint不是项目的必要依赖项，<strong>仅仅是开发环境需要用到.</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev\n\n// 安装成功后，初始化默认的ESlint\nnode_modules/.bin/eslint --init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该配置会保存到<code>.eslintrc.js</code>文件</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'env\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'commonjs\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'es2021\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'node\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'extends\'</span><span class="token operator">:</span> <span class="token string">\'eslint:recommended\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'parserOptions\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'ecmaVersion\'</span><span class="token operator">:</span> <span class="token number">12</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'rules\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'indent\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token number">4</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'linebreak-style\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'unix\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'quotes\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'single\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'semi\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'never\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'eqeqeq\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'no-trailing-spaces\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'object-curly-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'always\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'arrow-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">\'before\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">\'after\'</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>更改缩进级别为两个空格</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"error"</span><span class="token punctuation">,</span>\n    <span class="token number">2</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用<code>ESlint</code>检查可以用以下命令或者配置一个<code>npm</code>脚本</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>node_modules/.bin/eslint index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>脚本</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node index.js"</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint ."</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>npm run build</code>会检查项目中的每一个文件，<strong>我们并不希望一些文件被检查</strong></p>\n<p><strong>根目录新建一个<code>.eslintignore</code>文件</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>build\n// 或者不需要检查的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>我们配置好之后自然是完善一套规则</strong></p>\n<p><strong>增加<code>eqeqeq</code>规则，除了三个相等号之外，相等要被检查。规则在<code>rules</code>字段下添加</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  \'rules\'<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n   \'eqeqeq\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    <span class="token comment">// 比如避免不必要的拖尾空格，大括号之间有一个空格等等</span>\n      \'no-trailing-spaces\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    \'object-curly-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> \'always\'\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \'arrow-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> <span class="token punctuation">{</span> \'before\'<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> \'after\'<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 警告不出现在控制台。</span>\n    \'no-console\'<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>还有其他的流行规则风范比如<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb" target="_blank" rel="noopener noreferrer">Airbnb<ExternalLinkIcon/></a></strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Eslint.html",pathLocale:"/",permalink:null,routeMeta:{title:"Eslint项目配置"},slug:"Eslint",filePath:"/root/blog/blogs/tech/Eslint.md",filePathRelative:"blogs/tech/Eslint.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.vue",componentFilePathRelative:"pages/blogs/tech/Eslint.html.vue",componentFileChunkName:"v-21adab26",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.js",dataFilePathRelative:"pages/blogs/tech/Eslint.html.js",dataFileChunkName:"v-21adab26",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Eslint.html",htmlFilePathRelative:"blogs/tech/Eslint.html"}]},"/tags/npm/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"npm",pages:[{data:{key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],git:{},filePathRelative:"blogs/tech/npm.md"},key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],content:'## NodeJS\r\n\r\n几乎所有的JavaScript项目都是使用node包管理器定义的，也就是`npm`\r\n\r\n使用`npm`的一个明确说明是位于项目根目录的`package.json`\r\n\r\n```shell\r\nnpm install axios\r\nnpm install json-server --save-dev\r\n```\r\n\r\n**参数间有差别，`axios`被安装为应用的运行时依赖项`--save`,程序本身需要库的存在，另一个`json-server`是作为开发依赖项`--save-dev`,程序本身不需要它。**\r\n\r\n### Init\r\n\r\n```shell\r\nnpm init\r\n// 定义\r\n{\r\n  // ...\r\n  "scripts": {\r\n    "start": "node index.js",\r\n    "test": "echo \\"Error: no test specified\\" && exit 1"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n> 生成`package.json`文件\r\n\r\n```shell\r\n"express": "^4.17.1"\r\n// ^:安装版本至少为4.17.1\r\n```\r\n\r\n### nodemon\r\n\r\n```\r\nnpm install --save-dev nodemon\r\n```\r\n\r\n**热加载,同时在`package.json`中添加一个`dev`命令`nodemon xxx.js`**\r\n\r\n`npm run dev`\r\n\r\n',contentRendered:'<h2 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> NodeJS</h2>\n<p>几乎所有的JavaScript项目都是使用node包管理器定义的，也就是<code>npm</code></p>\n<p>使用<code>npm</code>的一个明确说明是位于项目根目录的<code>package.json</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios\n<span class="token function">npm</span> <span class="token function">install</span> json-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>参数间有差别，<code>axios</code>被安装为应用的运行时依赖项<code>--save</code>,程序本身需要库的存在，另一个<code>json-server</code>是作为开发依赖项<code>--save-dev</code>,程序本身不需要它。</strong></p>\n<h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> Init</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> init\n// 定义\n<span class="token punctuation">{</span>\n  // <span class="token punctuation">..</span>.\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"start"</span><span class="token builtin class-name">:</span> <span class="token string">"node index.js"</span>,\n    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\\&quot;">\\"</span>Error: no test specified<span class="token entity" title="\\&quot;">\\"</span> &amp;&amp; exit 1"</span>\n  <span class="token punctuation">}</span>,\n  // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote>\n<p>生成<code>package.json</code>文件</p>\n</blockquote>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">"express"</span><span class="token builtin class-name">:</span> <span class="token string">"^4.17.1"</span>\n// ^:安装版本至少为4.17.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm install --save-dev nodemon\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>热加载,同时在<code>package.json</code>中添加一个<code>dev</code>命令<code>nodemon xxx.js</code></strong></p>\n<p><code>npm run dev</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/npm.html",pathLocale:"/",permalink:null,routeMeta:{title:"npm基础"},slug:"npm",filePath:"/root/blog/blogs/tech/npm.md",filePathRelative:"blogs/tech/npm.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.vue",componentFilePathRelative:"pages/blogs/tech/npm.html.vue",componentFileChunkName:"v-008bc010",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.js",dataFilePathRelative:"pages/blogs/tech/npm.html.js",dataFileChunkName:"v-008bc010",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/npm.html",htmlFilePathRelative:"blogs/tech/npm.html"}]},"/tags/githubdaili/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"githubdaili",pages:[{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"}]},"/tags/dailipeizhi/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"dailipeizhi",pages:[{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"}]},"/tags/guoxingPS5/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"guoxingPS5",pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"}]},"/tags/fanqiang/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"fanqiang",pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"}]},"/tags/clash/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"clash",pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"},{data:{key:"v-54860d63",path:"/blogs/notes/clash%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],git:{},filePathRelative:"blogs/notes/clash使用技巧.md"},key:"v-54860d63",path:"/blogs/notes/clashshiyongjiqiao.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],content:'\r\n**clash基本操作指南，（~~基于有机场的~~）阅读本文1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## install\r\n\r\n[官方下载连接](https://github.com/Fndroid/clash_for_windows_pkg/releases)\r\n\r\n**下载好后，打开clash**\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\r\n\r\n**建议下载你~~机场~~的profile，然后import导入，点一下profile启用**\r\n\r\n## Tips\r\n\r\n![profile](https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png)\r\n\r\n**国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode->rule**\r\n\r\n**或者**\r\n\r\n![open](https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png)\r\n\r\n**我不建议把其他流量设置为国外流量，我会解释为什么这样做**\r\n\r\n**[谷歌商店搜索安装switchyomega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon)**\r\n\r\n**比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png)\r\n\r\n**回到我们clash的Profiles界面，选择下图这个**\r\n\r\n![profiles](https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png)\r\n\r\n- 选择添加ADD\r\n\r\n  ![add](https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png)\r\n\r\n- content 写入`hupu.com`,  type选择 `DOMAIN-SUFFIX` , Proxy选择 `Direct`\r\n\r\n**当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择`Direct`，如果遇到别的网站需要代理的，选择`国外流量`即可**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png)\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理**\r\n\r\n## 最后\r\n\r\n**为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的**',contentRendered:'<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>\n<p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">官方下载连接<ExternalLinkIcon/></a></p>\n<p><strong>下载好后，打开clash</strong></p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\n<p><strong>建议下载你<s>机场</s>的profile，然后import导入，点一下profile启用</strong></p>\n<h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png" alt="profile"></p>\n<p><strong>国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode-&gt;rule</strong></p>\n<p><strong>或者</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png" alt="open"></p>\n<p><strong>我不建议把其他流量设置为国外流量，我会解释为什么这样做</strong></p>\n<p><strong><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">谷歌商店搜索安装switchyomega<ExternalLinkIcon/></a></strong></p>\n<p><strong>比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png" alt="hupu"></p>\n<p><strong>回到我们clash的Profiles界面，选择下图这个</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png" alt="profiles"></p>\n<ul>\n<li>\n<p>选择添加ADD</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png" alt="add"></p>\n</li>\n<li>\n<p>content 写入<code>hupu.com</code>,  type选择 <code>DOMAIN-SUFFIX</code> , Proxy选择 <code>Direct</code></p>\n</li>\n</ul>\n<p><strong>当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择<code>Direct</code>，如果遇到别的网站需要代理的，选择<code>国外流量</code>即可</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png" alt="hupu"></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理</strong></p>\n<h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2>\n<p><strong>为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/clash使用技巧.html",pathLocale:"/",permalink:null,routeMeta:{title:"clash使用技巧"},slug:"clash使用技巧",filePath:"/root/blog/blogs/notes/clash使用技巧.md",filePathRelative:"blogs/notes/clash使用技巧.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.vue",componentFilePathRelative:"pages/blogs/notes/clash使用技巧.html.vue",componentFileChunkName:"v-54860d63",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.js",dataFilePathRelative:"pages/blogs/notes/clash使用技巧.html.js",dataFileChunkName:"v-54860d63",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/clash使用技巧.html",htmlFilePathRelative:"blogs/notes/clash使用技巧.html"}]},"/tags/ziti/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"ziti",pages:[{data:{key:"v-7f7426c5",path:"/blogs/tech/%E6%8D%A2%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%8B%E5%A5%BD%E7%9A%84%E5%AD%97%E4%BD%93.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],git:{},filePathRelative:"blogs/tech/换一个程序员友好的字体.md"},key:"v-7f7426c5",path:"/blogs/tech/huanyigechengxuyuanyouhaodeziti.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],content:"\r\n**介绍一个对程序员比较舒服的字体**\r\n\r\n## 使用\r\n\r\n先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装\r\n\r\n然后开启IDE（比如VS CODE）调到设置或者`ctrl + ,`快捷打开设置 \r\n\r\n![image-20210328231737883](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png)\r\n\r\n**添加完没有生效，请重新打开IDE**\r\n\r\n## JetBrains Mono \r\n\r\n**一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的**\r\n\r\n**当然对于一些视力或者别的爱好~~粗~~的人选择Extra Bold**\r\n\r\n![image-20210328231517174](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png)\r\n\r\n## Cascadia Code\r\n\r\n具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点",contentRendered:'<p><strong>介绍一个对程序员比较舒服的字体</strong></p>\n<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装</p>\n<p>然后开启IDE（比如VS CODE）调到设置或者<code>ctrl + ,</code>快捷打开设置</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png" alt="image-20210328231737883"></p>\n<p><strong>添加完没有生效，请重新打开IDE</strong></p>\n<h2 id="jetbrains-mono" tabindex="-1"><a class="header-anchor" href="#jetbrains-mono" aria-hidden="true">#</a> JetBrains Mono</h2>\n<p><strong>一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的</strong></p>\n<p><strong>当然对于一些视力或者别的爱好<s>粗</s>的人选择Extra Bold</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png" alt="image-20210328231517174"></p>\n<h2 id="cascadia-code" tabindex="-1"><a class="header-anchor" href="#cascadia-code" aria-hidden="true">#</a> Cascadia Code</h2>\n<p>具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/换一个程序员友好的字体.html",pathLocale:"/",permalink:null,routeMeta:{title:"对程序员友好的字体"},slug:"换一个程序员友好的字体",filePath:"/root/blog/blogs/tech/换一个程序员友好的字体.md",filePathRelative:"blogs/tech/换一个程序员友好的字体.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFileChunkName:"v-7f7426c5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.js",dataFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.js",dataFileChunkName:"v-7f7426c5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/换一个程序员友好的字体.html",htmlFilePathRelative:"blogs/tech/换一个程序员友好的字体.html"}]},"/tags/hongmiAC2100shuaji/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"hongmiAC2100shuaji",pages:[{data:{key:"v-08e31ac5",path:"/blogs/tech/%E7%BA%A2%E7%B1%B3AC2100%E5%88%B7%E6%9C%BA.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],git:{},filePathRelative:"blogs/tech/红米AC2100刷机.md"},key:"v-08e31ac5",path:"/blogs/tech/hongmiAC2100shuaji.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],content:"\r\n**从恩山那里学习总结过来的，单刀直入。[感谢大大](http://openwrt.ink:88/archives/s-breed)**\r\n\r\n\r\n\r\n## 前期准备\r\n\r\n[红米AC2100-2.0.7固件](http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin)\r\n\r\n[Padavan固件-下载redmi211.trx](http://openwrt.ink:8666/Padavan/)\r\n\r\nXShell（自行下载）\r\n\r\n> **如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代**\r\n\r\n**红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了**\r\n\r\n**本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪**\r\n\r\n\r\n\r\n## 开始\r\n\r\n综合步骤如果看不懂可以参考[此视频](https://www.bilibili.com/video/BV1Zf4y1v74o)\r\n\r\n**首先登录进[路由器管理地址](192.168.31.1)**\r\n\r\n**点系统状态，手动升级，升级红米ac2100-2.0.7固件**\r\n\r\n**等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址**\r\n\r\n**此时地址会变为**`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/web/home#router`\r\n\r\n复制下来`<STOK>`\r\n\r\n替换stok`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/api/misystem/set_config_iotdev?bssid=Xiaomi&user_id=longdike&ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B` \r\n\r\n**然后将网址复制下来粘贴网页打开，会显示`\"code\":0`代表成功**\r\n\r\n打开xshell，连接`192.168.31.1` 用户名为`root` 密码`admin`\r\n\r\n**直接输入一下命令刷入Breed，并等待20s**\r\n\r\n```\r\ncd /tmp && wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n\r\n或者下面命令：\r\ncd /tmp && wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n```\r\n\r\n**正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）**\r\n\r\n**路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入`192.168.1.1`进入breed**\r\n\r\n**找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存**\r\n\r\n**点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面**\r\n\r\n**开启5G频道->160HZ，冲冲冲**\r\n\r\n",contentRendered:'<p><strong>从恩山那里学习总结过来的，单刀直入。<a href="http://openwrt.ink:88/archives/s-breed" target="_blank" rel="noopener noreferrer">感谢大大<ExternalLinkIcon/></a></strong></p>\n<h2 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h2>\n<p><a href="http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin" target="_blank" rel="noopener noreferrer">红米AC2100-2.0.7固件<ExternalLinkIcon/></a></p>\n<p><a href="http://openwrt.ink:8666/Padavan/" target="_blank" rel="noopener noreferrer">Padavan固件-下载redmi211.trx<ExternalLinkIcon/></a></p>\n<p>XShell（自行下载）</p>\n<blockquote>\n<p><strong>如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代</strong></p>\n</blockquote>\n<p><strong>红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了</strong></p>\n<p><strong>本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪</strong></p>\n<h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2>\n<p>综合步骤如果看不懂可以参考<a href="https://www.bilibili.com/video/BV1Zf4y1v74o" target="_blank" rel="noopener noreferrer">此视频<ExternalLinkIcon/></a></p>\n<p><strong>首先登录进<a href="192.168.31.1">路由器管理地址</a></strong></p>\n<p><strong>点系统状态，手动升级，升级红米ac2100-2.0.7固件</strong></p>\n<p><strong>等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址</strong></p>\n<p><strong>此时地址会变为</strong><code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</code></p>\n<p>复制下来<code>&lt;STOK&gt;</code></p>\n<p>替换stok<code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20\'s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg\'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</code></p>\n<p><strong>然后将网址复制下来粘贴网页打开，会显示<code>&quot;code&quot;:0</code>代表成功</strong></p>\n<p>打开xshell，连接<code>192.168.31.1</code> 用户名为<code>root</code> 密码<code>admin</code></p>\n<p><strong>直接输入一下命令刷入Breed，并等待20s</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n\n或者下面命令：\ncd /tmp &amp;&amp; wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）</strong></p>\n<p><strong>路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入<code>192.168.1.1</code>进入breed</strong></p>\n<p><strong>找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存</strong></p>\n<p><strong>点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面</strong></p>\n<p><strong>开启5G频道-&gt;160HZ，冲冲冲</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/红米AC2100刷机.html",pathLocale:"/",permalink:null,routeMeta:{title:"红米AC2100刷机"},slug:"红米AC2100刷机",filePath:"/root/blog/blogs/tech/红米AC2100刷机.md",filePathRelative:"blogs/tech/红米AC2100刷机.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.vue",componentFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.vue",componentFileChunkName:"v-08e31ac5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.js",dataFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.js",dataFileChunkName:"v-08e31ac5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/红米AC2100刷机.html",htmlFilePathRelative:"blogs/tech/红米AC2100刷机.html"}]},"/tags/v2ray/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"v2ray",pages:[{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"}]},"/tags/centos/1/":{pageSize:10,total:3,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"centos",pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"}]},"/tags/SSL/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"SSL",pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"}]},"/tags/ubuntu/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"ubuntu",pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"}]},"/tags/qianduanhuanjingpeizhi/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"qianduanhuanjingpeizhi",pages:[{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"}]},"/tags/Vue3/1/":{pageSize:10,total:2,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"Vue3",pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"},{data:{key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-notes-1.md"},key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],content:'\r\n**阅读本文大概需要10分钟**\r\n\x3c!-- more --\x3e\r\n\r\n**先认识代码变动和部分新特性**\r\n\r\n::: tip\r\n\r\n### 认识重要 API\r\n\r\n```javascript\r\nimport {\r\n    createApp,\t\t// 创建一个APP实例\r\n    onMounted,\t\t// 生命周期写法变了\r\n    computed,\t\t// 方法变了\r\n    watch,\t\t\t// 同上\r\n    watchEffect,\t// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行\r\n    reactive,\t\t// 传入一个普通对象返回一个响应式对象\r\n    ref,\t\t\t// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用\r\n    toRef,\t\t\t// 为一个reactive对象的属性创建一个ref\r\n    toRefs,\t\t\t// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _createApp_\r\n\r\n```javascript\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\ncreateApp(App).mount("#app");\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _onMounted_\r\n\r\n```javascript\r\nimport { onMounted, defineComponent } from "vue";\r\nexport default defineComponent({\r\n  setup() {\r\n    // 使用需要放在setup()里面\r\n    onMounted(() => {\r\n      console.log("冲冲冲");\r\n    });\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _computed_\r\n\r\n```javascript\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(1);\r\nconst result = computed(() => count.value + 1);\r\n// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象\r\n// 对象的话，是不是对象.value就很好理解下面为什么这样写了？\r\nconsole.log(result.value); // 2\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _watch_\r\n\r\n```javascript\r\nimport { reactive, watch } from "vue";\r\n\r\nconst state = reactive({ count: 0 });\r\n//reactive 接受一个普通对象，返回一个响应式对象\r\n// state已经是一个响应式对象了，所以取值就是对象.count\r\nwatch(\r\n  () => state.count,\r\n  (count, prevCount) => {\r\n    // todo\r\n  }\r\n);\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### :star: _reactive 单独使用情况_\r\n\r\n```javascript\r\nimport { reactive } from "vue";\r\n\r\nconst a = reactive({ count: 0 });\r\na.count++;\r\nconsole.log(a.count); // 1\r\n```\r\n\r\n#### :star2: 返回给组件形式一\r\n\r\n```javascript\r\n// 组件\r\n<template>\r\n    <p> {{ a.count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\n// 逻辑\r\nimport { reactive, defineComponent } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    return { a };\r\n  },\r\n});\r\n```\r\n\r\n#### _:star2:返回组件形式二 & toRefs_\r\n\r\n```javascript\r\n<template>\r\n  <p> {{ count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\nimport { reactive, defineComponent, toRefs } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    // toRefs把响应式对象转为普通对象\r\n    // 再解析一下就是，toRefs是一个解封过程，reactive是封装过程\r\n    return { ...toRefs(a) };\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _ref_\r\n\r\n```javascript\r\n// ref 接受一个参数，并返回一个响应式且可以改变的对象。\r\n// 同时ref拥有一个指向内部值得单一属性.value\r\n\r\nconst count = ref(0);\r\nconsole.log(count.value); // 0\r\n\r\ncount.value++;\r\nconsole.log(count.value); // 1\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _toRef_\r\n\r\n```javascript\r\nimport { defineComponent, toRef, reactive } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({\r\n      cow: 0,\r\n      bug: 1,\r\n    });\r\n    // toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)\r\n    const count = toRef(a, "cow");\r\n    // 相当于 const count = ref(0)\r\n    // count 已经是cow的响应式对象了，所以值是不是该？\r\n    count.value++; // 这时a.cow已经被改变了\r\n    console.log(a.cow); // 1\r\n    // 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？\r\n\r\n    a.cow++;\r\n    console.log(count.value); // 2\r\n    // 这里是不是能理解ref传递了？\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n# Vue3 整体纵览\r\n\r\n### 一、setup 函数\r\n\r\n​ **setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法**\r\n\r\n​ **Vue3 去掉了 data 返回的格式，统一再 setup 返回**\r\n\r\n​\r\n\r\n### 二、生命周期\r\n\r\n```\r\nsetup() {\r\n    onMounted(() => {\r\n      console.log(\'组件挂载\');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      console.log(\'组件卸载\');\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\'组件更新\');\r\n    });\r\n\r\n    onBeforeUpdate(() => {\r\n      console.log(\'组件将要更新\');\r\n    });\r\n\r\n    onActivated(() => {\r\n      console.log(\'keepAlive 组件 激活\');\r\n    });\r\n\r\n    onDeactivated(() => {\r\n      console.log(\'keepAlive 组件 非激活\');\r\n    });\r\n    return {};\r\n  },\r\n\r\n```\r\n\r\n### 三、vue-router\r\n\r\n```javascript\r\nimport { useRoute, useRouter } from "vue-router";\r\n\r\nconst route = useRoute(); // 相当于 vue2 中的this.$route\r\nconst router = useRouter(); // 相当于 vue2 中的this.$router\r\n\r\n// route   用于获取当前路由数据\r\n// router  用于路由跳转\r\n```\r\n\r\n### 四、vuex\r\n\r\n​ **注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应**\r\n\r\n```javascript\r\nimport {useStore} from \'vuex\'\r\n\r\nsetup(){\r\n    const store = useStore(); // 相当于 vue2中的 this.$store\r\n    store.dispatch(); // 通过store对象来dispatch 派发异步任务\r\n    store.commit(); // commit 修改store数据\r\n\r\n    let category = computed(() => store.state.home.currentCagegory\r\n    return { category }\r\n}\r\n\r\n```\r\n\r\n## vue-vite 搭建项目\r\n\r\n::: tip\r\n\r\n```javascript\r\n# 初始化项目\r\nnpm init vite-app vue3-composition-api-demo\r\n# 进入目录\r\ncd vue3-composition-api-demo\r\n# 安装依赖\r\nnpm install\r\n# 运行项目\r\nnpm run dev\r\n\r\n```\r\n\r\n:::\r\n\r\n### 五、setup()\r\n\r\n::: tip\r\nsetup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.\r\n\r\n```javascript\r\nsetup(props, context) {\r\n  // Attributes (Non-reactive object)\r\n  console.log(context.attrs)\r\n\r\n  // Slots (Non-reactive object)\r\n  console.log(context.slots)\r\n\r\n  // Emit Events (Method)\r\n  console.log(context.emit)\r\n}\r\n\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n## 日后再更新。\r\n',contentRendered:'<p><strong>阅读本文大概需要10分钟</strong></p>\n\x3c!-- more --\x3e\n<p><strong>先认识代码变动和部分新特性</strong></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="认识重要-api" tabindex="-1"><a class="header-anchor" href="#认识重要-api" aria-hidden="true">#</a> 认识重要 API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp<span class="token punctuation">,</span>\t\t<span class="token comment">// 创建一个APP实例</span>\n    onMounted<span class="token punctuation">,</span>\t\t<span class="token comment">// 生命周期写法变了</span>\n    computed<span class="token punctuation">,</span>\t\t<span class="token comment">// 方法变了</span>\n    watch<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 同上</span>\n    watchEffect<span class="token punctuation">,</span>\t<span class="token comment">// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行</span>\n    reactive<span class="token punctuation">,</span>\t\t<span class="token comment">// 传入一个普通对象返回一个响应式对象</span>\n    ref<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用</span>\n    toRef<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 为一个reactive对象的属性创建一个ref</span>\n    toRefs<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp" aria-hidden="true">#</a> <em>createApp</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span>\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> <em>onMounted</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用需要放在setup()里面</span>\n    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"冲冲冲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <em>computed</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象</span>\n<span class="token comment">// 对象的话，是不是对象.value就很好理解下面为什么这样写了？</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> <em>watch</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//reactive 接受一个普通对象，返回一个响应式对象</span>\n<span class="token comment">// state已经是一个响应式对象了，所以取值就是对象.count</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// todo</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="reactive-单独使用情况" tabindex="-1"><a class="header-anchor" href="#reactive-单独使用情况" aria-hidden="true">#</a> ⭐ <em>reactive 单独使用情况</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\na<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="返回给组件形式一" tabindex="-1"><a class="header-anchor" href="#返回给组件形式一" aria-hidden="true">#</a> 🌟 返回给组件形式一</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 组件</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 逻辑</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="返回组件形式二-torefs" tabindex="-1"><a class="header-anchor" href="#返回组件形式二-torefs" aria-hidden="true">#</a> <em>🌟返回组件形式二 &amp; toRefs</em></h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">></span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> toRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRefs把响应式对象转为普通对象</span>\n    <span class="token comment">// 再解析一下就是，toRefs是一个解封过程，reactive是封装过程</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <em>ref</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// ref 接受一个参数，并返回一个响应式且可以改变的对象。</span>\n<span class="token comment">// 同时ref拥有一个指向内部值得单一属性.value</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="toref" tabindex="-1"><a class="header-anchor" href="#toref" aria-hidden="true">#</a> <em>toRef</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">cow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">bug</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"cow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 相当于 const count = ref(0)</span>\n    <span class="token comment">// count 已经是cow的响应式对象了，所以值是不是该？</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 这时a.cow已经被改变了</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>cow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n    <span class="token comment">// 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？</span>\n\n    a<span class="token punctuation">.</span>cow<span class="token operator">++</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n    <span class="token comment">// 这里是不是能理解ref传递了？</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><hr>\n<h1 id="vue3-整体纵览" tabindex="-1"><a class="header-anchor" href="#vue3-整体纵览" aria-hidden="true">#</a> Vue3 整体纵览</h1>\n<h3 id="一、setup-函数" tabindex="-1"><a class="header-anchor" href="#一、setup-函数" aria-hidden="true">#</a> 一、setup 函数</h3>\n<p>​ <strong>setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法</strong></p>\n<p>​ <strong>Vue3 去掉了 data 返回的格式，统一再 setup 返回</strong></p>\n<p>​</p>\n<h3 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期" aria-hidden="true">#</a> 二、生命周期</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>setup() {\n    onMounted(() => {\n      console.log(\'组件挂载\');\n    });\n\n    onUnmounted(() => {\n      console.log(\'组件卸载\');\n    });\n\n    onUpdated(() => {\n      console.log(\'组件更新\');\n    });\n\n    onBeforeUpdate(() => {\n      console.log(\'组件将要更新\');\n    });\n\n    onActivated(() => {\n      console.log(\'keepAlive 组件 激活\');\n    });\n\n    onDeactivated(() => {\n      console.log(\'keepAlive 组件 非激活\');\n    });\n    return {};\n  },\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="三、vue-router" tabindex="-1"><a class="header-anchor" href="#三、vue-router" aria-hidden="true">#</a> 三、vue-router</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$route</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$router</span>\n\n<span class="token comment">// route   用于获取当前路由数据</span>\n<span class="token comment">// router  用于路由跳转</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="四、vuex" tabindex="-1"><a class="header-anchor" href="#四、vuex" aria-hidden="true">#</a> 四、vuex</h3>\n<p>​ <strong>注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2中的 this.$store</span>\n    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过store对象来dispatch 派发异步任务</span>\n    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// commit 修改store数据</span>\n\n    <span class="token keyword">let</span> category <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>currentCagegory\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> category <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="vue-vite-搭建项目" tabindex="-1"><a class="header-anchor" href="#vue-vite-搭建项目" aria-hidden="true">#</a> vue-vite 搭建项目</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code># 初始化项目\nnpm init vite<span class="token operator">-</span>app vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 进入目录\ncd vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 安装依赖\nnpm install\n# 运行项目\nnpm run dev\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h3 id="五、setup" tabindex="-1"><a class="header-anchor" href="#五、setup" aria-hidden="true">#</a> 五、setup()</h3>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>setup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Attributes (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>\n\n  <span class="token comment">// Slots (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>\n\n  <span class="token comment">// Emit Events (Method)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><hr>\n<h2 id="日后再更新。" tabindex="-1"><a class="header-anchor" href="#日后再更新。" aria-hidden="true">#</a> 日后再更新。</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3-notes-1.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3笔记"},slug:"Vue3-notes-1",filePath:"/root/blog/blogs/Vue3/Vue3-notes-1.md",filePathRelative:"blogs/Vue3/Vue3-notes-1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFileChunkName:"v-2b8dfb6e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.js",dataFileChunkName:"v-2b8dfb6e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3-notes-1.html",htmlFilePathRelative:"blogs/Vue3/Vue3-notes-1.html"}]},"/tags/axios/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"axios",pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}]},"/tags/Element-plus/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"Element-plus",pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}]},"/tags/loguru/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"loguru",pages:[{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"}]},"/tags/redis/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"redis",pages:[{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"}]},"/tags/npmdaili/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"npmdaili",pages:[{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}]},"/tags/yarndaili/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"yarndaili",pages:[{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}]},"/tags/vuepress-reco/them-cli/1/":{pageSize:10,total:1,currentPage:1,currentClassificationKey:"tags",currentClassificationValue:"vuepress-reco/them-cli",pages:[{data:{key:"v-e3b887da",path:"/blogs/tech/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/tech/第一篇博客学习.md"},key:"v-e3b887da",path:"/blogs/tech/diyipianbokexuexi.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],content:'\r\n**阅读本文大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n::: tip\r\n\r\n前期\r\n\r\n```json\r\n# 初始化 最好不要用全局安装（yarn 未收录)\r\nnpm install @vuepress-reco/theme-cli\r\ntheme-cli init\r\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\r\n# 然后是输入名字、描述、作者名字\r\n# 选择blog和doc无大区别我选择blog\r\n\r\n# 安装\r\nnpm install\r\n\r\n# 运行(等加载完,点开localhost那个链接就可以看到自己的网站，帅不帅？)\r\nnpm run dev\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！\r\n\r\n\r\n```json\r\n# 创建github仓库,网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\r\n# 则不需要设置base属性，把.vuepress\\config.js的"dest":"public"删除\r\n# 删除的目的是：打包在默认的dist文件夹.\r\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\r\n\r\n"base":"/你仓库的名字/",\r\n\r\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\r\n\r\nnpm run build\r\n\r\n# 这时候.vuepress文件夹会多出一个dist文件夹\r\n\r\ncd .vuepress\\dist\r\n\r\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\r\n\r\ngit init\r\ngit add .\r\ngit commit -m "deploy"\r\ngit push\r\ngit remote add origin 你项目地址(https)\r\ngit push -u origin master -f\r\n# 这个push 会创建一个master分支，进入仓库 setting\r\n```\r\n\r\n然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了\r\n\r\n:::\r\n\r\n# 关于目录结构\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png)\r\n\r\n::: tip\r\n\r\n一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？\r\n\r\n> dist是运行了`npm run build`所产生的目录，没必要动它\r\n>\r\n> blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E4%BB%A3%E7%A0%81.png)\r\n\r\n> docs是导航栏的docs里面写的文章不用写类别会自动归类到docs\r\n\r\n**基本就这样了!**\r\n\r\n:::',contentRendered:'<p><strong>阅读本文大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>前期</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 初始化 最好不要用全局安装（yarn 未收录)\nnpm install @vuepress-reco/theme-cli\ntheme-cli init\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\n# 然后是输入名字、描述、作者名字\n# 选择blog和doc无大区别我选择blog\n\n# 安装\nnpm install\n\n# 运行(等加载完<span class="token punctuation">,</span>点开localhost那个链接就可以看到自己的网站，帅不帅？)\nnpm run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 创建github仓库<span class="token punctuation">,</span>网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\n# 则不需要设置base属性，把.vuepress\\config.js的<span class="token property">"dest"</span><span class="token operator">:</span><span class="token string">"public"</span>删除\n# 删除的目的是：打包在默认的dist文件夹.\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\n\n<span class="token property">"base"</span><span class="token operator">:</span><span class="token string">"/你仓库的名字/"</span><span class="token punctuation">,</span>\n\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\n\nnpm run build\n\n# 这时候.vuepress文件夹会多出一个dist文件夹\n\ncd .vuepress\\dist\n\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\n\ngit init\ngit add .\ngit commit -m <span class="token string">"deploy"</span>\ngit push\ngit remote add origin 你项目地址(https)\ngit push -u origin master -f\n# 这个push 会创建一个master分支，进入仓库 setting\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了</p>\n</div><h1 id="关于目录结构" tabindex="-1"><a class="header-anchor" href="#关于目录结构" aria-hidden="true">#</a> 关于目录结构</h1>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/项目结构.png" alt=""></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？</p>\n<blockquote>\n<p>dist是运行了<code>npm run build</code>所产生的目录，没必要动它</p>\n<p>blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类</p>\n</blockquote>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/代码.png" alt=""></p>\n<blockquote>\n<p>docs是导航栏的docs里面写的文章不用写类别会自动归类到docs</p>\n</blockquote>\n<p><strong>基本就这样了!</strong></p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/第一篇博客学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"第一篇踩坑@vuepress-reco/theme-cli"},slug:"第一篇博客学习",filePath:"/root/blog/blogs/tech/第一篇博客学习.md",filePathRelative:"blogs/tech/第一篇博客学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.vue",componentFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.vue",componentFileChunkName:"v-e3b887da",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.js",dataFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.js",dataFileChunkName:"v-e3b887da",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/第一篇博客学习.html",htmlFilePathRelative:"blogs/tech/第一篇博客学习.html"}]}},p=[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"},{data:{key:"v-195e5ba5",path:"/blogs/C++/C++%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0(%E4%BA%8C).html",title:"C++基础学习(二)",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"运算",slug:"运算",children:[{level:3,title:"算术运算中的类型转换",slug:"算术运算中的类型转换",children:[]},{level:3,title:"位运算符",slug:"位运算符",children:[]},{level:3,title:"自增/自减",slug:"自增-自减",children:[]},{level:3,title:"逻辑运算符",slug:"逻辑运算符",children:[]},{level:3,title:"逗号运算符",slug:"逗号运算符",children:[]},{level:3,title:"成员访问运算符",slug:"成员访问运算符",children:[]}]},{level:2,title:"流程控制语句",slug:"流程控制语句",children:[{level:3,title:"switch",slug:"switch",children:[]},{level:3,title:"for",slug:"for",children:[]}]}],git:{},filePathRelative:"blogs/C++/C++基础学习(二).md"},key:"v-195e5ba5",path:"/blogs/C++/C++jichuxuexi(er).html",title:"C++基础学习(二)",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"运算",slug:"运算",children:[{level:3,title:"算术运算中的类型转换",slug:"算术运算中的类型转换",children:[]},{level:3,title:"位运算符",slug:"位运算符",children:[]},{level:3,title:"自增/自减",slug:"自增-自减",children:[]},{level:3,title:"逻辑运算符",slug:"逻辑运算符",children:[]},{level:3,title:"逗号运算符",slug:"逗号运算符",children:[]},{level:3,title:"成员访问运算符",slug:"成员访问运算符",children:[]}]},{level:2,title:"流程控制语句",slug:"流程控制语句",children:[{level:3,title:"switch",slug:"switch",children:[]},{level:3,title:"for",slug:"for",children:[]}]}],content:'\x3c!-- ---\r\ntitle: C++基础学习（二）\r\ndate: 2021/03/20\r\ntags:\r\n  - c++\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n# C++基础学习(二)\r\n\r\n## 运算\r\n\r\n![image-20210313222903677](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313222903677.png)\r\n\r\n**算术运算符中有两个单目运算符（正、负）以及五个双目运算符（乘法、除法、取模、加法、减法），其中单目运算符的优先级最高。**\r\n\r\n**其中取模运算符 `%` 意为计算两个整数相除得到的余数，即求余数。**\r\n\r\n### 算术运算中的类型转换\r\n\r\n- 先将 `char` ， `bool` ， `short` 等类型提升至 `int` （或 `unsigned int` ，取决于原类型的符号性）类型；\r\n- 若存在一个变量类型为 `long double` ，会将另一变量转换为 `long double` 类型；\r\n- 否则，若存在一个变量类型为 `double` ，会将另一变量转换为 `double` 类型；\r\n- 否则，若存在一个变量类型为 `float` ，会将另一变量转换为 `float` 类型；\r\n- 否则（即参与运算的两个变量均为整数类型）：\r\n  - 若两个变量符号性一致，则将位宽较小的类型转换为位宽较大的类型；\r\n  - 否则，若无符号变量的位宽不小于带符号变量的位宽，则将带符号数转换为无符号数对应的类型；\r\n  - 否则，若带符号操作数的类型能表示无符号操作数类型的所有值，则将无符号操作数转换为带符号操作数对应的类型；\r\n  - 否则，将带符号数转换为相对应的无符号类型。\r\n\r\n例如，对于一个整型（ `int` ）变量 和另一个双精度浮点型（ `double` ）类型变量 ：\r\n\r\n- `x/3` 的结果将会是整型；\r\n- `x/3.0` 的结果将会是双精度浮点型；\r\n- `x/y` 的结果将会是双精度浮点型；\r\n- `x*1/3` 的结果将会是整型；\r\n- `x*1.0/3` 的结果将会是双精度浮点型；\r\n\r\n### 位运算符\r\n\r\n**位操作的意义请参考 [位运算]() 。需要注意的是，位运算符的优先级低于普通的算数运算符。**\r\n\r\n#### 位运算\r\n\r\n**位运算就是基于整数的二进制表示进行的运算。由于计算机内部就是以二进制来存储数据，位运算是相当快的。**\r\n\r\n**常用的运算符共 6 种，分别为与（ `&` ）、或（ `|` ）、异或（ `^` ）、取反（ `~` ）、左移（ `<<` ）和右移（ `>>` ）。**\r\n\r\n![image-20210313230344486](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313230344486.png)\r\n\r\n![image-20210313230435595](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313230435595.png)\r\n\r\n##### 取反\r\n\r\n![image-20210314141557235](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314141557235.png)\r\n\r\n补码：在二进制表示下，正数和 0 的补码为其本身，负数的补码是将其对应正数按位取反后加一。\r\n\r\n##### 左移和右移\r\n\r\n`num << i` 表示将 的二进制表示向左移动 位所得的值。\r\n\r\n`num >> i` 表示将 的二进制表示向右移动 位所得的值。\r\n\r\n![image-20210314141806520](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314141806520.png)\r\n\r\n**对于左移操作，需要确保移位后的结果能被原数的类型容纳，否则行为也是未定义的。对一个负数执行左移操作也未定义。**\r\n\r\n**对于右移操作，右侧多余的位将会被舍弃，而左侧较为复杂：对于无符号数，会在左侧补 0；而对于有符号数，则会用最高位的数（其实就是符号位，非负数为 0，负数为 1）补齐。**\r\n\r\n#### 应用\r\n\r\n##### **乘 2 的非负整数次幂**\r\n\r\n```c++\r\nint mulPowerOfTwo(int n, int m) {  // 计算 n*(2^m)\r\n  return n << m;\r\n}\r\n```\r\n\r\n##### **除以 2 的非负整数次幂**\r\n\r\n```c++\r\nint divPowerOfTwo(int n, int m) {  // 计算 n/(2^m)\r\n  return n >> m;\r\n}\r\n```\r\n\r\n> 我们平常写的除法是向 0 取整，而这里的右移是向下取整（注意这里的区别），即当数大于等于 0 时两种方法等价，当数小于 0 时会有区别，如： `-1 / 2` 的值为 ，而 `-1 >> 1` 的值为 -1。\r\n\r\n##### **判断一个数是不是2的非负整数次幂**\r\n\r\n```c++\r\nbool isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; }\r\n```\r\n\r\n##### **对2的非整数次幂取模**\r\n\r\n```c++\r\nint modPowerOfTwo(int x, int mod) { return x & (mod - 1); }\r\n```\r\n\r\n##### **取绝对值**\r\n\r\n```c++\r\nint Abs(int n) {\r\n  return (n ^ (n >> 31)) - (n >> 31);\r\n  /* n>>31 取得 n 的符号，若 n 为正数，n>>31 等于 0，若 n 为负数，n>>31 等于 -1\r\n     若 n 为正数 n^0=n, 数不变，若 n 为负数有 n^(-1)\r\n     需要计算 n 和 -1 的补码，然后进行异或运算，\r\n     结果 n 变号并且为 n 的绝对值减 1，再减去 -1 就是绝对值 */\r\n}\r\n```\r\n\r\n##### **取两个数的最大值**\r\n\r\n```c++\r\n// 如果 a>=b,(a-b)>>31 为 0，否则为 -1\r\nint max(int a, int b) { return b & ((a - b) >> 31) | a & (~(a - b) >> 31); }\r\nint min(int a, int b) { return a & ((a - b) >> 31) | b & (~(a - b) >> 31); }\r\n```\r\n\r\n##### **判断符号是否相同**\r\n\r\n```c++\r\nbool isSameSign(int x, int y) {  // 有 0 的情况例外\r\n  return (x ^ y) >= 0;\r\n}\r\n```\r\n\r\n##### **交换两个数**\r\n\r\n```c++\r\nvoid swap(int &a, int &b) { a ^= b ^= a ^= b; }\r\n```\r\n\r\n> 这种方式只能用来交换两个整数，使用范围有限。\r\n>\r\n> 对于一般情况下的交换操作，推荐直接调用 `algorithm` 库中的 `std::swap` 函数。\r\n\r\n##### **获取一个数二进制的某一位**\r\n\r\n```c++\r\n// 获取 a 的第 b 位，最低位编号为 0\r\nint getBit(int a, int b) { return (a >> b) & 1; }\r\n```\r\n\r\n##### **将一个数二进制的某一位设置为0**\r\n\r\n```\r\n// 将 a 的第 b 位设置为 0 ，最低位编号为 0\r\nint unsetBit(int a, int b) { return a & ~(1 << b); }\r\n```\r\n\r\n##### **将一个数二进制的某一位设置为1**\r\n\r\n```c++\r\n// 将 a 的第 b 位设置为 1 ，最低位编号为 0\r\nint setBit(int a, int b) { return a | (1 << b); }\r\n```\r\n\r\n##### **将一个数二进制的某一位取反**\r\n\r\n```c++\r\n// 将 a 的第 b 位取反 ，最低位编号为 0\r\nint flapBit(int a, int b) { return a ^ (1 << b); }\r\n```\r\n\r\n##### **表示集合**\r\n\r\n![image-20210314144448835](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314144448835.png)\r\n\r\n一个数的二进制表示可以看作是一个集合（0 表示不在集合中，1 表示在集合中）。比如集合 `{1, 3, 4, 8}` ，可以表示成（100011010） 。而对应的位运算也就可以看作是对集合进行的操作。\r\n\r\n##### **遍历某个集合的子集**\r\n\r\n```c++\r\n// 遍历 u 的非空子集\r\nfor (int s = u; s; s = (s - 1) & u) {\r\n  // s 是 u 的一个非空子集\r\n}\r\n```\r\n\r\n### 自增/自减\r\n\r\n```c++\r\ni = 100;\r\n\r\nop1 = i++;  // op1 = 100，先 op1 = i，然后 i = i + 1\r\n\r\ni = 100;\r\n\r\nop2 = ++i;  // op2 = 101，先 i = i + 1，然后赋值 op2\r\n\r\ni = 100;\r\n\r\nop3 = i--;  // op3 = 100，先赋值 op3，然后 i = i - 1\r\n\r\ni = 100;\r\n\r\nop4 = --i;  // op4 = 99，先 i = i - 1，然后赋值 op4\r\n```\r\n\r\n### 逻辑运算符\r\n\r\n![image-20210314152155060](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314152155060.png)\r\n\r\n```c++\r\nResult = op1 && op2;  // 当 op1 与 op2 都为真时则 Result 为真\r\n\r\nResult = op1 || op2;  // 当 op1 或 op2 其中一个为真时则 Result 为真\r\n\r\nResult = !op1;  // 当 op1 为假时则 Result 为真\r\n```\r\n\r\n### 逗号运算符\r\n\r\n**优先级最低的**\r\n\r\n```c++\r\nexp1, exp2, exp3;  // 最后的值为 exp3 的运算结果。\r\n\r\nResult = 1 + 2, 3 + 4, 5 + 6;\r\n//得到 Result 的值为 3 而不是 11，因为赋值运算符 "="\r\n//的优先级比逗号运算符高，先进行了赋值运算才进行逗号运算。\r\n\r\nResult = (1 + 2, 3 + 4, 5 + 6);\r\n\r\n// 若要让 Result 的值得到逗号运算的结果则应将整个表达式用括号提高优先级，此时\r\n// Result 的值才为 11。\r\n```\r\n\r\n### 成员访问运算符\r\n\r\n![image-20210314152820950](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314152820950.png)\r\n\r\n```c++\r\nauto result1 = v[1];  // 获取v中下标为2的对象\r\nauto result2 = p.q;   // 获取p对象的q成员\r\nauto result3 = p -> q;  // 获取p指针指向的对象的q成员，等价于 (*p).q\r\nauto result4 = &v;      // 获取指向v的指针\r\nauto result5 = *v;      // 获取v指针指向的对象\r\n```\r\n\r\n## 流程控制语句\r\n\r\n**从简**\r\n\r\n### switch\r\n\r\n```c++\r\nswitch (选择句) {\r\n  case 标签1:\r\n    主体1;\r\n  case 标签2:\r\n    主体2;\r\n  default:\r\n    主体3;\r\n}\r\n```\r\n\r\n### for\r\n\r\n```\r\nfor (int i = 1; i <= n; ++i) {\r\n  cin >> a[i];\r\n}\r\n```\r\n\r\n**都是简单的循环，姑且跳过**',contentRendered:'\x3c!-- ---\ntitle: C++基础学习（二）\ndate: 2021/03/20\ntags:\n  - c++\ncategories:\n  - C++\n--- --\x3e\n<h1 id="c-基础学习-二" tabindex="-1"><a class="header-anchor" href="#c-基础学习-二" aria-hidden="true">#</a> C++基础学习(二)</h1>\n<h2 id="运算" tabindex="-1"><a class="header-anchor" href="#运算" aria-hidden="true">#</a> 运算</h2>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313222903677.png" alt="image-20210313222903677"></p>\n<p><strong>算术运算符中有两个单目运算符（正、负）以及五个双目运算符（乘法、除法、取模、加法、减法），其中单目运算符的优先级最高。</strong></p>\n<p><strong>其中取模运算符 <code>%</code> 意为计算两个整数相除得到的余数，即求余数。</strong></p>\n<h3 id="算术运算中的类型转换" tabindex="-1"><a class="header-anchor" href="#算术运算中的类型转换" aria-hidden="true">#</a> 算术运算中的类型转换</h3>\n<ul>\n<li>先将 <code>char</code> ， <code>bool</code> ， <code>short</code> 等类型提升至 <code>int</code> （或 <code>unsigned int</code> ，取决于原类型的符号性）类型；</li>\n<li>若存在一个变量类型为 <code>long double</code> ，会将另一变量转换为 <code>long double</code> 类型；</li>\n<li>否则，若存在一个变量类型为 <code>double</code> ，会将另一变量转换为 <code>double</code> 类型；</li>\n<li>否则，若存在一个变量类型为 <code>float</code> ，会将另一变量转换为 <code>float</code> 类型；</li>\n<li>否则（即参与运算的两个变量均为整数类型）：\n<ul>\n<li>若两个变量符号性一致，则将位宽较小的类型转换为位宽较大的类型；</li>\n<li>否则，若无符号变量的位宽不小于带符号变量的位宽，则将带符号数转换为无符号数对应的类型；</li>\n<li>否则，若带符号操作数的类型能表示无符号操作数类型的所有值，则将无符号操作数转换为带符号操作数对应的类型；</li>\n<li>否则，将带符号数转换为相对应的无符号类型。</li>\n</ul>\n</li>\n</ul>\n<p>例如，对于一个整型（ <code>int</code> ）变量 和另一个双精度浮点型（ <code>double</code> ）类型变量 ：</p>\n<ul>\n<li><code>x/3</code> 的结果将会是整型；</li>\n<li><code>x/3.0</code> 的结果将会是双精度浮点型；</li>\n<li><code>x/y</code> 的结果将会是双精度浮点型；</li>\n<li><code>x*1/3</code> 的结果将会是整型；</li>\n<li><code>x*1.0/3</code> 的结果将会是双精度浮点型；</li>\n</ul>\n<h3 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符" aria-hidden="true">#</a> 位运算符</h3>\n<p><strong>位操作的意义请参考 <a href="">位运算</a> 。需要注意的是，位运算符的优先级低于普通的算数运算符。</strong></p>\n<h4 id="位运算" tabindex="-1"><a class="header-anchor" href="#位运算" aria-hidden="true">#</a> 位运算</h4>\n<p><strong>位运算就是基于整数的二进制表示进行的运算。由于计算机内部就是以二进制来存储数据，位运算是相当快的。</strong></p>\n<p><strong>常用的运算符共 6 种，分别为与（ <code>&amp;</code> ）、或（ <code>|</code> ）、异或（ <code>^</code> ）、取反（ <code>~</code> ）、左移（ <code>&lt;&lt;</code> ）和右移（ <code>&gt;&gt;</code> ）。</strong></p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313230344486.png" alt="image-20210313230344486"></p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210313230435595.png" alt="image-20210313230435595"></p>\n<h5 id="取反" tabindex="-1"><a class="header-anchor" href="#取反" aria-hidden="true">#</a> 取反</h5>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314141557235.png" alt="image-20210314141557235"></p>\n<p>补码：在二进制表示下，正数和 0 的补码为其本身，负数的补码是将其对应正数按位取反后加一。</p>\n<h5 id="左移和右移" tabindex="-1"><a class="header-anchor" href="#左移和右移" aria-hidden="true">#</a> 左移和右移</h5>\n<p><code>num &lt;&lt; i</code> 表示将 的二进制表示向左移动 位所得的值。</p>\n<p><code>num &gt;&gt; i</code> 表示将 的二进制表示向右移动 位所得的值。</p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314141806520.png" alt="image-20210314141806520"></p>\n<p><strong>对于左移操作，需要确保移位后的结果能被原数的类型容纳，否则行为也是未定义的。对一个负数执行左移操作也未定义。</strong></p>\n<p><strong>对于右移操作，右侧多余的位将会被舍弃，而左侧较为复杂：对于无符号数，会在左侧补 0；而对于有符号数，则会用最高位的数（其实就是符号位，非负数为 0，负数为 1）补齐。</strong></p>\n<h4 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h4>\n<h5 id="乘-2-的非负整数次幂" tabindex="-1"><a class="header-anchor" href="#乘-2-的非负整数次幂" aria-hidden="true">#</a> <strong>乘 2 的非负整数次幂</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">mulPowerOfTwo</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 计算 n*(2^m)</span>\n  <span class="token keyword">return</span> n <span class="token operator">&lt;&lt;</span> m<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="除以-2-的非负整数次幂" tabindex="-1"><a class="header-anchor" href="#除以-2-的非负整数次幂" aria-hidden="true">#</a> <strong>除以 2 的非负整数次幂</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">divPowerOfTwo</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 计算 n/(2^m)</span>\n  <span class="token keyword">return</span> n <span class="token operator">>></span> m<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>我们平常写的除法是向 0 取整，而这里的右移是向下取整（注意这里的区别），即当数大于等于 0 时两种方法等价，当数小于 0 时会有区别，如： <code>-1 / 2</code> 的值为 ，而 <code>-1 &gt;&gt; 1</code> 的值为 -1。</p>\n</blockquote>\n<h5 id="判断一个数是不是2的非负整数次幂" tabindex="-1"><a class="header-anchor" href="#判断一个数是不是2的非负整数次幂" aria-hidden="true">#</a> <strong>判断一个数是不是2的非负整数次幂</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>bool <span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> n <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="对2的非整数次幂取模" tabindex="-1"><a class="header-anchor" href="#对2的非整数次幂取模" aria-hidden="true">#</a> <strong>对2的非整数次幂取模</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">modPowerOfTwo</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> mod<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&amp;</span> <span class="token punctuation">(</span>mod <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="取绝对值" tabindex="-1"><a class="header-anchor" href="#取绝对值" aria-hidden="true">#</a> <strong>取绝对值</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">Abs</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">^</span> <span class="token punctuation">(</span>n <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">/* n>>31 取得 n 的符号，若 n 为正数，n>>31 等于 0，若 n 为负数，n>>31 等于 -1\n     若 n 为正数 n^0=n, 数不变，若 n 为负数有 n^(-1)\n     需要计算 n 和 -1 的补码，然后进行异或运算，\n     结果 n 变号并且为 n 的绝对值减 1，再减去 -1 就是绝对值 */</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="取两个数的最大值" tabindex="-1"><a class="header-anchor" href="#取两个数的最大值" aria-hidden="true">#</a> <strong>取两个数的最大值</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 如果 a>=b,(a-b)>>31 为 0，否则为 -1</span>\n<span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> b <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">|</span> a <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">|</span> b <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="判断符号是否相同" tabindex="-1"><a class="header-anchor" href="#判断符号是否相同" aria-hidden="true">#</a> <strong>判断符号是否相同</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>bool <span class="token function">isSameSign</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 有 0 的情况例外</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">^</span> y<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="交换两个数" tabindex="-1"><a class="header-anchor" href="#交换两个数" aria-hidden="true">#</a> <strong>交换两个数</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">^=</span> b <span class="token operator">^=</span> a <span class="token operator">^=</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>这种方式只能用来交换两个整数，使用范围有限。</p>\n<p>对于一般情况下的交换操作，推荐直接调用 <code>algorithm</code> 库中的 <code>std::swap</code> 函数。</p>\n</blockquote>\n<h5 id="获取一个数二进制的某一位" tabindex="-1"><a class="header-anchor" href="#获取一个数二进制的某一位" aria-hidden="true">#</a> <strong>获取一个数二进制的某一位</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 获取 a 的第 b 位，最低位编号为 0</span>\n<span class="token keyword">int</span> <span class="token function">getBit</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token operator">>></span> b<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="将一个数二进制的某一位设置为0" tabindex="-1"><a class="header-anchor" href="#将一个数二进制的某一位设置为0" aria-hidden="true">#</a> <strong>将一个数二进制的某一位设置为0</strong></h5>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 将 a 的第 b 位设置为 0 ，最低位编号为 0\nint unsetBit(int a, int b) { return a &amp; ~(1 &lt;&lt; b); }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="将一个数二进制的某一位设置为1" tabindex="-1"><a class="header-anchor" href="#将一个数二进制的某一位设置为1" aria-hidden="true">#</a> <strong>将一个数二进制的某一位设置为1</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 将 a 的第 b 位设置为 1 ，最低位编号为 0</span>\n<span class="token keyword">int</span> <span class="token function">setBit</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="将一个数二进制的某一位取反" tabindex="-1"><a class="header-anchor" href="#将一个数二进制的某一位取反" aria-hidden="true">#</a> <strong>将一个数二进制的某一位取反</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 将 a 的第 b 位取反 ，最低位编号为 0</span>\n<span class="token keyword">int</span> <span class="token function">flapBit</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="表示集合" tabindex="-1"><a class="header-anchor" href="#表示集合" aria-hidden="true">#</a> <strong>表示集合</strong></h5>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314144448835.png" alt="image-20210314144448835"></p>\n<p>一个数的二进制表示可以看作是一个集合（0 表示不在集合中，1 表示在集合中）。比如集合 <code>{1, 3, 4, 8}</code> ，可以表示成（100011010） 。而对应的位运算也就可以看作是对集合进行的操作。</p>\n<h5 id="遍历某个集合的子集" tabindex="-1"><a class="header-anchor" href="#遍历某个集合的子集" aria-hidden="true">#</a> <strong>遍历某个集合的子集</strong></h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 遍历 u 的非空子集</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> s <span class="token operator">=</span> u<span class="token punctuation">;</span> s<span class="token punctuation">;</span> s <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// s 是 u 的一个非空子集</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="自增-自减" tabindex="-1"><a class="header-anchor" href="#自增-自减" aria-hidden="true">#</a> 自增/自减</h3>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>i <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\nop1 <span class="token operator">=</span> i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// op1 = 100，先 op1 = i，然后 i = i + 1</span>\n\ni <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\nop2 <span class="token operator">=</span> <span class="token operator">++</span>i<span class="token punctuation">;</span>  <span class="token comment">// op2 = 101，先 i = i + 1，然后赋值 op2</span>\n\ni <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\nop3 <span class="token operator">=</span> i<span class="token operator">--</span><span class="token punctuation">;</span>  <span class="token comment">// op3 = 100，先赋值 op3，然后 i = i - 1</span>\n\ni <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\nop4 <span class="token operator">=</span> <span class="token operator">--</span>i<span class="token punctuation">;</span>  <span class="token comment">// op4 = 99，先 i = i - 1，然后赋值 op4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a> 逻辑运算符</h3>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314152155060.png" alt="image-20210314152155060"></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>Result <span class="token operator">=</span> op1 <span class="token operator">&amp;&amp;</span> op2<span class="token punctuation">;</span>  <span class="token comment">// 当 op1 与 op2 都为真时则 Result 为真</span>\n\nResult <span class="token operator">=</span> op1 <span class="token operator">||</span> op2<span class="token punctuation">;</span>  <span class="token comment">// 当 op1 或 op2 其中一个为真时则 Result 为真</span>\n\nResult <span class="token operator">=</span> <span class="token operator">!</span>op1<span class="token punctuation">;</span>  <span class="token comment">// 当 op1 为假时则 Result 为真</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="逗号运算符" tabindex="-1"><a class="header-anchor" href="#逗号运算符" aria-hidden="true">#</a> 逗号运算符</h3>\n<p><strong>优先级最低的</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>exp1<span class="token punctuation">,</span> exp2<span class="token punctuation">,</span> exp3<span class="token punctuation">;</span>  <span class="token comment">// 最后的值为 exp3 的运算结果。</span>\n\nResult <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span>\n<span class="token comment">//得到 Result 的值为 3 而不是 11，因为赋值运算符 "="</span>\n<span class="token comment">//的优先级比逗号运算符高，先进行了赋值运算才进行逗号运算。</span>\n\nResult <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 若要让 Result 的值得到逗号运算的结果则应将整个表达式用括号提高优先级，此时</span>\n<span class="token comment">// Result 的值才为 11。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="成员访问运算符" tabindex="-1"><a class="header-anchor" href="#成员访问运算符" aria-hidden="true">#</a> 成员访问运算符</h3>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314152820950.png" alt="image-20210314152820950"></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">auto</span> result1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 获取v中下标为2的对象</span>\n<span class="token keyword">auto</span> result2 <span class="token operator">=</span> p<span class="token punctuation">.</span>q<span class="token punctuation">;</span>   <span class="token comment">// 获取p对象的q成员</span>\n<span class="token keyword">auto</span> result3 <span class="token operator">=</span> p <span class="token operator">-></span> q<span class="token punctuation">;</span>  <span class="token comment">// 获取p指针指向的对象的q成员，等价于 (*p).q</span>\n<span class="token keyword">auto</span> result4 <span class="token operator">=</span> <span class="token operator">&amp;</span>v<span class="token punctuation">;</span>      <span class="token comment">// 获取指向v的指针</span>\n<span class="token keyword">auto</span> result5 <span class="token operator">=</span> <span class="token operator">*</span>v<span class="token punctuation">;</span>      <span class="token comment">// 获取v指针指向的对象</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="流程控制语句" tabindex="-1"><a class="header-anchor" href="#流程控制语句" aria-hidden="true">#</a> 流程控制语句</h2>\n<p><strong>从简</strong></p>\n<h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> switch</h3>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>选择句<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">case</span> 标签<span class="token number">1</span><span class="token operator">:</span>\n    主体<span class="token number">1</span><span class="token punctuation">;</span>\n  <span class="token keyword">case</span> 标签<span class="token number">2</span><span class="token operator">:</span>\n    主体<span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token keyword">default</span><span class="token operator">:</span>\n    主体<span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>for (int i = 1; i &lt;= n; ++i) {\n  cin >> a[i];\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>都是简单的循环，姑且跳过</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/C++基础学习(二).html",pathLocale:"/",permalink:null,routeMeta:{title:"C++基础学习(二)"},slug:"C++基础学习(二)",filePath:"/root/blog/blogs/C++/C++基础学习(二).md",filePathRelative:"blogs/C++/C++基础学习(二).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习(二).html.vue",componentFilePathRelative:"pages/blogs/C++/C++基础学习(二).html.vue",componentFileChunkName:"v-195e5ba5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习(二).html.js",dataFilePathRelative:"pages/blogs/C++/C++基础学习(二).html.js",dataFileChunkName:"v-195e5ba5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/C++基础学习(二).html",htmlFilePathRelative:"blogs/C++/C++基础学习(二).html"},{data:{key:"v-5be11c6c",path:"/blogs/C++/C++%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89.html",title:"C++基础学习（三）",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"数组",slug:"数组",children:[{level:3,title:"定义数组",slug:"定义数组",children:[]},{level:3,title:"多维数组",slug:"多维数组",children:[]}]},{level:2,title:"结构体",slug:"结构体",children:[{level:3,title:"定义结构体",slug:"定义结构体",children:[]},{level:3,title:"文件的操作",slug:"文件的操作",children:[]},{level:3,title:"fopen",slug:"fopen",children:[]},{level:3,title:"ifstream/ofstream 文件输入输出流",slug:"ifstream-ofstream-文件输入输出流",children:[]}]},{level:2,title:"C++标准库",slug:"c-标准库",children:[{level:3,title:"序列式容器",slug:"序列式容器",children:[]},{level:3,title:"关联式容器",slug:"关联式容器",children:[]},{level:3,title:"迭代器",slug:"迭代器",children:[]},{level:3,title:"序列式容器",slug:"序列式容器-1",children:[]},{level:3,title:"array",slug:"array",children:[]},{level:3,title:"deque",slug:"deque",children:[]},{level:3,title:"list",slug:"list",children:[]}]}],git:{},filePathRelative:"blogs/C++/C++基础学习（三）.md"},key:"v-5be11c6c",path:"/blogs/C++/C++jichuxuexi（san）.html",title:"C++基础学习（三）",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"数组",slug:"数组",children:[{level:3,title:"定义数组",slug:"定义数组",children:[]},{level:3,title:"多维数组",slug:"多维数组",children:[]}]},{level:2,title:"结构体",slug:"结构体",children:[{level:3,title:"定义结构体",slug:"定义结构体",children:[]},{level:3,title:"文件的操作",slug:"文件的操作",children:[]},{level:3,title:"fopen",slug:"fopen",children:[]},{level:3,title:"ifstream/ofstream 文件输入输出流",slug:"ifstream-ofstream-文件输入输出流",children:[]}]},{level:2,title:"C++标准库",slug:"c-标准库",children:[{level:3,title:"序列式容器",slug:"序列式容器",children:[]},{level:3,title:"关联式容器",slug:"关联式容器",children:[]},{level:3,title:"迭代器",slug:"迭代器",children:[]},{level:3,title:"序列式容器",slug:"序列式容器-1",children:[]},{level:3,title:"array",slug:"array",children:[]},{level:3,title:"deque",slug:"deque",children:[]},{level:3,title:"list",slug:"list",children:[]}]}],content:'\x3c!-- ---\r\ntitle: C++基础学习（三）\r\ndate: 2021/03/20\r\ntags:\r\n  - c++\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n# C++基础学习（三）\r\n\r\n## 数组\r\n\r\n**数组是存放相同类型对象的容器，数组中存放的对象没有名字，而是要通过其所在的位置访问。数组的大小是固定的，不能随意改变数组的长度。**\r\n\r\n### 定义数组\r\n\r\n**数组的声明形如 `a[d]`，其中，`a` 是数组的名字，`d` 是数组中元素的个数。在编译时，`d` 应该是已知的，也就是说，`d` 应该是一个整型的常量表达式。**\r\n\r\n```c++\r\nunsigned int d1 = 42;\r\nconst int d2 = 42;\r\nint arr1[d1];  // 错误：d1 不是常量表达式\r\nint arr2[d2];  // 正确：arr2 是一个长度为 42 的数组\r\n```\r\n\r\n```c++\r\n// 不能将一个数组直接赋值给另一个数组\r\nint arr1[3];\r\nint arr2 = arr1;  // 错误\r\narr2 = arr1;      // 错误\r\n```\r\n\r\n> 应该尽量将较大的数组定义为全局变量。因为局部变量会被创建在栈区中，过大（大于栈的大小）的数组会爆栈，进而导致 RE。如果将数组声明在全局作用域中，就会在静态区中创建数组。\r\n\r\n```c++\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint arr[1001];  // 数组 arr 的下标范围是 [0, 1001)\r\n\r\nint main() {\r\n  int n;\r\n  cin >> n;\r\n  for (int i = 1; i <= n; ++i) {\r\n    cin >> arr[i];\r\n  }\r\n}\r\n```\r\n\r\n### 多维数组\r\n\r\n**多维数组的实质是「数组的数组」，即外层数组的元素是数组。一个二维数组需要两个维度来定义：数组的长度和数组内元素的长度。访问二维数组时需要写出两个索引：**\r\n\r\n```c++\r\nint arr[3][4];  // 一个长度为 3 的数组，它的元素是「元素为 int 的长度为的 4\r\n                // 的数组」\r\narr[2][1] = 1;  // 访问二维数组\r\n```\r\n\r\n**例：从标准输入中读取两个数 n和 m，分别表示黑白图片的高与宽，满足n，m<=1000 。对于接下来的 n行数据，每行有用空格分隔开的 m个数，代表这一位置的亮度值。现在我们读取这张图片，并将其存入二维数组中。**\r\n\r\n```c++\r\nconst int maxn = 1001;\r\nint pic[maxn][maxn];\r\nint n, m;\r\n\r\ncin >> n >> m;\r\nfor (int i = 1; i <= n; ++i)\r\n  for (int j = 1; j <= n; ++j) cin >> pic[i][j];\r\n```\r\n\r\n## 结构体\r\n\r\n### 定义结构体\r\n\r\n```c++\r\nstruct Object {\r\n  int weight;\r\n  int value;\r\n} e[array_length];\r\n\r\nconst Object a;\r\nObject b, B[array_length], tmp;\r\nObject *c;\r\n```\r\n\r\n上例中定义了一个名为 `Object` 的结构体，两个成员元素 `value, weight`，类型都为 `int`。\r\n\r\n在 `}` 后，定义了数据类型为 `Object` 的常量 `a`，变量 `b`，变量 `tmp`，数组 `B`，指针 `c`。对于某种已经存在的类型，都可以使用这里的方法进行定义常量、变量、指针、数组等。\r\n\r\n***关于指针：不必强求掌握。***\r\n\r\n### 文件的操作\r\n\r\n1、打开文件，将文件指针指向文件，决定打开文件类型；\r\n2、对文件进行读、写操作（比赛中主要用到的操作，其他一些操作暂时不写）；\r\n3、在使用完文件后，关闭文件。\r\n\r\n#### freopen\r\n\r\n```c++\r\nFILE* freopen(const char* filename, const char* mode, FILE* stream);\r\n```\r\n\r\n##### 参数说明\r\n\r\n- `filename`: 要打开的文件名\r\n- `mode`: 文件打开的模式，表示文件访问的权限\r\n- `stream`: 文件指针，通常使用标准文件流 (`stdin/stdout`) 或标准错误输出流 (`stderr`)\r\n- 返回值：文件指针，指向被打开文件\r\n\r\n##### 文件打开格式（选读）\r\n\r\n- `r`：以只读方式打开文件，文件必须存在，只允许读入数据 **（常用）**\r\n- `r+`：以读/写方式打开文件，文件必须存在，允许读写数据\r\n- `rb`：以只读方式打开二进制文件，文件必须存在，只允许读入数据\r\n- `rb+`：以读写方式打开二进制文件，文件必须存在，允许读写数据\r\n- `rt+`：以读写方式打开文本文件，允许读写\r\n- `w`：以只写方式打开文件，文件不存在会新建文件，否则清空内容，只允许写入数据 **（常用）**\r\n- `w+`：以读/写方式打开文件，文件不存在将新建文件，否则清空内容，允许读写数据\r\n- `wb`：以只读方式打开二进制文件，文件不存在将会新建文件，否则清空内容，只允许写入数据\r\n- `wb+`：以读写方式打开二进制文件，文件不存在将新建文件，否则清空内容，允许读写数据\r\n- `a`：以附加方式打开只写文件，文件不存在将新建文件，写入数据将被附加在文件末尾（保留 EOF 符）\r\n- `a+`：以附加方式打开只写文件，文件不存在将新建文件，写入数据将被附加在文件末尾（不保留 EOF 符）\r\n- `at+`：以读写方式打开文本文件，写入数据将被附加在文件末尾\r\n- `ab+`：以读写方式打开二进制文件，写入数据将被附加在文件末尾\r\n\r\n#### 使用方法\r\n\r\n```c++\r\nfreopen("data.in", "r", stdin);\r\n// data.in 就是读取的文件名，要和可执行文件放在同一目录下\r\n```\r\n\r\n```c++\r\nfreopen("data.out", "w", stdout);\r\n// data.out 就是输出文件的文件名，和可执行文件在同一目录下\r\n```\r\n\r\n```c++\r\nfclose(stdin);\r\nfclose(stdout);\r\n```\r\n\r\n> `printf/scanf/cin/cout` 等函数默认使用 `stdin/stdout`，将 `stdin/stdout` 重定向后，这些函数将输入/输出到被定向的文件\r\n\r\n```c++\r\n#include <cstdio>\r\n#include <iostream>\r\nint main(void) {\r\n  freopen("data.in", "r", stdin);\r\n  freopen("data.out", "w", stdout);\r\n  /*\r\n  中间的代码不需要改变，直接使用 cin 和 cout 即可\r\n  */\r\n  fclose(stdin);\r\n  fclose(stdout);\r\n  return 0;\r\n}\r\n```\r\n\r\n### fopen\r\n\r\n**函数大致与 `freopen` 相同，函数将打开指定文件并返回打开文件的指针**\r\n\r\n```c++\r\nFILE* fopen(const char* path, const char* mode)\r\n```\r\n\r\n#### 可用读写函数（基本）\r\n\r\n- `fread/fwrite`\r\n- `fgetc/fputc`\r\n- `fscanf/fprintf`\r\n- `fgets/fputs`\r\n\r\n```c++\r\nFILE *in, *out;  // 定义文件指针\r\nin = fopen("data.in", "r");\r\nout = fopen("data.out", "w");\r\n/*\r\ndo what you want to do\r\n*/\r\nfclose(stdin);\r\nfclose(stdout);\r\n```\r\n\r\n###  `ifstream/ofstream` 文件输入输出流\r\n\r\n```c++\r\nifstream fin("data.in");\r\n// data.in 就是读取文件的相对位置或绝对位置\r\n```\r\n\r\n```c++\r\nofstream fout("data.out");\r\n// data.out 就是输出文件的相对位置或绝对位置\r\n```\r\n\r\n```c++\r\nfin.close();\r\nfout.close();\r\n```\r\n\r\n```c++\r\n#include <cstdio>\r\n#include <fstream>\r\nifstream fin("data.in");\r\nofstream fout("data.out");\r\nint main(void) {\r\n  /*\r\n  中间的代码改变 cin 为 fin ，cout 为 fout 即可\r\n  */\r\n  fin.close();\r\n  fout.close();\r\n  return 0;\r\n}\r\n```\r\n\r\n## C++标准库\r\n\r\n![image-20210314161533078](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314161533078.png)\r\n\r\n### 序列式容器\r\n\r\n- **向量**(`vector`) 后端可高效增加元素的顺序表。\r\n- **数组**(`array`)**C++11**，定长的顺序表，C 风格数组的简单包装。\r\n- **双端队列**(`deque`) 双端都可高效增加元素的顺序表。\r\n- **列表**(`list`) 可以沿双向遍历的链表。\r\n- **单向列表**(`forward_list`) 只能沿一个方向遍历的链表。\r\n\r\n### 关联式容器\r\n\r\n- **集合**(`set`) 用以有序地存储 **互异** 元素的容器。其实现是由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种比较元素大小的谓词进行排列。\r\n- **多重集合**(`multiset`) 用以有序地存储元素的容器。允许存在相等的元素。\r\n- **映射**(`map`) 由 {键，值} 对组成的集合，以某种比较键大小关系的谓词进行排列。\r\n- **多重映射**(`multimap`) 由 {键，值} 对组成的多重集合，亦即允许键有相等情况的映射。\r\n\r\n### 迭代器\r\n\r\n```c++\r\nvector<int> data(10);\r\n\r\nfor (int i = 0; i < data.size(); i++)\r\n  cout << data[i] << endl;  // 使用下标访问元素\r\n\r\nfor (vector<int>::iterator iter = data.begin(); iter != data.end(); iter++)\r\n  cout << *iter << endl;  // 使用迭代器访问元素\r\n// 在C++11后可以使用 auto iter = data.begin() 来简化上述代码\r\n```\r\n\r\n### 序列式容器\r\n\r\n#### vector\r\n\r\n`std::vector` 是 STL 提供的 **内存连续的**、**可变长度** 的数组（亦称列表）数据结构。能够提供线性复杂度的插入和删除，以及常数复杂度的随机访问。\r\n\r\n##### `vector` 可以动态分配内存\r\n\r\n很多时候我们不能提前开好那么大的空间（eg：预处理 1~n 中所有数的约数）。尽管我们能知道数据总量在空间允许的级别，但是单份数据还可能非常大，这种时候我们就需要 `vector` 来把内存占用量控制在合适的范围内。`vector` 还支持动态扩容，在内存非常紧张的时候这个特性就能派上用场了。\r\n\r\n##### `vector` 重写了比较运算符及赋值运算符\r\n\r\n`vector` 重载了六个比较运算符，以字典序实现，这使得我们可以方便的判断两个容器是否相等（复杂度与容器大小成线性关系）。例如可以利用 `vector<char>` 实现字符串比较（当然，还是用 `std::string` 会更快更方便）。另外 `vector` 也重载了赋值运算符，使得数组拷贝更加方便。\r\n\r\n##### `vector` 便利的初始化\r\n\r\n于 `vector` 重载了 `=` 运算符，所以我们可以方便的初始化。`vector<int> data {1, 2, 3};`。\r\n\r\n##### 构造\r\n\r\n```c++\r\n// 1. 创建空vector; 常数复杂度\r\nvector<int> v0;\r\n// 1+. 这句代码可以使得向vector中插入前3个元素时，保证常数时间复杂度\r\nv0.reserve(3);\r\n// 2. 创建一个初始空间为3的vector，其元素的默认值是0; 线性复杂度\r\nvector<int> v1(3);\r\n// 3. 创建一个初始空间为3的vector，其元素的默认值是2; 线性复杂度\r\nvector<int> v2(3, 2);\r\n// 4. 创建一个初始空间为3的vector，其元素的默认值是1，\r\n// 并且使用v2的空间配置器; 线性复杂度\r\nvector<int> v3(3, 1, v2.get_allocator());\r\n// 5. 创建一个v2的拷贝vector v4， 其内容元素和v2一样; 线性复杂度\r\nvector<int> v4(v2);\r\n// 6. 创建一个v4的拷贝vector v5，其内容是{v4[1], v4[2]}; 线性复杂度\r\nvector<int> v5(v4.begin() + 1, v4.begin() + 3);\r\n// 7. 移动v2到新创建的vector v6，不发生拷贝; 常数复杂度; 需要 C++11\r\nvector<int> v6(std::move(v2));  // 或者 v6 = std::move(v2);\r\n```\r\n\r\n##### 访问\r\n\r\n`vector` 提供了如下几种方法进行元素访问\r\n\r\n1. `at()`\r\n\r\n   `v.at(pos)` 返回容器中下标为 `pos` 的引用。如果数组越界抛出 `std::out_of_range` 类型的异常。\r\n\r\n2. `operator[]`\r\n\r\n   `v[pos]` 返回容器中下标为 `pos` 的引用。不执行越界检查。\r\n\r\n3. `front()`\r\n\r\n   `v.front()` 返回首元素的引用。\r\n\r\n4. `back()`\r\n\r\n   `v.back()` 返回末尾元素的引用。\r\n\r\n5. `data()`\r\n\r\n   `v.data()` 返回指向数组第一个元素的指针。\r\n\r\n##### 迭代器\r\n\r\n1. `begin()/cbegin()`\r\n\r\n   返回指向首元素的迭代器，其中 `*begin = front`。\r\n\r\n2. `end()/cend()`\r\n\r\n   返回指向数组尾端占位符的迭代器，注意是没有元素的。\r\n\r\n3. `rbegin()/rcbegin()`\r\n\r\n   返回指向逆向数组的首元素的逆向迭代器，可以理解为正向容器的末元素。\r\n\r\n4. `rend()/rcend()`\r\n\r\n   返回指向逆向数组末元素后一位置的迭代器，对应容器首的前一个位置，没有元素。\r\n\r\n##### 长度和容量\r\n\r\n- `empty()` 返回一个 `bool` 值，即 `v.begin() == v.end()`，`true` 为空，`false` 为非空。\r\n\r\n- `size()` 返回容器长度（元素数量），即 `std::distance(v.begin(), v.end())`。\r\n\r\n- `resize()` 改变 `vector` 的长度，多退少补。补充元素可以由参数指定。\r\n\r\n- `max_size()` 返回容器的最大可能长度。\r\n\r\n  **与容量相关**：\r\n\r\n- `reserve()` 使得 `vector` 预留一定的内存空间，避免不必要的内存拷贝。\r\n\r\n- `capacity()` 返回容器的容量，即不发生拷贝的情况下容器的长度上限。\r\n\r\n- `shrink_to_fit()` 使得 `vector` 的容量与长度一致，多退但不会少。\r\n\r\n##### 元素增删改\r\n\r\n- `clear()` 清除所有元素\r\n- `insert()` 支持在某个迭代器位置插入元素、可以插入多个。**复杂度与 `pos` 距离末尾长度成线性而非常数的**\r\n- `erase()` 删除某个迭代器或者区间的元素，返回最后被删除的迭代器。复杂度与 `insert` 一致。\r\n- `push_back()` 在末尾插入一个元素，均摊复杂度为 **常数**，最坏为线性复杂度。\r\n- `pop_back()` 删除末尾元素，常数复杂度。\r\n- `swap()` 与另一个容器进行交换，此操作是 **常数复杂度** 而非线性的。\r\n\r\n### array\r\n\r\n#### 元素访问\r\n\r\n![image-20210314163712010](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163712010.png)\r\n\r\n> ```\r\n> at` 若遇 `pos >= size()` 的情况会抛出 `std::out_of_range\r\n> ```\r\n\r\n#### 容量\r\n\r\n![image-20210314163758183](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163758183.png)\r\n\r\n由于每个 `array` 都是固定大小容器，`size()` 返回的值等于 `max_size()` 返回的值。\r\n\r\n#### 操作\r\n\r\n![image-20210314163816852](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163816852.png)\r\n\r\n#### 实例\r\n\r\n```c++\r\n// 1. 创建空array，长度为3; 常数复杂度\r\nstd::array<int, 3> v0;\r\n// 2. 用指定常数创建array; 常数复杂度\r\nstd::array<int, 3> v1{1, 2, 3};\r\n\r\nv0.fill(1);  // 填充数组\r\n\r\n// 访问数组\r\nfor (int i = 0; i != arr.size(); ++i) cout << arr[i] << " ";\r\n```\r\n\r\n### deque\r\n\r\n`std::deque` 是 STL 提供的 双端队列数据结构。能够提供线性复杂度的插入和删除，以及常数复杂度的随机访问\r\n\r\n以下介绍常用用法，详细内容 [请参见 C++ 文档](https://zh.cppreference.com/w/cpp/container/deque)。`deque` 的迭代器函数与 `vector` 相同，因此不作详细介绍。\r\n\r\n```\r\n// 1. 定义一个int类型的空双端队列 v0\r\ndeque<int> v0;\r\n// 2. 定义一个int类型的双端队列 v1，并设置初始大小为10; 线性复杂度\r\ndeque<int> v1(10);\r\n// 3. 定义一个int类型的双端队列 v2，并初始化为10个1; 线性复杂度\r\ndeque<int> v2(10, 1);\r\n// 4. 复制已有的双端队列 v1; 线性复杂度\r\ndeque<int> v3(v1);\r\n// 5. 创建一个v2的拷贝deque v4，其内容是v4[0]至v4[2]; 线性复杂度\r\ndeque<int> v4(v2.begin(), v2.begin() + 3);\r\n// 6. 移动v2到新创建的deque v5，不发生拷贝; 常数复杂度; 需要 C++11\r\ndeque<int> v5(std::move(v2));\r\n```\r\n\r\n#### 访问\r\n\r\n与 `vector` 一致，但无法访问底层内存。其高效的元素访问速度可参考实现细节部分。\r\n\r\n- `at()` 返回容器中指定位置元素的引用，执行越界检查，**常数复杂度**。\r\n- `operator[]` 返回容器中指定位置元素的引用。不执行越界检查，**常数复杂度**。\r\n- `front()` 返回首元素的引用。\r\n- `back()` 返回末尾元素的引用。\r\n\r\n#### 长度\r\n\r\n与 `vector` 一致，但是没有 `reserve()` 和 `capacity()` 函数。（仍然有 `shrink_to_fit()` 函数）\r\n\r\n#### 元素增删改\r\n\r\n与 `vector` 一致，并额外有向队列头部增加元素的函数。\r\n\r\n- `clear()` 清除所有元素\r\n- `insert()` 支持在某个迭代器位置插入元素、可以插入多个。**复杂度与 `pos` 与两端距离较小者成线性**。\r\n- `erase()` 删除某个迭代器或者区间的元素，返回最后被删除的迭代器。复杂度与 `insert` 一致。\r\n- `push_front()` 在头部插入一个元素，**常数复杂度**。\r\n- `pop_front()` 删除头部元素，**常数复杂度**。\r\n- `push_back()` 在末尾插入一个元素，**常数复杂度**。\r\n- `pop_back()` 删除末尾元素，**常数复杂度**。\r\n- `swap()` 与另一个容器进行交换，此操作是 **常数复杂度** 而非线性的。\r\n\r\n### list\r\n\r\n`std::list` 是 STL 提供的 双向链表数据结构。能够提供线性复杂度的随机访问，以及常数复杂度的插入和删除。\r\n\r\n`ist` 的使用方法与 `deque` 基本相同，但是增删操作和访问的复杂度不同。详细内容 [请参见 C++ 文档](https://zh.cppreference.com/w/cpp/container/list)。`list` 的迭代器、长度、元素增删及修改相关的函数与 `deque` 相同，因此不作详细介绍。\r\n\r\n',contentRendered:'\x3c!-- ---\ntitle: C++基础学习（三）\ndate: 2021/03/20\ntags:\n  - c++\ncategories:\n  - C++\n--- --\x3e\n<h1 id="c-基础学习-三" tabindex="-1"><a class="header-anchor" href="#c-基础学习-三" aria-hidden="true">#</a> C++基础学习（三）</h1>\n<h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2>\n<p><strong>数组是存放相同类型对象的容器，数组中存放的对象没有名字，而是要通过其所在的位置访问。数组的大小是固定的，不能随意改变数组的长度。</strong></p>\n<h3 id="定义数组" tabindex="-1"><a class="header-anchor" href="#定义数组" aria-hidden="true">#</a> 定义数组</h3>\n<p><strong>数组的声明形如 <code>a[d]</code>，其中，<code>a</code> 是数组的名字，<code>d</code> 是数组中元素的个数。在编译时，<code>d</code> 应该是已知的，也就是说，<code>d</code> 应该是一个整型的常量表达式。</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">unsigned</span> <span class="token keyword">int</span> d1 <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token keyword">int</span> d2 <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> arr1<span class="token punctuation">[</span>d1<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 错误：d1 不是常量表达式</span>\n<span class="token keyword">int</span> arr2<span class="token punctuation">[</span>d2<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 正确：arr2 是一个长度为 42 的数组</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 不能将一个数组直接赋值给另一个数组</span>\n<span class="token keyword">int</span> arr1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> arr2 <span class="token operator">=</span> arr1<span class="token punctuation">;</span>  <span class="token comment">// 错误</span>\narr2 <span class="token operator">=</span> arr1<span class="token punctuation">;</span>      <span class="token comment">// 错误</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote>\n<p>应该尽量将较大的数组定义为全局变量。因为局部变量会被创建在栈区中，过大（大于栈的大小）的数组会爆栈，进而导致 RE。如果将数组声明在全局作用域中，就会在静态区中创建数组。</p>\n</blockquote>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">1001</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 数组 arr 的下标范围是 [0, 1001)</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n<span class="token punctuation">;</span>\n  cin <span class="token operator">>></span> n<span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    cin <span class="token operator">>></span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="多维数组" tabindex="-1"><a class="header-anchor" href="#多维数组" aria-hidden="true">#</a> 多维数组</h3>\n<p><strong>多维数组的实质是「数组的数组」，即外层数组的元素是数组。一个二维数组需要两个维度来定义：数组的长度和数组内元素的长度。访问二维数组时需要写出两个索引：</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 一个长度为 3 的数组，它的元素是「元素为 int 的长度为的 4</span>\n                <span class="token comment">// 的数组」</span>\narr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 访问二维数组</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>例：从标准输入中读取两个数 n和 m，分别表示黑白图片的高与宽，满足n，m&lt;=1000 。对于接下来的 n行数据，每行有用空格分隔开的 m个数，代表这一位置的亮度值。现在我们读取这张图片，并将其存入二维数组中。</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">const</span> <span class="token keyword">int</span> maxn <span class="token operator">=</span> <span class="token number">1001</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> pic<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>\n\ncin <span class="token operator">>></span> n <span class="token operator">>></span> m<span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> cin <span class="token operator">>></span> pic<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="结构体" tabindex="-1"><a class="header-anchor" href="#结构体" aria-hidden="true">#</a> 结构体</h2>\n<h3 id="定义结构体" tabindex="-1"><a class="header-anchor" href="#定义结构体" aria-hidden="true">#</a> 定义结构体</h3>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">Object</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> weight<span class="token punctuation">;</span>\n  <span class="token keyword">int</span> value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> e<span class="token punctuation">[</span>array_length<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Object a<span class="token punctuation">;</span>\nObject b<span class="token punctuation">,</span> B<span class="token punctuation">[</span>array_length<span class="token punctuation">]</span><span class="token punctuation">,</span> tmp<span class="token punctuation">;</span>\nObject <span class="token operator">*</span>c<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>上例中定义了一个名为 <code>Object</code> 的结构体，两个成员元素 <code>value, weight</code>，类型都为 <code>int</code>。</p>\n<p>在 <code>}</code> 后，定义了数据类型为 <code>Object</code> 的常量 <code>a</code>，变量 <code>b</code>，变量 <code>tmp</code>，数组 <code>B</code>，指针 <code>c</code>。对于某种已经存在的类型，都可以使用这里的方法进行定义常量、变量、指针、数组等。</p>\n<p><em><strong>关于指针：不必强求掌握。</strong></em></p>\n<h3 id="文件的操作" tabindex="-1"><a class="header-anchor" href="#文件的操作" aria-hidden="true">#</a> 文件的操作</h3>\n<p>1、打开文件，将文件指针指向文件，决定打开文件类型；\n2、对文件进行读、写操作（比赛中主要用到的操作，其他一些操作暂时不写）；\n3、在使用完文件后，关闭文件。</p>\n<h4 id="freopen" tabindex="-1"><a class="header-anchor" href="#freopen" aria-hidden="true">#</a> freopen</h4>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>FILE<span class="token operator">*</span> <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> mode<span class="token punctuation">,</span> FILE<span class="token operator">*</span> stream<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h5 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h5>\n<ul>\n<li><code>filename</code>: 要打开的文件名</li>\n<li><code>mode</code>: 文件打开的模式，表示文件访问的权限</li>\n<li><code>stream</code>: 文件指针，通常使用标准文件流 (<code>stdin/stdout</code>) 或标准错误输出流 (<code>stderr</code>)</li>\n<li>返回值：文件指针，指向被打开文件</li>\n</ul>\n<h5 id="文件打开格式-选读" tabindex="-1"><a class="header-anchor" href="#文件打开格式-选读" aria-hidden="true">#</a> 文件打开格式（选读）</h5>\n<ul>\n<li><code>r</code>：以只读方式打开文件，文件必须存在，只允许读入数据 <strong>（常用）</strong></li>\n<li><code>r+</code>：以读/写方式打开文件，文件必须存在，允许读写数据</li>\n<li><code>rb</code>：以只读方式打开二进制文件，文件必须存在，只允许读入数据</li>\n<li><code>rb+</code>：以读写方式打开二进制文件，文件必须存在，允许读写数据</li>\n<li><code>rt+</code>：以读写方式打开文本文件，允许读写</li>\n<li><code>w</code>：以只写方式打开文件，文件不存在会新建文件，否则清空内容，只允许写入数据 <strong>（常用）</strong></li>\n<li><code>w+</code>：以读/写方式打开文件，文件不存在将新建文件，否则清空内容，允许读写数据</li>\n<li><code>wb</code>：以只读方式打开二进制文件，文件不存在将会新建文件，否则清空内容，只允许写入数据</li>\n<li><code>wb+</code>：以读写方式打开二进制文件，文件不存在将新建文件，否则清空内容，允许读写数据</li>\n<li><code>a</code>：以附加方式打开只写文件，文件不存在将新建文件，写入数据将被附加在文件末尾（保留 EOF 符）</li>\n<li><code>a+</code>：以附加方式打开只写文件，文件不存在将新建文件，写入数据将被附加在文件末尾（不保留 EOF 符）</li>\n<li><code>at+</code>：以读写方式打开文本文件，写入数据将被附加在文件末尾</li>\n<li><code>ab+</code>：以读写方式打开二进制文件，写入数据将被附加在文件末尾</li>\n</ul>\n<h4 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h4>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"data.in"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// data.in 就是读取的文件名，要和可执行文件放在同一目录下</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"data.out"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// data.out 就是输出文件的文件名，和可执行文件在同一目录下</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote>\n<p><code>printf/scanf/cin/cout</code> 等函数默认使用 <code>stdin/stdout</code>，将 <code>stdin/stdout</code> 重定向后，这些函数将输入/输出到被定向的文件</p>\n</blockquote>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"data.in"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"data.out"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">/*\n  中间的代码不需要改变，直接使用 cin 和 cout 即可\n  */</span>\n  <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="fopen" tabindex="-1"><a class="header-anchor" href="#fopen" aria-hidden="true">#</a> fopen</h3>\n<p><strong>函数大致与 <code>freopen</code> 相同，函数将打开指定文件并返回打开文件的指针</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>FILE<span class="token operator">*</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> path<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> mode<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="可用读写函数-基本" tabindex="-1"><a class="header-anchor" href="#可用读写函数-基本" aria-hidden="true">#</a> 可用读写函数（基本）</h4>\n<ul>\n<li><code>fread/fwrite</code></li>\n<li><code>fgetc/fputc</code></li>\n<li><code>fscanf/fprintf</code></li>\n<li><code>fgets/fputs</code></li>\n</ul>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>FILE <span class="token operator">*</span>in<span class="token punctuation">,</span> <span class="token operator">*</span>out<span class="token punctuation">;</span>  <span class="token comment">// 定义文件指针</span>\nin <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"data.in"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nout <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"data.out"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">/*\ndo what you want to do\n*/</span>\n<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="ifstream-ofstream-文件输入输出流" tabindex="-1"><a class="header-anchor" href="#ifstream-ofstream-文件输入输出流" aria-hidden="true">#</a> <code>ifstream/ofstream</code> 文件输入输出流</h3>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>ifstream <span class="token function">fin</span><span class="token punctuation">(</span><span class="token string">"data.in"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// data.in 就是读取文件的相对位置或绝对位置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>ofstream <span class="token function">fout</span><span class="token punctuation">(</span><span class="token string">"data.out"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// data.out 就是输出文件的相对位置或绝对位置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>fin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfout<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fstream></span></span>\nifstream <span class="token function">fin</span><span class="token punctuation">(</span><span class="token string">"data.in"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nofstream <span class="token function">fout</span><span class="token punctuation">(</span><span class="token string">"data.out"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/*\n  中间的代码改变 cin 为 fin ，cout 为 fout 即可\n  */</span>\n  fin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  fout<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="c-标准库" tabindex="-1"><a class="header-anchor" href="#c-标准库" aria-hidden="true">#</a> C++标准库</h2>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314161533078.png" alt="image-20210314161533078"></p>\n<h3 id="序列式容器" tabindex="-1"><a class="header-anchor" href="#序列式容器" aria-hidden="true">#</a> 序列式容器</h3>\n<ul>\n<li><strong>向量</strong>(<code>vector</code>) 后端可高效增加元素的顺序表。</li>\n<li><strong>数组</strong>(<code>array</code>)<strong>C++11</strong>，定长的顺序表，C 风格数组的简单包装。</li>\n<li><strong>双端队列</strong>(<code>deque</code>) 双端都可高效增加元素的顺序表。</li>\n<li><strong>列表</strong>(<code>list</code>) 可以沿双向遍历的链表。</li>\n<li><strong>单向列表</strong>(<code>forward_list</code>) 只能沿一个方向遍历的链表。</li>\n</ul>\n<h3 id="关联式容器" tabindex="-1"><a class="header-anchor" href="#关联式容器" aria-hidden="true">#</a> 关联式容器</h3>\n<ul>\n<li><strong>集合</strong>(<code>set</code>) 用以有序地存储 <strong>互异</strong> 元素的容器。其实现是由节点组成的红黑树，每个节点都包含着一个元素，节点之间以某种比较元素大小的谓词进行排列。</li>\n<li><strong>多重集合</strong>(<code>multiset</code>) 用以有序地存储元素的容器。允许存在相等的元素。</li>\n<li><strong>映射</strong>(<code>map</code>) 由 {键，值} 对组成的集合，以某种比较键大小关系的谓词进行排列。</li>\n<li><strong>多重映射</strong>(<code>multimap</code>) 由 {键，值} 对组成的多重集合，亦即允许键有相等情况的映射。</li>\n</ul>\n<h3 id="迭代器" tabindex="-1"><a class="header-anchor" href="#迭代器" aria-hidden="true">#</a> 迭代器</h3>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">data</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n  cout <span class="token operator">&lt;&lt;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">// 使用下标访问元素</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">::</span>iterator iter <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> iter <span class="token operator">!=</span> data<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> iter<span class="token operator">++</span><span class="token punctuation">)</span>\n  cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>iter <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">// 使用迭代器访问元素</span>\n<span class="token comment">// 在C++11后可以使用 auto iter = data.begin() 来简化上述代码</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="序列式容器-1" tabindex="-1"><a class="header-anchor" href="#序列式容器-1" aria-hidden="true">#</a> 序列式容器</h3>\n<h4 id="vector" tabindex="-1"><a class="header-anchor" href="#vector" aria-hidden="true">#</a> vector</h4>\n<p><code>std::vector</code> 是 STL 提供的 <strong>内存连续的</strong>、<strong>可变长度</strong> 的数组（亦称列表）数据结构。能够提供线性复杂度的插入和删除，以及常数复杂度的随机访问。</p>\n<h5 id="vector-可以动态分配内存" tabindex="-1"><a class="header-anchor" href="#vector-可以动态分配内存" aria-hidden="true">#</a> <code>vector</code> 可以动态分配内存</h5>\n<p>很多时候我们不能提前开好那么大的空间（eg：预处理 1~n 中所有数的约数）。尽管我们能知道数据总量在空间允许的级别，但是单份数据还可能非常大，这种时候我们就需要 <code>vector</code> 来把内存占用量控制在合适的范围内。<code>vector</code> 还支持动态扩容，在内存非常紧张的时候这个特性就能派上用场了。</p>\n<h5 id="vector-重写了比较运算符及赋值运算符" tabindex="-1"><a class="header-anchor" href="#vector-重写了比较运算符及赋值运算符" aria-hidden="true">#</a> <code>vector</code> 重写了比较运算符及赋值运算符</h5>\n<p><code>vector</code> 重载了六个比较运算符，以字典序实现，这使得我们可以方便的判断两个容器是否相等（复杂度与容器大小成线性关系）。例如可以利用 <code>vector&lt;char&gt;</code> 实现字符串比较（当然，还是用 <code>std::string</code> 会更快更方便）。另外 <code>vector</code> 也重载了赋值运算符，使得数组拷贝更加方便。</p>\n<h5 id="vector-便利的初始化" tabindex="-1"><a class="header-anchor" href="#vector-便利的初始化" aria-hidden="true">#</a> <code>vector</code> 便利的初始化</h5>\n<p>于 <code>vector</code> 重载了 <code>=</code> 运算符，所以我们可以方便的初始化。<code>vector&lt;int&gt; data {1, 2, 3};</code>。</p>\n<h5 id="构造" tabindex="-1"><a class="header-anchor" href="#构造" aria-hidden="true">#</a> 构造</h5>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 1. 创建空vector; 常数复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> v0<span class="token punctuation">;</span>\n<span class="token comment">// 1+. 这句代码可以使得向vector中插入前3个元素时，保证常数时间复杂度</span>\nv0<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 2. 创建一个初始空间为3的vector，其元素的默认值是0; 线性复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v1</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 3. 创建一个初始空间为3的vector，其元素的默认值是2; 线性复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 4. 创建一个初始空间为3的vector，其元素的默认值是1，</span>\n<span class="token comment">// 并且使用v2的空间配置器; 线性复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v3</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> v2<span class="token punctuation">.</span><span class="token function">get_allocator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 5. 创建一个v2的拷贝vector v4， 其内容元素和v2一样; 线性复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v4</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 6. 创建一个v4的拷贝vector v5，其内容是{v4[1], v4[2]}; 线性复杂度</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v5</span><span class="token punctuation">(</span>v4<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> v4<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 7. 移动v2到新创建的vector v6，不发生拷贝; 常数复杂度; 需要 C++11</span>\nvector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> <span class="token function">v6</span><span class="token punctuation">(</span>std<span class="token operator">::</span><span class="token function">move</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 或者 v6 = std::move(v2);</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h5 id="访问" tabindex="-1"><a class="header-anchor" href="#访问" aria-hidden="true">#</a> 访问</h5>\n<p><code>vector</code> 提供了如下几种方法进行元素访问</p>\n<ol>\n<li>\n<p><code>at()</code></p>\n<p><code>v.at(pos)</code> 返回容器中下标为 <code>pos</code> 的引用。如果数组越界抛出 <code>std::out_of_range</code> 类型的异常。</p>\n</li>\n<li>\n<p><code>operator[]</code></p>\n<p><code>v[pos]</code> 返回容器中下标为 <code>pos</code> 的引用。不执行越界检查。</p>\n</li>\n<li>\n<p><code>front()</code></p>\n<p><code>v.front()</code> 返回首元素的引用。</p>\n</li>\n<li>\n<p><code>back()</code></p>\n<p><code>v.back()</code> 返回末尾元素的引用。</p>\n</li>\n<li>\n<p><code>data()</code></p>\n<p><code>v.data()</code> 返回指向数组第一个元素的指针。</p>\n</li>\n</ol>\n<h5 id="迭代器-1" tabindex="-1"><a class="header-anchor" href="#迭代器-1" aria-hidden="true">#</a> 迭代器</h5>\n<ol>\n<li>\n<p><code>begin()/cbegin()</code></p>\n<p>返回指向首元素的迭代器，其中 <code>*begin = front</code>。</p>\n</li>\n<li>\n<p><code>end()/cend()</code></p>\n<p>返回指向数组尾端占位符的迭代器，注意是没有元素的。</p>\n</li>\n<li>\n<p><code>rbegin()/rcbegin()</code></p>\n<p>返回指向逆向数组的首元素的逆向迭代器，可以理解为正向容器的末元素。</p>\n</li>\n<li>\n<p><code>rend()/rcend()</code></p>\n<p>返回指向逆向数组末元素后一位置的迭代器，对应容器首的前一个位置，没有元素。</p>\n</li>\n</ol>\n<h5 id="长度和容量" tabindex="-1"><a class="header-anchor" href="#长度和容量" aria-hidden="true">#</a> 长度和容量</h5>\n<ul>\n<li>\n<p><code>empty()</code> 返回一个 <code>bool</code> 值，即 <code>v.begin() == v.end()</code>，<code>true</code> 为空，<code>false</code> 为非空。</p>\n</li>\n<li>\n<p><code>size()</code> 返回容器长度（元素数量），即 <code>std::distance(v.begin(), v.end())</code>。</p>\n</li>\n<li>\n<p><code>resize()</code> 改变 <code>vector</code> 的长度，多退少补。补充元素可以由参数指定。</p>\n</li>\n<li>\n<p><code>max_size()</code> 返回容器的最大可能长度。</p>\n<p><strong>与容量相关</strong>：</p>\n</li>\n<li>\n<p><code>reserve()</code> 使得 <code>vector</code> 预留一定的内存空间，避免不必要的内存拷贝。</p>\n</li>\n<li>\n<p><code>capacity()</code> 返回容器的容量，即不发生拷贝的情况下容器的长度上限。</p>\n</li>\n<li>\n<p><code>shrink_to_fit()</code> 使得 <code>vector</code> 的容量与长度一致，多退但不会少。</p>\n</li>\n</ul>\n<h5 id="元素增删改" tabindex="-1"><a class="header-anchor" href="#元素增删改" aria-hidden="true">#</a> 元素增删改</h5>\n<ul>\n<li><code>clear()</code> 清除所有元素</li>\n<li><code>insert()</code> 支持在某个迭代器位置插入元素、可以插入多个。<strong>复杂度与 <code>pos</code> 距离末尾长度成线性而非常数的</strong></li>\n<li><code>erase()</code> 删除某个迭代器或者区间的元素，返回最后被删除的迭代器。复杂度与 <code>insert</code> 一致。</li>\n<li><code>push_back()</code> 在末尾插入一个元素，均摊复杂度为 <strong>常数</strong>，最坏为线性复杂度。</li>\n<li><code>pop_back()</code> 删除末尾元素，常数复杂度。</li>\n<li><code>swap()</code> 与另一个容器进行交换，此操作是 <strong>常数复杂度</strong> 而非线性的。</li>\n</ul>\n<h3 id="array" tabindex="-1"><a class="header-anchor" href="#array" aria-hidden="true">#</a> array</h3>\n<h4 id="元素访问" tabindex="-1"><a class="header-anchor" href="#元素访问" aria-hidden="true">#</a> 元素访问</h4>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163712010.png" alt="image-20210314163712010"></p>\n<blockquote>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>at` 若遇 `pos >= size()` 的情况会抛出 `std::out_of_range\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></blockquote>\n<h4 id="容量" tabindex="-1"><a class="header-anchor" href="#容量" aria-hidden="true">#</a> 容量</h4>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163758183.png" alt="image-20210314163758183"></p>\n<p>由于每个 <code>array</code> 都是固定大小容器，<code>size()</code> 返回的值等于 <code>max_size()</code> 返回的值。</p>\n<h4 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h4>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210314163816852.png" alt="image-20210314163816852"></p>\n<h4 id="实例" tabindex="-1"><a class="header-anchor" href="#实例" aria-hidden="true">#</a> 实例</h4>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 1. 创建空array，长度为3; 常数复杂度</span>\nstd<span class="token operator">::</span>array<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">></span> v0<span class="token punctuation">;</span>\n<span class="token comment">// 2. 用指定常数创建array; 常数复杂度</span>\nstd<span class="token operator">::</span>array<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">></span> v1<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nv0<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 填充数组</span>\n\n<span class="token comment">// 访问数组</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> arr<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="deque" tabindex="-1"><a class="header-anchor" href="#deque" aria-hidden="true">#</a> deque</h3>\n<p><code>std::deque</code> 是 STL 提供的 双端队列数据结构。能够提供线性复杂度的插入和删除，以及常数复杂度的随机访问</p>\n<p>以下介绍常用用法，详细内容 <a href="https://zh.cppreference.com/w/cpp/container/deque" target="_blank" rel="noopener noreferrer">请参见 C++ 文档<ExternalLinkIcon/></a>。<code>deque</code> 的迭代器函数与 <code>vector</code> 相同，因此不作详细介绍。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 1. 定义一个int类型的空双端队列 v0\ndeque&lt;int> v0;\n// 2. 定义一个int类型的双端队列 v1，并设置初始大小为10; 线性复杂度\ndeque&lt;int> v1(10);\n// 3. 定义一个int类型的双端队列 v2，并初始化为10个1; 线性复杂度\ndeque&lt;int> v2(10, 1);\n// 4. 复制已有的双端队列 v1; 线性复杂度\ndeque&lt;int> v3(v1);\n// 5. 创建一个v2的拷贝deque v4，其内容是v4[0]至v4[2]; 线性复杂度\ndeque&lt;int> v4(v2.begin(), v2.begin() + 3);\n// 6. 移动v2到新创建的deque v5，不发生拷贝; 常数复杂度; 需要 C++11\ndeque&lt;int> v5(std::move(v2));\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="访问-1" tabindex="-1"><a class="header-anchor" href="#访问-1" aria-hidden="true">#</a> 访问</h4>\n<p>与 <code>vector</code> 一致，但无法访问底层内存。其高效的元素访问速度可参考实现细节部分。</p>\n<ul>\n<li><code>at()</code> 返回容器中指定位置元素的引用，执行越界检查，<strong>常数复杂度</strong>。</li>\n<li><code>operator[]</code> 返回容器中指定位置元素的引用。不执行越界检查，<strong>常数复杂度</strong>。</li>\n<li><code>front()</code> 返回首元素的引用。</li>\n<li><code>back()</code> 返回末尾元素的引用。</li>\n</ul>\n<h4 id="长度" tabindex="-1"><a class="header-anchor" href="#长度" aria-hidden="true">#</a> 长度</h4>\n<p>与 <code>vector</code> 一致，但是没有 <code>reserve()</code> 和 <code>capacity()</code> 函数。（仍然有 <code>shrink_to_fit()</code> 函数）</p>\n<h4 id="元素增删改-1" tabindex="-1"><a class="header-anchor" href="#元素增删改-1" aria-hidden="true">#</a> 元素增删改</h4>\n<p>与 <code>vector</code> 一致，并额外有向队列头部增加元素的函数。</p>\n<ul>\n<li><code>clear()</code> 清除所有元素</li>\n<li><code>insert()</code> 支持在某个迭代器位置插入元素、可以插入多个。<strong>复杂度与 <code>pos</code> 与两端距离较小者成线性</strong>。</li>\n<li><code>erase()</code> 删除某个迭代器或者区间的元素，返回最后被删除的迭代器。复杂度与 <code>insert</code> 一致。</li>\n<li><code>push_front()</code> 在头部插入一个元素，<strong>常数复杂度</strong>。</li>\n<li><code>pop_front()</code> 删除头部元素，<strong>常数复杂度</strong>。</li>\n<li><code>push_back()</code> 在末尾插入一个元素，<strong>常数复杂度</strong>。</li>\n<li><code>pop_back()</code> 删除末尾元素，<strong>常数复杂度</strong>。</li>\n<li><code>swap()</code> 与另一个容器进行交换，此操作是 <strong>常数复杂度</strong> 而非线性的。</li>\n</ul>\n<h3 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> list</h3>\n<p><code>std::list</code> 是 STL 提供的 双向链表数据结构。能够提供线性复杂度的随机访问，以及常数复杂度的插入和删除。</p>\n<p><code>ist</code> 的使用方法与 <code>deque</code> 基本相同，但是增删操作和访问的复杂度不同。详细内容 <a href="https://zh.cppreference.com/w/cpp/container/list" target="_blank" rel="noopener noreferrer">请参见 C++ 文档<ExternalLinkIcon/></a>。<code>list</code> 的迭代器、长度、元素增删及修改相关的函数与 <code>deque</code> 相同，因此不作详细介绍。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/C++基础学习（三）.html",pathLocale:"/",permalink:null,routeMeta:{title:"C++基础学习（三）"},slug:"C++基础学习（三）",filePath:"/root/blog/blogs/C++/C++基础学习（三）.md",filePathRelative:"blogs/C++/C++基础学习（三）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习（三）.html.vue",componentFilePathRelative:"pages/blogs/C++/C++基础学习（三）.html.vue",componentFileChunkName:"v-5be11c6c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习（三）.html.js",dataFilePathRelative:"pages/blogs/C++/C++基础学习（三）.html.js",dataFileChunkName:"v-5be11c6c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/C++基础学习（三）.html",htmlFilePathRelative:"blogs/C++/C++基础学习（三）.html"},{data:{key:"v-5ba666e0",path:"/blogs/C++/C++%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89.html",title:"C++基础学习（四）",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"关联式容器",slug:"关联式容器",children:[{level:3,title:"set",slug:"set",children:[]},{level:3,title:"map",slug:"map",children:[]}]}],git:{},filePathRelative:"blogs/C++/C++基础学习（四）.md"},key:"v-5ba666e0",path:"/blogs/C++/C++jichuxuexi（si）.html",title:"C++基础学习（四）",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"关联式容器",slug:"关联式容器",children:[{level:3,title:"set",slug:"set",children:[]},{level:3,title:"map",slug:"map",children:[]}]}],content:'\x3c!-- ---\r\ntitle: C++基础学习（四）\r\ndate: 2021/03/20\r\ntags:\r\n  - c++\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n# C++基础学习（四）\r\n\r\n## 关联式容器\r\n\r\n### set\r\n\r\n`set` 是关联容器，含有键值类型对象的已排序集，搜索、移除和插入拥有对数复杂度。`set` 内部通常采用红黑树实现。平衡二叉树的特性使得 `set` 非常适合处理需要同时兼顾查找、插入与删除的情况。\r\n\r\n和数学中的集合相似，`set` 中不会出现值相同的元素。如果需要有相同元素的集合，需要使用 `multiset`。`multiset` 的使用方法与 `set` 的使用方法基本相同。\r\n\r\n#### 插入与删除操作\r\n\r\n- `insert(x)` 当容器中没有等价元素的时候，将元素 x 插入到 `set` 中。\r\n- `erase(x)` 删除值为 x 的 **所有** 元素，返回删除元素的个数。\r\n- `erase(pos)` 删除迭代器为 pos 的元素，要求迭代器必须合法。\r\n- `erase(first,last)` 删除迭代器在 范围内的所有元素。\r\n- `clear()` 清空 `set`。\r\n\r\n#### 迭代器\r\n\r\n`set` 提供了以下几种迭代器：\r\n\r\n1. `begin()/cbegin()`\r\n   返回指向首元素的迭代器，其中 `*begin = front`。\r\n2. `end()/cend()`\r\n   返回指向数组尾端占位符的迭代器，注意是没有元素的。\r\n3. `rbegin()/rcbegin()`\r\n   返回指向逆向数组的首元素的逆向迭代器，可以理解为正向容器的末元素。\r\n4. `rend()/rcend()`\r\n   返回指向逆向数组末元素后一位置的迭代器，对应容器首的前一个位置，没有元素。\r\n\r\n#### 查找\r\n\r\n- `count(x)` 返回 `set` 内键为 x 的元素数量。\r\n- `find(x)` 在 `set` 内存在键为 x 的元素时会返回该元素的迭代器，否则返回 `end()`。\r\n- `lower_bound(x)` 返回指向首个不小于给定键的元素的迭代器。如果不存在这样的元素，返回 `end()`。\r\n- `upper_bound(x)` 返回指向首个大于给定键的元素的迭代器。如果不存在这样的元素，返回 `end()`。\r\n- `empty()` 返回容器是否为空。\r\n- `size()` 返回容器内元素个数。\r\n\r\n> `set` 自带的 `lower_bound` 和 `upper_bound` 的时间复杂度为 O(logn)。\r\n>\r\n> 但使用 `algorithm` 库中的 `lower_bound` 和 `upper_bound` 函数对 `set` 中的元素进行查询，时间复杂度为O(n) 。****\r\n\r\n#### 样例-贪心算法\r\n\r\n在贪心算法中经常会需要出现类似 **找出并删除最小的大于等于某个值的元素**。这种操作能轻松地通过 `set` 来完成。\r\n\r\n```c++\r\n// 现存可用的元素\r\nset<int> available;\r\n// 需要大于等于的值\r\nint x;\r\n\r\n// 查找最小的大于等于x的元素\r\nset<int>::iterator it = available.lower_bound(x);\r\nif (it == available.end()) {\r\n  // 不存在这样的元素，则进行相应操作……\r\n} else {\r\n  // 找到了这样的元素，将其从现存可用元素中移除\r\n  available.erase(it);\r\n  // 进行相应操作……\r\n}\r\n```\r\n\r\n### map\r\n\r\n`map` 是有序键值对容器，它的元素的键是唯一的。搜索、移除和插入操作拥有对数复杂度。`map` 通常实现为红黑树。\r\n\r\n你可能需要存储一些键值对，例如存储学生姓名对应的分数：`Tom 0`，`Bob 100`，`Alan 100`。但是由于数组下标只能为非负整数，所以无法用姓名作为下标来存储，这个时候最简单的办法就是使用 STL 中的 `map` 了！\r\n\r\n```c++\r\nmap<Key, T> yourMap;\r\nmap<string, int> mp;\r\n```\r\n\r\n#### 插入与删除\r\n\r\n- 可以直接通过下标访问来进行查询或插入操作。例如 `mp["Alan"]=100`。\r\n- 通过向 `map` 中插入一个类型为 `pair<Key, T>` 的值可以达到插入元素的目的，例如 `mp.insert(pair<string,int>("Alan",100));`；\r\n- `erase(key)` 函数会删除键为 `key` 的 **所有** 元素。返回值为删除元素的数量。\r\n- `erase(pos)`: 删除迭代器为 pos 的元素，要求迭代器必须合法。\r\n- `erase(first,last)`: 删除迭代器在 范围内的所有元素。\r\n- `clear()` 函数会清空整个容器。\r\n\r\n> 在利用下标访问 `map` 中的某个元素时，如果 `map` 中不存在相应键的元素，会自动在 `map` 中插入一个新元素，并将其值设置为默认值（对于整数，值为零；对于有默认构造函数的类型，会调用默认构造函数进行初始化）。\r\n>\r\n> 当下标访问操作过于频繁时，容器中会出现大量无意义元素，影响 `map` 的效率。因此一般情况下推荐使用 `find()` 函数来寻找特定键的元素。\r\n\r\n#### 查询\r\n\r\n- `count(x)`: 返回容器内键为 x 的元素数量。复杂度为 （关于容器大小对数复杂度，加上匹配个数）。\r\n- `find(x)`: 若容器内存在键为 x 的元素，会返回该元素的迭代器；否则返回 `end()`。\r\n- `lower_bound(x)`: 返回指向首个不小于给定键的元素的迭代器。\r\n- `upper_bound(x)`: 返回指向首个大于给定键的元素的迭代器。若容器内所有元素均小于或等于给定键，返回 `end()`。\r\n- `empty()`: 返回容器是否为空。\r\n- `size()`: 返回容器内元素个数。\r\n\r\n#### 样例\r\n\r\n```c++\r\n// 存储状态与对应的答案\r\nmap<string, int> record;\r\n\r\n// 新搜索到的状态与对应答案\r\nstring status;\r\nint ans;\r\n// 查找对应的状态是否出现过\r\nmap<string, int>::iterator it = record.find(status);\r\nif (it == record.end()) {\r\n  // 尚未搜索过该状态，将其加入状态记录中\r\n  record[status] = ans;\r\n  // 进行相应操作……\r\n} else {\r\n  // 已经搜索过该状态，进行相应操作……\r\n}\r\n```\r\n\r\n#### 遍历\r\n\r\n```c++\r\nset<int> s;\r\ntypedef set<int>::iterator si;\r\nfor (si it = s.begin(); it != s.end(); it++) cout << *it << endl;\r\n```\r\n\r\n> 需要注意的是，对 `map` 的迭代器解引用后，得到的是类型为 `pair<Key, T>` 的键值对。\r\n\r\nc++11\r\n\r\n```c++\r\nset<int> s;\r\nfor (auto x : s) cout << x << endl;\r\n```\r\n\r\n',contentRendered:'\x3c!-- ---\ntitle: C++基础学习（四）\ndate: 2021/03/20\ntags:\n  - c++\ncategories:\n  - C++\n--- --\x3e\n<h1 id="c-基础学习-四" tabindex="-1"><a class="header-anchor" href="#c-基础学习-四" aria-hidden="true">#</a> C++基础学习（四）</h1>\n<h2 id="关联式容器" tabindex="-1"><a class="header-anchor" href="#关联式容器" aria-hidden="true">#</a> 关联式容器</h2>\n<h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3>\n<p><code>set</code> 是关联容器，含有键值类型对象的已排序集，搜索、移除和插入拥有对数复杂度。<code>set</code> 内部通常采用红黑树实现。平衡二叉树的特性使得 <code>set</code> 非常适合处理需要同时兼顾查找、插入与删除的情况。</p>\n<p>和数学中的集合相似，<code>set</code> 中不会出现值相同的元素。如果需要有相同元素的集合，需要使用 <code>multiset</code>。<code>multiset</code> 的使用方法与 <code>set</code> 的使用方法基本相同。</p>\n<h4 id="插入与删除操作" tabindex="-1"><a class="header-anchor" href="#插入与删除操作" aria-hidden="true">#</a> 插入与删除操作</h4>\n<ul>\n<li><code>insert(x)</code> 当容器中没有等价元素的时候，将元素 x 插入到 <code>set</code> 中。</li>\n<li><code>erase(x)</code> 删除值为 x 的 <strong>所有</strong> 元素，返回删除元素的个数。</li>\n<li><code>erase(pos)</code> 删除迭代器为 pos 的元素，要求迭代器必须合法。</li>\n<li><code>erase(first,last)</code> 删除迭代器在 范围内的所有元素。</li>\n<li><code>clear()</code> 清空 <code>set</code>。</li>\n</ul>\n<h4 id="迭代器" tabindex="-1"><a class="header-anchor" href="#迭代器" aria-hidden="true">#</a> 迭代器</h4>\n<p><code>set</code> 提供了以下几种迭代器：</p>\n<ol>\n<li><code>begin()/cbegin()</code>\n返回指向首元素的迭代器，其中 <code>*begin = front</code>。</li>\n<li><code>end()/cend()</code>\n返回指向数组尾端占位符的迭代器，注意是没有元素的。</li>\n<li><code>rbegin()/rcbegin()</code>\n返回指向逆向数组的首元素的逆向迭代器，可以理解为正向容器的末元素。</li>\n<li><code>rend()/rcend()</code>\n返回指向逆向数组末元素后一位置的迭代器，对应容器首的前一个位置，没有元素。</li>\n</ol>\n<h4 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h4>\n<ul>\n<li><code>count(x)</code> 返回 <code>set</code> 内键为 x 的元素数量。</li>\n<li><code>find(x)</code> 在 <code>set</code> 内存在键为 x 的元素时会返回该元素的迭代器，否则返回 <code>end()</code>。</li>\n<li><code>lower_bound(x)</code> 返回指向首个不小于给定键的元素的迭代器。如果不存在这样的元素，返回 <code>end()</code>。</li>\n<li><code>upper_bound(x)</code> 返回指向首个大于给定键的元素的迭代器。如果不存在这样的元素，返回 <code>end()</code>。</li>\n<li><code>empty()</code> 返回容器是否为空。</li>\n<li><code>size()</code> 返回容器内元素个数。</li>\n</ul>\n<blockquote>\n<p><code>set</code> 自带的 <code>lower_bound</code> 和 <code>upper_bound</code> 的时间复杂度为 O(logn)。</p>\n<p>但使用 <code>algorithm</code> 库中的 <code>lower_bound</code> 和 <code>upper_bound</code> 函数对 <code>set</code> 中的元素进行查询，时间复杂度为O(n) 。****</p>\n</blockquote>\n<h4 id="样例-贪心算法" tabindex="-1"><a class="header-anchor" href="#样例-贪心算法" aria-hidden="true">#</a> 样例-贪心算法</h4>\n<p>在贪心算法中经常会需要出现类似 <strong>找出并删除最小的大于等于某个值的元素</strong>。这种操作能轻松地通过 <code>set</code> 来完成。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 现存可用的元素</span>\nset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> available<span class="token punctuation">;</span>\n<span class="token comment">// 需要大于等于的值</span>\n<span class="token keyword">int</span> x<span class="token punctuation">;</span>\n\n<span class="token comment">// 查找最小的大于等于x的元素</span>\nset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">::</span>iterator it <span class="token operator">=</span> available<span class="token punctuation">.</span><span class="token function">lower_bound</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> available<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 不存在这样的元素，则进行相应操作……</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 找到了这样的元素，将其从现存可用元素中移除</span>\n  available<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 进行相应操作……</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3>\n<p><code>map</code> 是有序键值对容器，它的元素的键是唯一的。搜索、移除和插入操作拥有对数复杂度。<code>map</code> 通常实现为红黑树。</p>\n<p>你可能需要存储一些键值对，例如存储学生姓名对应的分数：<code>Tom 0</code>，<code>Bob 100</code>，<code>Alan 100</code>。但是由于数组下标只能为非负整数，所以无法用姓名作为下标来存储，这个时候最简单的办法就是使用 STL 中的 <code>map</code> 了！</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>map<span class="token operator">&lt;</span>Key<span class="token punctuation">,</span> T<span class="token operator">></span> yourMap<span class="token punctuation">;</span>\nmap<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> mp<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="插入与删除" tabindex="-1"><a class="header-anchor" href="#插入与删除" aria-hidden="true">#</a> 插入与删除</h4>\n<ul>\n<li>可以直接通过下标访问来进行查询或插入操作。例如 <code>mp[&quot;Alan&quot;]=100</code>。</li>\n<li>通过向 <code>map</code> 中插入一个类型为 <code>pair&lt;Key, T&gt;</code> 的值可以达到插入元素的目的，例如 <code>mp.insert(pair&lt;string,int&gt;(&quot;Alan&quot;,100));</code>；</li>\n<li><code>erase(key)</code> 函数会删除键为 <code>key</code> 的 <strong>所有</strong> 元素。返回值为删除元素的数量。</li>\n<li><code>erase(pos)</code>: 删除迭代器为 pos 的元素，要求迭代器必须合法。</li>\n<li><code>erase(first,last)</code>: 删除迭代器在 范围内的所有元素。</li>\n<li><code>clear()</code> 函数会清空整个容器。</li>\n</ul>\n<blockquote>\n<p>在利用下标访问 <code>map</code> 中的某个元素时，如果 <code>map</code> 中不存在相应键的元素，会自动在 <code>map</code> 中插入一个新元素，并将其值设置为默认值（对于整数，值为零；对于有默认构造函数的类型，会调用默认构造函数进行初始化）。</p>\n<p>当下标访问操作过于频繁时，容器中会出现大量无意义元素，影响 <code>map</code> 的效率。因此一般情况下推荐使用 <code>find()</code> 函数来寻找特定键的元素。</p>\n</blockquote>\n<h4 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h4>\n<ul>\n<li><code>count(x)</code>: 返回容器内键为 x 的元素数量。复杂度为 （关于容器大小对数复杂度，加上匹配个数）。</li>\n<li><code>find(x)</code>: 若容器内存在键为 x 的元素，会返回该元素的迭代器；否则返回 <code>end()</code>。</li>\n<li><code>lower_bound(x)</code>: 返回指向首个不小于给定键的元素的迭代器。</li>\n<li><code>upper_bound(x)</code>: 返回指向首个大于给定键的元素的迭代器。若容器内所有元素均小于或等于给定键，返回 <code>end()</code>。</li>\n<li><code>empty()</code>: 返回容器是否为空。</li>\n<li><code>size()</code>: 返回容器内元素个数。</li>\n</ul>\n<h4 id="样例" tabindex="-1"><a class="header-anchor" href="#样例" aria-hidden="true">#</a> 样例</h4>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 存储状态与对应的答案</span>\nmap<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span> record<span class="token punctuation">;</span>\n\n<span class="token comment">// 新搜索到的状态与对应答案</span>\nstring status<span class="token punctuation">;</span>\n<span class="token keyword">int</span> ans<span class="token punctuation">;</span>\n<span class="token comment">// 查找对应的状态是否出现过</span>\nmap<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">></span><span class="token operator">::</span>iterator it <span class="token operator">=</span> record<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> record<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 尚未搜索过该状态，将其加入状态记录中</span>\n  record<span class="token punctuation">[</span>status<span class="token punctuation">]</span> <span class="token operator">=</span> ans<span class="token punctuation">;</span>\n  <span class="token comment">// 进行相应操作……</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 已经搜索过该状态，进行相应操作……</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="遍历" tabindex="-1"><a class="header-anchor" href="#遍历" aria-hidden="true">#</a> 遍历</h4>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> s<span class="token punctuation">;</span>\n<span class="token keyword">typedef</span> set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">::</span>iterator si<span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span>si it <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>it <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>需要注意的是，对 <code>map</code> 的迭代器解引用后，得到的是类型为 <code>pair&lt;Key, T&gt;</code> 的键值对。</p>\n</blockquote>\n<p>c++11</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> s<span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> x <span class="token operator">:</span> s<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> x <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/C++基础学习（四）.html",pathLocale:"/",permalink:null,routeMeta:{title:"C++基础学习（四）"},slug:"C++基础学习（四）",filePath:"/root/blog/blogs/C++/C++基础学习（四）.md",filePathRelative:"blogs/C++/C++基础学习（四）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习（四）.html.vue",componentFilePathRelative:"pages/blogs/C++/C++基础学习（四）.html.vue",componentFileChunkName:"v-5ba666e0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C++基础学习（四）.html.js",dataFilePathRelative:"pages/blogs/C++/C++基础学习（四）.html.js",dataFileChunkName:"v-5ba666e0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/C++基础学习（四）.html",htmlFilePathRelative:"blogs/C++/C++基础学习（四）.html"},{data:{key:"v-3c2e1d74",path:"/blogs/C++/C%E4%B8%8EC++%E5%8C%BA%E5%88%AB.html",title:"提前看结论",lang:"en-US",frontmatter:{},excerpt:"",headers:[],git:{},filePathRelative:"blogs/C++/C与C++区别.md"},key:"v-3c2e1d74",path:"/blogs/C++/CyuC++qubie.html",title:"提前看结论",lang:"en-US",frontmatter:{},excerpt:"",headers:[],content:"\x3c!-- ---\r\ntitle: C与C++区别\r\ndate: 2021/12/29\r\ntags:\r\n  - c++\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n\r\n**阅读本篇文章大概需要1.5分钟，简短总结重要的区别**\r\n\r\n# 提前看结论\r\n\r\nC++完全兼容C语言，并且拥有许多新功能\r\n\r\n# 指针与应用\r\n\r\nC++中兼容了C的指针，但是对于变量传递而言，更推荐使用C++的引用。因为引用指向的对象不能为空，因此可以避免一些空地址访问问题。\r\n\r\n# struct\r\n\r\nC和C++都有这一个结构，而C++中的struct是一种类，**它与类唯一的区别是它的成员和继承行为默认是public的，而一般的默认成员是private的**。\r\n\r\n声明`struct`时两者都有区别,C版本:\r\n\r\n```c++\r\ntypedef struct Node_t{\r\n    struct Node_t *next;\r\n    int key;\r\n} Node;\r\n```\r\n\r\nC++:\r\n\r\n```\r\nstruct Node {\r\n  Node *next;\r\n  int key;\r\n};\r\n```\r\n\r\n",contentRendered:'\x3c!-- ---\ntitle: C与C++区别\ndate: 2021/12/29\ntags:\n  - c++\ncategories:\n  - C++\n--- --\x3e\n<p><strong>阅读本篇文章大概需要1.5分钟，简短总结重要的区别</strong></p>\n<h1 id="提前看结论" tabindex="-1"><a class="header-anchor" href="#提前看结论" aria-hidden="true">#</a> 提前看结论</h1>\n<p>C++完全兼容C语言，并且拥有许多新功能</p>\n<h1 id="指针与应用" tabindex="-1"><a class="header-anchor" href="#指针与应用" aria-hidden="true">#</a> 指针与应用</h1>\n<p>C++中兼容了C的指针，但是对于变量传递而言，更推荐使用C++的引用。因为引用指向的对象不能为空，因此可以避免一些空地址访问问题。</p>\n<h1 id="struct" tabindex="-1"><a class="header-anchor" href="#struct" aria-hidden="true">#</a> struct</h1>\n<p>C和C++都有这一个结构，而C++中的struct是一种类，<strong>它与类唯一的区别是它的成员和继承行为默认是public的，而一般的默认成员是private的</strong>。</p>\n<p>声明<code>struct</code>时两者都有区别,C版本:</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">Node_t</span><span class="token punctuation">{</span>\n    <span class="token keyword">struct</span> <span class="token class-name">Node_t</span> <span class="token operator">*</span>next<span class="token punctuation">;</span>\n    <span class="token keyword">int</span> key<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> Node<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>C++:</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>struct Node {\n  Node *next;\n  int key;\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/C与C++区别.html",pathLocale:"/",permalink:null,routeMeta:{title:"提前看结论"},slug:"C与C++区别",filePath:"/root/blog/blogs/C++/C与C++区别.md",filePathRelative:"blogs/C++/C与C++区别.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C与C++区别.html.vue",componentFilePathRelative:"pages/blogs/C++/C与C++区别.html.vue",componentFileChunkName:"v-3c2e1d74",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/C与C++区别.html.js",dataFilePathRelative:"pages/blogs/C++/C与C++区别.html.js",dataFileChunkName:"v-3c2e1d74",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/C与C++区别.html",htmlFilePathRelative:"blogs/C++/C与C++区别.html"},{data:{key:"v-31091dc5",path:"/blogs/C++/String.html",title:"String",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"String is mutable in C++",slug:"string-is-mutable-in-c",children:[]},{level:2,title:"An Interesting example from leetcode",slug:"an-interesting-example-from-leetcode",children:[]},{level:2,title:"Reverse Words in a String",slug:"reverse-words-in-a-string",children:[]},{level:2,title:"Reverse Words in a String III",slug:"reverse-words-in-a-string-iii",children:[]}],git:{},filePathRelative:"blogs/C++/String.md"},key:"v-31091dc5",path:"/blogs/C++/String.html",title:"String",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"String is mutable in C++",slug:"string-is-mutable-in-c",children:[]},{level:2,title:"An Interesting example from leetcode",slug:"an-interesting-example-from-leetcode",children:[]},{level:2,title:"Reverse Words in a String",slug:"reverse-words-in-a-string",children:[]},{level:2,title:"Reverse Words in a String III",slug:"reverse-words-in-a-string-iii",children:[]}],content:'\x3c!-- ---\r\ntitle: String\r\ndate: 2021/03/20\r\ntags:\r\n  - c++\r\n  - string\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n# String\r\n\r\n- Be familiar with the `basic operations` in a string, especially the unique operations which we don\'t have in an array\r\n- Understand the differences between different `comparison` functions;\r\n- Determine whether the string is `immutable` or not in your favorite language and understand the impact of this feature;\r\n- Be able to solve basic string-related problems.\r\n\r\n**For instance, if the length of the string is `N`, the time complexity of both finding operation and substring operation is `O(N)`.**\r\n\r\n```c++\r\n#include <iostream>\r\n\r\nint main() {\r\n    string s1 = "Hello World";\r\n    cout << "s1 is \\"Hello World\\"" << endl;\r\n    string s2 = s1;\r\n    cout << "s2 is initialized by s1" << endl;\r\n    string s3(s1);\r\n    cout << "s3 is initialized by s1" << endl;\r\n    // compare by \'==\'\r\n    cout << "Compared by \'==\':" << endl;\r\n    cout << "s1 and \\"Hello World\\": " << (s1 == "Hello World") << endl;\r\n    cout << "s1 and s2: " << (s1 == s2) << endl;\r\n    cout << "s1 and s3: " << (s1 == s3) << endl;\r\n    // compare by \'compare\'\r\n    cout << "Compared by \'compare\':" << endl;\r\n    cout << "s1 and \\"Hello World\\": " << !s1.compare("Hello World") << endl;\r\n    cout << "s1 and s2: " << !s1.compare(s2) << endl;\r\n    cout << "s1 and s3: " << !s1.compare(s3) << endl;\r\n}\r\n```\r\n\r\n## String is mutable in C++\r\n\r\n```c++\r\n#include <iostream>\r\n\r\nint main() {\r\n    string s1 = "Hello World";\r\n    s1[5] = \',\';\r\n    cout << s1 << endl;\r\n}\r\n```\r\n\r\n```c++\r\n#include <iostream>\r\n\r\nint main() {\r\n    string s1 = "Hello World";\r\n    // 1. concatenate\r\n    s1 += "!";\r\n    cout << s1 << endl;\r\n    // 2. find\r\n    cout << "The position of first \'o\' is: " << s1.find(\'o\') << endl;\r\n    cout << "The position of last \'o\' is: " << s1.rfind(\'o\') << endl;\r\n    // 3. get substr (include 6)\r\n    cout << s1.substr(6, 5) << endl;\r\n}\r\n```\r\n\r\n## An Interesting example from leetcode\r\n\r\n![image-20210319134029167](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210319134029167.png)\r\n\r\n```c++\r\n//solution\r\nclass Solution {\r\npublic:\r\n    string longestCommonPrefix(vector<string>& words) {\r\n       if (empty(words)) return "";\r\n        string output = "";\r\n        sort(begin(words), end(words));\r\n        auto a = words.front(), b = words.back();\r\n        for (auto i = 0; i < size(a); ++i) {\r\n            if (a[i] == b[i]) { output += a[i]; } else { break; } \r\n        }\r\n        return output;\r\n    }\r\n};\r\n```\r\n\r\n- sort puts them in alphabetical order.\r\n- only need to compare the first and last one cuz all ones in the middle will be cancelled out.\r\n\r\n## Reverse Words in a String\r\n\r\n```\r\nInput: s = "the sky is blue"\r\nOutput: "blue is sky the"\r\n```\r\n\r\n```\r\nInput: s = "  hello world  "\r\nOutput: "world hello"\r\nExplanation: Your reversed string should not contain leading or trailing spaces.\r\n```\r\n\r\n```\r\nInput: s = "a good   example"\r\nOutput: "example good a"\r\nExplanation: You need to reduce multiple spaces between two words to a single space in the reversed string.\r\n```\r\n\r\n```\r\nInput: s = "  Bob    Loves  Alice   "\r\nOutput: "Alice Loves Bob"\r\n```\r\n\r\n```\r\nInput: s = "Alice does not even like bob"\r\nOutput: "bob like even not does Alice"\r\n```\r\n\r\n**Tip : Using a vector**\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    string reverseWords(string s) {\r\n       stringstream ss(s);\r\n        string word;\r\n        vector<string> v;\r\n        while(ss>>word)\r\n            v.push_back(word);\r\n        \r\n        string ans = "";\r\n        for(int i=v.size()-1;i>=0;i--)\r\n        {\r\n            ans+=v[i] + \' \';\r\n        }\r\n        ans.erase(ans.end()-1);\r\n        return ans;\r\n    }\r\n};\r\n```\r\n\r\n## Reverse Words in a String III\r\n\r\n```\r\nInput: s = "Let\'s take LeetCode contest"\r\nOutput: "s\'teL ekat edoCteeL tsetnoc"\r\n```\r\n\r\n```\r\nInput: s = "God Ding"\r\nOutput: "doG gniD"\r\n```\r\n\r\n**code**\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    string reverseWords(string s) {\r\n        stringstream ss(s);\r\n        string word;\r\n        string ans = "";\r\n        while(ss>>word)\r\n        {\r\n           reverse(word.begin(),word.end());\r\n            ans +=" "+word;\r\n        }\r\n        return ans.substr(1,ans.size()-1);\r\n    }\r\n};\r\n```\r\n\r\n',contentRendered:'\x3c!-- ---\ntitle: String\ndate: 2021/03/20\ntags:\n  - c++\n  - string\ncategories:\n  - C++\n--- --\x3e\n<h1 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h1>\n<ul>\n<li>Be familiar with the <code>basic operations</code> in a string, especially the unique operations which we don\'t have in an array</li>\n<li>Understand the differences between different <code>comparison</code> functions;</li>\n<li>Determine whether the string is <code>immutable</code> or not in your favorite language and understand the impact of this feature;</li>\n<li>Be able to solve basic string-related problems.</li>\n</ul>\n<p><strong>For instance, if the length of the string is <code>N</code>, the time complexity of both finding operation and substring operation is <code>O(N)</code>.</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    string s1 <span class="token operator">=</span> <span class="token string">"Hello World"</span><span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 is \\"Hello World\\""</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    string s2 <span class="token operator">=</span> s1<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s2 is initialized by s1"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    string <span class="token function">s3</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s3 is initialized by s1"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token comment">// compare by \'==\'</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Compared by \'==\':"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and \\"Hello World\\": "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>s1 <span class="token operator">==</span> <span class="token string">"Hello World"</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and s2: "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and s3: "</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>s1 <span class="token operator">==</span> s3<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token comment">// compare by \'compare\'</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Compared by \'compare\':"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and \\"Hello World\\": "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">!</span>s1<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and s2: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">!</span>s1<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"s1 and s3: "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">!</span>s1<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="string-is-mutable-in-c" tabindex="-1"><a class="header-anchor" href="#string-is-mutable-in-c" aria-hidden="true">#</a> String is mutable in C++</h2>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    string s1 <span class="token operator">=</span> <span class="token string">"Hello World"</span><span class="token punctuation">;</span>\n    s1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">\',\'</span><span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> s1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    string s1 <span class="token operator">=</span> <span class="token string">"Hello World"</span><span class="token punctuation">;</span>\n    <span class="token comment">// 1. concatenate</span>\n    s1 <span class="token operator">+=</span> <span class="token string">"!"</span><span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> s1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token comment">// 2. find</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The position of first \'o\' is: "</span> <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token char">\'o\'</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"The position of last \'o\' is: "</span> <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span><span class="token function">rfind</span><span class="token punctuation">(</span><span class="token char">\'o\'</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n    <span class="token comment">// 3. get substr (include 6)</span>\n    cout <span class="token operator">&lt;&lt;</span> s1<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="an-interesting-example-from-leetcode" tabindex="-1"><a class="header-anchor" href="#an-interesting-example-from-leetcode" aria-hidden="true">#</a> An Interesting example from leetcode</h2>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210319134029167.png" alt="image-20210319134029167"></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//solution</span>\nclass Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    string <span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token operator">&amp;</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>\n        string output <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n        <span class="token function">sort</span><span class="token punctuation">(</span><span class="token function">begin</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">end</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">auto</span> a <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b <span class="token operator">=</span> words<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">size</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> output <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> \n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> output<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul>\n<li>sort puts them in alphabetical order.</li>\n<li>only need to compare the first and last one cuz all ones in the middle will be cancelled out.</li>\n</ul>\n<h2 id="reverse-words-in-a-string" tabindex="-1"><a class="header-anchor" href="#reverse-words-in-a-string" aria-hidden="true">#</a> Reverse Words in a String</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "the sky is blue"\nOutput: "blue is sky the"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "  hello world  "\nOutput: "world hello"\nExplanation: Your reversed string should not contain leading or trailing spaces.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "a good   example"\nOutput: "example good a"\nExplanation: You need to reduce multiple spaces between two words to a single space in the reversed string.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "  Bob    Loves  Alice   "\nOutput: "Alice Loves Bob"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "Alice does not even like bob"\nOutput: "bob like even not does Alice"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Tip : Using a vector</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>class Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    string <span class="token function">reverseWords</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       stringstream <span class="token function">ss</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        string word<span class="token punctuation">;</span>\n        vector<span class="token operator">&lt;</span>string<span class="token operator">></span> v<span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span>ss<span class="token operator">>></span>word<span class="token punctuation">)</span>\n            v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \n        string ans <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>v<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            ans<span class="token operator">+=</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token char">\' \'</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        ans<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>ans<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="reverse-words-in-a-string-iii" tabindex="-1"><a class="header-anchor" href="#reverse-words-in-a-string-iii" aria-hidden="true">#</a> Reverse Words in a String III</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "Let\'s take LeetCode contest"\nOutput: "s\'teL ekat edoCteeL tsetnoc"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: s = "God Ding"\nOutput: "doG gniD"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>code</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>class Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    string <span class="token function">reverseWords</span><span class="token punctuation">(</span>string s<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        stringstream <span class="token function">ss</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        string word<span class="token punctuation">;</span>\n        string ans <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span>ss<span class="token operator">>></span>word<span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n           <span class="token function">reverse</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>word<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            ans <span class="token operator">+=</span><span class="token string">" "</span><span class="token operator">+</span>word<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> ans<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>ans<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/String.html",pathLocale:"/",permalink:null,routeMeta:{title:"String"},slug:"String",filePath:"/root/blog/blogs/C++/String.md",filePathRelative:"blogs/C++/String.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/String.html.vue",componentFilePathRelative:"pages/blogs/C++/String.html.vue",componentFileChunkName:"v-31091dc5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/String.html.js",dataFilePathRelative:"pages/blogs/C++/String.html.js",dataFileChunkName:"v-31091dc5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/String.html",htmlFilePathRelative:"blogs/C++/String.html"},{data:{key:"v-28c14a80",path:"/blogs/C++/Two-Pointer.html",title:"Two-Pointer",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"Remove Element",slug:"remove-element",children:[]},{level:2,title:"Move Zeroes",slug:"move-zeroes",children:[]}],git:{},filePathRelative:"blogs/C++/Two-Pointer.md"},key:"v-28c14a80",path:"/blogs/C++/Two-Pointer.html",title:"Two-Pointer",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"Remove Element",slug:"remove-element",children:[]},{level:2,title:"Move Zeroes",slug:"move-zeroes",children:[]}],content:"\x3c!-- ---\r\ntitle: Two-Pointer\r\ndate: 2021/03/20\r\ntags:\r\n  - c++\r\ncategories:\r\n  - C++\r\n--- --\x3e\r\n\r\n# Two-Pointer\r\n\r\n**learn with a classic problem:**\r\n\r\n> **Reverse the elements in an array**\r\n\r\n**Here is the code**\r\n\r\n```c++\r\nvoid reverse(int *a,int N)\r\n{\r\n    int i = 0;// begining\r\n    int j = N-1;// the end of array\r\n    while(i>j)\r\n    {\r\n        swap(v[i],v[j]);\r\n        i++;\r\n        j--;\r\n    }\r\n}\r\n```\r\n\r\n> **Iterate the array from two ends to the middle**\r\n>\r\n> **One pointer starts from the beginning while the other pointer starts from the end.**\r\n\r\n**often used in a `sorted` array**\r\n\r\n**Neat code**\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    void reverseString(vector<char>& s) {\r\n        int n = s.size();\r\n        for(int i =0;i<n/2;i++) // middle\r\n        {\r\n            swap(s[i],s[n-i-1]);\r\n        }\r\n            \r\n    }\r\n};\r\n```\r\n\r\n### **Remove Element**\r\n\r\n**given an value,remove all the elements which equal to the value**\r\n\r\n```\r\nInput: nums = [3,2,2,3], val = 3\r\nOutput: 2, nums = [2,2]\r\n\r\nInput: nums = [0,1,2,2,3,0,4,2], val = 2\r\nOutput: 5, nums = [0,1,4,0,3]\r\n```\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    int removeElement(vector<int>& nums, int val) {\r\n        // remove only delete the value,does not change the size and capacity\r\n        // return last-one point\r\n        // erase method will change size,but not include capacity\r\n        nums.erase(remove(nums.begin(), nums.end(), val), nums.end());  \r\n        // a = remove(nums.begin,...end()) return last element point(empty)\r\n        // erase(a,b) = delete a->b size\r\n\t\treturn nums.size();\r\n    }\r\n};\r\n```\r\n\r\n\r\n\r\n## Move Zeroes\r\n\r\n```\r\nInput: nums = [0,1,0,3,12]\r\nOutput: [1,3,12,0,0]\r\n```\r\n\r\n```\r\nInput: nums = [0]\r\nOutput: [0]\r\n```\r\n\r\n**code**\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    void moveZeroes(vector<int>& nums) {\r\n        if(nums.size()==1 || nums.size()==0)return;\r\n            \r\n        int i=0,j =0;\r\n        \r\n        while(j<nums.size()){\r\n       \r\n           if(nums[j]==0) j++;\r\n           \r\n           else{\r\n                swap(nums[i],nums[j]);\r\n                i++;j++;\r\n            }\r\n        }\r\n    }\r\n};\r\n```\r\n\r\n",contentRendered:'\x3c!-- ---\ntitle: Two-Pointer\ndate: 2021/03/20\ntags:\n  - c++\ncategories:\n  - C++\n--- --\x3e\n<h1 id="two-pointer" tabindex="-1"><a class="header-anchor" href="#two-pointer" aria-hidden="true">#</a> Two-Pointer</h1>\n<p><strong>learn with a classic problem:</strong></p>\n<blockquote>\n<p><strong>Reverse the elements in an array</strong></p>\n</blockquote>\n<p><strong>Here is the code</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>a<span class="token punctuation">,</span><span class="token keyword">int</span> N<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// begining</span>\n    <span class="token keyword">int</span> j <span class="token operator">=</span> N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// the end of array</span>\n    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">></span>j<span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token function">swap</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        i<span class="token operator">++</span><span class="token punctuation">;</span>\n        j<span class="token operator">--</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote>\n<p><strong>Iterate the array from two ends to the middle</strong></p>\n<p><strong>One pointer starts from the beginning while the other pointer starts from the end.</strong></p>\n</blockquote>\n<p><strong>often used in a <code>sorted</code> array</strong></p>\n<p><strong>Neat code</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>class Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    <span class="token keyword">void</span> <span class="token function">reverseString</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">></span><span class="token operator">&amp;</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">int</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">// middle</span>\n        <span class="token punctuation">{</span>\n            <span class="token function">swap</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n            \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="remove-element" tabindex="-1"><a class="header-anchor" href="#remove-element" aria-hidden="true">#</a> <strong>Remove Element</strong></h3>\n<p><strong>given an value,remove all the elements which equal to the value</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: nums = [3,2,2,3], val = 3\nOutput: 2, nums = [2,2]\n\nInput: nums = [0,1,2,2,3,0,4,2], val = 2\nOutput: 5, nums = [0,1,4,0,3]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>class Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    <span class="token keyword">int</span> <span class="token function">removeElement</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// remove only delete the value,does not change the size and capacity</span>\n        <span class="token comment">// return last-one point</span>\n        <span class="token comment">// erase method will change size,but not include capacity</span>\n        nums<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span><span class="token function">remove</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  \n        <span class="token comment">// a = remove(nums.begin,...end()) return last element point(empty)</span>\n        <span class="token comment">// erase(a,b) = delete a->b size</span>\n\t\t<span class="token keyword">return</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="move-zeroes" tabindex="-1"><a class="header-anchor" href="#move-zeroes" aria-hidden="true">#</a> Move Zeroes</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: nums = [0,1,0,3,12]\nOutput: [1,3,12,0,0]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Input: nums = [0]\nOutput: [0]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>code</strong></p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code>class Solution <span class="token punctuation">{</span>\npublic<span class="token operator">:</span>\n    <span class="token keyword">void</span> <span class="token function">moveZeroes</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token operator">&amp;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">;</span>\n            \n        <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n        \n        <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n       \n           <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> j<span class="token operator">++</span><span class="token punctuation">;</span>\n           \n           <span class="token keyword">else</span><span class="token punctuation">{</span>\n                <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                i<span class="token operator">++</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/C++/Two-Pointer.html",pathLocale:"/",permalink:null,routeMeta:{title:"Two-Pointer"},slug:"Two-Pointer",filePath:"/root/blog/blogs/C++/Two-Pointer.md",filePathRelative:"blogs/C++/Two-Pointer.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/Two-Pointer.html.vue",componentFilePathRelative:"pages/blogs/C++/Two-Pointer.html.vue",componentFileChunkName:"v-28c14a80",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/C++/Two-Pointer.html.js",dataFilePathRelative:"pages/blogs/C++/Two-Pointer.html.js",dataFileChunkName:"v-28c14a80",htmlFilePath:"/root/blog/.vuepress/dist/blogs/C++/Two-Pointer.html",htmlFilePathRelative:"blogs/C++/Two-Pointer.html"},{data:{key:"v-1bd93e5a",path:"/docs/guide/about.html",title:"关于",lang:"en-US",frontmatter:{title:"关于",date:"2022/03/05"},excerpt:"",headers:[{level:3,title:"10s介绍",slug:"_10s介绍",children:[]},{level:3,title:"sicko会点什么？",slug:"sicko会点什么",children:[]}],git:{},filePathRelative:"docs/guide/about.md"},key:"v-1bd93e5a",path:"/docs/guide/about.html",title:"关于",lang:"en-US",frontmatter:{title:"关于",date:"2022/03/05"},excerpt:"",headers:[{level:3,title:"10s介绍",slug:"_10s介绍",children:[]},{level:3,title:"sicko会点什么？",slug:"sicko会点什么",children:[]}],content:"**前几天发现博客打不开了，然后发现之前用的主题也更像了2.x beta版本，于是空闲的周末开始整理...**\n### 10s介绍\n19年尝试写博客是为了记录计算机知识，后来浏览不少博客后，我的博客更像一个内容农场，随着“浪”冲的越深，认知宇宙在膨胀，到目前我理解的博客更像是记录一个自我转型和表达自我的过程，所以你将在我的博客看到各种野生内容。\n### sicko会点什么？\n我目前成分主要是前端为主，塑料英语，后端略懂一点，再略懂一点点的物联网(有趣的单片机)。\n\n`my lifetime goal is to be a cool full-stack developer`\n\n",contentRendered:'<p><strong>前几天发现博客打不开了，然后发现之前用的主题也更像了2.x beta版本，于是空闲的周末开始整理...</strong></p>\n<h3 id="_10s介绍" tabindex="-1"><a class="header-anchor" href="#_10s介绍" aria-hidden="true">#</a> 10s介绍</h3>\n<p>19年尝试写博客是为了记录计算机知识，后来浏览不少博客后，我的博客更像一个内容农场，随着“浪”冲的越深，认知宇宙在膨胀，到目前我理解的博客更像是记录一个自我转型和表达自我的过程，所以你将在我的博客看到各种野生内容。</p>\n<h3 id="sicko会点什么" tabindex="-1"><a class="header-anchor" href="#sicko会点什么" aria-hidden="true">#</a> sicko会点什么？</h3>\n<p>我目前成分主要是前端为主，塑料英语，后端略懂一点，再略懂一点点的物联网(有趣的单片机)。</p>\n<p><code>my lifetime goal is to be a cool full-stack developer</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/guide/about.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于"},slug:"about",filePath:"/root/blog/docs/guide/about.md",filePathRelative:"docs/guide/about.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/guide/about.html.vue",componentFilePathRelative:"pages/docs/guide/about.html.vue",componentFileChunkName:"v-1bd93e5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/guide/about.html.js",dataFilePathRelative:"pages/docs/guide/about.html.js",dataFileChunkName:"v-1bd93e5a",htmlFilePath:"/root/blog/.vuepress/dist/docs/guide/about.html",htmlFilePathRelative:"docs/guide/about.html"},{data:{key:"v-30f75813",path:"/docs/guide/me.html",title:"食用指南",lang:"en-US",frontmatter:{title:"食用指南",date:"2022/03/05"},excerpt:"",headers:[{level:2,title:"善用搜索",slug:"善用搜索",children:[]},{level:2,title:"有问题可以直接沟通",slug:"有问题可以直接沟通",children:[]}],git:{},filePathRelative:"docs/guide/me.md"},key:"v-30f75813",path:"/docs/guide/me.html",title:"食用指南",lang:"en-US",frontmatter:{title:"食用指南",date:"2022/03/05"},excerpt:"",headers:[{level:2,title:"善用搜索",slug:"善用搜索",children:[]},{level:2,title:"有问题可以直接沟通",slug:"有问题可以直接沟通",children:[]}],content:"## 善用搜索\n**这里的文章都带有tag、小标题**。\n直接在搜索框内输入`docker`，就会呈现docker相关内容。\n\n## 有问题可以直接沟通\n哪里都可以找到我的联系方式，github、邮箱等都行。\n虽然我不能说的上算专业，但是我起码热情，热情搞薯条。",contentRendered:'<h2 id="善用搜索" tabindex="-1"><a class="header-anchor" href="#善用搜索" aria-hidden="true">#</a> 善用搜索</h2>\n<p><strong>这里的文章都带有tag、小标题</strong>。\n直接在搜索框内输入<code>docker</code>，就会呈现docker相关内容。</p>\n<h2 id="有问题可以直接沟通" tabindex="-1"><a class="header-anchor" href="#有问题可以直接沟通" aria-hidden="true">#</a> 有问题可以直接沟通</h2>\n<p>哪里都可以找到我的联系方式，github、邮箱等都行。\n虽然我不能说的上算专业，但是我起码热情，热情搞薯条。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/guide/me.html",pathLocale:"/",permalink:null,routeMeta:{title:"食用指南"},slug:"me",filePath:"/root/blog/docs/guide/me.md",filePathRelative:"docs/guide/me.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/guide/me.html.vue",componentFilePathRelative:"pages/docs/guide/me.html.vue",componentFileChunkName:"v-30f75813",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/guide/me.html.js",dataFilePathRelative:"pages/docs/guide/me.html.js",dataFileChunkName:"v-30f75813",htmlFilePath:"/root/blog/.vuepress/dist/docs/guide/me.html",htmlFilePathRelative:"docs/guide/me.html"},{data:{key:"v-25bc8c5e",path:"/docs/monthly/macbook.html",title:"配置新macbook",lang:"en-US",frontmatter:{title:"配置新macbook",date:"2022/03/05"},excerpt:"",headers:[{level:2,title:"软件清单:",slug:"软件清单",children:[]},{level:2,title:"配置相关:",slug:"配置相关",children:[]},{level:2,title:"技巧:",slug:"技巧",children:[]},{level:2,title:"m1 mac录屏",slug:"m1-mac录屏",children:[]},{level:2,title:"Mac疑惑🤔",slug:"mac疑惑🤔",children:[]}],git:{},filePathRelative:"docs/monthly/macbook.md"},key:"v-25bc8c5e",path:"/docs/monthly/macbook.html",title:"配置新macbook",lang:"en-US",frontmatter:{title:"配置新macbook",date:"2022/03/05"},excerpt:"",headers:[{level:2,title:"软件清单:",slug:"软件清单",children:[]},{level:2,title:"配置相关:",slug:"配置相关",children:[]},{level:2,title:"技巧:",slug:"技巧",children:[]},{level:2,title:"m1 mac录屏",slug:"m1-mac录屏",children:[]},{level:2,title:"Mac疑惑🤔",slug:"mac疑惑🤔",children:[]}],content:"![aaa](https://raw.githubusercontent.com/googidaddy/img/master/2022/bg1.jpeg)\n*欣赏一下整洁的街道，图源unsplash*\n## 软件清单:\njetbrains全家桶用tool box安装\nvscode用brew，直接官网搜\nbear 笔记 app store\n\n\n## 配置相关:\n1. Git brew通过安装来更新,\n系统自带git,配置相当简单\n```\nssh-keygen -t rsa -C “account email” ->上面的邮箱地址\n```\n然后一路回车再把公钥复制到github即可。\n2. 系统自带zsh\n3. python  `brew install python`\n指定版本`brew install python@3.9`\n指定版本文件在`/opt/homebrew`可找到\npoetry `brew install poetry`\n\n## 技巧:\n搜索 可以加kind属性前缀，像是kind:mp3 音乐.mp3\n如何使用Mac自带的tts（文字转语音）`say -v Ting-ting`\n## m1 mac录屏\n[推荐这个靓仔的视频设置！](https://www.youtube.com/watch?v=E31x84Zf8KA)\n`obs`安装`brew install --cask obs`\n录屏肯定要录制系统内置的声音\nblackhole2ch安装`brew install --cask blackhole-2ch`\n**obs设置-视频**将两个分辨率调成**关于主机-显示器-分辨率**数值\nobs添加显示器捕获-然后把可视窗口调整为能录到整个屏幕\n`command`+`space`搜`midi`选择系统自带的音频设置\n增加一个混合输出，48000hz，Mac主输出，勾上Mac和blackhole\n最后obs增加音频输出，选择blackhole即可。\n## Mac疑惑🤔\n1. 为什么内置麦克风离扬声器那么近又没有回音？\n硬件处理了，SPK在有声音的时候，硬件把MIC的输入减去了SPK的波形。\n\n",contentRendered:'<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/2022/bg1.jpeg" alt="aaa">\n<em>欣赏一下整洁的街道，图源unsplash</em></p>\n<h2 id="软件清单" tabindex="-1"><a class="header-anchor" href="#软件清单" aria-hidden="true">#</a> 软件清单:</h2>\n<p>jetbrains全家桶用tool box安装\nvscode用brew，直接官网搜\nbear 笔记 app store</p>\n<h2 id="配置相关" tabindex="-1"><a class="header-anchor" href="#配置相关" aria-hidden="true">#</a> 配置相关:</h2>\n<ol>\n<li>Git brew通过安装来更新,\n系统自带git,配置相当简单</li>\n</ol>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ssh-keygen -t rsa -C “account email” ->上面的邮箱地址\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>然后一路回车再把公钥复制到github即可。\n2. 系统自带zsh\n3. python  <code>brew install python</code>\n指定版本<code>brew install python@3.9</code>\n指定版本文件在<code>/opt/homebrew</code>可找到\npoetry <code>brew install poetry</code></p>\n<h2 id="技巧" tabindex="-1"><a class="header-anchor" href="#技巧" aria-hidden="true">#</a> 技巧:</h2>\n<p>搜索 可以加kind属性前缀，像是kind:mp3 音乐.mp3\n如何使用Mac自带的tts（文字转语音）<code>say -v Ting-ting</code></p>\n<h2 id="m1-mac录屏" tabindex="-1"><a class="header-anchor" href="#m1-mac录屏" aria-hidden="true">#</a> m1 mac录屏</h2>\n<p><a href="https://www.youtube.com/watch?v=E31x84Zf8KA" target="_blank" rel="noopener noreferrer">推荐这个靓仔的视频设置！<ExternalLinkIcon/></a>\n<code>obs</code>安装<code>brew install --cask obs</code>\n录屏肯定要录制系统内置的声音\nblackhole2ch安装<code>brew install --cask blackhole-2ch</code>\n<strong>obs设置-视频</strong>将两个分辨率调成<strong>关于主机-显示器-分辨率</strong>数值\nobs添加显示器捕获-然后把可视窗口调整为能录到整个屏幕\n<code>command</code>+<code>space</code>搜<code>midi</code>选择系统自带的音频设置\n增加一个混合输出，48000hz，Mac主输出，勾上Mac和blackhole\n最后obs增加音频输出，选择blackhole即可。</p>\n<h2 id="mac疑惑🤔" tabindex="-1"><a class="header-anchor" href="#mac疑惑🤔" aria-hidden="true">#</a> Mac疑惑🤔</h2>\n<ol>\n<li>为什么内置麦克风离扬声器那么近又没有回音？\n硬件处理了，SPK在有声音的时候，硬件把MIC的输入减去了SPK的波形。</li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/macbook.html",pathLocale:"/",permalink:null,routeMeta:{title:"配置新macbook"},slug:"macbook",filePath:"/root/blog/docs/monthly/macbook.md",filePathRelative:"docs/monthly/macbook.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/macbook.html.vue",componentFilePathRelative:"pages/docs/monthly/macbook.html.vue",componentFileChunkName:"v-25bc8c5e",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/macbook.html.js",dataFilePathRelative:"pages/docs/monthly/macbook.html.js",dataFileChunkName:"v-25bc8c5e",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/macbook.html",htmlFilePathRelative:"docs/monthly/macbook.html"},{data:{key:"v-62bd8364",path:"/docs/way2msg/msg.html",title:"获取消息的渠道",lang:"en-US",frontmatter:{title:"获取消息的渠道",date:"2022/03/05"},excerpt:"",headers:[{level:3,title:"base",slug:"base",children:[]},{level:3,title:"播客",slug:"播客",children:[]},{level:3,title:"RSS",slug:"rss",children:[]},{level:3,title:"信息平台",slug:"信息平台",children:[]}],git:{},filePathRelative:"docs/way2msg/msg.md"},key:"v-62bd8364",path:"/docs/way2msg/msg.html",title:"获取消息的渠道",lang:"en-US",frontmatter:{title:"获取消息的渠道",date:"2022/03/05"},excerpt:"",headers:[{level:3,title:"base",slug:"base",children:[]},{level:3,title:"播客",slug:"播客",children:[]},{level:3,title:"RSS",slug:"rss",children:[]},{level:3,title:"信息平台",slug:"信息平台",children:[]}],content:"### base\n很久之前获取信息都是通过单一搜索相关技术问题，然后靠搜索引擎提供的相关个人博客来获取信息开拓视野，再之后就是通过一些论坛V2之类的消息渠道，现在是定制个人rss，不断缩小范围，精准获取干货范围。\n\n### 播客\n> 我对于经济形势、科技趋势很感兴趣，一般在通勤的时候会打开听一听。  \n`硅谷101` 这个是科技和经济混合讲的一档节目，每期嘉宾都很重磅。\n`Naval` ::Top级别的投资者::。\n\n### RSS\n> 对于rss订阅，我一般分两大向，专业向和生活向，俗称wlbwork life balance。  \n* 专业向 取所需\n\n[hacker news，hacker界消息杂烩](https://news.ycombinator.com/)\n\n[css weekly](https://css-weekly.com/)\n\n[node weekly](https://nodeweekly.com/)\n\n[javascript weekly](https://javascriptweekly.com/)\n\n[typescript weekly](https://www.typescript-weekly.com/)\n\n[frontend weekly](https://frontendweekly.co/)\n\n[frontend focus](https://frontendfoc.us/)\n\n还有一些年更趋势的博客就不放了，数量少的可怜。\n* 生活向 \n\nv2ex\n\ngeekplux\n\ntwitter\n\n### 信息平台\n* twitter\n\n关注列表里比例大的是个人开发者，主要是闲暇看看他们在干嘛。他们多半自由工作或者已经肉翻的，所以他们时常能发表一些对于新技术新现象的看法，或者偷偷学习他们是怎么精确、简短的表达方式，我相信言语都具有传染力，前提你够精悍。\n* reddit\n\n关注的板块是program，没事挤进去看看大家都在争论什么。",contentRendered:'<h3 id="base" tabindex="-1"><a class="header-anchor" href="#base" aria-hidden="true">#</a> base</h3>\n<p>很久之前获取信息都是通过单一搜索相关技术问题，然后靠搜索引擎提供的相关个人博客来获取信息开拓视野，再之后就是通过一些论坛V2之类的消息渠道，现在是定制个人rss，不断缩小范围，精准获取干货范围。</p>\n<h3 id="播客" tabindex="-1"><a class="header-anchor" href="#播客" aria-hidden="true">#</a> 播客</h3>\n<blockquote>\n<p>我对于经济形势、科技趋势很感兴趣，一般在通勤的时候会打开听一听。<br>\n<code>硅谷101</code> 这个是科技和经济混合讲的一档节目，每期嘉宾都很重磅。\n<code>Naval</code> ::Top级别的投资者::。</p>\n</blockquote>\n<h3 id="rss" tabindex="-1"><a class="header-anchor" href="#rss" aria-hidden="true">#</a> RSS</h3>\n<blockquote>\n<p>对于rss订阅，我一般分两大向，专业向和生活向，俗称wlbwork life balance。</p>\n</blockquote>\n<ul>\n<li>专业向 取所需</li>\n</ul>\n<p><a href="https://news.ycombinator.com/" target="_blank" rel="noopener noreferrer">hacker news，hacker界消息杂烩<ExternalLinkIcon/></a></p>\n<p><a href="https://css-weekly.com/" target="_blank" rel="noopener noreferrer">css weekly<ExternalLinkIcon/></a></p>\n<p><a href="https://nodeweekly.com/" target="_blank" rel="noopener noreferrer">node weekly<ExternalLinkIcon/></a></p>\n<p><a href="https://javascriptweekly.com/" target="_blank" rel="noopener noreferrer">javascript weekly<ExternalLinkIcon/></a></p>\n<p><a href="https://www.typescript-weekly.com/" target="_blank" rel="noopener noreferrer">typescript weekly<ExternalLinkIcon/></a></p>\n<p><a href="https://frontendweekly.co/" target="_blank" rel="noopener noreferrer">frontend weekly<ExternalLinkIcon/></a></p>\n<p><a href="https://frontendfoc.us/" target="_blank" rel="noopener noreferrer">frontend focus<ExternalLinkIcon/></a></p>\n<p>还有一些年更趋势的博客就不放了，数量少的可怜。</p>\n<ul>\n<li>生活向</li>\n</ul>\n<p>v2ex</p>\n<p>geekplux</p>\n<p>twitter</p>\n<h3 id="信息平台" tabindex="-1"><a class="header-anchor" href="#信息平台" aria-hidden="true">#</a> 信息平台</h3>\n<ul>\n<li>twitter</li>\n</ul>\n<p>关注列表里比例大的是个人开发者，主要是闲暇看看他们在干嘛。他们多半自由工作或者已经肉翻的，所以他们时常能发表一些对于新技术新现象的看法，或者偷偷学习他们是怎么精确、简短的表达方式，我相信言语都具有传染力，前提你够精悍。</p>\n<ul>\n<li>reddit</li>\n</ul>\n<p>关注的板块是program，没事挤进去看看大家都在争论什么。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/way2msg/msg.html",pathLocale:"/",permalink:null,routeMeta:{title:"获取消息的渠道"},slug:"msg",filePath:"/root/blog/docs/way2msg/msg.md",filePathRelative:"docs/way2msg/msg.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/way2msg/msg.html.vue",componentFilePathRelative:"pages/docs/way2msg/msg.html.vue",componentFileChunkName:"v-62bd8364",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/way2msg/msg.html.js",dataFilePathRelative:"pages/docs/way2msg/msg.html.js",dataFileChunkName:"v-62bd8364",htmlFilePath:"/root/blog/.vuepress/dist/docs/way2msg/msg.html",htmlFilePathRelative:"docs/way2msg/msg.html"},{data:{key:"v-c8e1aa5a",path:"/blogs/CSS/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],git:{},filePathRelative:"blogs/CSS/文本溢出.md"},key:"v-c8e1aa5a",path:"/blogs/CSS/wenbenyichu.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],content:"\r\n## 文本溢出样式解决方法\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\noverflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）\r\n\r\nwhite-space: nowrap；（设置文字在一行显示，不能换行）\r\n\r\ntext-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\r\n```\r\n\r\n**纯 CSS 实现方案**\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\n-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数,2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\r\n\r\ndisplay: -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\r\n\r\n-webkit-box-orient: vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\r\n\r\noverflow: hidden；（文本溢出限定的宽度就隐藏内容）\r\n\r\ntext-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)\r\n```\r\n\r\n**优点**\r\n\r\n- 响应式截断\r\n- 文本溢出范围才显示省略号，否则不显示省略号\r\n- 省略号显示位置刚好\r\n\r\n  ![123](https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png)\r\n",contentRendered:'<h2 id="文本溢出样式解决方法" tabindex="-1"><a class="header-anchor" href="#文本溢出样式解决方法" aria-hidden="true">#</a> 文本溢出样式解决方法</h2>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文字长度超出限定宽度，则隐藏超出的内容）\n\n<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap；（设置文字在一行显示，不能换行）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>纯 CSS 实现方案</strong></p>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2；（用来限制在一个块元素显示的文本的行数<span class="token punctuation">,</span>2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\n\n<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\n\n<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\n\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文本溢出限定的宽度就隐藏内容）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>优点</strong></p>\n<ul>\n<li>\n<p>响应式截断</p>\n</li>\n<li>\n<p>文本溢出范围才显示省略号，否则不显示省略号</p>\n</li>\n<li>\n<p>省略号显示位置刚好</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png" alt="123"></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/CSS/文本溢出.html",pathLocale:"/",permalink:null,routeMeta:{title:"css文本溢出省略解决方法"},slug:"文本溢出",filePath:"/root/blog/blogs/CSS/文本溢出.md",filePathRelative:"blogs/CSS/文本溢出.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.vue",componentFilePathRelative:"pages/blogs/CSS/文本溢出.html.vue",componentFileChunkName:"v-c8e1aa5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.js",dataFilePathRelative:"pages/blogs/CSS/文本溢出.html.js",dataFileChunkName:"v-c8e1aa5a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/CSS/文本溢出.html",htmlFilePathRelative:"blogs/CSS/文本溢出.html"},{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"},{data:{key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],git:{},filePathRelative:"blogs/notes/Arduino_Libraries.md"},key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],content:'\r\n## How to create a Arduino Libraries\r\n\r\n1. 在`Arduino`目录下的`libraries`中新建一个自命名文件夹\r\n\r\n2. 添加同名`.cpp` `.h`文件\r\n\r\n   ```cpp\r\n   # My_libraries.h\r\n   #ifndef My_libraries\r\n   #include <Arduino.h>\r\n   void Test();\r\n   #endif\r\n   ```\r\n\r\n   ```cpp\r\n   # My_libraries.cpp\r\n   #include <Arduino.h>\r\n   void Test(){\r\n   \tSerial.println("Hello!");\r\n   \tdelay(1000);\r\n   }\r\n   ```\r\n\r\n3. （可选）创建`example`文件夹，再创建`example.ino`\r\n\r\n   ```cpp\r\n   #include <Arduino.h>\r\n   #include "My_libraries.h" // 引入自己的库\r\n\r\n   void setup(){\r\n       Serial.begin(115200);\r\n       Test();\r\n   }\r\n   void loop(){\r\n       Test();\r\n   }\r\n   ```\r\n\r\n**其余自行搜索，仅提供简单示例模板**\r\n',contentRendered:'<h2 id="how-to-create-a-arduino-libraries" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-arduino-libraries" aria-hidden="true">#</a> How to create a Arduino Libraries</h2>\n<ol>\n<li>\n<p>在<code>Arduino</code>目录下的<code>libraries</code>中新建一个自命名文件夹</p>\n</li>\n<li>\n<p>添加同名<code>.cpp</code> <code>.h</code>文件</p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>h</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">My_libraries</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>cpp</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tSerial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n<li>\n<p>（可选）创建<code>example</code>文件夹，再创建<code>example.ino</code></p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"My_libraries.h"</span> <span class="token comment">// 引入自己的库</span></span>\n\n<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ol>\n<p><strong>其余自行搜索，仅提供简单示例模板</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Arduino_Libraries.html",pathLocale:"/",permalink:null,routeMeta:{title:"拥有Arduino自己的库"},slug:"Arduino_Libraries",filePath:"/root/blog/blogs/notes/Arduino_Libraries.md",filePathRelative:"blogs/notes/Arduino_Libraries.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.vue",componentFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.vue",componentFileChunkName:"v-7f956b1c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.js",dataFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.js",dataFileChunkName:"v-7f956b1c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Arduino_Libraries.html",htmlFilePathRelative:"blogs/notes/Arduino_Libraries.html"},{data:{key:"v-9e971e66",path:"/blogs/notes/%E8%B4%A1%E7%8C%AE%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],git:{},filePathRelative:"blogs/notes/贡献项目代码.md"},key:"v-9e971e66",path:"/blogs/notes/gongxianxiangmudaima.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],content:'\r\n## 贡献项目代码\r\n\r\n### Fork\r\n\r\n`Fork`项目\r\n\r\n### Clone\r\n\r\n`git clone`项目\r\n\r\n### Branch\r\n\r\n`git checkout -b 你的branch名`\r\n\r\n### Code\r\n\r\n修改代码\r\n\r\n### git\r\n\r\n`git add .` `git commit -m "这次我修改了XX"` `git push origin 你的branch名`\r\n\r\n### Pull Request\r\n\r\n去自己 fork 的项目提交 pull request\r\n',contentRendered:'<h2 id="贡献项目代码" tabindex="-1"><a class="header-anchor" href="#贡献项目代码" aria-hidden="true">#</a> 贡献项目代码</h2>\n<h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3>\n<p><code>Fork</code>项目</p>\n<h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> Clone</h3>\n<p><code>git clone</code>项目</p>\n<h3 id="branch" tabindex="-1"><a class="header-anchor" href="#branch" aria-hidden="true">#</a> Branch</h3>\n<p><code>git checkout -b 你的branch名</code></p>\n<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3>\n<p>修改代码</p>\n<h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h3>\n<p><code>git add .</code> <code>git commit -m &quot;这次我修改了XX&quot;</code> <code>git push origin 你的branch名</code></p>\n<h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3>\n<p>去自己 fork 的项目提交 pull request</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/贡献项目代码.html",pathLocale:"/",permalink:null,routeMeta:{title:"贡献项目代码姿势"},slug:"贡献项目代码",filePath:"/root/blog/blogs/notes/贡献项目代码.md",filePathRelative:"blogs/notes/贡献项目代码.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.vue",componentFilePathRelative:"pages/blogs/notes/贡献项目代码.html.vue",componentFileChunkName:"v-9e971e66",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.js",dataFilePathRelative:"pages/blogs/notes/贡献项目代码.html.js",dataFileChunkName:"v-9e971e66",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/贡献项目代码.html",htmlFilePathRelative:"blogs/notes/贡献项目代码.html"},{data:{key:"v-516955de",path:"/blogs/notes/ESP8266%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91SDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],git:{},filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md"},key:"v-516955de",path:"/blogs/notes/ESP8266lianjiealiyunSDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],content:"\r\n**ESP8266 连接阿里云**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## ESP8266 连接阿里云\r\n\r\n**最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。**\r\n\r\n**第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置**\r\n\r\n> Arduino IDE 配置\r\n>\r\n> - 首选项 - `附加开发板管理器网址` 输入 `https://arduino.esp8266.com/stable/package_esp8266com_index.json`\r\n> - 工具 - 开发板 - 开发板管理器 - 搜索 `8266` 并安装\r\n\r\n**为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）**\r\n\r\n[Arduino-Aliyun-IoT-SDK](https://github.com/yu-tou/arduino-aliyun-iot-sdk)**，这个是 Arduino 的阿里 IOT 库，官方仓库。**\r\n\r\n**使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。**\r\n\r\n**然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到`PubSubClient.h`修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。**\r\n\r\n[感谢填坑者！](https://www.codenong.com/cs107032096/)\r\n\r\n**最后连接。**\r\n\r\n---\r\n",contentRendered:'<p><strong>ESP8266 连接阿里云</strong></p>\n\x3c!-- more --\x3e\n<h2 id="esp8266-连接阿里云" tabindex="-1"><a class="header-anchor" href="#esp8266-连接阿里云" aria-hidden="true">#</a> ESP8266 连接阿里云</h2>\n<p><strong>最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。</strong></p>\n<p><strong>第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置</strong></p>\n<blockquote>\n<p>Arduino IDE 配置</p>\n<ul>\n<li>首选项 - <code>附加开发板管理器网址</code> 输入 <code>https://arduino.esp8266.com/stable/package_esp8266com_index.json</code></li>\n<li>工具 - 开发板 - 开发板管理器 - 搜索 <code>8266</code> 并安装</li>\n</ul>\n</blockquote>\n<p><strong>为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）</strong></p>\n<p><a href="https://github.com/yu-tou/arduino-aliyun-iot-sdk" target="_blank" rel="noopener noreferrer">Arduino-Aliyun-IoT-SDK<ExternalLinkIcon/></a><strong>，这个是 Arduino 的阿里 IOT 库，官方仓库。</strong></p>\n<p><strong>使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。</strong></p>\n<p><strong>然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到<code>PubSubClient.h</code>修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。</strong></p>\n<p><a href="https://www.codenong.com/cs107032096/" target="_blank" rel="noopener noreferrer">感谢填坑者！<ExternalLinkIcon/></a></p>\n<p><strong>最后连接。</strong></p>\n<hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/ESP8266连接阿里云SDK.html",pathLocale:"/",permalink:null,routeMeta:{title:"ESP8266连接阿里云SDK"},slug:"ESP8266连接阿里云SDK",filePath:"/root/blog/blogs/notes/ESP8266连接阿里云SDK.md",filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFileChunkName:"v-516955de",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFileChunkName:"v-516955de",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/ESP8266连接阿里云SDK.html",htmlFilePathRelative:"blogs/notes/ESP8266连接阿里云SDK.html"},{data:{key:"v-db791236",path:"/docs/monthly/genius.html",title:"台北卧龙",lang:"en-US",frontmatter:{title:"台北卧龙",date:"2021/10/26"},excerpt:"",headers:[{level:2,title:"奇闻异录",slug:"奇闻异录",children:[]},{level:2,title:"用海洋来形容学识真的可以吗？",slug:"用海洋来形容学识真的可以吗",children:[]}],git:{},filePathRelative:"docs/monthly/genius.md"},key:"v-db791236",path:"/docs/monthly/genius.html",title:"台北卧龙",lang:"en-US",frontmatter:{title:"台北卧龙",date:"2021/10/26"},excerpt:"",headers:[{level:2,title:"奇闻异录",slug:"奇闻异录",children:[]},{level:2,title:"用海洋来形容学识真的可以吗？",slug:"用海洋来形容学识真的可以吗",children:[]}],content:"## 奇闻异录\r\n\r\n“應該姑且算是客觀評價的話: 來自中研院(相當於台灣版中科院)研究員的評論: 比大部分大學生都還要好”\r\n\r\n这是与一个高三学生(xx)日常聊天的感受录(~~被鞭笞~~)\r\n\r\n--------\r\n\r\n## 用海洋来形容学识真的可以吗？\r\n\r\nxx：`我爸把我的专题给婚宴遇到的中研院的研究员看了，评论：比大部分学生都还要好`\r\n\r\nme:`什么专题？`\r\n\r\nxx:`神经网络，现在在做云端硬盘`\r\n\r\nme:`实战能力很强哦！大学志愿想去哪？`\r\n\r\nxx:`基本保底清大资工，台大资工有点拼`\r\n\r\nxx:`其实我除了程序设计，以前接触过机器人之外，还有音乐(编曲 钢琴 吉他 电吉他 爵士鼓)`\r\n\r\n`文学（多以文学评论为主，还有一些新诗），哲学（最近研究康德）`\r\n\r\n`历史（二战历史研究最多）`\r\n\r\n`我家里基本上好书都来之不拒，比如RE:0,转生成为史莱姆之类的也能接受`\r\n\r\nme:`!!!what？`\r\n\r\nxx:`对哇，我家里人会一起追番和补番`\r\n\r\nme:`(内心：这这这，梦幻家庭啊)`\r\n\r\nxx:`我读轻小说会选择那种抛砖引玉类型的，也就是命题很清楚的那种，比如天气之子`\r\n\r\n`电影讲的很清楚，直接把社会观念砸脸上`\r\n\r\nme:`课上一般做什么？用功应该谈不上吧？`\r\n\r\nxx:`的确，在我们学校，通常都是做自己的事情，曾经有媒体批评学校赶课赶进度`\r\n\r\n`老师在台上赶进度很正常啊，同学们在台下用电脑滑手机，没毛病啊`\r\n\r\n`反正老师怎么赶进度，也比自己读的慢`\r\n\r\n`不过有一些课会认真听的啦 XD`\r\n\r\n`英语有我自己的进度，数学超前预习两个单元差不多这个样子吧`\r\n\r\nme:`反思我自己那时候的努力是不是有点无头苍蝇了...`\r\n\r\nxx:`哈哈哈，跟你讲哦，今天云端硬盘项目开发进度用飞的`\r\n\r\nme:`哦？`\r\n\r\nxx:`后端基本处理好了，从测试用的简陋前端进行上传档案，建立资料夹，获取资料夹的的项目，下载`\r\n\r\n`我的团队刚好找到一个设计师，他学一下bootstrap就来搞网页设计`\r\n\r\n`然后互动部分我用Vue写`\r\n\r\n`然后我另一边的社交网站给另一个开发者负责`\r\n\r\n`正在重构(把jquery bootstarp-jq统统换到vue)`\r\n\r\nme:`啊这，我们大二才接触到vue，更何况像bootstrap这种UI组件，而你已经涉及到了团队合作`\r\n\r\n**朋友们，这里是不是要学习一下人家的团队合作精神，从前端后端角度分工，每个人都有自己的职责**\r\n\r\n**然后学习新技术，重构代码，项目经历我相信相当精彩，可以反将HR一军**\r\n\r\nme:`团队有设定任何的规范吗？`\r\n\r\nxx:`那当然有的，是bootstrap就是bootstrap，不是的就需要自己去写一下css`\r\n\r\n`像我用bootstrap几乎是网格，其他都是css设定，以团队标准方便为准`\r\n\r\n`团队合作尤其重要，不是每个人都是约翰卡马克，一个人造出一个游戏引擎`\r\n\r\n[约翰卡马克的故事](https://zh.wikipedia.org/wiki/%E7%B4%84%E7%BF%B0%C2%B7%E5%8D%A1%E9%A6%AC%E5%85%8B)\r\n\r\n**有多少人知道这个强者的故事？**\r\n\r\n`注释通常不多，程序本身是可读的，除非很复杂的逻辑，像是B+Tree的操作，是要写出来的`\r\n\r\n**思考一下，大家平常写的注释确实是关键还是即兴呢？**\r\n\r\nxx:`我的短板也是有的，我只会python跟一些html/css/js`\r\n\r\n`C/C++比赛还可以，项目没试过`\r\n\r\n**大家目前有总结过自己的短板吗？还是说学了就学了？**\r\n\r\nxx:`我总说我自己是一个python星人，因为我写的程序逻辑几乎是为python优化的`\r\n\r\n`语法糖用好用满的那种 XD`\r\n\r\n`然后所有性质类似但本质不同的东西我可以分清楚`\r\n\r\n`像是for循环`\r\n\r\n`在其他语言其实是while的变体`\r\n\r\n`在python里面却是for each循环，直接对迭代器取值`\r\n\r\n`现在越来越多语言把for做成for&for each混用了 XD`\r\n\r\n**思考一下，如何避免陷入惯性思维？**\r\n\r\n**一个循环用不同语言实现是否真的是自己理解的”都一样“呢？**\r\n\r\n**学习的时候带着属于自己的思考了吗？**\r\n\r\nme:`python本身是优化过的语言，学起来相对于轻松一点`\r\n\r\nxx:`但是不符合程序逻辑`\r\n\r\n`转换上不容易，想学程序在干嘛，应该从C入门（毕竟可以直接写进汇编）`\r\n\r\n`想学【怎么用】程序的，应该学python`\r\n\r\n`python套件多，想做什么几乎都有现成的套件`\r\n\r\n`但学C对python好，自己写dll套件给python用，效率翻几倍`\r\n\r\nme:`C++呢？`\r\n\r\nxx:`C++比较麻烦。前端塞太多不同语言的东西，导致C++做一件事情不止一个方法（标准语法）`\r\n\r\n`打个比喻，在python里面`\r\n\r\n`if elif跟if else if 是等价的，虽然写法不同，但编译器吃到一样的东西`\r\n\r\n`C++的前端就很痛苦了，C perl java python的影子都在里面`\r\n\r\n`学C++最麻烦的是design pattern不好建立`\r\n\r\n`最好买同一个译者的书，跟着他的风格走，不然会被打乱`\r\n\r\n**思考：你买书的时候想过这一点吗？还是按热度买？**\r\n\r\n**思考：你有思考过语言的标准吗？**\r\n\r\nme:`确实`(**已经插不上任何话语权**)\r\n\r\nxx:`python的灵魂应该是pyobject`\r\n\r\n`python的所有东西都是pyobject，变量存储都是字典`\r\n\r\n-------\r\n\r\n",contentRendered:'<h2 id="奇闻异录" tabindex="-1"><a class="header-anchor" href="#奇闻异录" aria-hidden="true">#</a> 奇闻异录</h2>\n<p>“應該姑且算是客觀評價的話: 來自中研院(相當於台灣版中科院)研究員的評論: 比大部分大學生都還要好”</p>\n<p>这是与一个高三学生(xx)日常聊天的感受录(<s>被鞭笞</s>)</p>\n<hr>\n<h2 id="用海洋来形容学识真的可以吗" tabindex="-1"><a class="header-anchor" href="#用海洋来形容学识真的可以吗" aria-hidden="true">#</a> 用海洋来形容学识真的可以吗？</h2>\n<p>xx：<code>我爸把我的专题给婚宴遇到的中研院的研究员看了，评论：比大部分学生都还要好</code></p>\n<p>me:<code>什么专题？</code></p>\n<p>xx:<code>神经网络，现在在做云端硬盘</code></p>\n<p>me:<code>实战能力很强哦！大学志愿想去哪？</code></p>\n<p>xx:<code>基本保底清大资工，台大资工有点拼</code></p>\n<p>xx:<code>其实我除了程序设计，以前接触过机器人之外，还有音乐(编曲 钢琴 吉他 电吉他 爵士鼓)</code></p>\n<p><code>文学（多以文学评论为主，还有一些新诗），哲学（最近研究康德）</code></p>\n<p><code>历史（二战历史研究最多）</code></p>\n<p><code>我家里基本上好书都来之不拒，比如RE:0,转生成为史莱姆之类的也能接受</code></p>\n<p>me:<code>!!!what？</code></p>\n<p>xx:<code>对哇，我家里人会一起追番和补番</code></p>\n<p>me:<code>(内心：这这这，梦幻家庭啊)</code></p>\n<p>xx:<code>我读轻小说会选择那种抛砖引玉类型的，也就是命题很清楚的那种，比如天气之子</code></p>\n<p><code>电影讲的很清楚，直接把社会观念砸脸上</code></p>\n<p>me:<code>课上一般做什么？用功应该谈不上吧？</code></p>\n<p>xx:<code>的确，在我们学校，通常都是做自己的事情，曾经有媒体批评学校赶课赶进度</code></p>\n<p><code>老师在台上赶进度很正常啊，同学们在台下用电脑滑手机，没毛病啊</code></p>\n<p><code>反正老师怎么赶进度，也比自己读的慢</code></p>\n<p><code>不过有一些课会认真听的啦 XD</code></p>\n<p><code>英语有我自己的进度，数学超前预习两个单元差不多这个样子吧</code></p>\n<p>me:<code>反思我自己那时候的努力是不是有点无头苍蝇了...</code></p>\n<p>xx:<code>哈哈哈，跟你讲哦，今天云端硬盘项目开发进度用飞的</code></p>\n<p>me:<code>哦？</code></p>\n<p>xx:<code>后端基本处理好了，从测试用的简陋前端进行上传档案，建立资料夹，获取资料夹的的项目，下载</code></p>\n<p><code>我的团队刚好找到一个设计师，他学一下bootstrap就来搞网页设计</code></p>\n<p><code>然后互动部分我用Vue写</code></p>\n<p><code>然后我另一边的社交网站给另一个开发者负责</code></p>\n<p><code>正在重构(把jquery bootstarp-jq统统换到vue)</code></p>\n<p>me:<code>啊这，我们大二才接触到vue，更何况像bootstrap这种UI组件，而你已经涉及到了团队合作</code></p>\n<p><strong>朋友们，这里是不是要学习一下人家的团队合作精神，从前端后端角度分工，每个人都有自己的职责</strong></p>\n<p><strong>然后学习新技术，重构代码，项目经历我相信相当精彩，可以反将HR一军</strong></p>\n<p>me:<code>团队有设定任何的规范吗？</code></p>\n<p>xx:<code>那当然有的，是bootstrap就是bootstrap，不是的就需要自己去写一下css</code></p>\n<p><code>像我用bootstrap几乎是网格，其他都是css设定，以团队标准方便为准</code></p>\n<p><code>团队合作尤其重要，不是每个人都是约翰卡马克，一个人造出一个游戏引擎</code></p>\n<p><a href="https://zh.wikipedia.org/wiki/%E7%B4%84%E7%BF%B0%C2%B7%E5%8D%A1%E9%A6%AC%E5%85%8B" target="_blank" rel="noopener noreferrer">约翰卡马克的故事<ExternalLinkIcon/></a></p>\n<p><strong>有多少人知道这个强者的故事？</strong></p>\n<p><code>注释通常不多，程序本身是可读的，除非很复杂的逻辑，像是B+Tree的操作，是要写出来的</code></p>\n<p><strong>思考一下，大家平常写的注释确实是关键还是即兴呢？</strong></p>\n<p>xx:<code>我的短板也是有的，我只会python跟一些html/css/js</code></p>\n<p><code>C/C++比赛还可以，项目没试过</code></p>\n<p><strong>大家目前有总结过自己的短板吗？还是说学了就学了？</strong></p>\n<p>xx:<code>我总说我自己是一个python星人，因为我写的程序逻辑几乎是为python优化的</code></p>\n<p><code>语法糖用好用满的那种 XD</code></p>\n<p><code>然后所有性质类似但本质不同的东西我可以分清楚</code></p>\n<p><code>像是for循环</code></p>\n<p><code>在其他语言其实是while的变体</code></p>\n<p><code>在python里面却是for each循环，直接对迭代器取值</code></p>\n<p><code>现在越来越多语言把for做成for&amp;for each混用了 XD</code></p>\n<p><strong>思考一下，如何避免陷入惯性思维？</strong></p>\n<p><strong>一个循环用不同语言实现是否真的是自己理解的”都一样“呢？</strong></p>\n<p><strong>学习的时候带着属于自己的思考了吗？</strong></p>\n<p>me:<code>python本身是优化过的语言，学起来相对于轻松一点</code></p>\n<p>xx:<code>但是不符合程序逻辑</code></p>\n<p><code>转换上不容易，想学程序在干嘛，应该从C入门（毕竟可以直接写进汇编）</code></p>\n<p><code>想学【怎么用】程序的，应该学python</code></p>\n<p><code>python套件多，想做什么几乎都有现成的套件</code></p>\n<p><code>但学C对python好，自己写dll套件给python用，效率翻几倍</code></p>\n<p>me:<code>C++呢？</code></p>\n<p>xx:<code>C++比较麻烦。前端塞太多不同语言的东西，导致C++做一件事情不止一个方法（标准语法）</code></p>\n<p><code>打个比喻，在python里面</code></p>\n<p><code>if elif跟if else if 是等价的，虽然写法不同，但编译器吃到一样的东西</code></p>\n<p><code>C++的前端就很痛苦了，C perl java python的影子都在里面</code></p>\n<p><code>学C++最麻烦的是design pattern不好建立</code></p>\n<p><code>最好买同一个译者的书，跟着他的风格走，不然会被打乱</code></p>\n<p><strong>思考：你买书的时候想过这一点吗？还是按热度买？</strong></p>\n<p><strong>思考：你有思考过语言的标准吗？</strong></p>\n<p>me:<code>确实</code>(<strong>已经插不上任何话语权</strong>)</p>\n<p>xx:<code>python的灵魂应该是pyobject</code></p>\n<p><code>python的所有东西都是pyobject，变量存储都是字典</code></p>\n<hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/genius.html",pathLocale:"/",permalink:null,routeMeta:{title:"台北卧龙"},slug:"genius",filePath:"/root/blog/docs/monthly/genius.md",filePathRelative:"docs/monthly/genius.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/genius.html.vue",componentFilePathRelative:"pages/docs/monthly/genius.html.vue",componentFileChunkName:"v-db791236",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/genius.html.js",dataFilePathRelative:"pages/docs/monthly/genius.html.js",dataFileChunkName:"v-db791236",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/genius.html",htmlFilePathRelative:"docs/monthly/genius.html"},{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-2966b1e9",path:"/docs/monthly/about.html",title:"月刊",lang:"en-US",frontmatter:{title:"月刊",date:"2021/09/26"},excerpt:"",headers:[],git:{},filePathRelative:"docs/monthly/about.md"},key:"v-2966b1e9",path:"/docs/monthly/about.html",title:"月刊",lang:"en-US",frontmatter:{title:"月刊",date:"2021/09/26"},excerpt:"",headers:[],content:"**月刊是记录生活杂食向的，并不一定能月刊，但是会尽量维持频率。**",contentRendered:"<p><strong>月刊是记录生活杂食向的，并不一定能月刊，但是会尽量维持频率。</strong></p>\n",date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/about.html",pathLocale:"/",permalink:null,routeMeta:{title:"月刊"},slug:"about",filePath:"/root/blog/docs/monthly/about.md",filePathRelative:"docs/monthly/about.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/about.html.vue",componentFilePathRelative:"pages/docs/monthly/about.html.vue",componentFileChunkName:"v-2966b1e9",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/about.html.js",dataFilePathRelative:"pages/docs/monthly/about.html.js",dataFileChunkName:"v-2966b1e9",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/about.html",htmlFilePathRelative:"docs/monthly/about.html"},{data:{key:"v-536c2daa",path:"/docs/monthly/muscle.html",title:"蛋白粉指南",lang:"en-US",frontmatter:{title:"蛋白粉指南",date:"2021/09/26"},excerpt:"",headers:[{level:2,title:"疯狂的 Muscle",slug:"疯狂的-muscle",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"BCAA",slug:"bcaa",children:[]},{level:3,title:"WHEY PROTEIN",slug:"whey-protein",children:[]},{level:3,title:"最后",slug:"最后",children:[]}]}],git:{},filePathRelative:"docs/monthly/muscle.md"},key:"v-536c2daa",path:"/docs/monthly/muscle.html",title:"蛋白粉指南",lang:"en-US",frontmatter:{title:"蛋白粉指南",date:"2021/09/26"},excerpt:"",headers:[{level:2,title:"疯狂的 Muscle",slug:"疯狂的-muscle",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"BCAA",slug:"bcaa",children:[]},{level:3,title:"WHEY PROTEIN",slug:"whey-protein",children:[]},{level:3,title:"最后",slug:"最后",children:[]}]}],content:"\r\n\r\n## 疯狂的 Muscle\r\n\r\n### 简介\r\n\r\n**在自身没毛病的前提下，任何补剂倒不如天然的食物蛋白质（达到一天的需求量），这个理论至今没被推翻过。**\r\n\r\n**我觉得你能点进来，肯定是寻求科学方法饮食的，按自己的标准去合理达到自己一天的需求量，怎么出问题？有任何肾脏或者肝有问题的，请不要盲目干补剂**\r\n\r\n**如果想额外适当加餐补剂，请结合自身情况**\r\n\r\n- **掌握目前身体一些指标（大概）**\r\n- **了解当前日常摄入与运动量（热量盈余情况）**\r\n- **最好咨询过相关医生（并非你的“集齐营养、饮食、运动”一体化的教练），要不要摄入？该摄入什么？摄入量应该多少？**\r\n- **安全的补剂！**\r\n- **最后要明白你的目的是什么，然后再往回看**\r\n\r\n### BCAA\r\n\r\n肌肉蛋白質由 20 種氨基酸組成－9 種必需氨基酸和 11 種非必需氨基酸。必需氨基酸不能由身體合成，需要從飲食中攝取。九種必需氨基酸中的其中三種稱為 BCAA 支鏈氨基酸（為亮氨酸、異亮氨酸和纈氨酸。）\r\n\r\n**BCAA 只含必须氨基酸的三种，缺乏另外 6 种，服用意义不大**\r\n\r\n**其余六种获取方式是分解肌肉来获得，那么你吃了 BCAA 为了增肌，但是又要分解肌肉去合成必需氨基酸，意义何在？**\r\n\r\n**还在大力推广单独服用 BCAA 的基本上都是智商税**\r\n\r\n### WHEY PROTEIN\r\n\r\n1. 乳清蛋白 (Whey Protein，WP): 从牛乳提炼，按纯度和吸收速度，Whey 可再细分为浓缩乳清 (WP Concentrate), 分离乳清 (WP Isolate) 和水解分离乳清 (Hydrolyzed WP Isolate)。\r\n2. 酪蛋白 (Casein) : 从牛乳提炼，吸收速度较慢，一般建议在睡前服用，在晚间有充足时间缓缓释放。\r\n3. 牛蛋白 (Beef Protein): 从牛胶原蛋白种(Gelatin)提炼，适合对对奶类蛋白过敏的人\r\n4. 大豆蛋白 (Soy Protein): 从豆类植物提炼，适合素食者\r\n5. 混合蛋白 (Blend Protein): 由多种蛋白来源混合而成\r\n\r\n这里给出以下美国 NSCA 的建议**(未更新，不知道年份，切勿对号入座，仅供参考)**：\r\n\r\n- 一般成年人 (Average Adults): 0.8-1.0 g/kg\r\n- 耐力运动员 (Endurance Athlete): 1.0-1.6 g/kg\r\n- 力量运动员 (Strength Athlete): 1.4-1.7 g/kg\r\n- 进行减重饮食的运动员 (On reduced-calorie Diet): 1.8-2.7 g/kg\r\n\r\n---\r\n\r\n**一般来说，乳清蛋白和酪蛋白对于普通人来讲 yyds(基本所需都有了)**\r\n\r\n**乳清蛋白浓缩和分离版本有何不同？两者营养成份上差别不大，但是分离乳清蛋白（WHEY ISOLATE）乳糖较低，每份碳水化合物和脂肪含量少一点，仅此，买的话注重口味多一点，毕竟不是只喝一杯的事情，是要喝完一袋或者一桶...**\r\n\r\n> 同时，也有 clear whey isolate protein，不含任何奇怪风味而已，就普通果汁味道.\r\n\r\n**运动增肌讲究是热量盈余，身体如果处于负卡路里平衡状态时，肌肉会处于分解状态（减肥塑形你喝寄吧补剂，管住嘴去运动），稍微夸张的一点说法就是，人需要吃一公斤的牛肉大概才能达到增肌标准需求量**\r\n\r\n> 卡路里是一种热量单位，广泛用于营养计量和健身手册\r\n\r\n**乳清蛋白一般是运动完 30-40 分钟内喝（普通人：不运动你喝毛？），不要贪图奇效每天喝几顿。**\r\n\r\n**服用乳清蛋白可诱发青春痘生长和胀气(分离大概率不会)...**\r\n\r\n### 最后\r\n\r\n**买任何进口补剂切记搜一搜有没有折扣-COUPON，国内要注意食品安全，无良商家会使用大豆蛋白，拼接肉合成肉，虚假卡路里标签...**\r\n\r\n**尼玛补剂是真的贵，更别说健身之类补充蛋白的小零食，还 tm 要求进口货才能心安理得**\r\n",contentRendered:'<h2 id="疯狂的-muscle" tabindex="-1"><a class="header-anchor" href="#疯狂的-muscle" aria-hidden="true">#</a> 疯狂的 Muscle</h2>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p><strong>在自身没毛病的前提下，任何补剂倒不如天然的食物蛋白质（达到一天的需求量），这个理论至今没被推翻过。</strong></p>\n<p><strong>我觉得你能点进来，肯定是寻求科学方法饮食的，按自己的标准去合理达到自己一天的需求量，怎么出问题？有任何肾脏或者肝有问题的，请不要盲目干补剂</strong></p>\n<p><strong>如果想额外适当加餐补剂，请结合自身情况</strong></p>\n<ul>\n<li><strong>掌握目前身体一些指标（大概）</strong></li>\n<li><strong>了解当前日常摄入与运动量（热量盈余情况）</strong></li>\n<li><strong>最好咨询过相关医生（并非你的“集齐营养、饮食、运动”一体化的教练），要不要摄入？该摄入什么？摄入量应该多少？</strong></li>\n<li><strong>安全的补剂！</strong></li>\n<li><strong>最后要明白你的目的是什么，然后再往回看</strong></li>\n</ul>\n<h3 id="bcaa" tabindex="-1"><a class="header-anchor" href="#bcaa" aria-hidden="true">#</a> BCAA</h3>\n<p>肌肉蛋白質由 20 種氨基酸組成－9 種必需氨基酸和 11 種非必需氨基酸。必需氨基酸不能由身體合成，需要從飲食中攝取。九種必需氨基酸中的其中三種稱為 BCAA 支鏈氨基酸（為亮氨酸、異亮氨酸和纈氨酸。）</p>\n<p><strong>BCAA 只含必须氨基酸的三种，缺乏另外 6 种，服用意义不大</strong></p>\n<p><strong>其余六种获取方式是分解肌肉来获得，那么你吃了 BCAA 为了增肌，但是又要分解肌肉去合成必需氨基酸，意义何在？</strong></p>\n<p><strong>还在大力推广单独服用 BCAA 的基本上都是智商税</strong></p>\n<h3 id="whey-protein" tabindex="-1"><a class="header-anchor" href="#whey-protein" aria-hidden="true">#</a> WHEY PROTEIN</h3>\n<ol>\n<li>乳清蛋白 (Whey Protein，WP): 从牛乳提炼，按纯度和吸收速度，Whey 可再细分为浓缩乳清 (WP Concentrate), 分离乳清 (WP Isolate) 和水解分离乳清 (Hydrolyzed WP Isolate)。</li>\n<li>酪蛋白 (Casein) : 从牛乳提炼，吸收速度较慢，一般建议在睡前服用，在晚间有充足时间缓缓释放。</li>\n<li>牛蛋白 (Beef Protein): 从牛胶原蛋白种(Gelatin)提炼，适合对对奶类蛋白过敏的人</li>\n<li>大豆蛋白 (Soy Protein): 从豆类植物提炼，适合素食者</li>\n<li>混合蛋白 (Blend Protein): 由多种蛋白来源混合而成</li>\n</ol>\n<p>这里给出以下美国 NSCA 的建议**(未更新，不知道年份，切勿对号入座，仅供参考)**：</p>\n<ul>\n<li>一般成年人 (Average Adults): 0.8-1.0 g/kg</li>\n<li>耐力运动员 (Endurance Athlete): 1.0-1.6 g/kg</li>\n<li>力量运动员 (Strength Athlete): 1.4-1.7 g/kg</li>\n<li>进行减重饮食的运动员 (On reduced-calorie Diet): 1.8-2.7 g/kg</li>\n</ul>\n<hr>\n<p><strong>一般来说，乳清蛋白和酪蛋白对于普通人来讲 yyds(基本所需都有了)</strong></p>\n<p><strong>乳清蛋白浓缩和分离版本有何不同？两者营养成份上差别不大，但是分离乳清蛋白（WHEY ISOLATE）乳糖较低，每份碳水化合物和脂肪含量少一点，仅此，买的话注重口味多一点，毕竟不是只喝一杯的事情，是要喝完一袋或者一桶...</strong></p>\n<blockquote>\n<p>同时，也有 clear whey isolate protein，不含任何奇怪风味而已，就普通果汁味道.</p>\n</blockquote>\n<p><strong>运动增肌讲究是热量盈余，身体如果处于负卡路里平衡状态时，肌肉会处于分解状态（减肥塑形你喝寄吧补剂，管住嘴去运动），稍微夸张的一点说法就是，人需要吃一公斤的牛肉大概才能达到增肌标准需求量</strong></p>\n<blockquote>\n<p>卡路里是一种热量单位，广泛用于营养计量和健身手册</p>\n</blockquote>\n<p><strong>乳清蛋白一般是运动完 30-40 分钟内喝（普通人：不运动你喝毛？），不要贪图奇效每天喝几顿。</strong></p>\n<p><strong>服用乳清蛋白可诱发青春痘生长和胀气(分离大概率不会)...</strong></p>\n<h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h3>\n<p><strong>买任何进口补剂切记搜一搜有没有折扣-COUPON，国内要注意食品安全，无良商家会使用大豆蛋白，拼接肉合成肉，虚假卡路里标签...</strong></p>\n<p><strong>尼玛补剂是真的贵，更别说健身之类补充蛋白的小零食，还 tm 要求进口货才能心安理得</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/muscle.html",pathLocale:"/",permalink:null,routeMeta:{title:"蛋白粉指南"},slug:"muscle",filePath:"/root/blog/docs/monthly/muscle.md",filePathRelative:"docs/monthly/muscle.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/muscle.html.vue",componentFilePathRelative:"pages/docs/monthly/muscle.html.vue",componentFileChunkName:"v-536c2daa",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/muscle.html.js",dataFilePathRelative:"pages/docs/monthly/muscle.html.js",dataFileChunkName:"v-536c2daa",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/muscle.html",htmlFilePathRelative:"docs/monthly/muscle.html"},{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-66e05561",path:"/blogs/Python/%E9%87%8D%E6%9E%84%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],git:{},filePathRelative:"blogs/Python/重构项目记录(fastapi).md"},key:"v-66e05561",path:"/blogs/Python/zhonggouxiangmujilu(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],content:'**从WSGI到ASGI**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n自从说了要从`Flask`到`Fastapi`转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。\r\n\r\n### 改造过程\r\n\r\n此次的实验项目是之前的[上传视频项目](https://github.com/googidaddy/bili_upload_tool)，由于是传统的`WSGI`架构，加上`Flask`是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)\r\n\r\n```\r\n--docker-compose.yaml\r\n--Docker-main\r\n----main.py\r\n----Dockerfile\r\n--nginx\r\n----nginx.conf\r\n----Dockerfile\r\n```\r\n\r\n\r\n\r\n#### Flask变Fastapi\r\n\r\n**对比来说，改动地方不多，**\r\n\r\n- 首先用pipenv配置好Fastapi相关环境\r\n\r\n- 把模板搭载放在了nginx，可以翻看**萌新nginx配置**那一篇。\r\n\r\n- 增加[请求验证](https://fastapi.tiangolo.com/tutorial/body/)\r\n\r\n  ```python\r\n  from pydantic import BaseModel\r\n  # 对数据有验证\r\n  class Item(BaseModel):\r\n      a: str\r\n      b: str\r\n      c: str\r\n      d: str\r\n  # 去掉__main__程序里uvicorn启动程序\r\n  ```\r\n\r\n- 原来的数据处理部分变更成异步async/await\r\n\r\n#### 增加nginx反向代理\r\n\r\n```dockerfile\r\nFROM nginx:alpine\r\n\r\nCOPY ./dist /usr/share/nginx/html/\r\n\r\nCOPY nginx.conf /etc/nginx/conf.d/\r\n```\r\n\r\n**解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。**\r\n\r\n> ps：nginx配置在那个教程\r\n\r\n#### 增加docker-compose\r\n\r\n使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。\r\n\r\n```yaml\r\nversion: "3.9"\r\nservices:\r\n  web:\r\n    build: nginx\r\n    ports:\r\n      - 8080:8080\r\n\r\n  api:\r\n    build: Docker-main\r\n    ports:\r\n    - 9090:9090\r\n```\r\n\r\n### 总结\r\n\r\n这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,**有些默认配置的坑(--host --port)**，\r\n\r\n',contentRendered:'<p><strong>从WSGI到ASGI</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>自从说了要从<code>Flask</code>到<code>Fastapi</code>转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。</p>\n<h3 id="改造过程" tabindex="-1"><a class="header-anchor" href="#改造过程" aria-hidden="true">#</a> 改造过程</h3>\n<p>此次的实验项目是之前的<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">上传视频项目<ExternalLinkIcon/></a>，由于是传统的<code>WSGI</code>架构，加上<code>Flask</code>是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>--docker-compose.yaml\n--Docker-main\n----main.py\n----Dockerfile\n--nginx\n----nginx.conf\n----Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="flask变fastapi" tabindex="-1"><a class="header-anchor" href="#flask变fastapi" aria-hidden="true">#</a> Flask变Fastapi</h4>\n<p><strong>对比来说，改动地方不多，</strong></p>\n<ul>\n<li>\n<p>首先用pipenv配置好Fastapi相关环境</p>\n</li>\n<li>\n<p>把模板搭载放在了nginx，可以翻看<strong>萌新nginx配置</strong>那一篇。</p>\n</li>\n<li>\n<p>增加<a href="https://fastapi.tiangolo.com/tutorial/body/" target="_blank" rel="noopener noreferrer">请求验证<ExternalLinkIcon/></a></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token comment"># 对数据有验证</span>\n<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    a<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    b<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    c<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    d<span class="token punctuation">:</span> <span class="token builtin">str</span>\n<span class="token comment"># 去掉__main__程序里uvicorn启动程序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>\n<li>\n<p>原来的数据处理部分变更成异步async/await</p>\n</li>\n</ul>\n<h4 id="增加nginx反向代理" tabindex="-1"><a class="header-anchor" href="#增加nginx反向代理" aria-hidden="true">#</a> 增加nginx反向代理</h4>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html/</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> nginx.conf /etc/nginx/conf.d/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。</strong></p>\n<blockquote>\n<p>ps：nginx配置在那个教程</p>\n</blockquote>\n<h4 id="增加docker-compose" tabindex="-1"><a class="header-anchor" href="#增加docker-compose" aria-hidden="true">#</a> 增加docker-compose</h4>\n<p>使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>\n\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> Docker<span class="token punctuation">-</span>main\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3>\n<p>这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,<strong>有些默认配置的坑(--host --port)</strong>，</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/重构项目记录(fastapi).html",pathLocale:"/",permalink:null,routeMeta:{title:"重构项目记录(fastapi)"},slug:"重构项目记录(fastapi)",filePath:"/root/blog/blogs/Python/重构项目记录(fastapi).md",filePathRelative:"blogs/Python/重构项目记录(fastapi).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFileChunkName:"v-66e05561",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.js",dataFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.js",dataFileChunkName:"v-66e05561",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/重构项目记录(fastapi).html",htmlFilePathRelative:"blogs/Python/重构项目记录(fastapi).html"},{data:{key:"v-fb3507ea",path:"/blogs/tech/%E8%90%8C%E6%96%B0nginx%E9%85%8D%E7%BD%AE.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],git:{},filePathRelative:"blogs/tech/萌新nginx配置.md"},key:"v-fb3507ea",path:"/blogs/tech/mengxinnginxpeizhi.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],content:'\r\n**2分钟简单学习nginx配置。**\r\n\x3c!-- more --\x3e\r\n\r\n### 配置\r\n\r\n简单直接跑起来\r\n\r\n```sh\r\nserver {\r\n\t# 监听8080端口,简单体验的话，写不写无所谓\r\n    listen 8080;\r\n    # 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.\r\n    server_name yourdomain.com;\r\n    # 配置静态文件,/表示根目录\r\n    location / {\r\n        root            /usr/share/nginx/html;\r\n        index           index.html;\r\n        try_files       $uri $uri/ /index.html;\r\n\r\n }\r\n\t# 访问yourdomian.com/upload 会转发域名到baidu.com\r\n\t# 剩下是配置请求头\r\n    #location /upload {\r\n    #    proxy_pass http://baidu.com;\r\n    #    add_header Access-Control-Allow-Origin *;\r\n    #    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";\r\n    #    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";\r\n    #    add_header Access-Control-Allow-Credentials true;\r\n#}\r\n}\r\n```\r\n\r\n',contentRendered:'<p><strong>2分钟简单学习nginx配置。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3>\n<p>简单直接跑起来</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>server <span class="token punctuation">{</span>\n\t<span class="token comment"># 监听8080端口,简单体验的话，写不写无所谓</span>\n    listen <span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token comment"># 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.</span>\n    server_name yourdomain.com<span class="token punctuation">;</span>\n    <span class="token comment"># 配置静态文件,/表示根目录</span>\n    location / <span class="token punctuation">{</span>\n        root            /usr/share/nginx/html<span class="token punctuation">;</span>\n        index           index.html<span class="token punctuation">;</span>\n        try_files       <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>\n\n <span class="token punctuation">}</span>\n\t<span class="token comment"># 访问yourdomian.com/upload 会转发域名到baidu.com</span>\n\t<span class="token comment"># 剩下是配置请求头</span>\n    <span class="token comment">#location /upload {</span>\n    <span class="token comment">#    proxy_pass http://baidu.com;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Origin *;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Credentials true;</span>\n<span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/萌新nginx配置.html",pathLocale:"/",permalink:null,routeMeta:{title:"萌新nginx配置"},slug:"萌新nginx配置",filePath:"/root/blog/blogs/tech/萌新nginx配置.md",filePathRelative:"blogs/tech/萌新nginx配置.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.vue",componentFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.vue",componentFileChunkName:"v-fb3507ea",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.js",dataFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.js",dataFileChunkName:"v-fb3507ea",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/萌新nginx配置.html",htmlFilePathRelative:"blogs/tech/萌新nginx配置.html"},{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"},{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"},{data:{key:"v-2fb64b5c",path:"/blogs/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],git:{},filePathRelative:"blogs/Python/正则表达式.md"},key:"v-2fb64b5c",path:"/blogs/Python/zhengzebiaodashi.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],content:'## 正则表达式\r\n\r\n### 按类型匹配\r\n\r\n```python\r\n#按类型匹配\r\n\\d : 任何数字\r\n\\D : 不是数字\r\n\\s : 任何 white space, 如 [\\t\\n\\r\\f\\v]\r\n\\S : 不是 white space\r\n\\w : 任何大小写字母, 数字和 “” [a-zA-Z0-9]\r\n\\W : 不是 \\w\r\n\\b : 空白字符 (只在某个字的开头或结尾)\r\n\\B : 空白字符 (不在某个字的开头或结尾)\r\n\\\\ : 匹配 \\\r\n. : 匹配任何字符 (除了 \\n)\r\n^ : 匹配开头\r\n$ : 匹配结尾\r\n? : 前面的字符可有可无\r\n* : 重复零次或多次\r\n+ : 重复一次或多次\r\n{n, m} : 重复 n 至 m 次\r\n{n} : 重复 n 次\r\n```\r\n\r\n 如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r"^I" 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 `re.search()` 可以对每一行单独处理.  这个参数就是 `flags=re.M`, 或者这样写也行 `flags=re.MULTILINE`              \r\n\r\n```python\r\nstring = """\r\ndog runs to cat.\r\nI run to dog.\r\n"""\r\nprint(re.search(r"^I", string))                 # None\r\nprint(re.search(r"^I", string, flags=re.M))  \r\n# <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\r\n```\r\n\r\n```python\r\nmatch = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\r\nprint(match.group())                   # 021523, Date: Feb/12/2017\r\nprint(match.group(1))                  # 021523\r\nprint(match.group(2))                  # Date: Feb/12/2017\r\n我们甚至可以为找到的内容分组, 使用 () 能轻松实现这件事. \r\n通过分组, 我们能轻松定位所找到的内容. \r\n比如在这个 (\\d+) 组里, 需要找到的是一些数字, \r\n在 (.+) 这个组里, 我们会找到 “Date: “ 后面的所有内容. \r\n当使用 match.group() 时, 他会返回所有组里的内容, \r\n//group(1) 021523\r\n而如果给 .group(2) 里加一个数, 它就能定位你需要返回哪个组里的信息.\r\n```\r\n\r\n### findall\r\n\r\n```python\r\n# findall 找到所有项返回一个列表\r\nprint(re.findall(r"r[ua]n", "run ran ren"))    \r\n# [\'run\', \'ran\']\r\n\r\n# | : or\r\nprint(re.findall(r"(run|ran)", "run ran ren")) \r\n# [\'run\', \'ran\']\r\n```\r\n\r\n### 如何巧妙的替换、分割字符串\r\n\r\n```python\r\nprint(re.sub(r"r[au]ns", "catches", "dog runs to cat"))  \r\n# dog catches to cat\r\n\r\nprint(re.split(r"[,;\\.]", "a;b,c.d;e"))  \r\n# [\'a\', \'b\', \'c\', \'d\', \'e\']\r\n```\r\n\r\n### 封装一个正则表达式\r\n\r\n```python\r\ncompiled_re = re.compile(r"r[ua]n")\r\nprint(compiled_re.search("dog ran to cat")) \r\n# <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\r\n```\r\n\r\n',contentRendered:'<h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2>\n<h3 id="按类型匹配" tabindex="-1"><a class="header-anchor" href="#按类型匹配" aria-hidden="true">#</a> 按类型匹配</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#按类型匹配</span>\n\\d <span class="token punctuation">:</span> 任何数字\n\\D <span class="token punctuation">:</span> 不是数字\n\\s <span class="token punctuation">:</span> 任何 white space<span class="token punctuation">,</span> 如 <span class="token punctuation">[</span>\\t\\n\\r\\f\\v<span class="token punctuation">]</span>\n\\S <span class="token punctuation">:</span> 不是 white space\n\\w <span class="token punctuation">:</span> 任何大小写字母<span class="token punctuation">,</span> 数字和 “” <span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\n\\W <span class="token punctuation">:</span> 不是 \\w\n\\b <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>只在某个字的开头或结尾<span class="token punctuation">)</span>\n\\B <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>不在某个字的开头或结尾<span class="token punctuation">)</span>\n\\\\ <span class="token punctuation">:</span> 匹配 \\\n<span class="token punctuation">.</span> <span class="token punctuation">:</span> 匹配任何字符 <span class="token punctuation">(</span>除了 \\n<span class="token punctuation">)</span>\n<span class="token operator">^</span> <span class="token punctuation">:</span> 匹配开头\n$ <span class="token punctuation">:</span> 匹配结尾\n? <span class="token punctuation">:</span> 前面的字符可有可无\n<span class="token operator">*</span> <span class="token punctuation">:</span> 重复零次或多次\n<span class="token operator">+</span> <span class="token punctuation">:</span> 重复一次或多次\n<span class="token punctuation">{</span>n<span class="token punctuation">,</span> m<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 至 m 次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r&quot;^I&quot; 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 <code>re.search()</code> 可以对每一行单独处理.  这个参数就是 <code>flags=re.M</code>, 或者这样写也行 <code>flags=re.MULTILINE</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>string <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\ndog runs to cat.\nI run to dog.\n"""</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># None</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(18, 19), match=\'I\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"(\\d+), Date: (.+)"</span><span class="token punctuation">,</span> <span class="token string">"ID: 021523, Date: Feb/12/2017"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 021523, Date: Feb/12/2017</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 021523</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># Date: Feb/12/2017</span>\n我们甚至可以为找到的内容分组<span class="token punctuation">,</span> 使用 <span class="token punctuation">(</span><span class="token punctuation">)</span> 能轻松实现这件事<span class="token punctuation">.</span> \n通过分组<span class="token punctuation">,</span> 我们能轻松定位所找到的内容<span class="token punctuation">.</span> \n比如在这个 <span class="token punctuation">(</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span> 组里<span class="token punctuation">,</span> 需要找到的是一些数字<span class="token punctuation">,</span> \n在 <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token punctuation">)</span> 这个组里<span class="token punctuation">,</span> 我们会找到 “Date<span class="token punctuation">:</span> “ 后面的所有内容<span class="token punctuation">.</span> \n当使用 <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> 时<span class="token punctuation">,</span> 他会返回所有组里的内容<span class="token punctuation">,</span> \n<span class="token operator">//</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">021523</span>\n而如果给 <span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 里加一个数<span class="token punctuation">,</span> 它就能定位你需要返回哪个组里的信息<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="findall" tabindex="-1"><a class="header-anchor" href="#findall" aria-hidden="true">#</a> findall</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># findall 找到所有项返回一个列表</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    \n<span class="token comment"># [\'run\', \'ran\']</span>\n\n<span class="token comment"># | : or</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"(run|ran)"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># [\'run\', \'ran\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="如何巧妙的替换、分割字符串" tabindex="-1"><a class="header-anchor" href="#如何巧妙的替换、分割字符串" aria-hidden="true">#</a> 如何巧妙的替换、分割字符串</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"r[au]ns"</span><span class="token punctuation">,</span> <span class="token string">"catches"</span><span class="token punctuation">,</span> <span class="token string">"dog runs to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># dog catches to cat</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r"[,;\\.]"</span><span class="token punctuation">,</span> <span class="token string">"a;b,c.d;e"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># [\'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="封装一个正则表达式" tabindex="-1"><a class="header-anchor" href="#封装一个正则表达式" aria-hidden="true">#</a> 封装一个正则表达式</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>compiled_re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>compiled_re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"dog ran to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(4, 7), match=\'ran\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/正则表达式.html",pathLocale:"/",permalink:null,routeMeta:{title:"正则表达式"},slug:"正则表达式",filePath:"/root/blog/blogs/Python/正则表达式.md",filePathRelative:"blogs/Python/正则表达式.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.vue",componentFilePathRelative:"pages/blogs/Python/正则表达式.html.vue",componentFileChunkName:"v-2fb64b5c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.js",dataFilePathRelative:"pages/blogs/Python/正则表达式.html.js",dataFileChunkName:"v-2fb64b5c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/正则表达式.html",htmlFilePathRelative:"blogs/Python/正则表达式.html"},{data:{key:"v-d8264f08",path:"/blogs/notes/Docker%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],git:{},filePathRelative:"blogs/notes/Docker命令合集.md"},key:"v-d8264f08",path:"/blogs/notes/Dockerminglingheji.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],content:'\r\nDocker以及Dockerfile命令合集-持续更新。\r\n\x3c!-- more --\x3e\r\n\r\n## Docker\r\n\r\n**build镜像(有Dockerfile)**\r\n\r\n```shell\r\ndocker build -t myimage --network host .\r\n```\r\n\r\n> myimage是自定义镜像名，可自行更改, -t [命名]\r\n>\r\n> 公司配备一般还要加上 --network host才能访问请求网络\r\n\r\n**实例化一个容器**\r\n\r\n```shell\r\ndocker run -d --name bili --network host --restart unless-stopped -p 9090:9090 -p 8022:22 myimage\r\n```\r\n\r\n> -d 在后台运行容器\r\n>\r\n> -p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p） \r\n>\r\n> myimage 镜像名字\r\n>\r\n> -it  i是保持输入，t是将日志绑定伪终端输出\r\n>\r\n> --restart unless-stopped 这个适用于自动重开容器\r\n\r\n**进入容器内部**\r\n\r\n```shell\r\ndocker exec -it 容器id/容器名字 bash\r\n```\r\n\r\n## 如何优雅的退出容器但是不停止容器运行？\r\n  `ctrl`+`P`+`Q` **切记，如果你有热键绑定，先取消**\r\n  然后`docker ps`就能看到你的容器在运行\r\n\r\n**查看镜像或者容器**\r\n\r\n```\r\n#镜像\r\ndocker images\r\n\r\n#容器(正在运行的)\r\ndocker ps\r\n\r\n#容器(所有)\r\ndocker ps -a\r\n```\r\n\r\n**删除容器**\r\n\r\n```\r\ndocker stop 容器id && docker rm 容器id\r\n```\r\n\r\n> 如果容器实例没有运行，执行后半句,容器id也可以是名字\r\n\r\n**删除镜像**\r\n\r\n```\r\ndocker rmi 镜像id/镜像名字\r\n#如果提示无法删除，有attach其他镜像，则执行下面语句\r\ndocker rmi -f 镜像id/镜像名字\r\n```\r\n\r\n> 先要暂停和删除该镜像下的所有容器才能删除镜像\r\n\r\n**查看容器运行失败日志**\r\n\r\n很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息\r\n\r\n```\r\n# 获取日志地址\r\ndocker inspect --format \'{{.LogPath}}\' 容器id\r\n# 这时会打印一串地址，复制\r\n# 通过cat命令查看日志\r\ncat 刚刚复制的地址\r\n\r\n```\r\n\r\n**查看容器运行时日志**\r\n\r\n```\r\n# 适用日志不多，因为是把全部日志输出(打印实时log)\r\ndocker logs -f 容器名字\r\n\r\n# 输出最近10条日志\r\ndocker logs --tail 10 容器名字\r\n\r\n# 筛选log(查找“error”)\r\ndocker logs | grep error\r\n```\r\n\r\n**如果进入了虚拟终端`-it`，使用`ctrl`+`P` `Q`(一起按) 达成退出但不停止容器运行**\r\n\r\n## Dockerfile\r\n\r\n**Dockerfile：一个文件命名为Dockerfile，无后缀**\r\n\r\n```dockerfile\r\nFROM python\r\n# FROM 指定基础镜像\r\n\r\nCOPY ./app /app\r\n# COPY [文件1/文件夹1] [路径]\r\n# 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径\r\n\r\nWORKDIR /app\r\n# 指定工作目录\r\n\r\nRUN apt-get update -y && \\\r\n\tapt-get install -y vim && \\\r\n\tpip3 install -r requirements.txt\r\n# RUN 执行命令，务必命令使用&&连起来(\\：意思换行)\r\n\r\nCMD ["python3","main.py"]\r\n# CMD 容器启动时执行的命令\r\n\r\nEXPOSE 9090\r\n# 声明暴露指定端口，并不是真的暴露，帮助理解\r\n```\r\n\r\n## Docker hub\r\n\r\n现有一个`docker hub`账号和新建一个公开仓库\r\n\r\n```shell\r\n# 1\r\ndocker tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\r\n\r\n# 2 \r\ndocker login\r\n\r\n# 3 \r\ndocker push 目标仓库名字/用户名:tag\r\n```\r\n\r\n',contentRendered:'<p>Docker以及Dockerfile命令合集-持续更新。</p>\n\x3c!-- more --\x3e\n<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>\n<p><strong>build镜像(有Dockerfile)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> build -t myimage --network <span class="token function">host</span> <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>myimage是自定义镜像名，可自行更改, -t [命名]</p>\n<p>公司配备一般还要加上 --network host才能访问请求网络</p>\n</blockquote>\n<p><strong>实例化一个容器</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name bili --network <span class="token function">host</span> --restart unless-stopped -p <span class="token number">9090</span>:9090 -p <span class="token number">8022</span>:22 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>-d 在后台运行容器</p>\n<p>-p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p）</p>\n<p>myimage 镜像名字</p>\n<p>-it  i是保持输入，t是将日志绑定伪终端输出</p>\n<p>--restart unless-stopped 这个适用于自动重开容器</p>\n</blockquote>\n<p><strong>进入容器内部</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it 容器id/容器名字 <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何优雅的退出容器但是不停止容器运行" tabindex="-1"><a class="header-anchor" href="#如何优雅的退出容器但是不停止容器运行" aria-hidden="true">#</a> 如何优雅的退出容器但是不停止容器运行？</h2>\n<p><code>ctrl</code>+<code>P</code>+<code>Q</code> <strong>切记，如果你有热键绑定，先取消</strong>\n然后<code>docker ps</code>就能看到你的容器在运行</p>\n<p><strong>查看镜像或者容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>#镜像\ndocker images\n\n#容器(正在运行的)\ndocker ps\n\n#容器(所有)\ndocker ps -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>删除容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker stop 容器id &amp;&amp; docker rm 容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>如果容器实例没有运行，执行后半句,容器id也可以是名字</p>\n</blockquote>\n<p><strong>删除镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rmi 镜像id/镜像名字\n#如果提示无法删除，有attach其他镜像，则执行下面语句\ndocker rmi -f 镜像id/镜像名字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>先要暂停和删除该镜像下的所有容器才能删除镜像</p>\n</blockquote>\n<p><strong>查看容器运行失败日志</strong></p>\n<p>很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 获取日志地址\ndocker inspect --format \'{{.LogPath}}\' 容器id\n# 这时会打印一串地址，复制\n# 通过cat命令查看日志\ncat 刚刚复制的地址\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>查看容器运行时日志</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 适用日志不多，因为是把全部日志输出(打印实时log)\ndocker logs -f 容器名字\n\n# 输出最近10条日志\ndocker logs --tail 10 容器名字\n\n# 筛选log(查找“error”)\ndocker logs | grep error\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>如果进入了虚拟终端<code>-it</code>，使用<code>ctrl</code>+<code>P</code> <code>Q</code>(一起按) 达成退出但不停止容器运行</strong></p>\n<h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2>\n<p><strong>Dockerfile：一个文件命名为Dockerfile，无后缀</strong></p>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python</span>\n<span class="token comment"># FROM 指定基础镜像</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./app /app</span>\n<span class="token comment"># COPY [文件1/文件夹1] [路径]</span>\n<span class="token comment"># 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径</span>\n\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>\n<span class="token comment"># 指定工作目录</span>\n\n<span class="token instruction"><span class="token keyword">RUN</span> apt-get update -y &amp;&amp; <span class="token operator">\\</span>\n\tapt-get install -y vim &amp;&amp; <span class="token operator">\\</span>\n\tpip3 install -r requirements.txt</span>\n<span class="token comment"># RUN 执行命令，务必命令使用&amp;&amp;连起来(\\：意思换行)</span>\n\n<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"python3"</span>,<span class="token string">"main.py"</span>]</span>\n<span class="token comment"># CMD 容器启动时执行的命令</span>\n\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9090</span>\n<span class="token comment"># 声明暴露指定端口，并不是真的暴露，帮助理解</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker hub</h2>\n<p>现有一个<code>docker hub</code>账号和新建一个公开仓库</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 1</span>\n<span class="token function">docker</span> tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\n\n<span class="token comment"># 2 </span>\n<span class="token function">docker</span> login\n\n<span class="token comment"># 3 </span>\n<span class="token function">docker</span> push 目标仓库名字/用户名:tag\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Docker命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker命令合集"},slug:"Docker命令合集",filePath:"/root/blog/blogs/notes/Docker命令合集.md",filePathRelative:"blogs/notes/Docker命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/Docker命令合集.html.vue",componentFileChunkName:"v-d8264f08",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/Docker命令合集.html.js",dataFileChunkName:"v-d8264f08",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Docker命令合集.html",htmlFilePathRelative:"blogs/notes/Docker命令合集.html"},{data:{key:"v-60868ce6",path:"/blogs/notes/gitignore%E6%95%99%E5%AD%A6.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/notes/gitignore教学.md"},key:"v-60868ce6",path:"/blogs/notes/gitignorejiaoxue.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],content:'\r\n**.gitignore是一个好东西**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n**.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件**\r\n\r\n**Q：我写了规则在里面，怎么上传的时候没有生效**\r\n\r\n**A：git缓存需要清除**\r\n\r\n```sh\r\n# solution\r\ngit rm -r --cached .\r\ngit add .\r\ngit commit -m "update .gitignore"\r\n```\r\n\r\n**Pycharm的.gitignore**\r\n\r\n```sh\r\n# Created by .ignore support plugin (hsz.mobi)\r\n### Python template\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\n# 如果有前端打包的项目这里要去掉 dist/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n### VirtualEnv template\r\n# Virtualenv\r\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\r\n.Python\r\n[Bb]in\r\n[Ii]nclude\r\n[Ll]ib\r\n[Ll]ib64\r\n[Ll]ocal\r\n[Ss]cripts\r\npyvenv.cfg\r\n.venv\r\npip-selfcheck.json\r\n### JetBrains template\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff:\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/dictionaries\r\n.idea/vcs.xml\r\n.idea/jsLibraryMappings.xml\r\n\r\n# Sensitive or high-churn files:\r\n.idea/dataSources.ids\r\n.idea/dataSources.xml\r\n.idea/dataSources.local.xml\r\n.idea/sqlDataSources.xml\r\n.idea/dynamic.xml\r\n.idea/uiDesigner.xml\r\n\r\n# Gradle:\r\n.idea/gradle.xml\r\n.idea/libraries\r\n\r\n# Mongo Explorer plugin:\r\n.idea/mongoSettings.xml\r\n\r\n.idea/\r\n\r\n## File-based project format:\r\n*.iws\r\n\r\n## Plugin-specific files:\r\n\r\n# IntelliJ\r\n/out/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n```\r\n\r\n',contentRendered:'<p><strong>.gitignore是一个好东西</strong></p>\n\x3c!-- more --\x3e\n<p><strong>.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件</strong></p>\n<p><strong>Q：我写了规则在里面，怎么上传的时候没有生效</strong></p>\n<p><strong>A：git缓存需要清除</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># solution</span>\n<span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">"update .gitignore"</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Pycharm的.gitignore</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># Created by .ignore support plugin (hsz.mobi)</span>\n<span class="token comment">### Python template</span>\n<span class="token comment"># Byte-compiled / optimized / DLL files</span>\n__pycache__/\n*.py<span class="token punctuation">[</span>cod<span class="token punctuation">]</span>\n*<span class="token variable">$py</span>.class\n\n<span class="token comment"># C extensions</span>\n*.so\n\n<span class="token comment"># Distribution / packaging</span>\n.Python\nenv/\nbuild/\ndevelop-eggs/\n<span class="token comment"># 如果有前端打包的项目这里要去掉 dist/</span>\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n<span class="token comment"># PyInstaller</span>\n<span class="token comment">#  Usually these files are written by a python script from a template</span>\n<span class="token comment">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span>\n*.manifest\n*.spec\n\n<span class="token comment"># Installer logs</span>\npip-log.txt\npip-delete-this-directory.txt\n\n<span class="token comment"># Unit test / coverage reports</span>\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n<span class="token comment"># Translations</span>\n*.mo\n*.pot\n\n<span class="token comment"># Django stuff:</span>\n*.log\nlocal_settings.py\n\n<span class="token comment"># Flask stuff:</span>\ninstance/\n.webassets-cache\n\n<span class="token comment"># Scrapy stuff:</span>\n.scrapy\n\n<span class="token comment"># Sphinx documentation</span>\ndocs/_build/\n\n<span class="token comment"># PyBuilder</span>\ntarget/\n\n<span class="token comment"># IPython Notebook</span>\n.ipynb_checkpoints\n\n<span class="token comment"># pyenv</span>\n.python-version\n\n<span class="token comment"># celery beat schedule file</span>\ncelerybeat-schedule\n\n<span class="token comment"># dotenv</span>\n.env\n\n<span class="token comment"># virtualenv</span>\nvenv/\nENV/\n\n<span class="token comment"># Spyder project settings</span>\n.spyderproject\n\n<span class="token comment"># Rope project settings</span>\n.ropeproject\n<span class="token comment">### VirtualEnv template</span>\n<span class="token comment"># Virtualenv</span>\n<span class="token comment"># http://iamzed.com/2009/05/07/a-primer-on-virtualenv/</span>\n.Python\n<span class="token punctuation">[</span>Bb<span class="token punctuation">]</span>in\n<span class="token punctuation">[</span>Ii<span class="token punctuation">]</span>nclude\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib64\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ocal\n<span class="token punctuation">[</span>Ss<span class="token punctuation">]</span>cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n<span class="token comment">### JetBrains template</span>\n<span class="token comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm</span>\n<span class="token comment"># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span>\n\n<span class="token comment"># User-specific stuff:</span>\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n<span class="token comment"># Sensitive or high-churn files:</span>\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n<span class="token comment"># Gradle:</span>\n.idea/gradle.xml\n.idea/libraries\n\n<span class="token comment"># Mongo Explorer plugin:</span>\n.idea/mongoSettings.xml\n\n.idea/\n\n<span class="token comment">## File-based project format:</span>\n*.iws\n\n<span class="token comment">## Plugin-specific files:</span>\n\n<span class="token comment"># IntelliJ</span>\n/out/\n\n<span class="token comment"># mpeltonen/sbt-idea plugin</span>\n.idea_modules/\n\n<span class="token comment"># JIRA plugin</span>\natlassian-ide-plugin.xml\n\n<span class="token comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span>\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/gitignore教学.html",pathLocale:"/",permalink:null,routeMeta:{title:"gitignore教学"},slug:"gitignore教学",filePath:"/root/blog/blogs/notes/gitignore教学.md",filePathRelative:"blogs/notes/gitignore教学.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.vue",componentFilePathRelative:"pages/blogs/notes/gitignore教学.html.vue",componentFileChunkName:"v-60868ce6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.js",dataFilePathRelative:"pages/blogs/notes/gitignore教学.html.js",dataFileChunkName:"v-60868ce6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/gitignore教学.html",htmlFilePathRelative:"blogs/notes/gitignore教学.html"},{data:{key:"v-3cc188f4",path:"/blogs/notes/pipenv%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],git:{},filePathRelative:"blogs/notes/pipenv命令合集.md"},key:"v-3cc188f4",path:"/blogs/notes/pipenvminglingheji.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],content:"\r\npipenv命令合集。\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## pipenv指南\r\n\r\n### 特点\r\n\r\n- 不需要再维护requirements.txt，用pipfile和pipfile.lock\r\n- 兼容多个python版本\r\n\r\n### 安装\r\n\r\n```sh\r\npip install pipenv\r\n```\r\n\r\n### 常用命令\r\n\r\n```\r\n# 安装包\r\npipenv install\r\n# pipenv install flask\r\n\r\n# 激活当前项目的虚拟环境\r\npipenv shell\r\n\r\n# 安装开发依赖包\r\npipenv install pytest --dev\r\n\r\n# 图形显示包依赖关系\r\npipenv graph\r\n\r\n# 生成lockfile\r\npipenv lock\r\n\r\n# 删除所有的安装包\r\npipenv uninstall --all\r\n```\r\n\r\n",contentRendered:'<p>pipenv命令合集。</p>\n\x3c!-- more --\x3e\n<h2 id="pipenv指南" tabindex="-1"><a class="header-anchor" href="#pipenv指南" aria-hidden="true">#</a> pipenv指南</h2>\n<h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3>\n<ul>\n<li>不需要再维护requirements.txt，用pipfile和pipfile.lock</li>\n<li>兼容多个python版本</li>\n</ul>\n<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>pip <span class="token function">install</span> pipenv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 安装包\npipenv install\n# pipenv install flask\n\n# 激活当前项目的虚拟环境\npipenv shell\n\n# 安装开发依赖包\npipenv install pytest --dev\n\n# 图形显示包依赖关系\npipenv graph\n\n# 生成lockfile\npipenv lock\n\n# 删除所有的安装包\npipenv uninstall --all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/pipenv命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"pipenv命令合集"},slug:"pipenv命令合集",filePath:"/root/blog/blogs/notes/pipenv命令合集.md",filePathRelative:"blogs/notes/pipenv命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.vue",componentFileChunkName:"v-3cc188f4",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.js",dataFileChunkName:"v-3cc188f4",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/pipenv命令合集.html",htmlFilePathRelative:"blogs/notes/pipenv命令合集.html"},{data:{key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],git:{},filePathRelative:"blogs/tech/Eslint.md"},key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],content:"## ESlint\r\n\r\n**ESlint有很多种安装方式，不过我建议大家是采用`npm`方式来熟悉**\r\n\r\n**当然不止ESlint这一种静态分析工具，各有所爱罢了**\r\n\r\n### **配置**\r\n\r\nESlint不是项目的必要依赖项，**仅仅是开发环境需要用到.**\r\n\r\n```shell\r\nnpm install eslint --save-dev\r\n\r\n// 安装成功后，初始化默认的ESlint\r\nnode_modules/.bin/eslint --init\r\n```\r\n\r\n该配置会保存到`.eslintrc.js`文件\r\n\r\n```javascript\r\nmodule.exports = {\r\n    'env': {\r\n        'commonjs': true,\r\n        'es2021': true,\r\n        'node': true\r\n    },\r\n    'extends': 'eslint:recommended',\r\n    'parserOptions': {\r\n        'ecmaVersion': 12\r\n    },\r\n    'rules': {\r\n        'indent': [\r\n            'error',\r\n            4\r\n        ],\r\n        'linebreak-style': [\r\n            'error',\r\n            'unix'\r\n        ],\r\n        'quotes': [\r\n            'error',\r\n            'single'\r\n        ],\r\n        'semi': [\r\n            'error',\r\n            'never'\r\n        ],\r\n        'eqeqeq': 'error',\r\n        'no-trailing-spaces': 'error',\r\n        'object-curly-spacing': [\r\n            'error', 'always'\r\n        ],\r\n        'arrow-spacing': [\r\n            'error', { 'before': true, 'after': true }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n**更改缩进级别为两个空格**\r\n\r\n```json\r\n\"indent\": [\r\n    \"error\",\r\n    2\r\n],\r\n```\r\n\r\n**使用`ESlint`检查可以用以下命令或者配置一个`npm`脚本**\r\n\r\n```\r\nnode_modules/.bin/eslint index.js\r\n```\r\n\r\n脚本\r\n\r\n```json\r\n{\r\n  // ...\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    // ...\r\n    \"lint\": \"eslint .\"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n`npm run build`会检查项目中的每一个文件，**我们并不希望一些文件被检查**\r\n\r\n**根目录新建一个`.eslintignore`文件**\r\n\r\n```shell\r\nbuild\r\n// 或者不需要检查的\r\n```\r\n\r\n**我们配置好之后自然是完善一套规则**\r\n\r\n**增加`eqeqeq`规则，除了三个相等号之外，相等要被检查。规则在`rules`字段下添加**\r\n\r\n```json\r\n{\r\n  // ...\r\n  'rules': {\r\n    // ...\r\n   'eqeqeq': 'error',\r\n    // 比如避免不必要的拖尾空格，大括号之间有一个空格等等\r\n      'no-trailing-spaces': 'error',\r\n    'object-curly-spacing': [\r\n        'error', 'always'\r\n    ],\r\n    'arrow-spacing': [\r\n        'error', { 'before': true, 'after': true }\r\n    ]\r\n  },\r\n    // 警告不出现在控制台。\r\n    'no-console': 0\r\n}\r\n```\r\n\r\n**还有其他的流行规则风范比如[Airbnb](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb)**\r\n\r\n",contentRendered:'<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESlint</h2>\n<p><strong>ESlint有很多种安装方式，不过我建议大家是采用<code>npm</code>方式来熟悉</strong></p>\n<p><strong>当然不止ESlint这一种静态分析工具，各有所爱罢了</strong></p>\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <strong>配置</strong></h3>\n<p>ESlint不是项目的必要依赖项，<strong>仅仅是开发环境需要用到.</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev\n\n// 安装成功后，初始化默认的ESlint\nnode_modules/.bin/eslint --init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该配置会保存到<code>.eslintrc.js</code>文件</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'env\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'commonjs\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'es2021\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'node\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'extends\'</span><span class="token operator">:</span> <span class="token string">\'eslint:recommended\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'parserOptions\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'ecmaVersion\'</span><span class="token operator">:</span> <span class="token number">12</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'rules\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'indent\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token number">4</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'linebreak-style\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'unix\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'quotes\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'single\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'semi\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'never\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'eqeqeq\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'no-trailing-spaces\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'object-curly-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'always\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'arrow-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">\'before\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">\'after\'</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>更改缩进级别为两个空格</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"error"</span><span class="token punctuation">,</span>\n    <span class="token number">2</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用<code>ESlint</code>检查可以用以下命令或者配置一个<code>npm</code>脚本</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>node_modules/.bin/eslint index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>脚本</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node index.js"</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint ."</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>npm run build</code>会检查项目中的每一个文件，<strong>我们并不希望一些文件被检查</strong></p>\n<p><strong>根目录新建一个<code>.eslintignore</code>文件</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>build\n// 或者不需要检查的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>我们配置好之后自然是完善一套规则</strong></p>\n<p><strong>增加<code>eqeqeq</code>规则，除了三个相等号之外，相等要被检查。规则在<code>rules</code>字段下添加</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  \'rules\'<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n   \'eqeqeq\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    <span class="token comment">// 比如避免不必要的拖尾空格，大括号之间有一个空格等等</span>\n      \'no-trailing-spaces\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    \'object-curly-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> \'always\'\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \'arrow-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> <span class="token punctuation">{</span> \'before\'<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> \'after\'<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 警告不出现在控制台。</span>\n    \'no-console\'<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>还有其他的流行规则风范比如<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb" target="_blank" rel="noopener noreferrer">Airbnb<ExternalLinkIcon/></a></strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Eslint.html",pathLocale:"/",permalink:null,routeMeta:{title:"Eslint项目配置"},slug:"Eslint",filePath:"/root/blog/blogs/tech/Eslint.md",filePathRelative:"blogs/tech/Eslint.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.vue",componentFilePathRelative:"pages/blogs/tech/Eslint.html.vue",componentFileChunkName:"v-21adab26",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.js",dataFilePathRelative:"pages/blogs/tech/Eslint.html.js",dataFileChunkName:"v-21adab26",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Eslint.html",htmlFilePathRelative:"blogs/tech/Eslint.html"},{data:{key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],git:{},filePathRelative:"blogs/tech/npm.md"},key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],content:'## NodeJS\r\n\r\n几乎所有的JavaScript项目都是使用node包管理器定义的，也就是`npm`\r\n\r\n使用`npm`的一个明确说明是位于项目根目录的`package.json`\r\n\r\n```shell\r\nnpm install axios\r\nnpm install json-server --save-dev\r\n```\r\n\r\n**参数间有差别，`axios`被安装为应用的运行时依赖项`--save`,程序本身需要库的存在，另一个`json-server`是作为开发依赖项`--save-dev`,程序本身不需要它。**\r\n\r\n### Init\r\n\r\n```shell\r\nnpm init\r\n// 定义\r\n{\r\n  // ...\r\n  "scripts": {\r\n    "start": "node index.js",\r\n    "test": "echo \\"Error: no test specified\\" && exit 1"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n> 生成`package.json`文件\r\n\r\n```shell\r\n"express": "^4.17.1"\r\n// ^:安装版本至少为4.17.1\r\n```\r\n\r\n### nodemon\r\n\r\n```\r\nnpm install --save-dev nodemon\r\n```\r\n\r\n**热加载,同时在`package.json`中添加一个`dev`命令`nodemon xxx.js`**\r\n\r\n`npm run dev`\r\n\r\n',contentRendered:'<h2 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> NodeJS</h2>\n<p>几乎所有的JavaScript项目都是使用node包管理器定义的，也就是<code>npm</code></p>\n<p>使用<code>npm</code>的一个明确说明是位于项目根目录的<code>package.json</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios\n<span class="token function">npm</span> <span class="token function">install</span> json-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>参数间有差别，<code>axios</code>被安装为应用的运行时依赖项<code>--save</code>,程序本身需要库的存在，另一个<code>json-server</code>是作为开发依赖项<code>--save-dev</code>,程序本身不需要它。</strong></p>\n<h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> Init</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> init\n// 定义\n<span class="token punctuation">{</span>\n  // <span class="token punctuation">..</span>.\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"start"</span><span class="token builtin class-name">:</span> <span class="token string">"node index.js"</span>,\n    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\\&quot;">\\"</span>Error: no test specified<span class="token entity" title="\\&quot;">\\"</span> &amp;&amp; exit 1"</span>\n  <span class="token punctuation">}</span>,\n  // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote>\n<p>生成<code>package.json</code>文件</p>\n</blockquote>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">"express"</span><span class="token builtin class-name">:</span> <span class="token string">"^4.17.1"</span>\n// ^:安装版本至少为4.17.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm install --save-dev nodemon\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>热加载,同时在<code>package.json</code>中添加一个<code>dev</code>命令<code>nodemon xxx.js</code></strong></p>\n<p><code>npm run dev</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/npm.html",pathLocale:"/",permalink:null,routeMeta:{title:"npm基础"},slug:"npm",filePath:"/root/blog/blogs/tech/npm.md",filePathRelative:"blogs/tech/npm.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.vue",componentFilePathRelative:"pages/blogs/tech/npm.html.vue",componentFileChunkName:"v-008bc010",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.js",dataFilePathRelative:"pages/blogs/tech/npm.html.js",dataFileChunkName:"v-008bc010",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/npm.html",htmlFilePathRelative:"blogs/tech/npm.html"},{data:{key:"v-7a078505",path:"/docs/monthly/ios15.html",title:"ios15隐私洞见",lang:"en-US",frontmatter:{title:"ios15隐私洞见",date:"2021/07/01"},excerpt:"",headers:[{level:2,title:"后台自启动",slug:"后台自启动",children:[]}],git:{},filePathRelative:"docs/monthly/ios15.md"},key:"v-7a078505",path:"/docs/monthly/ios15.html",title:"ios15隐私洞见",lang:"en-US",frontmatter:{title:"ios15隐私洞见",date:"2021/07/01"},excerpt:"",headers:[{level:2,title:"后台自启动",slug:"后台自启动",children:[]}],content:"\r\n## 后台自启动\r\n\r\n**后台自启动不是什么黑魔法了，只是手段比较脏。**\r\n\r\n**iOS 有个 api 是后台定位的，在退出之后仍然可以注册一个服务。**\r\n\r\n**然后还有另外一个 api 是可以申请一下后台任务运行时间，大概 10 分钟左右。原本是让开发者用来在耗时的任务时用户退出后可以继续处理的。**\r\n\r\n**结果两个互相配合一下就可以在后台无限运行。**\r\n",contentRendered:'<h2 id="后台自启动" tabindex="-1"><a class="header-anchor" href="#后台自启动" aria-hidden="true">#</a> 后台自启动</h2>\n<p><strong>后台自启动不是什么黑魔法了，只是手段比较脏。</strong></p>\n<p><strong>iOS 有个 api 是后台定位的，在退出之后仍然可以注册一个服务。</strong></p>\n<p><strong>然后还有另外一个 api 是可以申请一下后台任务运行时间，大概 10 分钟左右。原本是让开发者用来在耗时的任务时用户退出后可以继续处理的。</strong></p>\n<p><strong>结果两个互相配合一下就可以在后台无限运行。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/ios15.html",pathLocale:"/",permalink:null,routeMeta:{title:"ios15隐私洞见"},slug:"ios15",filePath:"/root/blog/docs/monthly/ios15.md",filePathRelative:"docs/monthly/ios15.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/ios15.html.vue",componentFilePathRelative:"pages/docs/monthly/ios15.html.vue",componentFileChunkName:"v-7a078505",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/ios15.html.js",dataFilePathRelative:"pages/docs/monthly/ios15.html.js",dataFileChunkName:"v-7a078505",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/ios15.html",htmlFilePathRelative:"docs/monthly/ios15.html"},{data:{key:"v-be6a684a",path:"/docs/monthly/crypto.html",title:"Blockchain",lang:"en-US",frontmatter:{title:"Blockchain",date:"2021/06/12"},excerpt:"",headers:[{level:2,title:"Crypto",slug:"crypto",children:[]}],git:{},filePathRelative:"docs/monthly/crypto.md"},key:"v-be6a684a",path:"/docs/monthly/crypto.html",title:"Blockchain",lang:"en-US",frontmatter:{title:"Blockchain",date:"2021/06/12"},excerpt:"",headers:[{level:2,title:"Crypto",slug:"crypto",children:[]}],content:'## Crypto\r\n\r\n这里记录一下。\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210331175515.png" style="zoom: 67%;" />\r\n\r\n![](https://raw.githubusercontent.com/googidaddy/img/master/1617184546(1).png)\r\n\r\n![](https://raw.githubusercontent.com/googidaddy/img/master/20210331175603.png)\r\n\r\n**7天历程(从24-31），一共5000的资金进场。**',contentRendered:'<h2 id="crypto" tabindex="-1"><a class="header-anchor" href="#crypto" aria-hidden="true">#</a> Crypto</h2>\n<p>这里记录一下。</p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210331175515.png" style="zoom: 67%;" />\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/1617184546(1).png" alt=""></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210331175603.png" alt=""></p>\n<p><strong>7天历程(从24-31），一共5000的资金进场。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/crypto.html",pathLocale:"/",permalink:null,routeMeta:{title:"Blockchain"},slug:"crypto",filePath:"/root/blog/docs/monthly/crypto.md",filePathRelative:"docs/monthly/crypto.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/crypto.html.vue",componentFilePathRelative:"pages/docs/monthly/crypto.html.vue",componentFileChunkName:"v-be6a684a",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/crypto.html.js",dataFilePathRelative:"pages/docs/monthly/crypto.html.js",dataFileChunkName:"v-be6a684a",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/crypto.html",htmlFilePathRelative:"docs/monthly/crypto.html"},{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"},{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"},{data:{key:"v-7f7426c5",path:"/blogs/tech/%E6%8D%A2%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%8B%E5%A5%BD%E7%9A%84%E5%AD%97%E4%BD%93.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],git:{},filePathRelative:"blogs/tech/换一个程序员友好的字体.md"},key:"v-7f7426c5",path:"/blogs/tech/huanyigechengxuyuanyouhaodeziti.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],content:"\r\n**介绍一个对程序员比较舒服的字体**\r\n\r\n## 使用\r\n\r\n先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装\r\n\r\n然后开启IDE（比如VS CODE）调到设置或者`ctrl + ,`快捷打开设置 \r\n\r\n![image-20210328231737883](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png)\r\n\r\n**添加完没有生效，请重新打开IDE**\r\n\r\n## JetBrains Mono \r\n\r\n**一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的**\r\n\r\n**当然对于一些视力或者别的爱好~~粗~~的人选择Extra Bold**\r\n\r\n![image-20210328231517174](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png)\r\n\r\n## Cascadia Code\r\n\r\n具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点",contentRendered:'<p><strong>介绍一个对程序员比较舒服的字体</strong></p>\n<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装</p>\n<p>然后开启IDE（比如VS CODE）调到设置或者<code>ctrl + ,</code>快捷打开设置</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png" alt="image-20210328231737883"></p>\n<p><strong>添加完没有生效，请重新打开IDE</strong></p>\n<h2 id="jetbrains-mono" tabindex="-1"><a class="header-anchor" href="#jetbrains-mono" aria-hidden="true">#</a> JetBrains Mono</h2>\n<p><strong>一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的</strong></p>\n<p><strong>当然对于一些视力或者别的爱好<s>粗</s>的人选择Extra Bold</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png" alt="image-20210328231517174"></p>\n<h2 id="cascadia-code" tabindex="-1"><a class="header-anchor" href="#cascadia-code" aria-hidden="true">#</a> Cascadia Code</h2>\n<p>具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/换一个程序员友好的字体.html",pathLocale:"/",permalink:null,routeMeta:{title:"对程序员友好的字体"},slug:"换一个程序员友好的字体",filePath:"/root/blog/blogs/tech/换一个程序员友好的字体.md",filePathRelative:"blogs/tech/换一个程序员友好的字体.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFileChunkName:"v-7f7426c5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.js",dataFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.js",dataFileChunkName:"v-7f7426c5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/换一个程序员友好的字体.html",htmlFilePathRelative:"blogs/tech/换一个程序员友好的字体.html"},{data:{key:"v-08e31ac5",path:"/blogs/tech/%E7%BA%A2%E7%B1%B3AC2100%E5%88%B7%E6%9C%BA.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],git:{},filePathRelative:"blogs/tech/红米AC2100刷机.md"},key:"v-08e31ac5",path:"/blogs/tech/hongmiAC2100shuaji.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],content:"\r\n**从恩山那里学习总结过来的，单刀直入。[感谢大大](http://openwrt.ink:88/archives/s-breed)**\r\n\r\n\r\n\r\n## 前期准备\r\n\r\n[红米AC2100-2.0.7固件](http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin)\r\n\r\n[Padavan固件-下载redmi211.trx](http://openwrt.ink:8666/Padavan/)\r\n\r\nXShell（自行下载）\r\n\r\n> **如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代**\r\n\r\n**红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了**\r\n\r\n**本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪**\r\n\r\n\r\n\r\n## 开始\r\n\r\n综合步骤如果看不懂可以参考[此视频](https://www.bilibili.com/video/BV1Zf4y1v74o)\r\n\r\n**首先登录进[路由器管理地址](192.168.31.1)**\r\n\r\n**点系统状态，手动升级，升级红米ac2100-2.0.7固件**\r\n\r\n**等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址**\r\n\r\n**此时地址会变为**`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/web/home#router`\r\n\r\n复制下来`<STOK>`\r\n\r\n替换stok`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/api/misystem/set_config_iotdev?bssid=Xiaomi&user_id=longdike&ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B` \r\n\r\n**然后将网址复制下来粘贴网页打开，会显示`\"code\":0`代表成功**\r\n\r\n打开xshell，连接`192.168.31.1` 用户名为`root` 密码`admin`\r\n\r\n**直接输入一下命令刷入Breed，并等待20s**\r\n\r\n```\r\ncd /tmp && wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n\r\n或者下面命令：\r\ncd /tmp && wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n```\r\n\r\n**正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）**\r\n\r\n**路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入`192.168.1.1`进入breed**\r\n\r\n**找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存**\r\n\r\n**点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面**\r\n\r\n**开启5G频道->160HZ，冲冲冲**\r\n\r\n",contentRendered:'<p><strong>从恩山那里学习总结过来的，单刀直入。<a href="http://openwrt.ink:88/archives/s-breed" target="_blank" rel="noopener noreferrer">感谢大大<ExternalLinkIcon/></a></strong></p>\n<h2 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h2>\n<p><a href="http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin" target="_blank" rel="noopener noreferrer">红米AC2100-2.0.7固件<ExternalLinkIcon/></a></p>\n<p><a href="http://openwrt.ink:8666/Padavan/" target="_blank" rel="noopener noreferrer">Padavan固件-下载redmi211.trx<ExternalLinkIcon/></a></p>\n<p>XShell（自行下载）</p>\n<blockquote>\n<p><strong>如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代</strong></p>\n</blockquote>\n<p><strong>红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了</strong></p>\n<p><strong>本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪</strong></p>\n<h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2>\n<p>综合步骤如果看不懂可以参考<a href="https://www.bilibili.com/video/BV1Zf4y1v74o" target="_blank" rel="noopener noreferrer">此视频<ExternalLinkIcon/></a></p>\n<p><strong>首先登录进<a href="192.168.31.1">路由器管理地址</a></strong></p>\n<p><strong>点系统状态，手动升级，升级红米ac2100-2.0.7固件</strong></p>\n<p><strong>等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址</strong></p>\n<p><strong>此时地址会变为</strong><code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</code></p>\n<p>复制下来<code>&lt;STOK&gt;</code></p>\n<p>替换stok<code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20\'s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg\'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</code></p>\n<p><strong>然后将网址复制下来粘贴网页打开，会显示<code>&quot;code&quot;:0</code>代表成功</strong></p>\n<p>打开xshell，连接<code>192.168.31.1</code> 用户名为<code>root</code> 密码<code>admin</code></p>\n<p><strong>直接输入一下命令刷入Breed，并等待20s</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n\n或者下面命令：\ncd /tmp &amp;&amp; wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）</strong></p>\n<p><strong>路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入<code>192.168.1.1</code>进入breed</strong></p>\n<p><strong>找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存</strong></p>\n<p><strong>点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面</strong></p>\n<p><strong>开启5G频道-&gt;160HZ，冲冲冲</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/红米AC2100刷机.html",pathLocale:"/",permalink:null,routeMeta:{title:"红米AC2100刷机"},slug:"红米AC2100刷机",filePath:"/root/blog/blogs/tech/红米AC2100刷机.md",filePathRelative:"blogs/tech/红米AC2100刷机.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.vue",componentFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.vue",componentFileChunkName:"v-08e31ac5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.js",dataFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.js",dataFileChunkName:"v-08e31ac5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/红米AC2100刷机.html",htmlFilePathRelative:"blogs/tech/红米AC2100刷机.html"},{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"},{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-54860d63",path:"/blogs/notes/clash%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],git:{},filePathRelative:"blogs/notes/clash使用技巧.md"},key:"v-54860d63",path:"/blogs/notes/clashshiyongjiqiao.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],content:'\r\n**clash基本操作指南，（~~基于有机场的~~）阅读本文1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## install\r\n\r\n[官方下载连接](https://github.com/Fndroid/clash_for_windows_pkg/releases)\r\n\r\n**下载好后，打开clash**\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\r\n\r\n**建议下载你~~机场~~的profile，然后import导入，点一下profile启用**\r\n\r\n## Tips\r\n\r\n![profile](https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png)\r\n\r\n**国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode->rule**\r\n\r\n**或者**\r\n\r\n![open](https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png)\r\n\r\n**我不建议把其他流量设置为国外流量，我会解释为什么这样做**\r\n\r\n**[谷歌商店搜索安装switchyomega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon)**\r\n\r\n**比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png)\r\n\r\n**回到我们clash的Profiles界面，选择下图这个**\r\n\r\n![profiles](https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png)\r\n\r\n- 选择添加ADD\r\n\r\n  ![add](https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png)\r\n\r\n- content 写入`hupu.com`,  type选择 `DOMAIN-SUFFIX` , Proxy选择 `Direct`\r\n\r\n**当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择`Direct`，如果遇到别的网站需要代理的，选择`国外流量`即可**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png)\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理**\r\n\r\n## 最后\r\n\r\n**为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的**',contentRendered:'<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>\n<p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">官方下载连接<ExternalLinkIcon/></a></p>\n<p><strong>下载好后，打开clash</strong></p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\n<p><strong>建议下载你<s>机场</s>的profile，然后import导入，点一下profile启用</strong></p>\n<h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png" alt="profile"></p>\n<p><strong>国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode-&gt;rule</strong></p>\n<p><strong>或者</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png" alt="open"></p>\n<p><strong>我不建议把其他流量设置为国外流量，我会解释为什么这样做</strong></p>\n<p><strong><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">谷歌商店搜索安装switchyomega<ExternalLinkIcon/></a></strong></p>\n<p><strong>比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png" alt="hupu"></p>\n<p><strong>回到我们clash的Profiles界面，选择下图这个</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png" alt="profiles"></p>\n<ul>\n<li>\n<p>选择添加ADD</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png" alt="add"></p>\n</li>\n<li>\n<p>content 写入<code>hupu.com</code>,  type选择 <code>DOMAIN-SUFFIX</code> , Proxy选择 <code>Direct</code></p>\n</li>\n</ul>\n<p><strong>当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择<code>Direct</code>，如果遇到别的网站需要代理的，选择<code>国外流量</code>即可</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png" alt="hupu"></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理</strong></p>\n<h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2>\n<p><strong>为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/clash使用技巧.html",pathLocale:"/",permalink:null,routeMeta:{title:"clash使用技巧"},slug:"clash使用技巧",filePath:"/root/blog/blogs/notes/clash使用技巧.md",filePathRelative:"blogs/notes/clash使用技巧.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.vue",componentFilePathRelative:"pages/blogs/notes/clash使用技巧.html.vue",componentFileChunkName:"v-54860d63",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.js",dataFilePathRelative:"pages/blogs/notes/clash使用技巧.html.js",dataFileChunkName:"v-54860d63",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/clash使用技巧.html",htmlFilePathRelative:"blogs/notes/clash使用技巧.html"},{data:{key:"v-5264f4b9",path:"/docs/monthly/week1.html",title:"记录第一个周刊",lang:"en-US",frontmatter:{title:"记录第一个周刊",date:"2021/03/18"},excerpt:"",headers:[{level:3,title:"感觉不太强的 eth",slug:"感觉不太强的-eth",children:[]},{level:3,title:"写毕设",slug:"写毕设",children:[]},{level:3,title:"修复工具 Bug",slug:"修复工具-bug",children:[]},{level:3,title:"写作工具",slug:"写作工具",children:[]},{level:3,title:"心理理疗",slug:"心理理疗",children:[]},{level:3,title:"我干了什么？",slug:"我干了什么",children:[]},{level:3,title:"推荐的工具",slug:"推荐的工具",children:[]}],git:{},filePathRelative:"docs/monthly/week1.md"},key:"v-5264f4b9",path:"/docs/monthly/week1.html",title:"记录第一个周刊",lang:"en-US",frontmatter:{title:"记录第一个周刊",date:"2021/03/18"},excerpt:"",headers:[{level:3,title:"感觉不太强的 eth",slug:"感觉不太强的-eth",children:[]},{level:3,title:"写毕设",slug:"写毕设",children:[]},{level:3,title:"修复工具 Bug",slug:"修复工具-bug",children:[]},{level:3,title:"写作工具",slug:"写作工具",children:[]},{level:3,title:"心理理疗",slug:"心理理疗",children:[]},{level:3,title:"我干了什么？",slug:"我干了什么",children:[]},{level:3,title:"推荐的工具",slug:"推荐的工具",children:[]}],content:"\n![舒服的](https://raw.githubusercontent.com/googidaddy/img/master/2022/julie-fader-1KWncoLB1V8-unsplash.jpeg)简单缓慢的日子逐渐是一种奢求，有些景物想过不曾去过，怕是以后都见不着了，小目标--去日本望着行人发呆一下午！(图源：unsplash)\n\n---\n\n#### 记录活动的周刊。\n\n- 购买 ETH\n- 写毕设\n- 修复工具 Bug\n- 使用 logseq 和 obsidian\n- 心理理疗\n\n### 感觉不太强的 eth\n\n最近播客都在说 crypto，听了 NFT、以太坊相关，感觉现在入场 NFT 不合适（个人觉得～），加上马上 pow 转 pos 的消息，果真今日测试网 pos 成功了，得亏上两周都在买 ETH。\n\n![嗷嗷](https://raw.githubusercontent.com/googidaddy/img/master/2022/20220318172634.png)\n\n以太坊自 17 年以来的重大事件，简单来说就是以后不靠显卡挖矿了。\n\n### 写毕设\n\n我的毕设比较简单，用 ESP-32CAM 这个单片机做一个监控系统，通信协议采用 MQTT，在答辩前的一两个星期做完，水完论文就行了。我并不喜欢天马行空，给自己加很多莫须有的需求，这样不 cool，反而自己焦虑更多。\n\n说到毕设，大学四年一路走来，我似乎没能做到像别人博客写的人生那么精彩，平平淡淡，牵过小手手，也玩过游戏，也疯狂运动过，但是似乎一直处在信息茧房，直到大二开始我才学会富强走出国内，但是好巧不巧，偏偏让我受到了 sneaker 的熏陶，大二大三一直在倒腾国外的鞋子到国内卖，一度认为自己可能是破圈了，优越感满满，开始逃课、不上课，日夜专注于扫货，最后被 2020 疫情打击的体无完肤，最后幸好盈利一笔，金额不是很多。收手之后颓靡了一段时间，感觉捡了芝麻丢了西瓜。再之后有时间再专门出一刊来写总结，我觉得定下目标其实挺好，起码总得执行。\n\n### 修复工具 Bug\n\n我[仓库](https://github.com/googidaddy/bili_upload_tool)里有一些小项目，都是有意思的工具。这个是搬运视频到 Bilibili 的工具，最近收到风声，b 站开始大范围清除劣质搬运工账号，个人还是怕被查水表的。起初做这个工具的时候，没啥人用，自己转的视频最高播放量不破 5k，很多时候在完善和维护这个工具时，心里不断质问自己，为啥要这么受苦受累？随着 star 项目的人越来越多，提 issue 的人也有了后，成就感就来了。\n\n项目你不靠宣传，光靠“酒香不怕巷子深”、“是金子总会发光”是很难的，身心折磨。要找对地方去宣传，一方面了解更多不知道的需求，另一方面获得别人的评价。所以我跑到各大搬运群，先混个脸熟，时不时甩出项目链接，礼貌点、脸皮厚是成功之路哈哈哈哈。\n\n### 写作工具\n\n虽然我文笔并不是很精彩，逻辑表达的也没有让人感觉想拍手称好，但是我相信我跟大牛用的一样的工具，迟早会变成大牛。\n\n`logseq`还没体验，[推荐这个视频](https://www.youtube.com/watch?v=DxoGJBb1mWQ&list=WL&index=1&t=226s) 讲的很好～\n\n`obsidian` 是写这篇文章的工具，好用的地方我不清楚，但是起码会舒心一点，日后可能转 logseq 概率很大。这个作为 Wiki 工具可能更合适\n\n### 心理理疗\n\n偶然间，发现有很多心理理疗的讲座可以参加，过去大家可能会忽视，但是现在心理健康确实是年轻人的主要问题。**由于我不是心理医生，我只会建议大家关注自己的心理健康**\n\n### 我干了什么？\n\n**播客**\n\n- 听了`从零道1`的播客，感觉还不错，主要听了 EN 部分。\n\n**文章**\n\n- 了解区块链\n- ios 开发\n\n剪辑视频\n\n- 学会了`final cut`剪辑视频，m1 太强大了，等的时间都不给。\n\n### 推荐的工具\n\n- [Burning Vocabulary](https://chrome.google.com/webstore/detail/burning-vocabulary-highli/ljfjnlcnpmabfcgcmffkmgainghokdpl/related): 网页选取单词翻译，学习伴侣，可以记录单词、生词，通过每天邮件提醒生词的好工具。\n",contentRendered:'<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/2022/julie-fader-1KWncoLB1V8-unsplash.jpeg" alt="舒服的">简单缓慢的日子逐渐是一种奢求，有些景物想过不曾去过，怕是以后都见不着了，小目标--去日本望着行人发呆一下午！(图源：unsplash)</p>\n<hr>\n<h4 id="记录活动的周刊。" tabindex="-1"><a class="header-anchor" href="#记录活动的周刊。" aria-hidden="true">#</a> 记录活动的周刊。</h4>\n<ul>\n<li>购买 ETH</li>\n<li>写毕设</li>\n<li>修复工具 Bug</li>\n<li>使用 logseq 和 obsidian</li>\n<li>心理理疗</li>\n</ul>\n<h3 id="感觉不太强的-eth" tabindex="-1"><a class="header-anchor" href="#感觉不太强的-eth" aria-hidden="true">#</a> 感觉不太强的 eth</h3>\n<p>最近播客都在说 crypto，听了 NFT、以太坊相关，感觉现在入场 NFT 不合适（个人觉得～），加上马上 pow 转 pos 的消息，果真今日测试网 pos 成功了，得亏上两周都在买 ETH。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/2022/20220318172634.png" alt="嗷嗷"></p>\n<p>以太坊自 17 年以来的重大事件，简单来说就是以后不靠显卡挖矿了。</p>\n<h3 id="写毕设" tabindex="-1"><a class="header-anchor" href="#写毕设" aria-hidden="true">#</a> 写毕设</h3>\n<p>我的毕设比较简单，用 ESP-32CAM 这个单片机做一个监控系统，通信协议采用 MQTT，在答辩前的一两个星期做完，水完论文就行了。我并不喜欢天马行空，给自己加很多莫须有的需求，这样不 cool，反而自己焦虑更多。</p>\n<p>说到毕设，大学四年一路走来，我似乎没能做到像别人博客写的人生那么精彩，平平淡淡，牵过小手手，也玩过游戏，也疯狂运动过，但是似乎一直处在信息茧房，直到大二开始我才学会富强走出国内，但是好巧不巧，偏偏让我受到了 sneaker 的熏陶，大二大三一直在倒腾国外的鞋子到国内卖，一度认为自己可能是破圈了，优越感满满，开始逃课、不上课，日夜专注于扫货，最后被 2020 疫情打击的体无完肤，最后幸好盈利一笔，金额不是很多。收手之后颓靡了一段时间，感觉捡了芝麻丢了西瓜。再之后有时间再专门出一刊来写总结，我觉得定下目标其实挺好，起码总得执行。</p>\n<h3 id="修复工具-bug" tabindex="-1"><a class="header-anchor" href="#修复工具-bug" aria-hidden="true">#</a> 修复工具 Bug</h3>\n<p>我<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">仓库<ExternalLinkIcon/></a>里有一些小项目，都是有意思的工具。这个是搬运视频到 Bilibili 的工具，最近收到风声，b 站开始大范围清除劣质搬运工账号，个人还是怕被查水表的。起初做这个工具的时候，没啥人用，自己转的视频最高播放量不破 5k，很多时候在完善和维护这个工具时，心里不断质问自己，为啥要这么受苦受累？随着 star 项目的人越来越多，提 issue 的人也有了后，成就感就来了。</p>\n<p>项目你不靠宣传，光靠“酒香不怕巷子深”、“是金子总会发光”是很难的，身心折磨。要找对地方去宣传，一方面了解更多不知道的需求，另一方面获得别人的评价。所以我跑到各大搬运群，先混个脸熟，时不时甩出项目链接，礼貌点、脸皮厚是成功之路哈哈哈哈。</p>\n<h3 id="写作工具" tabindex="-1"><a class="header-anchor" href="#写作工具" aria-hidden="true">#</a> 写作工具</h3>\n<p>虽然我文笔并不是很精彩，逻辑表达的也没有让人感觉想拍手称好，但是我相信我跟大牛用的一样的工具，迟早会变成大牛。</p>\n<p><code>logseq</code>还没体验，<a href="https://www.youtube.com/watch?v=DxoGJBb1mWQ&amp;list=WL&amp;index=1&amp;t=226s" target="_blank" rel="noopener noreferrer">推荐这个视频<ExternalLinkIcon/></a> 讲的很好～</p>\n<p><code>obsidian</code> 是写这篇文章的工具，好用的地方我不清楚，但是起码会舒心一点，日后可能转 logseq 概率很大。这个作为 Wiki 工具可能更合适</p>\n<h3 id="心理理疗" tabindex="-1"><a class="header-anchor" href="#心理理疗" aria-hidden="true">#</a> 心理理疗</h3>\n<p>偶然间，发现有很多心理理疗的讲座可以参加，过去大家可能会忽视，但是现在心理健康确实是年轻人的主要问题。<strong>由于我不是心理医生，我只会建议大家关注自己的心理健康</strong></p>\n<h3 id="我干了什么" tabindex="-1"><a class="header-anchor" href="#我干了什么" aria-hidden="true">#</a> 我干了什么？</h3>\n<p><strong>播客</strong></p>\n<ul>\n<li>听了<code>从零道1</code>的播客，感觉还不错，主要听了 EN 部分。</li>\n</ul>\n<p><strong>文章</strong></p>\n<ul>\n<li>了解区块链</li>\n<li>ios 开发</li>\n</ul>\n<p>剪辑视频</p>\n<ul>\n<li>学会了<code>final cut</code>剪辑视频，m1 太强大了，等的时间都不给。</li>\n</ul>\n<h3 id="推荐的工具" tabindex="-1"><a class="header-anchor" href="#推荐的工具" aria-hidden="true">#</a> 推荐的工具</h3>\n<ul>\n<li><a href="https://chrome.google.com/webstore/detail/burning-vocabulary-highli/ljfjnlcnpmabfcgcmffkmgainghokdpl/related" target="_blank" rel="noopener noreferrer">Burning Vocabulary<ExternalLinkIcon/></a>: 网页选取单词翻译，学习伴侣，可以记录单词、生词，通过每天邮件提醒生词的好工具。</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/monthly/week1.html",pathLocale:"/",permalink:null,routeMeta:{title:"记录第一个周刊"},slug:"week1",filePath:"/root/blog/docs/monthly/week1.md",filePathRelative:"docs/monthly/week1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/week1.html.vue",componentFilePathRelative:"pages/docs/monthly/week1.html.vue",componentFileChunkName:"v-5264f4b9",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/monthly/week1.html.js",dataFilePathRelative:"pages/docs/monthly/week1.html.js",dataFileChunkName:"v-5264f4b9",htmlFilePath:"/root/blog/.vuepress/dist/docs/monthly/week1.html",htmlFilePathRelative:"docs/monthly/week1.html"},{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"},{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"},{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"},{data:{key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-notes-1.md"},key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],content:'\r\n**阅读本文大概需要10分钟**\r\n\x3c!-- more --\x3e\r\n\r\n**先认识代码变动和部分新特性**\r\n\r\n::: tip\r\n\r\n### 认识重要 API\r\n\r\n```javascript\r\nimport {\r\n    createApp,\t\t// 创建一个APP实例\r\n    onMounted,\t\t// 生命周期写法变了\r\n    computed,\t\t// 方法变了\r\n    watch,\t\t\t// 同上\r\n    watchEffect,\t// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行\r\n    reactive,\t\t// 传入一个普通对象返回一个响应式对象\r\n    ref,\t\t\t// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用\r\n    toRef,\t\t\t// 为一个reactive对象的属性创建一个ref\r\n    toRefs,\t\t\t// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _createApp_\r\n\r\n```javascript\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\ncreateApp(App).mount("#app");\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _onMounted_\r\n\r\n```javascript\r\nimport { onMounted, defineComponent } from "vue";\r\nexport default defineComponent({\r\n  setup() {\r\n    // 使用需要放在setup()里面\r\n    onMounted(() => {\r\n      console.log("冲冲冲");\r\n    });\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _computed_\r\n\r\n```javascript\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(1);\r\nconst result = computed(() => count.value + 1);\r\n// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象\r\n// 对象的话，是不是对象.value就很好理解下面为什么这样写了？\r\nconsole.log(result.value); // 2\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _watch_\r\n\r\n```javascript\r\nimport { reactive, watch } from "vue";\r\n\r\nconst state = reactive({ count: 0 });\r\n//reactive 接受一个普通对象，返回一个响应式对象\r\n// state已经是一个响应式对象了，所以取值就是对象.count\r\nwatch(\r\n  () => state.count,\r\n  (count, prevCount) => {\r\n    // todo\r\n  }\r\n);\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### :star: _reactive 单独使用情况_\r\n\r\n```javascript\r\nimport { reactive } from "vue";\r\n\r\nconst a = reactive({ count: 0 });\r\na.count++;\r\nconsole.log(a.count); // 1\r\n```\r\n\r\n#### :star2: 返回给组件形式一\r\n\r\n```javascript\r\n// 组件\r\n<template>\r\n    <p> {{ a.count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\n// 逻辑\r\nimport { reactive, defineComponent } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    return { a };\r\n  },\r\n});\r\n```\r\n\r\n#### _:star2:返回组件形式二 & toRefs_\r\n\r\n```javascript\r\n<template>\r\n  <p> {{ count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\nimport { reactive, defineComponent, toRefs } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    // toRefs把响应式对象转为普通对象\r\n    // 再解析一下就是，toRefs是一个解封过程，reactive是封装过程\r\n    return { ...toRefs(a) };\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _ref_\r\n\r\n```javascript\r\n// ref 接受一个参数，并返回一个响应式且可以改变的对象。\r\n// 同时ref拥有一个指向内部值得单一属性.value\r\n\r\nconst count = ref(0);\r\nconsole.log(count.value); // 0\r\n\r\ncount.value++;\r\nconsole.log(count.value); // 1\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _toRef_\r\n\r\n```javascript\r\nimport { defineComponent, toRef, reactive } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({\r\n      cow: 0,\r\n      bug: 1,\r\n    });\r\n    // toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)\r\n    const count = toRef(a, "cow");\r\n    // 相当于 const count = ref(0)\r\n    // count 已经是cow的响应式对象了，所以值是不是该？\r\n    count.value++; // 这时a.cow已经被改变了\r\n    console.log(a.cow); // 1\r\n    // 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？\r\n\r\n    a.cow++;\r\n    console.log(count.value); // 2\r\n    // 这里是不是能理解ref传递了？\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n# Vue3 整体纵览\r\n\r\n### 一、setup 函数\r\n\r\n​ **setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法**\r\n\r\n​ **Vue3 去掉了 data 返回的格式，统一再 setup 返回**\r\n\r\n​\r\n\r\n### 二、生命周期\r\n\r\n```\r\nsetup() {\r\n    onMounted(() => {\r\n      console.log(\'组件挂载\');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      console.log(\'组件卸载\');\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\'组件更新\');\r\n    });\r\n\r\n    onBeforeUpdate(() => {\r\n      console.log(\'组件将要更新\');\r\n    });\r\n\r\n    onActivated(() => {\r\n      console.log(\'keepAlive 组件 激活\');\r\n    });\r\n\r\n    onDeactivated(() => {\r\n      console.log(\'keepAlive 组件 非激活\');\r\n    });\r\n    return {};\r\n  },\r\n\r\n```\r\n\r\n### 三、vue-router\r\n\r\n```javascript\r\nimport { useRoute, useRouter } from "vue-router";\r\n\r\nconst route = useRoute(); // 相当于 vue2 中的this.$route\r\nconst router = useRouter(); // 相当于 vue2 中的this.$router\r\n\r\n// route   用于获取当前路由数据\r\n// router  用于路由跳转\r\n```\r\n\r\n### 四、vuex\r\n\r\n​ **注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应**\r\n\r\n```javascript\r\nimport {useStore} from \'vuex\'\r\n\r\nsetup(){\r\n    const store = useStore(); // 相当于 vue2中的 this.$store\r\n    store.dispatch(); // 通过store对象来dispatch 派发异步任务\r\n    store.commit(); // commit 修改store数据\r\n\r\n    let category = computed(() => store.state.home.currentCagegory\r\n    return { category }\r\n}\r\n\r\n```\r\n\r\n## vue-vite 搭建项目\r\n\r\n::: tip\r\n\r\n```javascript\r\n# 初始化项目\r\nnpm init vite-app vue3-composition-api-demo\r\n# 进入目录\r\ncd vue3-composition-api-demo\r\n# 安装依赖\r\nnpm install\r\n# 运行项目\r\nnpm run dev\r\n\r\n```\r\n\r\n:::\r\n\r\n### 五、setup()\r\n\r\n::: tip\r\nsetup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.\r\n\r\n```javascript\r\nsetup(props, context) {\r\n  // Attributes (Non-reactive object)\r\n  console.log(context.attrs)\r\n\r\n  // Slots (Non-reactive object)\r\n  console.log(context.slots)\r\n\r\n  // Emit Events (Method)\r\n  console.log(context.emit)\r\n}\r\n\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n## 日后再更新。\r\n',contentRendered:'<p><strong>阅读本文大概需要10分钟</strong></p>\n\x3c!-- more --\x3e\n<p><strong>先认识代码变动和部分新特性</strong></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="认识重要-api" tabindex="-1"><a class="header-anchor" href="#认识重要-api" aria-hidden="true">#</a> 认识重要 API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp<span class="token punctuation">,</span>\t\t<span class="token comment">// 创建一个APP实例</span>\n    onMounted<span class="token punctuation">,</span>\t\t<span class="token comment">// 生命周期写法变了</span>\n    computed<span class="token punctuation">,</span>\t\t<span class="token comment">// 方法变了</span>\n    watch<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 同上</span>\n    watchEffect<span class="token punctuation">,</span>\t<span class="token comment">// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行</span>\n    reactive<span class="token punctuation">,</span>\t\t<span class="token comment">// 传入一个普通对象返回一个响应式对象</span>\n    ref<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用</span>\n    toRef<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 为一个reactive对象的属性创建一个ref</span>\n    toRefs<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp" aria-hidden="true">#</a> <em>createApp</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span>\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> <em>onMounted</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用需要放在setup()里面</span>\n    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"冲冲冲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <em>computed</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象</span>\n<span class="token comment">// 对象的话，是不是对象.value就很好理解下面为什么这样写了？</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> <em>watch</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//reactive 接受一个普通对象，返回一个响应式对象</span>\n<span class="token comment">// state已经是一个响应式对象了，所以取值就是对象.count</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// todo</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="reactive-单独使用情况" tabindex="-1"><a class="header-anchor" href="#reactive-单独使用情况" aria-hidden="true">#</a> ⭐ <em>reactive 单独使用情况</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\na<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="返回给组件形式一" tabindex="-1"><a class="header-anchor" href="#返回给组件形式一" aria-hidden="true">#</a> 🌟 返回给组件形式一</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 组件</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 逻辑</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="返回组件形式二-torefs" tabindex="-1"><a class="header-anchor" href="#返回组件形式二-torefs" aria-hidden="true">#</a> <em>🌟返回组件形式二 &amp; toRefs</em></h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">></span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> toRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRefs把响应式对象转为普通对象</span>\n    <span class="token comment">// 再解析一下就是，toRefs是一个解封过程，reactive是封装过程</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <em>ref</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// ref 接受一个参数，并返回一个响应式且可以改变的对象。</span>\n<span class="token comment">// 同时ref拥有一个指向内部值得单一属性.value</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="toref" tabindex="-1"><a class="header-anchor" href="#toref" aria-hidden="true">#</a> <em>toRef</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">cow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">bug</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"cow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 相当于 const count = ref(0)</span>\n    <span class="token comment">// count 已经是cow的响应式对象了，所以值是不是该？</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 这时a.cow已经被改变了</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>cow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n    <span class="token comment">// 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？</span>\n\n    a<span class="token punctuation">.</span>cow<span class="token operator">++</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n    <span class="token comment">// 这里是不是能理解ref传递了？</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><hr>\n<h1 id="vue3-整体纵览" tabindex="-1"><a class="header-anchor" href="#vue3-整体纵览" aria-hidden="true">#</a> Vue3 整体纵览</h1>\n<h3 id="一、setup-函数" tabindex="-1"><a class="header-anchor" href="#一、setup-函数" aria-hidden="true">#</a> 一、setup 函数</h3>\n<p>​ <strong>setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法</strong></p>\n<p>​ <strong>Vue3 去掉了 data 返回的格式，统一再 setup 返回</strong></p>\n<p>​</p>\n<h3 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期" aria-hidden="true">#</a> 二、生命周期</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>setup() {\n    onMounted(() => {\n      console.log(\'组件挂载\');\n    });\n\n    onUnmounted(() => {\n      console.log(\'组件卸载\');\n    });\n\n    onUpdated(() => {\n      console.log(\'组件更新\');\n    });\n\n    onBeforeUpdate(() => {\n      console.log(\'组件将要更新\');\n    });\n\n    onActivated(() => {\n      console.log(\'keepAlive 组件 激活\');\n    });\n\n    onDeactivated(() => {\n      console.log(\'keepAlive 组件 非激活\');\n    });\n    return {};\n  },\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="三、vue-router" tabindex="-1"><a class="header-anchor" href="#三、vue-router" aria-hidden="true">#</a> 三、vue-router</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$route</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$router</span>\n\n<span class="token comment">// route   用于获取当前路由数据</span>\n<span class="token comment">// router  用于路由跳转</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="四、vuex" tabindex="-1"><a class="header-anchor" href="#四、vuex" aria-hidden="true">#</a> 四、vuex</h3>\n<p>​ <strong>注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2中的 this.$store</span>\n    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过store对象来dispatch 派发异步任务</span>\n    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// commit 修改store数据</span>\n\n    <span class="token keyword">let</span> category <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>currentCagegory\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> category <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="vue-vite-搭建项目" tabindex="-1"><a class="header-anchor" href="#vue-vite-搭建项目" aria-hidden="true">#</a> vue-vite 搭建项目</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code># 初始化项目\nnpm init vite<span class="token operator">-</span>app vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 进入目录\ncd vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 安装依赖\nnpm install\n# 运行项目\nnpm run dev\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h3 id="五、setup" tabindex="-1"><a class="header-anchor" href="#五、setup" aria-hidden="true">#</a> 五、setup()</h3>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>setup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Attributes (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>\n\n  <span class="token comment">// Slots (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>\n\n  <span class="token comment">// Emit Events (Method)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><hr>\n<h2 id="日后再更新。" tabindex="-1"><a class="header-anchor" href="#日后再更新。" aria-hidden="true">#</a> 日后再更新。</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3-notes-1.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3笔记"},slug:"Vue3-notes-1",filePath:"/root/blog/blogs/Vue3/Vue3-notes-1.md",filePathRelative:"blogs/Vue3/Vue3-notes-1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFileChunkName:"v-2b8dfb6e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.js",dataFileChunkName:"v-2b8dfb6e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3-notes-1.html",htmlFilePathRelative:"blogs/Vue3/Vue3-notes-1.html"},{data:{key:"v-aac5cb8a",path:"/blogs/front/%E6%B5%8F%E8%A7%88%E5%99%A8.html",title:"浏览器",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Event Loop",slug:"event-loop",children:[{level:3,title:"MacroTask（宏任务）",slug:"macrotask-宏任务",children:[]},{level:3,title:"MicroTask（微任务）",slug:"microtask-微任务",children:[]},{level:3,title:"举个例子",slug:"举个例子",children:[]},{level:3,title:"进阶",slug:"进阶",children:[]}]},{level:2,title:"跨域",slug:"跨域",children:[{level:3,title:"跨域解决办法",slug:"跨域解决办法",children:[]}]},{level:2,title:"跨站-CSRF",slug:"跨站-csrf",children:[{level:3,title:"解决方法CSRF Token",slug:"解决方法csrf-token",children:[]}]},{level:2,title:"内核",slug:"内核",children:[{level:3,title:"1.GUI渲染线程",slug:"_1-gui渲染线程",children:[]},{level:3,title:"2.JavaScript 引擎线程",slug:"_2-javascript-引擎线程",children:[]},{level:3,title:"3.定时触发器线程",slug:"_3-定时触发器线程",children:[]},{level:3,title:"4.事件触发线程",slug:"_4-事件触发线程",children:[]},{level:3,title:"5.异步http请求线程",slug:"_5-异步http请求线程",children:[]}]},{level:2,title:"渲染机制",slug:"渲染机制",children:[{level:3,title:"简化整体流程",slug:"简化整体流程",children:[]},{level:3,title:"详细过程",slug:"详细过程",children:[]},{level:3,title:"link、@import引入的区别",slug:"link、-import引入的区别",children:[]}]},{level:2,title:"script标签中defer和async有什么区别",slug:"script标签中defer和async有什么区别",children:[{level:3,title:"性能优化",slug:"性能优化",children:[]}]},{level:2,title:"缓存机制",slug:"缓存机制",children:[{level:3,title:"定义",slug:"定义",children:[]},{level:3,title:"优点",slug:"优点",children:[]},{level:3,title:"位置",slug:"位置",children:[]},{level:3,title:"分类",slug:"分类",children:[]}]}],git:{},filePathRelative:"blogs/front/浏览器.md"},key:"v-aac5cb8a",path:"/blogs/front/liulanqi.html",title:"浏览器",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Event Loop",slug:"event-loop",children:[{level:3,title:"MacroTask（宏任务）",slug:"macrotask-宏任务",children:[]},{level:3,title:"MicroTask（微任务）",slug:"microtask-微任务",children:[]},{level:3,title:"举个例子",slug:"举个例子",children:[]},{level:3,title:"进阶",slug:"进阶",children:[]}]},{level:2,title:"跨域",slug:"跨域",children:[{level:3,title:"跨域解决办法",slug:"跨域解决办法",children:[]}]},{level:2,title:"跨站-CSRF",slug:"跨站-csrf",children:[{level:3,title:"解决方法CSRF Token",slug:"解决方法csrf-token",children:[]}]},{level:2,title:"内核",slug:"内核",children:[{level:3,title:"1.GUI渲染线程",slug:"_1-gui渲染线程",children:[]},{level:3,title:"2.JavaScript 引擎线程",slug:"_2-javascript-引擎线程",children:[]},{level:3,title:"3.定时触发器线程",slug:"_3-定时触发器线程",children:[]},{level:3,title:"4.事件触发线程",slug:"_4-事件触发线程",children:[]},{level:3,title:"5.异步http请求线程",slug:"_5-异步http请求线程",children:[]}]},{level:2,title:"渲染机制",slug:"渲染机制",children:[{level:3,title:"简化整体流程",slug:"简化整体流程",children:[]},{level:3,title:"详细过程",slug:"详细过程",children:[]},{level:3,title:"link、@import引入的区别",slug:"link、-import引入的区别",children:[]}]},{level:2,title:"script标签中defer和async有什么区别",slug:"script标签中defer和async有什么区别",children:[{level:3,title:"性能优化",slug:"性能优化",children:[]}]},{level:2,title:"缓存机制",slug:"缓存机制",children:[{level:3,title:"定义",slug:"定义",children:[]},{level:3,title:"优点",slug:"优点",children:[]},{level:3,title:"位置",slug:"位置",children:[]},{level:3,title:"分类",slug:"分类",children:[]}]}],content:"\x3c!-- ---\r\ntitle: 浏览器\r\ndate: 2021-03-20\r\ntags:\r\n  - 浏览器\r\ncategories:\r\n  - 前端知识\r\n--- --\x3e\r\n\r\n# 浏览器\r\n\r\n\r\n\r\n## Event Loop\r\n\r\n- `Event Loop`即事件循环(抽象化:为一个执行模型)，是指浏览器或`Node`的一种解决`javaScript`单线程运行时不会阻塞的一种机制，也就是我们经常使用**异步**的原理。\r\n\r\n> **在`JavaScript`中，任务被分为两种，一种宏任务（`MacroTask`）也叫`Task`，一种叫微任务（`MicroTask`）。**\r\n\r\n- ### MacroTask（宏任务）\r\n\r\n  - `script`全部代码、`setTimeout`、`setInterval`、`setImmediate`（浏览器暂时不支持，只有IE10支持，具体可见[`MDN`](https://link.juejin.im/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FWindow%2FsetImmediate)）、`I/O`、`UI Rendering`。****\r\n\r\n- ### MicroTask（微任务）\r\n\r\n  - `Process.nextTick（Node独有）`、`Promise`、`Object.observe(废弃)`、`MutationObserver`（具体使用方式查看[这里](https://link.juejin.im/?target=http%3A%2F%2Fjavascript.ruanyifeng.com%2Fdom%2Fmutationobserver.html)）\r\n\r\n**`Javascript` 有一个 `main thread` 主线程和 `call-stack` 调用栈(执行栈)，所有的任务都会被放到调用栈等待主线程执行。**\r\n\r\n![image-20210307152015599](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307152015599.png)\r\n\r\n![image-20210307152025760](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307152025760.png)\r\n\r\n- **个人小结一下，event loop为一个执行模型，解释了事件发生的顺序，从哪到哪，理论部分就是叙述了这样的事实，下面用代码体会一下。**\r\n\r\n  ### 举个例子\r\n\r\n  ```javascript\r\n  console.log('script start');\r\n  setTimeout(function() {\r\n    console.log('setTimeout');\r\n  }, 0);\r\n  Promise.resolve().then(function() {\r\n    console.log('promise1');\r\n  }).then(function() {\r\n    console.log('promise2');\r\n  });\r\n  console.log('script end');\r\n  ```\r\n\r\n  #### 第一次执行：\r\n\r\n  执行同步代码， 划分Macrotasks、Microtasks\r\n\r\n  ```\r\n  Tasks：run script、 setTimeout callback\r\n  Microtasks：Promise then\t\r\n  JS stack: script\t\r\n  Log: script start、script end。\r\n  ```\r\n\r\n  #### 第二次执行:\r\n\r\n  执行宏任务后，检测到微任务(`Microtasks`)队列中不为空，执行`Promise1`，执行完成`Promise1`后，调用`Promise2.then`，放入微任务(`Microtasks`)队列中，再执行`Promise2.then`。\r\n\r\n  #### 第三次执行：\r\n\r\n  当微任务(`Microtasks`)队列中为空时，执行宏任务（`Tasks`），执行`setTimeout callback`，打印日志。\r\n\r\n  ```\r\n  Tasks：setTimeout callback\r\n  Microtasks：\t\r\n  JS stack: setTimeout callback\r\n  Log: script start、script end、promise1、promise2、setTimeout\r\n  ```\r\n\r\n  #### 第四次执行：\r\n\r\n  ```\r\n  Tasks：setTimeout callback\r\n  Microtasks：\t\r\n  JS stack: \r\n  Log: script start、script end、promise1、promise2、setTimeout\r\n  ```\r\n\r\n  ### 进阶\r\n\r\n  ```javascript\r\n  console.log(1);\r\n  \r\n  setTimeout(() => {\r\n    console.log(2);\r\n    Promise.resolve().then(() => {\r\n      console.log(3)\r\n    });\r\n  });\r\n  \r\n  new Promise((resolve, reject) => {\r\n    console.log(4)\r\n    resolve(5)\r\n  }).then((data) => {\r\n    console.log(data);\r\n  })\r\n  \r\n  setTimeout(() => {\r\n    console.log(6);\r\n  })\r\n  \r\n  console.log(7);\r\n  ```\r\n\r\n  ```\r\n  // 正确答案\r\n  1\r\n  4\r\n  7\r\n  5\r\n  2\r\n  3\r\n  6\r\n  ```\r\n\r\n  \r\n\r\n  #### Step1\r\n\r\n  ```javascript\r\n  console.log(1)\r\n  // 打印1\r\n  ```\r\n\r\n  Stack Queue: [console]\r\n\r\n  Macrotask Queue: []\r\n\r\n  Microtask Queue: []\r\n\r\n  \r\n\r\n  #### Step2\r\n\r\n  ```javascript\r\n  setTimeout(() => {\r\n    // 这个回调函数叫做callback1，setTimeout属于macrotask，所以放到macrotask queue中\r\n    console.log(2);\r\n    Promise.resolve().then(() => {\r\n      console.log(3)\r\n    });\r\n  });\r\n  ```\r\n\r\n  Stack Queue: [setTimeout]\r\n\r\n  Macrotask Queue: [callback1]\r\n\r\n  Microtask Queue: []\r\n\r\n  \r\n\r\n  #### Step3\r\n\r\n  ```javascript\r\n  new Promise((resolve, reject) => {\r\n    // 注意，这里是同步执行的，如果不太清楚，可以去看一下我开头自己实现的promise啦~~\r\n    console.log(4)\r\n    resolve(5)\r\n  }).then((data) => {\r\n    // 这个回调函数叫做callback2，promise属于microtask，所以放到microtask queue中\r\n    console.log(data);\r\n  })\r\n  ```\r\n\r\n  Stack Queue: [promise]\r\n\r\n  Macrotask Queue: [callback1]\r\n\r\n  Microtask Queue: [callback2]\r\n\r\n  \r\n\r\n  #### Step4\r\n\r\n  ```javascript\r\n  setTimeout(() => {\r\n    // 这个回调函数叫做callback3，setTimeout属于macrotask，所以放到macrotask queue中\r\n    console.log(6);\r\n  })\r\n  ```\r\n\r\n  Stack Queue: [setTimeout]\r\n\r\n  Macrotask Queue: [callback1, callback3]\r\n\r\n  Microtask Queue: [callback2]\r\n\r\n  \r\n\r\n  #### Step5\r\n\r\n  ```javascript\r\n  console.log(7)\r\n  //\r\n  1\r\n  4\r\n  7\r\n  ```\r\n\r\n  Stack Queue: [console]\r\n\r\n  Macrotask Queue: [callback1, callback3]\r\n\r\n  Microtask Queue: [callback2]\r\n\r\n  \r\n\r\n  #### Step6\r\n\r\n  取出Microtask queue\r\n\r\n  ```javascript\r\n  console.log(data) // 这里data是Promise的决议值5\r\n  //\r\n  1\r\n  4\r\n  7\r\n  5\r\n  ```\r\n\r\n  Stack Queue: [callback2]\r\n\r\n  Macrotask Queue: [callback1, callback3]\r\n\r\n  Microtask Queue: []\r\n\r\n  \r\n\r\n  #### Step7\r\n\r\n  取Macrotask\r\n\r\n  ```javascript\r\n  console.log(2)\r\n  //\r\n  1\r\n  4\r\n  7\r\n  5\r\n  2\r\n  ```\r\n\r\n  Stack Queue: [callback1]\r\n\r\n  Macrotask Queue: [callback3]\r\n\r\n  Microtask Queue: []\r\n\r\n  \r\n\r\n  #### Step8\r\n\r\n  ```javascript\r\n  Promise.resolve().then(() => {\r\n    // 这个回调函数叫做callback4，promise属于microtask，所以放到microtask queue中\r\n    console.log(3)\r\n  });\r\n  //\r\n  1\r\n  4\r\n  7\r\n  5\r\n  2\r\n  ```\r\n\r\n  Stack Queue: [promise]\r\n\r\n  Macrotask v: [callback3]\r\n\r\n  Microtask Queue: [callback4]\r\n\r\n  \r\n\r\n  #### Step9\r\n\r\n  ```\r\n  console.log(3)\r\n  //\r\n  1\r\n  4\r\n  7\r\n  5\r\n  2\r\n  3\r\n  ```\r\n\r\n  Stack Queue: [callback4]\r\n\r\n  Macrotask Queue: [callback3]\r\n\r\n  Microtask Queue: []\r\n\r\n  \r\n\r\n  #### Step10\r\n\r\n  ```\r\n  console.log(6)\r\n  //\r\n  1\r\n  4\r\n  7\r\n  5\r\n  2\r\n  3\r\n  6\r\n  ```\r\n\r\n  Stack Queue: [callback3]\r\n\r\n  Macrotask Queue: []\r\n\r\n  Microtask Queue: []\r\n\r\n  **全空，再消化一下**\r\n\r\n  \r\n\r\n## 跨域\r\n\r\n跨域, 是指浏览器不能执行其他网站的脚本。浏览器出于安全方面的考虑，只允许与同源下的接口交互，也就是浏览器的同源策略。同源策略会阻止跨域。\r\n\r\n![image-20210307200206719](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307200206719.png)\r\n\r\n### 跨域解决办法\r\n\r\n#### JSONP(有缺点)\r\n\r\n![image-20210307200612377](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307200612377.png)\r\n\r\n#### CORS跨域\r\n\r\n服务器设置响应头信息。\r\n\r\n浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。\r\n\r\n##### 简单的请求：\r\n\r\n- Access-Control-Allow-Origin\r\n\r\n  > 该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。如果要发送Cookie，Access-Control-Allow-Origin就不能设为星号，必须指定明确的、与请求网页一致的域名\r\n\r\n- Access-Control-Allow-Credentials\r\n\r\n  > 该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为true，如果服务器不要浏览器发送Cookie，删除该字段即可。\r\n\r\n- Access-Control-Expose-Headers\r\n\r\n  > 该字段可选。CORS请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。上面的例子指定，getResponseHeader('FooBar')可以返回FooBar字段的值。\r\n\r\n\r\n\r\n## 跨站-CSRF\r\n\r\n- 只是用JSON api\r\n- 不用CORS\r\n- 确保GET请求不会修改数据库相关数据\r\n- 确保用多样的请求方式,`put`、`patch`、`DELETE`\r\n\r\n### 解决方法CSRF Token\r\n\r\n1. 服务器发送给客户端一个token。\r\n2. 客户端提交的表单中带着这个token。\r\n3. 如果这个token不合法，那么服务器拒绝这个请求。\r\n\r\n> 攻击者需要通过某种手段获取你站点的CSRF token， 他们只能使用JavaScript来做。 所以，如果你的站点不支持CORS， 那么他们就没有办法来获取CSRF token， 降低了威胁。\r\n\r\n\r\n\r\n## 内核\r\n\r\n![image-20210307202757366](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307202757366.png)\r\n\r\n### 1.GUI渲染线程\r\n\r\n- HTML Parser 解析HTML\r\n- CSS Parser 解析Style数据\r\n- Layout过程，为每个可见节点的几何信息\r\n- Painting过程，遍历Render Tree，调用UI接口绘制每个节点\r\n\r\n### 2.JavaScript 引擎线程\r\n\r\n​\t解析Javascript脚本,运行代码\r\n\r\n### 3.定时触发器线程\r\n\r\n​\t浏览器定时计数器并不是由 JavaScript 引擎计数的, 因为 JavaScript 引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确, 因此通过单独线程来计时并触发定时\r\n\r\n### 4.事件触发线程\r\n\r\n​\t当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待 JavaScript 引擎的处理\r\n\r\n### 5.异步http请求线程\r\n\r\n​\tXMLHttpRequest 请求会在浏览器中新开一个线程请求， 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript 引擎的处理队列中\r\n\r\n\r\n\r\n## 渲染机制\r\n\r\n![img](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a680239c609146ffabfc3f0661167c80~tplv-k3u1fbpfcp-zoom-1.image?imageslim)\r\n\r\n### 简化整体流程\r\n\r\n首先从服务器获取需要渲染的内容(html文件),解析，构建dom树，cssdom树，根据两棵树构建渲染树，计算布局，渲染\r\n\r\n### 详细过程\r\n\r\n首先要从服务器获取需要渲染的内容，此时获取到的是文件流（进制编码内容），那么接下来浏览器会把16进制字节信息编译为代码字符串，然后按照W3C规则进行字符解析生成对应的tokens，再转换成浏览器内核可以识别渲染的DOM节点，最后再按照节点解析为对应的DOM树和CSSOM树。\r\n\r\n1. 在CSS资源还没有请求回来之前，先生成DOM树（DOM的层级关系以及节点关系）=>该过程遇到JS先执行js\r\n\r\n   > 正常情况下JS会阻碍GUI渲染，所以JS一般放在页面尾部，就是为了确保DOM树生成完才会加载JS；也可能会与defer和async异步管控JS请求； \r\n\r\n2. 当所有CSS请求回来之后，浏览器按照CSS导入顺序依次进行渲染，最后生成CSSOM树\r\n\r\n3. 把DOM树和CSSOM树结合在一起，生成有样式有结构的RENDER TREE 渲染树\r\n\r\n4. 浏览器按照渲染树在页面中进行渲染和解析\r\n\r\n- 布局（Layout）或回流/重排（reflow）—— 计算元素在设备视口中的大小和位置\r\n- 绘制/重绘（painting）—— 根据渲染树以及回流得到的几何信息，得到节点的绝对像素\r\n\r\n### link、@import引入的区别\r\n\r\nlink和@import都是导入外部样式（服务器获取样式文件），区别如下：\r\n\r\n```html\r\n//link\r\n<link href=\"css/style.css\" rel=\"stylesheet\" type=\"text/css\"></link>\r\n\r\n//import\r\n@import ...;\r\n```\r\n\r\n- link——GUI渲染不会停止，浏览器会派发新的线程（HTTP线程）去加载资源文件，无论CSS是否请求回来，代码继续渲染\r\n- @import——GUI渲染暂时停止渲染，去服务器加载资源文件，请求没有返回之前是不会继续渲染的\r\n- 如果是嵌入式style，GUI直接渲染\r\n\r\n## script标签中defer和async有什么区别\r\n\r\n- script会阻碍GUI渲染，先请求js（http线程），在把请求回来的执行，只有js执行完再去GUI渲染；\r\n\r\n- defer：GUI继续渲染，同时http去请求，请求回来也不会立即执行，而是等到GUI渲染完再去按照之前引入的script顺序依次执行。\r\n\r\n- async：GUI继续渲染，同时http去请求，当请求回来后立即先执行js，GUI暂停，js执行完之后GUI继续。谁先回来谁执行（适用于没有依赖顺序的）。\r\n\r\n  ![img](https://user-gold-cdn.xitu.io/2020/7/4/1731a66d34d6e3d8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\r\n\r\n### 性能优化\r\n\r\n```\r\n1、减少DOM树渲染时间（HTML层级不要太深，标签语义化）；\r\n2、减少CSSOM树渲染时间（选择器从右向左解析，尽可能减少选择器层级）；\r\n3、减少HTTP请求次数和请求大小；\r\n4、一般会把CSS放在页面的开始位置（提前请求资源，用link不用import，对于移动断如果css较少尽可能使用嵌入式）；\r\n5、避免白屏，可快速生成loading渲染树（前端骨架屏）；\r\n6、服务器的SSR骨架屏所提高的渲染是避免了客户端再次单独请求数据，而不是样式和结构上的首屏处理；\r\n7、把JS放在页面底部以及尽可能使用defer或者async；\r\n8、CRP性能节点优化；\r\n```\r\n\r\n\r\n\r\n## 缓存机制\r\n\r\n### 定义\r\n\r\n浏览器在本地磁盘上将用户之前请求的数据存储起来，当访问者再次需要改数据的时候无需再次发送请求，直接从浏览器本地获取数据。\r\n\r\n### 优点\r\n\r\n• 减少请求的个数\r\n• 节省带宽，避免浪费不必要的网络资源\r\n• 减轻服务器压力\r\n• 提高浏览器网页的加载速度，提高用户体验\r\n\r\n### 位置\r\n\r\n1. service Worker 浏览器独立线程进行缓存\r\n2. **Memory Cache：内存缓存**\r\n3. **Disk Cache：硬盘缓存**\r\n4. push 擦cache（http2中的推送缓存）\r\n\r\n### 分类\r\n\r\n#### 强缓存\r\n\r\n**强缓存是利用http的返回头中的`Expires`或者`Cache-Control`两个字段来控制的，用来表示资源的缓存时间。**\r\n\r\n1. 不会向服务器发送请求，直接从本地缓存中获取数据\r\n2. 请求资源的的状态码为: 200 ok(from memory cache/from disk cache) 即从浏览器缓存或者设备硬盘获取\r\n\r\n![image-20210307205221263](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307205221263.png)\r\n\r\n![image-20210307205231655](C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307205231655.png)\r\n\r\n**Cache-Control：max-age:xxxx** Cache-Control是http1.1时出现的header信息，主要是利用该字段的`max-age`值来进行判断，它是一个相对时间，例如Cache-Control:max-age=3600，单位是秒，代表着资源的有效期是3600秒。cache-control除了该字段外，还有下面几个比较常用的设置值：\r\n\r\n- no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。\r\n- no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。\r\n- public：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。\r\n- private：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。\r\n- max-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。\r\n\r\n**强缓存的使用对象 css文件，js文件等，我们一般不会对html文件进行强缓存处理**\r\n\r\n```html\r\n// 在路径后面加上时间戳或者版本号作为标识\r\n<link href=\"css/index.css?version=1.1\"/>\r\n```\r\n\r\n\r\n\r\n#### 协商缓存\r\n\r\n向服务器发送请求，服务器会根据请求头的资源判断是否命中协商缓存，如果命中，则返回304状态码通知浏览器从缓存中读取资源。**(推荐)在强缓存失效的情况下，才会触发浏览器的协商缓存机制**\r\n\r\n**这主要涉及到下面两组`header`字段，这两组搭档都是`成对`出现的，即第一次请求的响应头带上某个字段（`Last-Modified`或者`Etag`），则后续请求则会带上对应的请求字段（`If-Modified-Since`或者`If-None-Match`），若响应头没有Last-Modified或者Etag字段，则请求头也不会有对应的字段。**\r\n\r\n**ETag/If-None-Match**  http 1.1\r\n\r\n与Last-Modify/If-Modify-Since不同的是，Etag/If-None-Match返回的是一个**校验码**。ETag可以保证每一个资源是唯一的**，资源变化都会导致ETag变化**。服务器根据浏览器上送的If-None-Match值来判断是否命中缓存。\r\n\r\n与Last-Modified不一样的是，当服务器返回304 Not Modified的响应时，由于ETag重新生成过，response header中还会把这个ETag返回，即使这个ETag跟之前的没有变化。\r\n\r\n",contentRendered:'\x3c!-- ---\ntitle: 浏览器\ndate: 2021-03-20\ntags:\n  - 浏览器\ncategories:\n  - 前端知识\n--- --\x3e\n<h1 id="浏览器" tabindex="-1"><a class="header-anchor" href="#浏览器" aria-hidden="true">#</a> 浏览器</h1>\n<h2 id="event-loop" tabindex="-1"><a class="header-anchor" href="#event-loop" aria-hidden="true">#</a> Event Loop</h2>\n<ul>\n<li><code>Event Loop</code>即事件循环(抽象化:为一个执行模型)，是指浏览器或<code>Node</code>的一种解决<code>javaScript</code>单线程运行时不会阻塞的一种机制，也就是我们经常使用<strong>异步</strong>的原理。</li>\n</ul>\n<blockquote>\n<p><strong>在<code>JavaScript</code>中，任务被分为两种，一种宏任务（<code>MacroTask</code>）也叫<code>Task</code>，一种叫微任务（<code>MicroTask</code>）。</strong></p>\n</blockquote>\n<ul>\n<li>\n<h3 id="macrotask-宏任务" tabindex="-1"><a class="header-anchor" href="#macrotask-宏任务" aria-hidden="true">#</a> MacroTask（宏任务）</h3>\n<ul>\n<li><code>script</code>全部代码、<code>setTimeout</code>、<code>setInterval</code>、<code>setImmediate</code>（浏览器暂时不支持，只有IE10支持，具体可见<a href="https://link.juejin.im/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FWindow%2FsetImmediate" target="_blank" rel="noopener noreferrer"><code>MDN</code><ExternalLinkIcon/></a>）、<code>I/O</code>、<code>UI Rendering</code>。****</li>\n</ul>\n</li>\n<li>\n<h3 id="microtask-微任务" tabindex="-1"><a class="header-anchor" href="#microtask-微任务" aria-hidden="true">#</a> MicroTask（微任务）</h3>\n<ul>\n<li><code>Process.nextTick（Node独有）</code>、<code>Promise</code>、<code>Object.observe(废弃)</code>、<code>MutationObserver</code>（具体使用方式查看<a href="https://link.juejin.im/?target=http%3A%2F%2Fjavascript.ruanyifeng.com%2Fdom%2Fmutationobserver.html" target="_blank" rel="noopener noreferrer">这里<ExternalLinkIcon/></a>）</li>\n</ul>\n</li>\n</ul>\n<p><strong><code>Javascript</code> 有一个 <code>main thread</code> 主线程和 <code>call-stack</code> 调用栈(执行栈)，所有的任务都会被放到调用栈等待主线程执行。</strong></p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307152015599.png" alt="image-20210307152015599"></p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307152025760.png" alt="image-20210307152025760"></p>\n<ul>\n<li>\n<p><strong>个人小结一下，event loop为一个执行模型，解释了事件发生的顺序，从哪到哪，理论部分就是叙述了这样的事实，下面用代码体会一下。</strong></p>\n<h3 id="举个例子" tabindex="-1"><a class="header-anchor" href="#举个例子" aria-hidden="true">#</a> 举个例子</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'script start\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'setTimeout\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nPromise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'promise1\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'promise2\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'script end\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="第一次执行" tabindex="-1"><a class="header-anchor" href="#第一次执行" aria-hidden="true">#</a> 第一次执行：</h4>\n<p>执行同步代码， 划分Macrotasks、Microtasks</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Tasks：run script、 setTimeout callback\nMicrotasks：Promise then\t\nJS stack: script\t\nLog: script start、script end。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="第二次执行" tabindex="-1"><a class="header-anchor" href="#第二次执行" aria-hidden="true">#</a> 第二次执行:</h4>\n<p>执行宏任务后，检测到微任务(<code>Microtasks</code>)队列中不为空，执行<code>Promise1</code>，执行完成<code>Promise1</code>后，调用<code>Promise2.then</code>，放入微任务(<code>Microtasks</code>)队列中，再执行<code>Promise2.then</code>。</p>\n<h4 id="第三次执行" tabindex="-1"><a class="header-anchor" href="#第三次执行" aria-hidden="true">#</a> 第三次执行：</h4>\n<p>当微任务(<code>Microtasks</code>)队列中为空时，执行宏任务（<code>Tasks</code>），执行<code>setTimeout callback</code>，打印日志。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Tasks：setTimeout callback\nMicrotasks：\t\nJS stack: setTimeout callback\nLog: script start、script end、promise1、promise2、setTimeout\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="第四次执行" tabindex="-1"><a class="header-anchor" href="#第四次执行" aria-hidden="true">#</a> 第四次执行：</h4>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>Tasks：setTimeout callback\nMicrotasks：\t\nJS stack: \nLog: script start、script end、promise1、promise2、setTimeout\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="进阶" tabindex="-1"><a class="header-anchor" href="#进阶" aria-hidden="true">#</a> 进阶</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>\n  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 正确答案\n1\n4\n7\n5\n2\n3\n6\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="step1" tabindex="-1"><a class="header-anchor" href="#step1" aria-hidden="true">#</a> Step1</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token comment">// 打印1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Stack Queue: [console]</p>\n<p>Macrotask Queue: []</p>\n<p>Microtask Queue: []</p>\n<h4 id="step2" tabindex="-1"><a class="header-anchor" href="#step2" aria-hidden="true">#</a> Step2</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 这个回调函数叫做callback1，setTimeout属于macrotask，所以放到macrotask queue中</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Stack Queue: [setTimeout]</p>\n<p>Macrotask Queue: [callback1]</p>\n<p>Microtask Queue: []</p>\n<h4 id="step3" tabindex="-1"><a class="header-anchor" href="#step3" aria-hidden="true">#</a> Step3</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 注意，这里是同步执行的，如果不太清楚，可以去看一下我开头自己实现的promise啦~~</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>\n  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 这个回调函数叫做callback2，promise属于microtask，所以放到microtask queue中</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Stack Queue: [promise]</p>\n<p>Macrotask Queue: [callback1]</p>\n<p>Microtask Queue: [callback2]</p>\n<h4 id="step4" tabindex="-1"><a class="header-anchor" href="#step4" aria-hidden="true">#</a> Step4</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 这个回调函数叫做callback3，setTimeout属于macrotask，所以放到macrotask queue中</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Stack Queue: [setTimeout]</p>\n<p>Macrotask Queue: [callback1, callback3]</p>\n<p>Microtask Queue: [callback2]</p>\n<h4 id="step5" tabindex="-1"><a class="header-anchor" href="#step5" aria-hidden="true">#</a> Step5</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>\n<span class="token comment">//</span>\n<span class="token number">1</span>\n<span class="token number">4</span>\n<span class="token number">7</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Stack Queue: [console]</p>\n<p>Macrotask Queue: [callback1, callback3]</p>\n<p>Microtask Queue: [callback2]</p>\n<h4 id="step6" tabindex="-1"><a class="header-anchor" href="#step6" aria-hidden="true">#</a> Step6</h4>\n<p>取出Microtask queue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// 这里data是Promise的决议值5</span>\n<span class="token comment">//</span>\n<span class="token number">1</span>\n<span class="token number">4</span>\n<span class="token number">7</span>\n<span class="token number">5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Stack Queue: [callback2]</p>\n<p>Macrotask Queue: [callback1, callback3]</p>\n<p>Microtask Queue: []</p>\n<h4 id="step7" tabindex="-1"><a class="header-anchor" href="#step7" aria-hidden="true">#</a> Step7</h4>\n<p>取Macrotask</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token comment">//</span>\n<span class="token number">1</span>\n<span class="token number">4</span>\n<span class="token number">7</span>\n<span class="token number">5</span>\n<span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Stack Queue: [callback1]</p>\n<p>Macrotask Queue: [callback3]</p>\n<p>Microtask Queue: []</p>\n<h4 id="step8" tabindex="-1"><a class="header-anchor" href="#step8" aria-hidden="true">#</a> Step8</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 这个回调函数叫做callback4，promise属于microtask，所以放到microtask queue中</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//</span>\n<span class="token number">1</span>\n<span class="token number">4</span>\n<span class="token number">7</span>\n<span class="token number">5</span>\n<span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Stack Queue: [promise]</p>\n<p>Macrotask v: [callback3]</p>\n<p>Microtask Queue: [callback4]</p>\n<h4 id="step9" tabindex="-1"><a class="header-anchor" href="#step9" aria-hidden="true">#</a> Step9</h4>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>console.log(3)\n//\n1\n4\n7\n5\n2\n3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Stack Queue: [callback4]</p>\n<p>Macrotask Queue: [callback3]</p>\n<p>Microtask Queue: []</p>\n<h4 id="step10" tabindex="-1"><a class="header-anchor" href="#step10" aria-hidden="true">#</a> Step10</h4>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>console.log(6)\n//\n1\n4\n7\n5\n2\n3\n6\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Stack Queue: [callback3]</p>\n<p>Macrotask Queue: []</p>\n<p>Microtask Queue: []</p>\n<p><strong>全空，再消化一下</strong></p>\n</li>\n</ul>\n<h2 id="跨域" tabindex="-1"><a class="header-anchor" href="#跨域" aria-hidden="true">#</a> 跨域</h2>\n<p>跨域, 是指浏览器不能执行其他网站的脚本。浏览器出于安全方面的考虑，只允许与同源下的接口交互，也就是浏览器的同源策略。同源策略会阻止跨域。</p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307200206719.png" alt="image-20210307200206719"></p>\n<h3 id="跨域解决办法" tabindex="-1"><a class="header-anchor" href="#跨域解决办法" aria-hidden="true">#</a> 跨域解决办法</h3>\n<h4 id="jsonp-有缺点" tabindex="-1"><a class="header-anchor" href="#jsonp-有缺点" aria-hidden="true">#</a> JSONP(有缺点)</h4>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307200612377.png" alt="image-20210307200612377"></p>\n<h4 id="cors跨域" tabindex="-1"><a class="header-anchor" href="#cors跨域" aria-hidden="true">#</a> CORS跨域</h4>\n<p>服务器设置响应头信息。</p>\n<p>浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。</p>\n<h5 id="简单的请求" tabindex="-1"><a class="header-anchor" href="#简单的请求" aria-hidden="true">#</a> 简单的请求：</h5>\n<ul>\n<li>\n<p>Access-Control-Allow-Origin</p>\n<blockquote>\n<p>该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求。如果要发送Cookie，Access-Control-Allow-Origin就不能设为星号，必须指定明确的、与请求网页一致的域名</p>\n</blockquote>\n</li>\n<li>\n<p>Access-Control-Allow-Credentials</p>\n<blockquote>\n<p>该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为true，如果服务器不要浏览器发送Cookie，删除该字段即可。</p>\n</blockquote>\n</li>\n<li>\n<p>Access-Control-Expose-Headers</p>\n<blockquote>\n<p>该字段可选。CORS请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。上面的例子指定，getResponseHeader(\'FooBar\')可以返回FooBar字段的值。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id="跨站-csrf" tabindex="-1"><a class="header-anchor" href="#跨站-csrf" aria-hidden="true">#</a> 跨站-CSRF</h2>\n<ul>\n<li>只是用JSON api</li>\n<li>不用CORS</li>\n<li>确保GET请求不会修改数据库相关数据</li>\n<li>确保用多样的请求方式,<code>put</code>、<code>patch</code>、<code>DELETE</code></li>\n</ul>\n<h3 id="解决方法csrf-token" tabindex="-1"><a class="header-anchor" href="#解决方法csrf-token" aria-hidden="true">#</a> 解决方法CSRF Token</h3>\n<ol>\n<li>服务器发送给客户端一个token。</li>\n<li>客户端提交的表单中带着这个token。</li>\n<li>如果这个token不合法，那么服务器拒绝这个请求。</li>\n</ol>\n<blockquote>\n<p>攻击者需要通过某种手段获取你站点的CSRF token， 他们只能使用JavaScript来做。 所以，如果你的站点不支持CORS， 那么他们就没有办法来获取CSRF token， 降低了威胁。</p>\n</blockquote>\n<h2 id="内核" tabindex="-1"><a class="header-anchor" href="#内核" aria-hidden="true">#</a> 内核</h2>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307202757366.png" alt="image-20210307202757366"></p>\n<h3 id="_1-gui渲染线程" tabindex="-1"><a class="header-anchor" href="#_1-gui渲染线程" aria-hidden="true">#</a> 1.GUI渲染线程</h3>\n<ul>\n<li>HTML Parser 解析HTML</li>\n<li>CSS Parser 解析Style数据</li>\n<li>Layout过程，为每个可见节点的几何信息</li>\n<li>Painting过程，遍历Render Tree，调用UI接口绘制每个节点</li>\n</ul>\n<h3 id="_2-javascript-引擎线程" tabindex="-1"><a class="header-anchor" href="#_2-javascript-引擎线程" aria-hidden="true">#</a> 2.JavaScript 引擎线程</h3>\n<p>​\t解析Javascript脚本,运行代码</p>\n<h3 id="_3-定时触发器线程" tabindex="-1"><a class="header-anchor" href="#_3-定时触发器线程" aria-hidden="true">#</a> 3.定时触发器线程</h3>\n<p>​\t浏览器定时计数器并不是由 JavaScript 引擎计数的, 因为 JavaScript 引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确, 因此通过单独线程来计时并触发定时</p>\n<h3 id="_4-事件触发线程" tabindex="-1"><a class="header-anchor" href="#_4-事件触发线程" aria-hidden="true">#</a> 4.事件触发线程</h3>\n<p>​\t当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待 JavaScript 引擎的处理</p>\n<h3 id="_5-异步http请求线程" tabindex="-1"><a class="header-anchor" href="#_5-异步http请求线程" aria-hidden="true">#</a> 5.异步http请求线程</h3>\n<p>​\tXMLHttpRequest 请求会在浏览器中新开一个线程请求， 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript 引擎的处理队列中</p>\n<h2 id="渲染机制" tabindex="-1"><a class="header-anchor" href="#渲染机制" aria-hidden="true">#</a> 渲染机制</h2>\n<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a680239c609146ffabfc3f0661167c80~tplv-k3u1fbpfcp-zoom-1.image?imageslim" alt="img"></p>\n<h3 id="简化整体流程" tabindex="-1"><a class="header-anchor" href="#简化整体流程" aria-hidden="true">#</a> 简化整体流程</h3>\n<p>首先从服务器获取需要渲染的内容(html文件),解析，构建dom树，cssdom树，根据两棵树构建渲染树，计算布局，渲染</p>\n<h3 id="详细过程" tabindex="-1"><a class="header-anchor" href="#详细过程" aria-hidden="true">#</a> 详细过程</h3>\n<p>首先要从服务器获取需要渲染的内容，此时获取到的是文件流（进制编码内容），那么接下来浏览器会把16进制字节信息编译为代码字符串，然后按照W3C规则进行字符解析生成对应的tokens，再转换成浏览器内核可以识别渲染的DOM节点，最后再按照节点解析为对应的DOM树和CSSOM树。</p>\n<ol>\n<li>\n<p>在CSS资源还没有请求回来之前，先生成DOM树（DOM的层级关系以及节点关系）=&gt;该过程遇到JS先执行js</p>\n<blockquote>\n<p>正常情况下JS会阻碍GUI渲染，所以JS一般放在页面尾部，就是为了确保DOM树生成完才会加载JS；也可能会与defer和async异步管控JS请求；</p>\n</blockquote>\n</li>\n<li>\n<p>当所有CSS请求回来之后，浏览器按照CSS导入顺序依次进行渲染，最后生成CSSOM树</p>\n</li>\n<li>\n<p>把DOM树和CSSOM树结合在一起，生成有样式有结构的RENDER TREE 渲染树</p>\n</li>\n<li>\n<p>浏览器按照渲染树在页面中进行渲染和解析</p>\n</li>\n</ol>\n<ul>\n<li>布局（Layout）或回流/重排（reflow）—— 计算元素在设备视口中的大小和位置</li>\n<li>绘制/重绘（painting）—— 根据渲染树以及回流得到的几何信息，得到节点的绝对像素</li>\n</ul>\n<h3 id="link、-import引入的区别" tabindex="-1"><a class="header-anchor" href="#link、-import引入的区别" aria-hidden="true">#</a> link、@import引入的区别</h3>\n<p>link和@import都是导入外部样式（服务器获取样式文件），区别如下：</p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code>//link\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">></span></span>\n\n//import\n@import ...;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul>\n<li>link——GUI渲染不会停止，浏览器会派发新的线程（HTTP线程）去加载资源文件，无论CSS是否请求回来，代码继续渲染</li>\n<li>@import——GUI渲染暂时停止渲染，去服务器加载资源文件，请求没有返回之前是不会继续渲染的</li>\n<li>如果是嵌入式style，GUI直接渲染</li>\n</ul>\n<h2 id="script标签中defer和async有什么区别" tabindex="-1"><a class="header-anchor" href="#script标签中defer和async有什么区别" aria-hidden="true">#</a> script标签中defer和async有什么区别</h2>\n<ul>\n<li>\n<p>script会阻碍GUI渲染，先请求js（http线程），在把请求回来的执行，只有js执行完再去GUI渲染；</p>\n</li>\n<li>\n<p>defer：GUI继续渲染，同时http去请求，请求回来也不会立即执行，而是等到GUI渲染完再去按照之前引入的script顺序依次执行。</p>\n</li>\n<li>\n<p>async：GUI继续渲染，同时http去请求，当请求回来后立即先执行js，GUI暂停，js执行完之后GUI继续。谁先回来谁执行（适用于没有依赖顺序的）。</p>\n<p><img src="https://user-gold-cdn.xitu.io/2020/7/4/1731a66d34d6e3d8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p>\n</li>\n</ul>\n<h3 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化" aria-hidden="true">#</a> 性能优化</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>1、减少DOM树渲染时间（HTML层级不要太深，标签语义化）；\n2、减少CSSOM树渲染时间（选择器从右向左解析，尽可能减少选择器层级）；\n3、减少HTTP请求次数和请求大小；\n4、一般会把CSS放在页面的开始位置（提前请求资源，用link不用import，对于移动断如果css较少尽可能使用嵌入式）；\n5、避免白屏，可快速生成loading渲染树（前端骨架屏）；\n6、服务器的SSR骨架屏所提高的渲染是避免了客户端再次单独请求数据，而不是样式和结构上的首屏处理；\n7、把JS放在页面底部以及尽可能使用defer或者async；\n8、CRP性能节点优化；\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="缓存机制" tabindex="-1"><a class="header-anchor" href="#缓存机制" aria-hidden="true">#</a> 缓存机制</h2>\n<h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3>\n<p>浏览器在本地磁盘上将用户之前请求的数据存储起来，当访问者再次需要改数据的时候无需再次发送请求，直接从浏览器本地获取数据。</p>\n<h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点" aria-hidden="true">#</a> 优点</h3>\n<p>• 减少请求的个数\n• 节省带宽，避免浪费不必要的网络资源\n• 减轻服务器压力\n• 提高浏览器网页的加载速度，提高用户体验</p>\n<h3 id="位置" tabindex="-1"><a class="header-anchor" href="#位置" aria-hidden="true">#</a> 位置</h3>\n<ol>\n<li>service Worker 浏览器独立线程进行缓存</li>\n<li><strong>Memory Cache：内存缓存</strong></li>\n<li><strong>Disk Cache：硬盘缓存</strong></li>\n<li>push 擦cache（http2中的推送缓存）</li>\n</ol>\n<h3 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h3>\n<h4 id="强缓存" tabindex="-1"><a class="header-anchor" href="#强缓存" aria-hidden="true">#</a> 强缓存</h4>\n<p><strong>强缓存是利用http的返回头中的<code>Expires</code>或者<code>Cache-Control</code>两个字段来控制的，用来表示资源的缓存时间。</strong></p>\n<ol>\n<li>不会向服务器发送请求，直接从本地缓存中获取数据</li>\n<li>请求资源的的状态码为: 200 ok(from memory cache/from disk cache) 即从浏览器缓存或者设备硬盘获取</li>\n</ol>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307205221263.png" alt="image-20210307205221263"></p>\n<p><img src="C:\\Users\\domado\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210307205231655.png" alt="image-20210307205231655"></p>\n<p><strong>Cache-Control：max-age:xxxx</strong> Cache-Control是http1.1时出现的header信息，主要是利用该字段的<code>max-age</code>值来进行判断，它是一个相对时间，例如Cache-Control:max-age=3600，单位是秒，代表着资源的有效期是3600秒。cache-control除了该字段外，还有下面几个比较常用的设置值：</p>\n<ul>\n<li>no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。</li>\n<li>no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。</li>\n<li>public：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。</li>\n<li>private：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。</li>\n<li>max-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。</li>\n</ul>\n<p><strong>强缓存的使用对象 css文件，js文件等，我们一般不会对html文件进行强缓存处理</strong></p>\n<div class="language-html ext-html line-numbers-mode"><pre v-pre class="language-html"><code>// 在路径后面加上时间戳或者版本号作为标识\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/index.css?version=1.1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="协商缓存" tabindex="-1"><a class="header-anchor" href="#协商缓存" aria-hidden="true">#</a> 协商缓存</h4>\n<p>向服务器发送请求，服务器会根据请求头的资源判断是否命中协商缓存，如果命中，则返回304状态码通知浏览器从缓存中读取资源。<strong>(推荐)在强缓存失效的情况下，才会触发浏览器的协商缓存机制</strong></p>\n<p><strong>这主要涉及到下面两组<code>header</code>字段，这两组搭档都是<code>成对</code>出现的，即第一次请求的响应头带上某个字段（<code>Last-Modified</code>或者<code>Etag</code>），则后续请求则会带上对应的请求字段（<code>If-Modified-Since</code>或者<code>If-None-Match</code>），若响应头没有Last-Modified或者Etag字段，则请求头也不会有对应的字段。</strong></p>\n<p><strong>ETag/If-None-Match</strong>  http 1.1</p>\n<p>与Last-Modify/If-Modify-Since不同的是，Etag/If-None-Match返回的是一个<strong>校验码</strong>。ETag可以保证每一个资源是唯一的**，资源变化都会导致ETag变化**。服务器根据浏览器上送的If-None-Match值来判断是否命中缓存。</p>\n<p>与Last-Modified不一样的是，当服务器返回304 Not Modified的响应时，由于ETag重新生成过，response header中还会把这个ETag返回，即使这个ETag跟之前的没有变化。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/front/浏览器.html",pathLocale:"/",permalink:null,routeMeta:{title:"浏览器"},slug:"浏览器",filePath:"/root/blog/blogs/front/浏览器.md",filePathRelative:"blogs/front/浏览器.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/front/浏览器.html.vue",componentFilePathRelative:"pages/blogs/front/浏览器.html.vue",componentFileChunkName:"v-aac5cb8a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/front/浏览器.html.js",dataFilePathRelative:"pages/blogs/front/浏览器.html.js",dataFileChunkName:"v-aac5cb8a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/front/浏览器.html",htmlFilePathRelative:"blogs/front/浏览器.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"},{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"},{data:{key:"v-e3b887da",path:"/blogs/tech/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/tech/第一篇博客学习.md"},key:"v-e3b887da",path:"/blogs/tech/diyipianbokexuexi.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],content:'\r\n**阅读本文大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n::: tip\r\n\r\n前期\r\n\r\n```json\r\n# 初始化 最好不要用全局安装（yarn 未收录)\r\nnpm install @vuepress-reco/theme-cli\r\ntheme-cli init\r\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\r\n# 然后是输入名字、描述、作者名字\r\n# 选择blog和doc无大区别我选择blog\r\n\r\n# 安装\r\nnpm install\r\n\r\n# 运行(等加载完,点开localhost那个链接就可以看到自己的网站，帅不帅？)\r\nnpm run dev\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！\r\n\r\n\r\n```json\r\n# 创建github仓库,网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\r\n# 则不需要设置base属性，把.vuepress\\config.js的"dest":"public"删除\r\n# 删除的目的是：打包在默认的dist文件夹.\r\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\r\n\r\n"base":"/你仓库的名字/",\r\n\r\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\r\n\r\nnpm run build\r\n\r\n# 这时候.vuepress文件夹会多出一个dist文件夹\r\n\r\ncd .vuepress\\dist\r\n\r\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\r\n\r\ngit init\r\ngit add .\r\ngit commit -m "deploy"\r\ngit push\r\ngit remote add origin 你项目地址(https)\r\ngit push -u origin master -f\r\n# 这个push 会创建一个master分支，进入仓库 setting\r\n```\r\n\r\n然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了\r\n\r\n:::\r\n\r\n# 关于目录结构\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png)\r\n\r\n::: tip\r\n\r\n一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？\r\n\r\n> dist是运行了`npm run build`所产生的目录，没必要动它\r\n>\r\n> blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E4%BB%A3%E7%A0%81.png)\r\n\r\n> docs是导航栏的docs里面写的文章不用写类别会自动归类到docs\r\n\r\n**基本就这样了!**\r\n\r\n:::',contentRendered:'<p><strong>阅读本文大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>前期</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 初始化 最好不要用全局安装（yarn 未收录)\nnpm install @vuepress-reco/theme-cli\ntheme-cli init\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\n# 然后是输入名字、描述、作者名字\n# 选择blog和doc无大区别我选择blog\n\n# 安装\nnpm install\n\n# 运行(等加载完<span class="token punctuation">,</span>点开localhost那个链接就可以看到自己的网站，帅不帅？)\nnpm run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 创建github仓库<span class="token punctuation">,</span>网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\n# 则不需要设置base属性，把.vuepress\\config.js的<span class="token property">"dest"</span><span class="token operator">:</span><span class="token string">"public"</span>删除\n# 删除的目的是：打包在默认的dist文件夹.\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\n\n<span class="token property">"base"</span><span class="token operator">:</span><span class="token string">"/你仓库的名字/"</span><span class="token punctuation">,</span>\n\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\n\nnpm run build\n\n# 这时候.vuepress文件夹会多出一个dist文件夹\n\ncd .vuepress\\dist\n\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\n\ngit init\ngit add .\ngit commit -m <span class="token string">"deploy"</span>\ngit push\ngit remote add origin 你项目地址(https)\ngit push -u origin master -f\n# 这个push 会创建一个master分支，进入仓库 setting\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了</p>\n</div><h1 id="关于目录结构" tabindex="-1"><a class="header-anchor" href="#关于目录结构" aria-hidden="true">#</a> 关于目录结构</h1>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/项目结构.png" alt=""></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？</p>\n<blockquote>\n<p>dist是运行了<code>npm run build</code>所产生的目录，没必要动它</p>\n<p>blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类</p>\n</blockquote>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/代码.png" alt=""></p>\n<blockquote>\n<p>docs是导航栏的docs里面写的文章不用写类别会自动归类到docs</p>\n</blockquote>\n<p><strong>基本就这样了!</strong></p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/第一篇博客学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"第一篇踩坑@vuepress-reco/theme-cli"},slug:"第一篇博客学习",filePath:"/root/blog/blogs/tech/第一篇博客学习.md",filePathRelative:"blogs/tech/第一篇博客学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.vue",componentFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.vue",componentFileChunkName:"v-e3b887da",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.js",dataFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.js",dataFileChunkName:"v-e3b887da",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/第一篇博客学习.html",htmlFilePathRelative:"blogs/tech/第一篇博客学习.html"},{data:{key:"v-0584b74e",path:"/docs/others/donate.html",title:"赞赏",lang:"en-US",frontmatter:{title:"赞赏"},excerpt:"",headers:[],git:{},filePathRelative:"docs/others/donate.md"},key:"v-0584b74e",path:"/docs/others/donate.html",title:"赞赏",lang:"en-US",frontmatter:{title:"赞赏"},excerpt:"",headers:[],content:'\r\n**如果觉得不错，可以请我一杯咖啡!**\r\nwechat\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/img/%E5%BE%AE%E4%BF%A1%E8%B5%9E%E8%B5%8F%E7%A0%81.jpg" alt="wechat" style="zoom: 33%;" />\r\n\r\n------\r\nalipay\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/img/%E6%94%AF%E4%BB%98%E5%AE%9D%E6%94%B6%E6%AC%BE%E7%A0%81.jpg" alt="alipay" style="zoom:50%;" />',contentRendered:'<p><strong>如果觉得不错，可以请我一杯咖啡!</strong>\nwechat</p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/img/微信赞赏码.jpg" alt="wechat" style="zoom: 33%;" />\n<hr>\n<p>alipay</p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/img/支付宝收款码.jpg" alt="alipay" style="zoom:50%;" />',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/docs/others/donate.html",pathLocale:"/",permalink:null,routeMeta:{title:"赞赏"},slug:"donate",filePath:"/root/blog/docs/others/donate.md",filePathRelative:"docs/others/donate.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/docs/others/donate.html.vue",componentFilePathRelative:"pages/docs/others/donate.html.vue",componentFileChunkName:"v-0584b74e",dataFilePath:"/root/blog/.vuepress/.temp/pages/docs/others/donate.html.js",dataFilePathRelative:"pages/docs/others/donate.html.js",dataFileChunkName:"v-0584b74e",htmlFilePath:"/root/blog/.vuepress/dist/docs/others/donate.html",htmlFilePathRelative:"docs/others/donate.html"}],l={categories:{pagination:10,extendedPages:[{},{},{},{},{},{},{},{}],items:{Algorithm:{length:2,pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}],label:"Algorithm"},CSS:{pages:[{data:{key:"v-c8e1aa5a",path:"/blogs/CSS/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],git:{},filePathRelative:"blogs/CSS/文本溢出.md"},key:"v-c8e1aa5a",path:"/blogs/CSS/wenbenyichu.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],content:"\r\n## 文本溢出样式解决方法\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\noverflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）\r\n\r\nwhite-space: nowrap；（设置文字在一行显示，不能换行）\r\n\r\ntext-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\r\n```\r\n\r\n**纯 CSS 实现方案**\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\n-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数,2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\r\n\r\ndisplay: -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\r\n\r\n-webkit-box-orient: vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\r\n\r\noverflow: hidden；（文本溢出限定的宽度就隐藏内容）\r\n\r\ntext-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)\r\n```\r\n\r\n**优点**\r\n\r\n- 响应式截断\r\n- 文本溢出范围才显示省略号，否则不显示省略号\r\n- 省略号显示位置刚好\r\n\r\n  ![123](https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png)\r\n",contentRendered:'<h2 id="文本溢出样式解决方法" tabindex="-1"><a class="header-anchor" href="#文本溢出样式解决方法" aria-hidden="true">#</a> 文本溢出样式解决方法</h2>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文字长度超出限定宽度，则隐藏超出的内容）\n\n<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap；（设置文字在一行显示，不能换行）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>纯 CSS 实现方案</strong></p>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2；（用来限制在一个块元素显示的文本的行数<span class="token punctuation">,</span>2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\n\n<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\n\n<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\n\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文本溢出限定的宽度就隐藏内容）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>优点</strong></p>\n<ul>\n<li>\n<p>响应式截断</p>\n</li>\n<li>\n<p>文本溢出范围才显示省略号，否则不显示省略号</p>\n</li>\n<li>\n<p>省略号显示位置刚好</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png" alt="123"></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/CSS/文本溢出.html",pathLocale:"/",permalink:null,routeMeta:{title:"css文本溢出省略解决方法"},slug:"文本溢出",filePath:"/root/blog/blogs/CSS/文本溢出.md",filePathRelative:"blogs/CSS/文本溢出.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.vue",componentFilePathRelative:"pages/blogs/CSS/文本溢出.html.vue",componentFileChunkName:"v-c8e1aa5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.js",dataFilePathRelative:"pages/blogs/CSS/文本溢出.html.js",dataFileChunkName:"v-c8e1aa5a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/CSS/文本溢出.html",htmlFilePathRelative:"blogs/CSS/文本溢出.html"}],length:1,label:"CSS"},NodeJS:{pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}],length:1,label:"NodeJS"},notes:{length:10,pages:[{data:{key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],git:{},filePathRelative:"blogs/notes/Arduino_Libraries.md"},key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],content:'\r\n## How to create a Arduino Libraries\r\n\r\n1. 在`Arduino`目录下的`libraries`中新建一个自命名文件夹\r\n\r\n2. 添加同名`.cpp` `.h`文件\r\n\r\n   ```cpp\r\n   # My_libraries.h\r\n   #ifndef My_libraries\r\n   #include <Arduino.h>\r\n   void Test();\r\n   #endif\r\n   ```\r\n\r\n   ```cpp\r\n   # My_libraries.cpp\r\n   #include <Arduino.h>\r\n   void Test(){\r\n   \tSerial.println("Hello!");\r\n   \tdelay(1000);\r\n   }\r\n   ```\r\n\r\n3. （可选）创建`example`文件夹，再创建`example.ino`\r\n\r\n   ```cpp\r\n   #include <Arduino.h>\r\n   #include "My_libraries.h" // 引入自己的库\r\n\r\n   void setup(){\r\n       Serial.begin(115200);\r\n       Test();\r\n   }\r\n   void loop(){\r\n       Test();\r\n   }\r\n   ```\r\n\r\n**其余自行搜索，仅提供简单示例模板**\r\n',contentRendered:'<h2 id="how-to-create-a-arduino-libraries" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-arduino-libraries" aria-hidden="true">#</a> How to create a Arduino Libraries</h2>\n<ol>\n<li>\n<p>在<code>Arduino</code>目录下的<code>libraries</code>中新建一个自命名文件夹</p>\n</li>\n<li>\n<p>添加同名<code>.cpp</code> <code>.h</code>文件</p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>h</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">My_libraries</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>cpp</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tSerial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n<li>\n<p>（可选）创建<code>example</code>文件夹，再创建<code>example.ino</code></p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"My_libraries.h"</span> <span class="token comment">// 引入自己的库</span></span>\n\n<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ol>\n<p><strong>其余自行搜索，仅提供简单示例模板</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Arduino_Libraries.html",pathLocale:"/",permalink:null,routeMeta:{title:"拥有Arduino自己的库"},slug:"Arduino_Libraries",filePath:"/root/blog/blogs/notes/Arduino_Libraries.md",filePathRelative:"blogs/notes/Arduino_Libraries.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.vue",componentFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.vue",componentFileChunkName:"v-7f956b1c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.js",dataFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.js",dataFileChunkName:"v-7f956b1c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Arduino_Libraries.html",htmlFilePathRelative:"blogs/notes/Arduino_Libraries.html"},{data:{key:"v-9e971e66",path:"/blogs/notes/%E8%B4%A1%E7%8C%AE%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],git:{},filePathRelative:"blogs/notes/贡献项目代码.md"},key:"v-9e971e66",path:"/blogs/notes/gongxianxiangmudaima.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],content:'\r\n## 贡献项目代码\r\n\r\n### Fork\r\n\r\n`Fork`项目\r\n\r\n### Clone\r\n\r\n`git clone`项目\r\n\r\n### Branch\r\n\r\n`git checkout -b 你的branch名`\r\n\r\n### Code\r\n\r\n修改代码\r\n\r\n### git\r\n\r\n`git add .` `git commit -m "这次我修改了XX"` `git push origin 你的branch名`\r\n\r\n### Pull Request\r\n\r\n去自己 fork 的项目提交 pull request\r\n',contentRendered:'<h2 id="贡献项目代码" tabindex="-1"><a class="header-anchor" href="#贡献项目代码" aria-hidden="true">#</a> 贡献项目代码</h2>\n<h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3>\n<p><code>Fork</code>项目</p>\n<h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> Clone</h3>\n<p><code>git clone</code>项目</p>\n<h3 id="branch" tabindex="-1"><a class="header-anchor" href="#branch" aria-hidden="true">#</a> Branch</h3>\n<p><code>git checkout -b 你的branch名</code></p>\n<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3>\n<p>修改代码</p>\n<h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h3>\n<p><code>git add .</code> <code>git commit -m &quot;这次我修改了XX&quot;</code> <code>git push origin 你的branch名</code></p>\n<h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3>\n<p>去自己 fork 的项目提交 pull request</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/贡献项目代码.html",pathLocale:"/",permalink:null,routeMeta:{title:"贡献项目代码姿势"},slug:"贡献项目代码",filePath:"/root/blog/blogs/notes/贡献项目代码.md",filePathRelative:"blogs/notes/贡献项目代码.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.vue",componentFilePathRelative:"pages/blogs/notes/贡献项目代码.html.vue",componentFileChunkName:"v-9e971e66",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.js",dataFilePathRelative:"pages/blogs/notes/贡献项目代码.html.js",dataFileChunkName:"v-9e971e66",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/贡献项目代码.html",htmlFilePathRelative:"blogs/notes/贡献项目代码.html"},{data:{key:"v-516955de",path:"/blogs/notes/ESP8266%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91SDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],git:{},filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md"},key:"v-516955de",path:"/blogs/notes/ESP8266lianjiealiyunSDK.html",title:"ESP8266连接阿里云SDK",lang:"en-US",frontmatter:{title:"ESP8266连接阿里云SDK",date:"2021/10/26",categories:["notes"]},excerpt:"<p><strong>ESP8266 连接阿里云</strong></p>\n",headers:[{level:2,title:"ESP8266 连接阿里云",slug:"esp8266-连接阿里云",children:[]}],content:"\r\n**ESP8266 连接阿里云**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## ESP8266 连接阿里云\r\n\r\n**最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。**\r\n\r\n**第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置**\r\n\r\n> Arduino IDE 配置\r\n>\r\n> - 首选项 - `附加开发板管理器网址` 输入 `https://arduino.esp8266.com/stable/package_esp8266com_index.json`\r\n> - 工具 - 开发板 - 开发板管理器 - 搜索 `8266` 并安装\r\n\r\n**为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）**\r\n\r\n[Arduino-Aliyun-IoT-SDK](https://github.com/yu-tou/arduino-aliyun-iot-sdk)**，这个是 Arduino 的阿里 IOT 库，官方仓库。**\r\n\r\n**使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。**\r\n\r\n**然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到`PubSubClient.h`修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。**\r\n\r\n[感谢填坑者！](https://www.codenong.com/cs107032096/)\r\n\r\n**最后连接。**\r\n\r\n---\r\n",contentRendered:'<p><strong>ESP8266 连接阿里云</strong></p>\n\x3c!-- more --\x3e\n<h2 id="esp8266-连接阿里云" tabindex="-1"><a class="header-anchor" href="#esp8266-连接阿里云" aria-hidden="true">#</a> ESP8266 连接阿里云</h2>\n<p><strong>最近在倒腾 ESP8266，弄物联网，为了联上阿里云物联网平台，得多加使用搜索引擎。</strong></p>\n<p><strong>第一步先 Arduino 适配合适的板子(esp8266)和型号，具体自己搜一下，这个要学会自己配置</strong></p>\n<blockquote>\n<p>Arduino IDE 配置</p>\n<ul>\n<li>首选项 - <code>附加开发板管理器网址</code> 输入 <code>https://arduino.esp8266.com/stable/package_esp8266com_index.json</code></li>\n<li>工具 - 开发板 - 开发板管理器 - 搜索 <code>8266</code> 并安装</li>\n</ul>\n</blockquote>\n<p><strong>为了避免大家走弯路，直接给出合理官方的 SDK。（切记那些 18、19 年的教学早已过时）</strong></p>\n<p><a href="https://github.com/yu-tou/arduino-aliyun-iot-sdk" target="_blank" rel="noopener noreferrer">Arduino-Aliyun-IoT-SDK<ExternalLinkIcon/></a><strong>，这个是 Arduino 的阿里 IOT 库，官方仓库。</strong></p>\n<p><strong>使用上照着仓库 Usage，安装好 ArduinoJson,Crypto,PubSubClient 库，根据使用实例填好所需项。</strong></p>\n<p><strong>然后注意！打开 Arduino 的 libraries 的 PubSubClient 的 Src 文件夹，找到<code>PubSubClient.h</code>修改 MQTT_MAX_PACKET_SIZE 和 MQTT_KEEPALIVE 的值，将其改大点，比如改成 1024 和 60。</strong></p>\n<p><a href="https://www.codenong.com/cs107032096/" target="_blank" rel="noopener noreferrer">感谢填坑者！<ExternalLinkIcon/></a></p>\n<p><strong>最后连接。</strong></p>\n<hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/ESP8266连接阿里云SDK.html",pathLocale:"/",permalink:null,routeMeta:{title:"ESP8266连接阿里云SDK"},slug:"ESP8266连接阿里云SDK",filePath:"/root/blog/blogs/notes/ESP8266连接阿里云SDK.md",filePathRelative:"blogs/notes/ESP8266连接阿里云SDK.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.vue",componentFileChunkName:"v-516955de",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFilePathRelative:"pages/blogs/notes/ESP8266连接阿里云SDK.html.js",dataFileChunkName:"v-516955de",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/ESP8266连接阿里云SDK.html",htmlFilePathRelative:"blogs/notes/ESP8266连接阿里云SDK.html"},{data:{key:"v-d8264f08",path:"/blogs/notes/Docker%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],git:{},filePathRelative:"blogs/notes/Docker命令合集.md"},key:"v-d8264f08",path:"/blogs/notes/Dockerminglingheji.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],content:'\r\nDocker以及Dockerfile命令合集-持续更新。\r\n\x3c!-- more --\x3e\r\n\r\n## Docker\r\n\r\n**build镜像(有Dockerfile)**\r\n\r\n```shell\r\ndocker build -t myimage --network host .\r\n```\r\n\r\n> myimage是自定义镜像名，可自行更改, -t [命名]\r\n>\r\n> 公司配备一般还要加上 --network host才能访问请求网络\r\n\r\n**实例化一个容器**\r\n\r\n```shell\r\ndocker run -d --name bili --network host --restart unless-stopped -p 9090:9090 -p 8022:22 myimage\r\n```\r\n\r\n> -d 在后台运行容器\r\n>\r\n> -p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p） \r\n>\r\n> myimage 镜像名字\r\n>\r\n> -it  i是保持输入，t是将日志绑定伪终端输出\r\n>\r\n> --restart unless-stopped 这个适用于自动重开容器\r\n\r\n**进入容器内部**\r\n\r\n```shell\r\ndocker exec -it 容器id/容器名字 bash\r\n```\r\n\r\n## 如何优雅的退出容器但是不停止容器运行？\r\n  `ctrl`+`P`+`Q` **切记，如果你有热键绑定，先取消**\r\n  然后`docker ps`就能看到你的容器在运行\r\n\r\n**查看镜像或者容器**\r\n\r\n```\r\n#镜像\r\ndocker images\r\n\r\n#容器(正在运行的)\r\ndocker ps\r\n\r\n#容器(所有)\r\ndocker ps -a\r\n```\r\n\r\n**删除容器**\r\n\r\n```\r\ndocker stop 容器id && docker rm 容器id\r\n```\r\n\r\n> 如果容器实例没有运行，执行后半句,容器id也可以是名字\r\n\r\n**删除镜像**\r\n\r\n```\r\ndocker rmi 镜像id/镜像名字\r\n#如果提示无法删除，有attach其他镜像，则执行下面语句\r\ndocker rmi -f 镜像id/镜像名字\r\n```\r\n\r\n> 先要暂停和删除该镜像下的所有容器才能删除镜像\r\n\r\n**查看容器运行失败日志**\r\n\r\n很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息\r\n\r\n```\r\n# 获取日志地址\r\ndocker inspect --format \'{{.LogPath}}\' 容器id\r\n# 这时会打印一串地址，复制\r\n# 通过cat命令查看日志\r\ncat 刚刚复制的地址\r\n\r\n```\r\n\r\n**查看容器运行时日志**\r\n\r\n```\r\n# 适用日志不多，因为是把全部日志输出(打印实时log)\r\ndocker logs -f 容器名字\r\n\r\n# 输出最近10条日志\r\ndocker logs --tail 10 容器名字\r\n\r\n# 筛选log(查找“error”)\r\ndocker logs | grep error\r\n```\r\n\r\n**如果进入了虚拟终端`-it`，使用`ctrl`+`P` `Q`(一起按) 达成退出但不停止容器运行**\r\n\r\n## Dockerfile\r\n\r\n**Dockerfile：一个文件命名为Dockerfile，无后缀**\r\n\r\n```dockerfile\r\nFROM python\r\n# FROM 指定基础镜像\r\n\r\nCOPY ./app /app\r\n# COPY [文件1/文件夹1] [路径]\r\n# 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径\r\n\r\nWORKDIR /app\r\n# 指定工作目录\r\n\r\nRUN apt-get update -y && \\\r\n\tapt-get install -y vim && \\\r\n\tpip3 install -r requirements.txt\r\n# RUN 执行命令，务必命令使用&&连起来(\\：意思换行)\r\n\r\nCMD ["python3","main.py"]\r\n# CMD 容器启动时执行的命令\r\n\r\nEXPOSE 9090\r\n# 声明暴露指定端口，并不是真的暴露，帮助理解\r\n```\r\n\r\n## Docker hub\r\n\r\n现有一个`docker hub`账号和新建一个公开仓库\r\n\r\n```shell\r\n# 1\r\ndocker tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\r\n\r\n# 2 \r\ndocker login\r\n\r\n# 3 \r\ndocker push 目标仓库名字/用户名:tag\r\n```\r\n\r\n',contentRendered:'<p>Docker以及Dockerfile命令合集-持续更新。</p>\n\x3c!-- more --\x3e\n<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>\n<p><strong>build镜像(有Dockerfile)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> build -t myimage --network <span class="token function">host</span> <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>myimage是自定义镜像名，可自行更改, -t [命名]</p>\n<p>公司配备一般还要加上 --network host才能访问请求网络</p>\n</blockquote>\n<p><strong>实例化一个容器</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name bili --network <span class="token function">host</span> --restart unless-stopped -p <span class="token number">9090</span>:9090 -p <span class="token number">8022</span>:22 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>-d 在后台运行容器</p>\n<p>-p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p）</p>\n<p>myimage 镜像名字</p>\n<p>-it  i是保持输入，t是将日志绑定伪终端输出</p>\n<p>--restart unless-stopped 这个适用于自动重开容器</p>\n</blockquote>\n<p><strong>进入容器内部</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it 容器id/容器名字 <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何优雅的退出容器但是不停止容器运行" tabindex="-1"><a class="header-anchor" href="#如何优雅的退出容器但是不停止容器运行" aria-hidden="true">#</a> 如何优雅的退出容器但是不停止容器运行？</h2>\n<p><code>ctrl</code>+<code>P</code>+<code>Q</code> <strong>切记，如果你有热键绑定，先取消</strong>\n然后<code>docker ps</code>就能看到你的容器在运行</p>\n<p><strong>查看镜像或者容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>#镜像\ndocker images\n\n#容器(正在运行的)\ndocker ps\n\n#容器(所有)\ndocker ps -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>删除容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker stop 容器id &amp;&amp; docker rm 容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>如果容器实例没有运行，执行后半句,容器id也可以是名字</p>\n</blockquote>\n<p><strong>删除镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rmi 镜像id/镜像名字\n#如果提示无法删除，有attach其他镜像，则执行下面语句\ndocker rmi -f 镜像id/镜像名字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>先要暂停和删除该镜像下的所有容器才能删除镜像</p>\n</blockquote>\n<p><strong>查看容器运行失败日志</strong></p>\n<p>很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 获取日志地址\ndocker inspect --format \'{{.LogPath}}\' 容器id\n# 这时会打印一串地址，复制\n# 通过cat命令查看日志\ncat 刚刚复制的地址\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>查看容器运行时日志</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 适用日志不多，因为是把全部日志输出(打印实时log)\ndocker logs -f 容器名字\n\n# 输出最近10条日志\ndocker logs --tail 10 容器名字\n\n# 筛选log(查找“error”)\ndocker logs | grep error\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>如果进入了虚拟终端<code>-it</code>，使用<code>ctrl</code>+<code>P</code> <code>Q</code>(一起按) 达成退出但不停止容器运行</strong></p>\n<h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2>\n<p><strong>Dockerfile：一个文件命名为Dockerfile，无后缀</strong></p>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python</span>\n<span class="token comment"># FROM 指定基础镜像</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./app /app</span>\n<span class="token comment"># COPY [文件1/文件夹1] [路径]</span>\n<span class="token comment"># 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径</span>\n\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>\n<span class="token comment"># 指定工作目录</span>\n\n<span class="token instruction"><span class="token keyword">RUN</span> apt-get update -y &amp;&amp; <span class="token operator">\\</span>\n\tapt-get install -y vim &amp;&amp; <span class="token operator">\\</span>\n\tpip3 install -r requirements.txt</span>\n<span class="token comment"># RUN 执行命令，务必命令使用&amp;&amp;连起来(\\：意思换行)</span>\n\n<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"python3"</span>,<span class="token string">"main.py"</span>]</span>\n<span class="token comment"># CMD 容器启动时执行的命令</span>\n\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9090</span>\n<span class="token comment"># 声明暴露指定端口，并不是真的暴露，帮助理解</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker hub</h2>\n<p>现有一个<code>docker hub</code>账号和新建一个公开仓库</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 1</span>\n<span class="token function">docker</span> tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\n\n<span class="token comment"># 2 </span>\n<span class="token function">docker</span> login\n\n<span class="token comment"># 3 </span>\n<span class="token function">docker</span> push 目标仓库名字/用户名:tag\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Docker命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker命令合集"},slug:"Docker命令合集",filePath:"/root/blog/blogs/notes/Docker命令合集.md",filePathRelative:"blogs/notes/Docker命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/Docker命令合集.html.vue",componentFileChunkName:"v-d8264f08",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/Docker命令合集.html.js",dataFileChunkName:"v-d8264f08",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Docker命令合集.html",htmlFilePathRelative:"blogs/notes/Docker命令合集.html"},{data:{key:"v-60868ce6",path:"/blogs/notes/gitignore%E6%95%99%E5%AD%A6.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/notes/gitignore教学.md"},key:"v-60868ce6",path:"/blogs/notes/gitignorejiaoxue.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],content:'\r\n**.gitignore是一个好东西**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n**.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件**\r\n\r\n**Q：我写了规则在里面，怎么上传的时候没有生效**\r\n\r\n**A：git缓存需要清除**\r\n\r\n```sh\r\n# solution\r\ngit rm -r --cached .\r\ngit add .\r\ngit commit -m "update .gitignore"\r\n```\r\n\r\n**Pycharm的.gitignore**\r\n\r\n```sh\r\n# Created by .ignore support plugin (hsz.mobi)\r\n### Python template\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\n# 如果有前端打包的项目这里要去掉 dist/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n### VirtualEnv template\r\n# Virtualenv\r\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\r\n.Python\r\n[Bb]in\r\n[Ii]nclude\r\n[Ll]ib\r\n[Ll]ib64\r\n[Ll]ocal\r\n[Ss]cripts\r\npyvenv.cfg\r\n.venv\r\npip-selfcheck.json\r\n### JetBrains template\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff:\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/dictionaries\r\n.idea/vcs.xml\r\n.idea/jsLibraryMappings.xml\r\n\r\n# Sensitive or high-churn files:\r\n.idea/dataSources.ids\r\n.idea/dataSources.xml\r\n.idea/dataSources.local.xml\r\n.idea/sqlDataSources.xml\r\n.idea/dynamic.xml\r\n.idea/uiDesigner.xml\r\n\r\n# Gradle:\r\n.idea/gradle.xml\r\n.idea/libraries\r\n\r\n# Mongo Explorer plugin:\r\n.idea/mongoSettings.xml\r\n\r\n.idea/\r\n\r\n## File-based project format:\r\n*.iws\r\n\r\n## Plugin-specific files:\r\n\r\n# IntelliJ\r\n/out/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n```\r\n\r\n',contentRendered:'<p><strong>.gitignore是一个好东西</strong></p>\n\x3c!-- more --\x3e\n<p><strong>.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件</strong></p>\n<p><strong>Q：我写了规则在里面，怎么上传的时候没有生效</strong></p>\n<p><strong>A：git缓存需要清除</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># solution</span>\n<span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">"update .gitignore"</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Pycharm的.gitignore</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># Created by .ignore support plugin (hsz.mobi)</span>\n<span class="token comment">### Python template</span>\n<span class="token comment"># Byte-compiled / optimized / DLL files</span>\n__pycache__/\n*.py<span class="token punctuation">[</span>cod<span class="token punctuation">]</span>\n*<span class="token variable">$py</span>.class\n\n<span class="token comment"># C extensions</span>\n*.so\n\n<span class="token comment"># Distribution / packaging</span>\n.Python\nenv/\nbuild/\ndevelop-eggs/\n<span class="token comment"># 如果有前端打包的项目这里要去掉 dist/</span>\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n<span class="token comment"># PyInstaller</span>\n<span class="token comment">#  Usually these files are written by a python script from a template</span>\n<span class="token comment">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span>\n*.manifest\n*.spec\n\n<span class="token comment"># Installer logs</span>\npip-log.txt\npip-delete-this-directory.txt\n\n<span class="token comment"># Unit test / coverage reports</span>\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n<span class="token comment"># Translations</span>\n*.mo\n*.pot\n\n<span class="token comment"># Django stuff:</span>\n*.log\nlocal_settings.py\n\n<span class="token comment"># Flask stuff:</span>\ninstance/\n.webassets-cache\n\n<span class="token comment"># Scrapy stuff:</span>\n.scrapy\n\n<span class="token comment"># Sphinx documentation</span>\ndocs/_build/\n\n<span class="token comment"># PyBuilder</span>\ntarget/\n\n<span class="token comment"># IPython Notebook</span>\n.ipynb_checkpoints\n\n<span class="token comment"># pyenv</span>\n.python-version\n\n<span class="token comment"># celery beat schedule file</span>\ncelerybeat-schedule\n\n<span class="token comment"># dotenv</span>\n.env\n\n<span class="token comment"># virtualenv</span>\nvenv/\nENV/\n\n<span class="token comment"># Spyder project settings</span>\n.spyderproject\n\n<span class="token comment"># Rope project settings</span>\n.ropeproject\n<span class="token comment">### VirtualEnv template</span>\n<span class="token comment"># Virtualenv</span>\n<span class="token comment"># http://iamzed.com/2009/05/07/a-primer-on-virtualenv/</span>\n.Python\n<span class="token punctuation">[</span>Bb<span class="token punctuation">]</span>in\n<span class="token punctuation">[</span>Ii<span class="token punctuation">]</span>nclude\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib64\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ocal\n<span class="token punctuation">[</span>Ss<span class="token punctuation">]</span>cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n<span class="token comment">### JetBrains template</span>\n<span class="token comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm</span>\n<span class="token comment"># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span>\n\n<span class="token comment"># User-specific stuff:</span>\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n<span class="token comment"># Sensitive or high-churn files:</span>\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n<span class="token comment"># Gradle:</span>\n.idea/gradle.xml\n.idea/libraries\n\n<span class="token comment"># Mongo Explorer plugin:</span>\n.idea/mongoSettings.xml\n\n.idea/\n\n<span class="token comment">## File-based project format:</span>\n*.iws\n\n<span class="token comment">## Plugin-specific files:</span>\n\n<span class="token comment"># IntelliJ</span>\n/out/\n\n<span class="token comment"># mpeltonen/sbt-idea plugin</span>\n.idea_modules/\n\n<span class="token comment"># JIRA plugin</span>\natlassian-ide-plugin.xml\n\n<span class="token comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span>\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/gitignore教学.html",pathLocale:"/",permalink:null,routeMeta:{title:"gitignore教学"},slug:"gitignore教学",filePath:"/root/blog/blogs/notes/gitignore教学.md",filePathRelative:"blogs/notes/gitignore教学.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.vue",componentFilePathRelative:"pages/blogs/notes/gitignore教学.html.vue",componentFileChunkName:"v-60868ce6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.js",dataFilePathRelative:"pages/blogs/notes/gitignore教学.html.js",dataFileChunkName:"v-60868ce6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/gitignore教学.html",htmlFilePathRelative:"blogs/notes/gitignore教学.html"},{data:{key:"v-3cc188f4",path:"/blogs/notes/pipenv%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],git:{},filePathRelative:"blogs/notes/pipenv命令合集.md"},key:"v-3cc188f4",path:"/blogs/notes/pipenvminglingheji.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],content:"\r\npipenv命令合集。\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## pipenv指南\r\n\r\n### 特点\r\n\r\n- 不需要再维护requirements.txt，用pipfile和pipfile.lock\r\n- 兼容多个python版本\r\n\r\n### 安装\r\n\r\n```sh\r\npip install pipenv\r\n```\r\n\r\n### 常用命令\r\n\r\n```\r\n# 安装包\r\npipenv install\r\n# pipenv install flask\r\n\r\n# 激活当前项目的虚拟环境\r\npipenv shell\r\n\r\n# 安装开发依赖包\r\npipenv install pytest --dev\r\n\r\n# 图形显示包依赖关系\r\npipenv graph\r\n\r\n# 生成lockfile\r\npipenv lock\r\n\r\n# 删除所有的安装包\r\npipenv uninstall --all\r\n```\r\n\r\n",contentRendered:'<p>pipenv命令合集。</p>\n\x3c!-- more --\x3e\n<h2 id="pipenv指南" tabindex="-1"><a class="header-anchor" href="#pipenv指南" aria-hidden="true">#</a> pipenv指南</h2>\n<h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3>\n<ul>\n<li>不需要再维护requirements.txt，用pipfile和pipfile.lock</li>\n<li>兼容多个python版本</li>\n</ul>\n<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>pip <span class="token function">install</span> pipenv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 安装包\npipenv install\n# pipenv install flask\n\n# 激活当前项目的虚拟环境\npipenv shell\n\n# 安装开发依赖包\npipenv install pytest --dev\n\n# 图形显示包依赖关系\npipenv graph\n\n# 生成lockfile\npipenv lock\n\n# 删除所有的安装包\npipenv uninstall --all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/pipenv命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"pipenv命令合集"},slug:"pipenv命令合集",filePath:"/root/blog/blogs/notes/pipenv命令合集.md",filePathRelative:"blogs/notes/pipenv命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.vue",componentFileChunkName:"v-3cc188f4",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.js",dataFileChunkName:"v-3cc188f4",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/pipenv命令合集.html",htmlFilePathRelative:"blogs/notes/pipenv命令合集.html"},{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"},{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-54860d63",path:"/blogs/notes/clash%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],git:{},filePathRelative:"blogs/notes/clash使用技巧.md"},key:"v-54860d63",path:"/blogs/notes/clashshiyongjiqiao.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],content:'\r\n**clash基本操作指南，（~~基于有机场的~~）阅读本文1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## install\r\n\r\n[官方下载连接](https://github.com/Fndroid/clash_for_windows_pkg/releases)\r\n\r\n**下载好后，打开clash**\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\r\n\r\n**建议下载你~~机场~~的profile，然后import导入，点一下profile启用**\r\n\r\n## Tips\r\n\r\n![profile](https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png)\r\n\r\n**国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode->rule**\r\n\r\n**或者**\r\n\r\n![open](https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png)\r\n\r\n**我不建议把其他流量设置为国外流量，我会解释为什么这样做**\r\n\r\n**[谷歌商店搜索安装switchyomega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon)**\r\n\r\n**比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png)\r\n\r\n**回到我们clash的Profiles界面，选择下图这个**\r\n\r\n![profiles](https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png)\r\n\r\n- 选择添加ADD\r\n\r\n  ![add](https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png)\r\n\r\n- content 写入`hupu.com`,  type选择 `DOMAIN-SUFFIX` , Proxy选择 `Direct`\r\n\r\n**当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择`Direct`，如果遇到别的网站需要代理的，选择`国外流量`即可**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png)\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理**\r\n\r\n## 最后\r\n\r\n**为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的**',contentRendered:'<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>\n<p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">官方下载连接<ExternalLinkIcon/></a></p>\n<p><strong>下载好后，打开clash</strong></p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\n<p><strong>建议下载你<s>机场</s>的profile，然后import导入，点一下profile启用</strong></p>\n<h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png" alt="profile"></p>\n<p><strong>国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode-&gt;rule</strong></p>\n<p><strong>或者</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png" alt="open"></p>\n<p><strong>我不建议把其他流量设置为国外流量，我会解释为什么这样做</strong></p>\n<p><strong><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">谷歌商店搜索安装switchyomega<ExternalLinkIcon/></a></strong></p>\n<p><strong>比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png" alt="hupu"></p>\n<p><strong>回到我们clash的Profiles界面，选择下图这个</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png" alt="profiles"></p>\n<ul>\n<li>\n<p>选择添加ADD</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png" alt="add"></p>\n</li>\n<li>\n<p>content 写入<code>hupu.com</code>,  type选择 <code>DOMAIN-SUFFIX</code> , Proxy选择 <code>Direct</code></p>\n</li>\n</ul>\n<p><strong>当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择<code>Direct</code>，如果遇到别的网站需要代理的，选择<code>国外流量</code>即可</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png" alt="hupu"></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理</strong></p>\n<h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2>\n<p><strong>为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/clash使用技巧.html",pathLocale:"/",permalink:null,routeMeta:{title:"clash使用技巧"},slug:"clash使用技巧",filePath:"/root/blog/blogs/notes/clash使用技巧.md",filePathRelative:"blogs/notes/clash使用技巧.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.vue",componentFilePathRelative:"pages/blogs/notes/clash使用技巧.html.vue",componentFileChunkName:"v-54860d63",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.js",dataFilePathRelative:"pages/blogs/notes/clash使用技巧.html.js",dataFileChunkName:"v-54860d63",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/clash使用技巧.html",htmlFilePathRelative:"blogs/notes/clash使用技巧.html"},{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}],label:"notes"},tech:{length:14,pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-fb3507ea",path:"/blogs/tech/%E8%90%8C%E6%96%B0nginx%E9%85%8D%E7%BD%AE.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],git:{},filePathRelative:"blogs/tech/萌新nginx配置.md"},key:"v-fb3507ea",path:"/blogs/tech/mengxinnginxpeizhi.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],content:'\r\n**2分钟简单学习nginx配置。**\r\n\x3c!-- more --\x3e\r\n\r\n### 配置\r\n\r\n简单直接跑起来\r\n\r\n```sh\r\nserver {\r\n\t# 监听8080端口,简单体验的话，写不写无所谓\r\n    listen 8080;\r\n    # 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.\r\n    server_name yourdomain.com;\r\n    # 配置静态文件,/表示根目录\r\n    location / {\r\n        root            /usr/share/nginx/html;\r\n        index           index.html;\r\n        try_files       $uri $uri/ /index.html;\r\n\r\n }\r\n\t# 访问yourdomian.com/upload 会转发域名到baidu.com\r\n\t# 剩下是配置请求头\r\n    #location /upload {\r\n    #    proxy_pass http://baidu.com;\r\n    #    add_header Access-Control-Allow-Origin *;\r\n    #    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";\r\n    #    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";\r\n    #    add_header Access-Control-Allow-Credentials true;\r\n#}\r\n}\r\n```\r\n\r\n',contentRendered:'<p><strong>2分钟简单学习nginx配置。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3>\n<p>简单直接跑起来</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>server <span class="token punctuation">{</span>\n\t<span class="token comment"># 监听8080端口,简单体验的话，写不写无所谓</span>\n    listen <span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token comment"># 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.</span>\n    server_name yourdomain.com<span class="token punctuation">;</span>\n    <span class="token comment"># 配置静态文件,/表示根目录</span>\n    location / <span class="token punctuation">{</span>\n        root            /usr/share/nginx/html<span class="token punctuation">;</span>\n        index           index.html<span class="token punctuation">;</span>\n        try_files       <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>\n\n <span class="token punctuation">}</span>\n\t<span class="token comment"># 访问yourdomian.com/upload 会转发域名到baidu.com</span>\n\t<span class="token comment"># 剩下是配置请求头</span>\n    <span class="token comment">#location /upload {</span>\n    <span class="token comment">#    proxy_pass http://baidu.com;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Origin *;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Credentials true;</span>\n<span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/萌新nginx配置.html",pathLocale:"/",permalink:null,routeMeta:{title:"萌新nginx配置"},slug:"萌新nginx配置",filePath:"/root/blog/blogs/tech/萌新nginx配置.md",filePathRelative:"blogs/tech/萌新nginx配置.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.vue",componentFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.vue",componentFileChunkName:"v-fb3507ea",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.js",dataFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.js",dataFileChunkName:"v-fb3507ea",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/萌新nginx配置.html",htmlFilePathRelative:"blogs/tech/萌新nginx配置.html"},{data:{key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],git:{},filePathRelative:"blogs/tech/Eslint.md"},key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],content:"## ESlint\r\n\r\n**ESlint有很多种安装方式，不过我建议大家是采用`npm`方式来熟悉**\r\n\r\n**当然不止ESlint这一种静态分析工具，各有所爱罢了**\r\n\r\n### **配置**\r\n\r\nESlint不是项目的必要依赖项，**仅仅是开发环境需要用到.**\r\n\r\n```shell\r\nnpm install eslint --save-dev\r\n\r\n// 安装成功后，初始化默认的ESlint\r\nnode_modules/.bin/eslint --init\r\n```\r\n\r\n该配置会保存到`.eslintrc.js`文件\r\n\r\n```javascript\r\nmodule.exports = {\r\n    'env': {\r\n        'commonjs': true,\r\n        'es2021': true,\r\n        'node': true\r\n    },\r\n    'extends': 'eslint:recommended',\r\n    'parserOptions': {\r\n        'ecmaVersion': 12\r\n    },\r\n    'rules': {\r\n        'indent': [\r\n            'error',\r\n            4\r\n        ],\r\n        'linebreak-style': [\r\n            'error',\r\n            'unix'\r\n        ],\r\n        'quotes': [\r\n            'error',\r\n            'single'\r\n        ],\r\n        'semi': [\r\n            'error',\r\n            'never'\r\n        ],\r\n        'eqeqeq': 'error',\r\n        'no-trailing-spaces': 'error',\r\n        'object-curly-spacing': [\r\n            'error', 'always'\r\n        ],\r\n        'arrow-spacing': [\r\n            'error', { 'before': true, 'after': true }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n**更改缩进级别为两个空格**\r\n\r\n```json\r\n\"indent\": [\r\n    \"error\",\r\n    2\r\n],\r\n```\r\n\r\n**使用`ESlint`检查可以用以下命令或者配置一个`npm`脚本**\r\n\r\n```\r\nnode_modules/.bin/eslint index.js\r\n```\r\n\r\n脚本\r\n\r\n```json\r\n{\r\n  // ...\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    // ...\r\n    \"lint\": \"eslint .\"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n`npm run build`会检查项目中的每一个文件，**我们并不希望一些文件被检查**\r\n\r\n**根目录新建一个`.eslintignore`文件**\r\n\r\n```shell\r\nbuild\r\n// 或者不需要检查的\r\n```\r\n\r\n**我们配置好之后自然是完善一套规则**\r\n\r\n**增加`eqeqeq`规则，除了三个相等号之外，相等要被检查。规则在`rules`字段下添加**\r\n\r\n```json\r\n{\r\n  // ...\r\n  'rules': {\r\n    // ...\r\n   'eqeqeq': 'error',\r\n    // 比如避免不必要的拖尾空格，大括号之间有一个空格等等\r\n      'no-trailing-spaces': 'error',\r\n    'object-curly-spacing': [\r\n        'error', 'always'\r\n    ],\r\n    'arrow-spacing': [\r\n        'error', { 'before': true, 'after': true }\r\n    ]\r\n  },\r\n    // 警告不出现在控制台。\r\n    'no-console': 0\r\n}\r\n```\r\n\r\n**还有其他的流行规则风范比如[Airbnb](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb)**\r\n\r\n",contentRendered:'<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESlint</h2>\n<p><strong>ESlint有很多种安装方式，不过我建议大家是采用<code>npm</code>方式来熟悉</strong></p>\n<p><strong>当然不止ESlint这一种静态分析工具，各有所爱罢了</strong></p>\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <strong>配置</strong></h3>\n<p>ESlint不是项目的必要依赖项，<strong>仅仅是开发环境需要用到.</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev\n\n// 安装成功后，初始化默认的ESlint\nnode_modules/.bin/eslint --init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该配置会保存到<code>.eslintrc.js</code>文件</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'env\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'commonjs\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'es2021\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'node\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'extends\'</span><span class="token operator">:</span> <span class="token string">\'eslint:recommended\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'parserOptions\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'ecmaVersion\'</span><span class="token operator">:</span> <span class="token number">12</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'rules\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'indent\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token number">4</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'linebreak-style\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'unix\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'quotes\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'single\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'semi\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'never\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'eqeqeq\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'no-trailing-spaces\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'object-curly-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'always\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'arrow-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">\'before\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">\'after\'</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>更改缩进级别为两个空格</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"error"</span><span class="token punctuation">,</span>\n    <span class="token number">2</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用<code>ESlint</code>检查可以用以下命令或者配置一个<code>npm</code>脚本</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>node_modules/.bin/eslint index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>脚本</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node index.js"</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint ."</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>npm run build</code>会检查项目中的每一个文件，<strong>我们并不希望一些文件被检查</strong></p>\n<p><strong>根目录新建一个<code>.eslintignore</code>文件</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>build\n// 或者不需要检查的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>我们配置好之后自然是完善一套规则</strong></p>\n<p><strong>增加<code>eqeqeq</code>规则，除了三个相等号之外，相等要被检查。规则在<code>rules</code>字段下添加</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  \'rules\'<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n   \'eqeqeq\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    <span class="token comment">// 比如避免不必要的拖尾空格，大括号之间有一个空格等等</span>\n      \'no-trailing-spaces\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    \'object-curly-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> \'always\'\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \'arrow-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> <span class="token punctuation">{</span> \'before\'<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> \'after\'<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 警告不出现在控制台。</span>\n    \'no-console\'<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>还有其他的流行规则风范比如<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb" target="_blank" rel="noopener noreferrer">Airbnb<ExternalLinkIcon/></a></strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Eslint.html",pathLocale:"/",permalink:null,routeMeta:{title:"Eslint项目配置"},slug:"Eslint",filePath:"/root/blog/blogs/tech/Eslint.md",filePathRelative:"blogs/tech/Eslint.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.vue",componentFilePathRelative:"pages/blogs/tech/Eslint.html.vue",componentFileChunkName:"v-21adab26",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.js",dataFilePathRelative:"pages/blogs/tech/Eslint.html.js",dataFileChunkName:"v-21adab26",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Eslint.html",htmlFilePathRelative:"blogs/tech/Eslint.html"},{data:{key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],git:{},filePathRelative:"blogs/tech/npm.md"},key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],content:'## NodeJS\r\n\r\n几乎所有的JavaScript项目都是使用node包管理器定义的，也就是`npm`\r\n\r\n使用`npm`的一个明确说明是位于项目根目录的`package.json`\r\n\r\n```shell\r\nnpm install axios\r\nnpm install json-server --save-dev\r\n```\r\n\r\n**参数间有差别，`axios`被安装为应用的运行时依赖项`--save`,程序本身需要库的存在，另一个`json-server`是作为开发依赖项`--save-dev`,程序本身不需要它。**\r\n\r\n### Init\r\n\r\n```shell\r\nnpm init\r\n// 定义\r\n{\r\n  // ...\r\n  "scripts": {\r\n    "start": "node index.js",\r\n    "test": "echo \\"Error: no test specified\\" && exit 1"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n> 生成`package.json`文件\r\n\r\n```shell\r\n"express": "^4.17.1"\r\n// ^:安装版本至少为4.17.1\r\n```\r\n\r\n### nodemon\r\n\r\n```\r\nnpm install --save-dev nodemon\r\n```\r\n\r\n**热加载,同时在`package.json`中添加一个`dev`命令`nodemon xxx.js`**\r\n\r\n`npm run dev`\r\n\r\n',contentRendered:'<h2 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> NodeJS</h2>\n<p>几乎所有的JavaScript项目都是使用node包管理器定义的，也就是<code>npm</code></p>\n<p>使用<code>npm</code>的一个明确说明是位于项目根目录的<code>package.json</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios\n<span class="token function">npm</span> <span class="token function">install</span> json-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>参数间有差别，<code>axios</code>被安装为应用的运行时依赖项<code>--save</code>,程序本身需要库的存在，另一个<code>json-server</code>是作为开发依赖项<code>--save-dev</code>,程序本身不需要它。</strong></p>\n<h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> Init</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> init\n// 定义\n<span class="token punctuation">{</span>\n  // <span class="token punctuation">..</span>.\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"start"</span><span class="token builtin class-name">:</span> <span class="token string">"node index.js"</span>,\n    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\\&quot;">\\"</span>Error: no test specified<span class="token entity" title="\\&quot;">\\"</span> &amp;&amp; exit 1"</span>\n  <span class="token punctuation">}</span>,\n  // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote>\n<p>生成<code>package.json</code>文件</p>\n</blockquote>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">"express"</span><span class="token builtin class-name">:</span> <span class="token string">"^4.17.1"</span>\n// ^:安装版本至少为4.17.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm install --save-dev nodemon\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>热加载,同时在<code>package.json</code>中添加一个<code>dev</code>命令<code>nodemon xxx.js</code></strong></p>\n<p><code>npm run dev</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/npm.html",pathLocale:"/",permalink:null,routeMeta:{title:"npm基础"},slug:"npm",filePath:"/root/blog/blogs/tech/npm.md",filePathRelative:"blogs/tech/npm.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.vue",componentFilePathRelative:"pages/blogs/tech/npm.html.vue",componentFileChunkName:"v-008bc010",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.js",dataFilePathRelative:"pages/blogs/tech/npm.html.js",dataFileChunkName:"v-008bc010",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/npm.html",htmlFilePathRelative:"blogs/tech/npm.html"},{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"},{data:{key:"v-7f7426c5",path:"/blogs/tech/%E6%8D%A2%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%8B%E5%A5%BD%E7%9A%84%E5%AD%97%E4%BD%93.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],git:{},filePathRelative:"blogs/tech/换一个程序员友好的字体.md"},key:"v-7f7426c5",path:"/blogs/tech/huanyigechengxuyuanyouhaodeziti.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],content:"\r\n**介绍一个对程序员比较舒服的字体**\r\n\r\n## 使用\r\n\r\n先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装\r\n\r\n然后开启IDE（比如VS CODE）调到设置或者`ctrl + ,`快捷打开设置 \r\n\r\n![image-20210328231737883](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png)\r\n\r\n**添加完没有生效，请重新打开IDE**\r\n\r\n## JetBrains Mono \r\n\r\n**一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的**\r\n\r\n**当然对于一些视力或者别的爱好~~粗~~的人选择Extra Bold**\r\n\r\n![image-20210328231517174](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png)\r\n\r\n## Cascadia Code\r\n\r\n具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点",contentRendered:'<p><strong>介绍一个对程序员比较舒服的字体</strong></p>\n<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装</p>\n<p>然后开启IDE（比如VS CODE）调到设置或者<code>ctrl + ,</code>快捷打开设置</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png" alt="image-20210328231737883"></p>\n<p><strong>添加完没有生效，请重新打开IDE</strong></p>\n<h2 id="jetbrains-mono" tabindex="-1"><a class="header-anchor" href="#jetbrains-mono" aria-hidden="true">#</a> JetBrains Mono</h2>\n<p><strong>一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的</strong></p>\n<p><strong>当然对于一些视力或者别的爱好<s>粗</s>的人选择Extra Bold</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png" alt="image-20210328231517174"></p>\n<h2 id="cascadia-code" tabindex="-1"><a class="header-anchor" href="#cascadia-code" aria-hidden="true">#</a> Cascadia Code</h2>\n<p>具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/换一个程序员友好的字体.html",pathLocale:"/",permalink:null,routeMeta:{title:"对程序员友好的字体"},slug:"换一个程序员友好的字体",filePath:"/root/blog/blogs/tech/换一个程序员友好的字体.md",filePathRelative:"blogs/tech/换一个程序员友好的字体.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFileChunkName:"v-7f7426c5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.js",dataFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.js",dataFileChunkName:"v-7f7426c5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/换一个程序员友好的字体.html",htmlFilePathRelative:"blogs/tech/换一个程序员友好的字体.html"},{data:{key:"v-08e31ac5",path:"/blogs/tech/%E7%BA%A2%E7%B1%B3AC2100%E5%88%B7%E6%9C%BA.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],git:{},filePathRelative:"blogs/tech/红米AC2100刷机.md"},key:"v-08e31ac5",path:"/blogs/tech/hongmiAC2100shuaji.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],content:"\r\n**从恩山那里学习总结过来的，单刀直入。[感谢大大](http://openwrt.ink:88/archives/s-breed)**\r\n\r\n\r\n\r\n## 前期准备\r\n\r\n[红米AC2100-2.0.7固件](http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin)\r\n\r\n[Padavan固件-下载redmi211.trx](http://openwrt.ink:8666/Padavan/)\r\n\r\nXShell（自行下载）\r\n\r\n> **如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代**\r\n\r\n**红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了**\r\n\r\n**本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪**\r\n\r\n\r\n\r\n## 开始\r\n\r\n综合步骤如果看不懂可以参考[此视频](https://www.bilibili.com/video/BV1Zf4y1v74o)\r\n\r\n**首先登录进[路由器管理地址](192.168.31.1)**\r\n\r\n**点系统状态，手动升级，升级红米ac2100-2.0.7固件**\r\n\r\n**等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址**\r\n\r\n**此时地址会变为**`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/web/home#router`\r\n\r\n复制下来`<STOK>`\r\n\r\n替换stok`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/api/misystem/set_config_iotdev?bssid=Xiaomi&user_id=longdike&ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B` \r\n\r\n**然后将网址复制下来粘贴网页打开，会显示`\"code\":0`代表成功**\r\n\r\n打开xshell，连接`192.168.31.1` 用户名为`root` 密码`admin`\r\n\r\n**直接输入一下命令刷入Breed，并等待20s**\r\n\r\n```\r\ncd /tmp && wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n\r\n或者下面命令：\r\ncd /tmp && wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n```\r\n\r\n**正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）**\r\n\r\n**路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入`192.168.1.1`进入breed**\r\n\r\n**找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存**\r\n\r\n**点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面**\r\n\r\n**开启5G频道->160HZ，冲冲冲**\r\n\r\n",contentRendered:'<p><strong>从恩山那里学习总结过来的，单刀直入。<a href="http://openwrt.ink:88/archives/s-breed" target="_blank" rel="noopener noreferrer">感谢大大<ExternalLinkIcon/></a></strong></p>\n<h2 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h2>\n<p><a href="http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin" target="_blank" rel="noopener noreferrer">红米AC2100-2.0.7固件<ExternalLinkIcon/></a></p>\n<p><a href="http://openwrt.ink:8666/Padavan/" target="_blank" rel="noopener noreferrer">Padavan固件-下载redmi211.trx<ExternalLinkIcon/></a></p>\n<p>XShell（自行下载）</p>\n<blockquote>\n<p><strong>如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代</strong></p>\n</blockquote>\n<p><strong>红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了</strong></p>\n<p><strong>本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪</strong></p>\n<h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2>\n<p>综合步骤如果看不懂可以参考<a href="https://www.bilibili.com/video/BV1Zf4y1v74o" target="_blank" rel="noopener noreferrer">此视频<ExternalLinkIcon/></a></p>\n<p><strong>首先登录进<a href="192.168.31.1">路由器管理地址</a></strong></p>\n<p><strong>点系统状态，手动升级，升级红米ac2100-2.0.7固件</strong></p>\n<p><strong>等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址</strong></p>\n<p><strong>此时地址会变为</strong><code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</code></p>\n<p>复制下来<code>&lt;STOK&gt;</code></p>\n<p>替换stok<code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20\'s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg\'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</code></p>\n<p><strong>然后将网址复制下来粘贴网页打开，会显示<code>&quot;code&quot;:0</code>代表成功</strong></p>\n<p>打开xshell，连接<code>192.168.31.1</code> 用户名为<code>root</code> 密码<code>admin</code></p>\n<p><strong>直接输入一下命令刷入Breed，并等待20s</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n\n或者下面命令：\ncd /tmp &amp;&amp; wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）</strong></p>\n<p><strong>路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入<code>192.168.1.1</code>进入breed</strong></p>\n<p><strong>找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存</strong></p>\n<p><strong>点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面</strong></p>\n<p><strong>开启5G频道-&gt;160HZ，冲冲冲</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/红米AC2100刷机.html",pathLocale:"/",permalink:null,routeMeta:{title:"红米AC2100刷机"},slug:"红米AC2100刷机",filePath:"/root/blog/blogs/tech/红米AC2100刷机.md",filePathRelative:"blogs/tech/红米AC2100刷机.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.vue",componentFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.vue",componentFileChunkName:"v-08e31ac5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.js",dataFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.js",dataFileChunkName:"v-08e31ac5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/红米AC2100刷机.html",htmlFilePathRelative:"blogs/tech/红米AC2100刷机.html"},{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"},{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"},{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"},{data:{key:"v-e3b887da",path:"/blogs/tech/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/tech/第一篇博客学习.md"},key:"v-e3b887da",path:"/blogs/tech/diyipianbokexuexi.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],content:'\r\n**阅读本文大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n::: tip\r\n\r\n前期\r\n\r\n```json\r\n# 初始化 最好不要用全局安装（yarn 未收录)\r\nnpm install @vuepress-reco/theme-cli\r\ntheme-cli init\r\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\r\n# 然后是输入名字、描述、作者名字\r\n# 选择blog和doc无大区别我选择blog\r\n\r\n# 安装\r\nnpm install\r\n\r\n# 运行(等加载完,点开localhost那个链接就可以看到自己的网站，帅不帅？)\r\nnpm run dev\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！\r\n\r\n\r\n```json\r\n# 创建github仓库,网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\r\n# 则不需要设置base属性，把.vuepress\\config.js的"dest":"public"删除\r\n# 删除的目的是：打包在默认的dist文件夹.\r\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\r\n\r\n"base":"/你仓库的名字/",\r\n\r\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\r\n\r\nnpm run build\r\n\r\n# 这时候.vuepress文件夹会多出一个dist文件夹\r\n\r\ncd .vuepress\\dist\r\n\r\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\r\n\r\ngit init\r\ngit add .\r\ngit commit -m "deploy"\r\ngit push\r\ngit remote add origin 你项目地址(https)\r\ngit push -u origin master -f\r\n# 这个push 会创建一个master分支，进入仓库 setting\r\n```\r\n\r\n然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了\r\n\r\n:::\r\n\r\n# 关于目录结构\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png)\r\n\r\n::: tip\r\n\r\n一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？\r\n\r\n> dist是运行了`npm run build`所产生的目录，没必要动它\r\n>\r\n> blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E4%BB%A3%E7%A0%81.png)\r\n\r\n> docs是导航栏的docs里面写的文章不用写类别会自动归类到docs\r\n\r\n**基本就这样了!**\r\n\r\n:::',contentRendered:'<p><strong>阅读本文大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>前期</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 初始化 最好不要用全局安装（yarn 未收录)\nnpm install @vuepress-reco/theme-cli\ntheme-cli init\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\n# 然后是输入名字、描述、作者名字\n# 选择blog和doc无大区别我选择blog\n\n# 安装\nnpm install\n\n# 运行(等加载完<span class="token punctuation">,</span>点开localhost那个链接就可以看到自己的网站，帅不帅？)\nnpm run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 创建github仓库<span class="token punctuation">,</span>网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\n# 则不需要设置base属性，把.vuepress\\config.js的<span class="token property">"dest"</span><span class="token operator">:</span><span class="token string">"public"</span>删除\n# 删除的目的是：打包在默认的dist文件夹.\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\n\n<span class="token property">"base"</span><span class="token operator">:</span><span class="token string">"/你仓库的名字/"</span><span class="token punctuation">,</span>\n\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\n\nnpm run build\n\n# 这时候.vuepress文件夹会多出一个dist文件夹\n\ncd .vuepress\\dist\n\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\n\ngit init\ngit add .\ngit commit -m <span class="token string">"deploy"</span>\ngit push\ngit remote add origin 你项目地址(https)\ngit push -u origin master -f\n# 这个push 会创建一个master分支，进入仓库 setting\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了</p>\n</div><h1 id="关于目录结构" tabindex="-1"><a class="header-anchor" href="#关于目录结构" aria-hidden="true">#</a> 关于目录结构</h1>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/项目结构.png" alt=""></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？</p>\n<blockquote>\n<p>dist是运行了<code>npm run build</code>所产生的目录，没必要动它</p>\n<p>blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类</p>\n</blockquote>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/代码.png" alt=""></p>\n<blockquote>\n<p>docs是导航栏的docs里面写的文章不用写类别会自动归类到docs</p>\n</blockquote>\n<p><strong>基本就这样了!</strong></p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/第一篇博客学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"第一篇踩坑@vuepress-reco/theme-cli"},slug:"第一篇博客学习",filePath:"/root/blog/blogs/tech/第一篇博客学习.md",filePathRelative:"blogs/tech/第一篇博客学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.vue",componentFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.vue",componentFileChunkName:"v-e3b887da",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.js",dataFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.js",dataFileChunkName:"v-e3b887da",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/第一篇博客学习.html",htmlFilePathRelative:"blogs/tech/第一篇博客学习.html"}],label:"tech"},Python:{length:5,pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-66e05561",path:"/blogs/Python/%E9%87%8D%E6%9E%84%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],git:{},filePathRelative:"blogs/Python/重构项目记录(fastapi).md"},key:"v-66e05561",path:"/blogs/Python/zhonggouxiangmujilu(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],content:'**从WSGI到ASGI**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n自从说了要从`Flask`到`Fastapi`转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。\r\n\r\n### 改造过程\r\n\r\n此次的实验项目是之前的[上传视频项目](https://github.com/googidaddy/bili_upload_tool)，由于是传统的`WSGI`架构，加上`Flask`是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)\r\n\r\n```\r\n--docker-compose.yaml\r\n--Docker-main\r\n----main.py\r\n----Dockerfile\r\n--nginx\r\n----nginx.conf\r\n----Dockerfile\r\n```\r\n\r\n\r\n\r\n#### Flask变Fastapi\r\n\r\n**对比来说，改动地方不多，**\r\n\r\n- 首先用pipenv配置好Fastapi相关环境\r\n\r\n- 把模板搭载放在了nginx，可以翻看**萌新nginx配置**那一篇。\r\n\r\n- 增加[请求验证](https://fastapi.tiangolo.com/tutorial/body/)\r\n\r\n  ```python\r\n  from pydantic import BaseModel\r\n  # 对数据有验证\r\n  class Item(BaseModel):\r\n      a: str\r\n      b: str\r\n      c: str\r\n      d: str\r\n  # 去掉__main__程序里uvicorn启动程序\r\n  ```\r\n\r\n- 原来的数据处理部分变更成异步async/await\r\n\r\n#### 增加nginx反向代理\r\n\r\n```dockerfile\r\nFROM nginx:alpine\r\n\r\nCOPY ./dist /usr/share/nginx/html/\r\n\r\nCOPY nginx.conf /etc/nginx/conf.d/\r\n```\r\n\r\n**解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。**\r\n\r\n> ps：nginx配置在那个教程\r\n\r\n#### 增加docker-compose\r\n\r\n使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。\r\n\r\n```yaml\r\nversion: "3.9"\r\nservices:\r\n  web:\r\n    build: nginx\r\n    ports:\r\n      - 8080:8080\r\n\r\n  api:\r\n    build: Docker-main\r\n    ports:\r\n    - 9090:9090\r\n```\r\n\r\n### 总结\r\n\r\n这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,**有些默认配置的坑(--host --port)**，\r\n\r\n',contentRendered:'<p><strong>从WSGI到ASGI</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>自从说了要从<code>Flask</code>到<code>Fastapi</code>转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。</p>\n<h3 id="改造过程" tabindex="-1"><a class="header-anchor" href="#改造过程" aria-hidden="true">#</a> 改造过程</h3>\n<p>此次的实验项目是之前的<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">上传视频项目<ExternalLinkIcon/></a>，由于是传统的<code>WSGI</code>架构，加上<code>Flask</code>是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>--docker-compose.yaml\n--Docker-main\n----main.py\n----Dockerfile\n--nginx\n----nginx.conf\n----Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="flask变fastapi" tabindex="-1"><a class="header-anchor" href="#flask变fastapi" aria-hidden="true">#</a> Flask变Fastapi</h4>\n<p><strong>对比来说，改动地方不多，</strong></p>\n<ul>\n<li>\n<p>首先用pipenv配置好Fastapi相关环境</p>\n</li>\n<li>\n<p>把模板搭载放在了nginx，可以翻看<strong>萌新nginx配置</strong>那一篇。</p>\n</li>\n<li>\n<p>增加<a href="https://fastapi.tiangolo.com/tutorial/body/" target="_blank" rel="noopener noreferrer">请求验证<ExternalLinkIcon/></a></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token comment"># 对数据有验证</span>\n<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    a<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    b<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    c<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    d<span class="token punctuation">:</span> <span class="token builtin">str</span>\n<span class="token comment"># 去掉__main__程序里uvicorn启动程序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>\n<li>\n<p>原来的数据处理部分变更成异步async/await</p>\n</li>\n</ul>\n<h4 id="增加nginx反向代理" tabindex="-1"><a class="header-anchor" href="#增加nginx反向代理" aria-hidden="true">#</a> 增加nginx反向代理</h4>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html/</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> nginx.conf /etc/nginx/conf.d/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。</strong></p>\n<blockquote>\n<p>ps：nginx配置在那个教程</p>\n</blockquote>\n<h4 id="增加docker-compose" tabindex="-1"><a class="header-anchor" href="#增加docker-compose" aria-hidden="true">#</a> 增加docker-compose</h4>\n<p>使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>\n\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> Docker<span class="token punctuation">-</span>main\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3>\n<p>这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,<strong>有些默认配置的坑(--host --port)</strong>，</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/重构项目记录(fastapi).html",pathLocale:"/",permalink:null,routeMeta:{title:"重构项目记录(fastapi)"},slug:"重构项目记录(fastapi)",filePath:"/root/blog/blogs/Python/重构项目记录(fastapi).md",filePathRelative:"blogs/Python/重构项目记录(fastapi).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFileChunkName:"v-66e05561",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.js",dataFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.js",dataFileChunkName:"v-66e05561",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/重构项目记录(fastapi).html",htmlFilePathRelative:"blogs/Python/重构项目记录(fastapi).html"},{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"},{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"},{data:{key:"v-2fb64b5c",path:"/blogs/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],git:{},filePathRelative:"blogs/Python/正则表达式.md"},key:"v-2fb64b5c",path:"/blogs/Python/zhengzebiaodashi.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],content:'## 正则表达式\r\n\r\n### 按类型匹配\r\n\r\n```python\r\n#按类型匹配\r\n\\d : 任何数字\r\n\\D : 不是数字\r\n\\s : 任何 white space, 如 [\\t\\n\\r\\f\\v]\r\n\\S : 不是 white space\r\n\\w : 任何大小写字母, 数字和 “” [a-zA-Z0-9]\r\n\\W : 不是 \\w\r\n\\b : 空白字符 (只在某个字的开头或结尾)\r\n\\B : 空白字符 (不在某个字的开头或结尾)\r\n\\\\ : 匹配 \\\r\n. : 匹配任何字符 (除了 \\n)\r\n^ : 匹配开头\r\n$ : 匹配结尾\r\n? : 前面的字符可有可无\r\n* : 重复零次或多次\r\n+ : 重复一次或多次\r\n{n, m} : 重复 n 至 m 次\r\n{n} : 重复 n 次\r\n```\r\n\r\n 如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r"^I" 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 `re.search()` 可以对每一行单独处理.  这个参数就是 `flags=re.M`, 或者这样写也行 `flags=re.MULTILINE`              \r\n\r\n```python\r\nstring = """\r\ndog runs to cat.\r\nI run to dog.\r\n"""\r\nprint(re.search(r"^I", string))                 # None\r\nprint(re.search(r"^I", string, flags=re.M))  \r\n# <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\r\n```\r\n\r\n```python\r\nmatch = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\r\nprint(match.group())                   # 021523, Date: Feb/12/2017\r\nprint(match.group(1))                  # 021523\r\nprint(match.group(2))                  # Date: Feb/12/2017\r\n我们甚至可以为找到的内容分组, 使用 () 能轻松实现这件事. \r\n通过分组, 我们能轻松定位所找到的内容. \r\n比如在这个 (\\d+) 组里, 需要找到的是一些数字, \r\n在 (.+) 这个组里, 我们会找到 “Date: “ 后面的所有内容. \r\n当使用 match.group() 时, 他会返回所有组里的内容, \r\n//group(1) 021523\r\n而如果给 .group(2) 里加一个数, 它就能定位你需要返回哪个组里的信息.\r\n```\r\n\r\n### findall\r\n\r\n```python\r\n# findall 找到所有项返回一个列表\r\nprint(re.findall(r"r[ua]n", "run ran ren"))    \r\n# [\'run\', \'ran\']\r\n\r\n# | : or\r\nprint(re.findall(r"(run|ran)", "run ran ren")) \r\n# [\'run\', \'ran\']\r\n```\r\n\r\n### 如何巧妙的替换、分割字符串\r\n\r\n```python\r\nprint(re.sub(r"r[au]ns", "catches", "dog runs to cat"))  \r\n# dog catches to cat\r\n\r\nprint(re.split(r"[,;\\.]", "a;b,c.d;e"))  \r\n# [\'a\', \'b\', \'c\', \'d\', \'e\']\r\n```\r\n\r\n### 封装一个正则表达式\r\n\r\n```python\r\ncompiled_re = re.compile(r"r[ua]n")\r\nprint(compiled_re.search("dog ran to cat")) \r\n# <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\r\n```\r\n\r\n',contentRendered:'<h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2>\n<h3 id="按类型匹配" tabindex="-1"><a class="header-anchor" href="#按类型匹配" aria-hidden="true">#</a> 按类型匹配</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#按类型匹配</span>\n\\d <span class="token punctuation">:</span> 任何数字\n\\D <span class="token punctuation">:</span> 不是数字\n\\s <span class="token punctuation">:</span> 任何 white space<span class="token punctuation">,</span> 如 <span class="token punctuation">[</span>\\t\\n\\r\\f\\v<span class="token punctuation">]</span>\n\\S <span class="token punctuation">:</span> 不是 white space\n\\w <span class="token punctuation">:</span> 任何大小写字母<span class="token punctuation">,</span> 数字和 “” <span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\n\\W <span class="token punctuation">:</span> 不是 \\w\n\\b <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>只在某个字的开头或结尾<span class="token punctuation">)</span>\n\\B <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>不在某个字的开头或结尾<span class="token punctuation">)</span>\n\\\\ <span class="token punctuation">:</span> 匹配 \\\n<span class="token punctuation">.</span> <span class="token punctuation">:</span> 匹配任何字符 <span class="token punctuation">(</span>除了 \\n<span class="token punctuation">)</span>\n<span class="token operator">^</span> <span class="token punctuation">:</span> 匹配开头\n$ <span class="token punctuation">:</span> 匹配结尾\n? <span class="token punctuation">:</span> 前面的字符可有可无\n<span class="token operator">*</span> <span class="token punctuation">:</span> 重复零次或多次\n<span class="token operator">+</span> <span class="token punctuation">:</span> 重复一次或多次\n<span class="token punctuation">{</span>n<span class="token punctuation">,</span> m<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 至 m 次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r&quot;^I&quot; 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 <code>re.search()</code> 可以对每一行单独处理.  这个参数就是 <code>flags=re.M</code>, 或者这样写也行 <code>flags=re.MULTILINE</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>string <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\ndog runs to cat.\nI run to dog.\n"""</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># None</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(18, 19), match=\'I\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"(\\d+), Date: (.+)"</span><span class="token punctuation">,</span> <span class="token string">"ID: 021523, Date: Feb/12/2017"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 021523, Date: Feb/12/2017</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 021523</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># Date: Feb/12/2017</span>\n我们甚至可以为找到的内容分组<span class="token punctuation">,</span> 使用 <span class="token punctuation">(</span><span class="token punctuation">)</span> 能轻松实现这件事<span class="token punctuation">.</span> \n通过分组<span class="token punctuation">,</span> 我们能轻松定位所找到的内容<span class="token punctuation">.</span> \n比如在这个 <span class="token punctuation">(</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span> 组里<span class="token punctuation">,</span> 需要找到的是一些数字<span class="token punctuation">,</span> \n在 <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token punctuation">)</span> 这个组里<span class="token punctuation">,</span> 我们会找到 “Date<span class="token punctuation">:</span> “ 后面的所有内容<span class="token punctuation">.</span> \n当使用 <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> 时<span class="token punctuation">,</span> 他会返回所有组里的内容<span class="token punctuation">,</span> \n<span class="token operator">//</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">021523</span>\n而如果给 <span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 里加一个数<span class="token punctuation">,</span> 它就能定位你需要返回哪个组里的信息<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="findall" tabindex="-1"><a class="header-anchor" href="#findall" aria-hidden="true">#</a> findall</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># findall 找到所有项返回一个列表</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    \n<span class="token comment"># [\'run\', \'ran\']</span>\n\n<span class="token comment"># | : or</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"(run|ran)"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># [\'run\', \'ran\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="如何巧妙的替换、分割字符串" tabindex="-1"><a class="header-anchor" href="#如何巧妙的替换、分割字符串" aria-hidden="true">#</a> 如何巧妙的替换、分割字符串</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"r[au]ns"</span><span class="token punctuation">,</span> <span class="token string">"catches"</span><span class="token punctuation">,</span> <span class="token string">"dog runs to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># dog catches to cat</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r"[,;\\.]"</span><span class="token punctuation">,</span> <span class="token string">"a;b,c.d;e"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># [\'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="封装一个正则表达式" tabindex="-1"><a class="header-anchor" href="#封装一个正则表达式" aria-hidden="true">#</a> 封装一个正则表达式</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>compiled_re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>compiled_re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"dog ran to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(4, 7), match=\'ran\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/正则表达式.html",pathLocale:"/",permalink:null,routeMeta:{title:"正则表达式"},slug:"正则表达式",filePath:"/root/blog/blogs/Python/正则表达式.md",filePathRelative:"blogs/Python/正则表达式.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.vue",componentFilePathRelative:"pages/blogs/Python/正则表达式.html.vue",componentFileChunkName:"v-2fb64b5c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.js",dataFilePathRelative:"pages/blogs/Python/正则表达式.html.js",dataFileChunkName:"v-2fb64b5c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/正则表达式.html",htmlFilePathRelative:"blogs/Python/正则表达式.html"}],label:"Python"},Vue3:{length:2,pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"},{data:{key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-notes-1.md"},key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],content:'\r\n**阅读本文大概需要10分钟**\r\n\x3c!-- more --\x3e\r\n\r\n**先认识代码变动和部分新特性**\r\n\r\n::: tip\r\n\r\n### 认识重要 API\r\n\r\n```javascript\r\nimport {\r\n    createApp,\t\t// 创建一个APP实例\r\n    onMounted,\t\t// 生命周期写法变了\r\n    computed,\t\t// 方法变了\r\n    watch,\t\t\t// 同上\r\n    watchEffect,\t// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行\r\n    reactive,\t\t// 传入一个普通对象返回一个响应式对象\r\n    ref,\t\t\t// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用\r\n    toRef,\t\t\t// 为一个reactive对象的属性创建一个ref\r\n    toRefs,\t\t\t// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _createApp_\r\n\r\n```javascript\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\ncreateApp(App).mount("#app");\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _onMounted_\r\n\r\n```javascript\r\nimport { onMounted, defineComponent } from "vue";\r\nexport default defineComponent({\r\n  setup() {\r\n    // 使用需要放在setup()里面\r\n    onMounted(() => {\r\n      console.log("冲冲冲");\r\n    });\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _computed_\r\n\r\n```javascript\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(1);\r\nconst result = computed(() => count.value + 1);\r\n// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象\r\n// 对象的话，是不是对象.value就很好理解下面为什么这样写了？\r\nconsole.log(result.value); // 2\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _watch_\r\n\r\n```javascript\r\nimport { reactive, watch } from "vue";\r\n\r\nconst state = reactive({ count: 0 });\r\n//reactive 接受一个普通对象，返回一个响应式对象\r\n// state已经是一个响应式对象了，所以取值就是对象.count\r\nwatch(\r\n  () => state.count,\r\n  (count, prevCount) => {\r\n    // todo\r\n  }\r\n);\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### :star: _reactive 单独使用情况_\r\n\r\n```javascript\r\nimport { reactive } from "vue";\r\n\r\nconst a = reactive({ count: 0 });\r\na.count++;\r\nconsole.log(a.count); // 1\r\n```\r\n\r\n#### :star2: 返回给组件形式一\r\n\r\n```javascript\r\n// 组件\r\n<template>\r\n    <p> {{ a.count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\n// 逻辑\r\nimport { reactive, defineComponent } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    return { a };\r\n  },\r\n});\r\n```\r\n\r\n#### _:star2:返回组件形式二 & toRefs_\r\n\r\n```javascript\r\n<template>\r\n  <p> {{ count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\nimport { reactive, defineComponent, toRefs } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    // toRefs把响应式对象转为普通对象\r\n    // 再解析一下就是，toRefs是一个解封过程，reactive是封装过程\r\n    return { ...toRefs(a) };\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _ref_\r\n\r\n```javascript\r\n// ref 接受一个参数，并返回一个响应式且可以改变的对象。\r\n// 同时ref拥有一个指向内部值得单一属性.value\r\n\r\nconst count = ref(0);\r\nconsole.log(count.value); // 0\r\n\r\ncount.value++;\r\nconsole.log(count.value); // 1\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _toRef_\r\n\r\n```javascript\r\nimport { defineComponent, toRef, reactive } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({\r\n      cow: 0,\r\n      bug: 1,\r\n    });\r\n    // toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)\r\n    const count = toRef(a, "cow");\r\n    // 相当于 const count = ref(0)\r\n    // count 已经是cow的响应式对象了，所以值是不是该？\r\n    count.value++; // 这时a.cow已经被改变了\r\n    console.log(a.cow); // 1\r\n    // 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？\r\n\r\n    a.cow++;\r\n    console.log(count.value); // 2\r\n    // 这里是不是能理解ref传递了？\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n# Vue3 整体纵览\r\n\r\n### 一、setup 函数\r\n\r\n​ **setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法**\r\n\r\n​ **Vue3 去掉了 data 返回的格式，统一再 setup 返回**\r\n\r\n​\r\n\r\n### 二、生命周期\r\n\r\n```\r\nsetup() {\r\n    onMounted(() => {\r\n      console.log(\'组件挂载\');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      console.log(\'组件卸载\');\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\'组件更新\');\r\n    });\r\n\r\n    onBeforeUpdate(() => {\r\n      console.log(\'组件将要更新\');\r\n    });\r\n\r\n    onActivated(() => {\r\n      console.log(\'keepAlive 组件 激活\');\r\n    });\r\n\r\n    onDeactivated(() => {\r\n      console.log(\'keepAlive 组件 非激活\');\r\n    });\r\n    return {};\r\n  },\r\n\r\n```\r\n\r\n### 三、vue-router\r\n\r\n```javascript\r\nimport { useRoute, useRouter } from "vue-router";\r\n\r\nconst route = useRoute(); // 相当于 vue2 中的this.$route\r\nconst router = useRouter(); // 相当于 vue2 中的this.$router\r\n\r\n// route   用于获取当前路由数据\r\n// router  用于路由跳转\r\n```\r\n\r\n### 四、vuex\r\n\r\n​ **注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应**\r\n\r\n```javascript\r\nimport {useStore} from \'vuex\'\r\n\r\nsetup(){\r\n    const store = useStore(); // 相当于 vue2中的 this.$store\r\n    store.dispatch(); // 通过store对象来dispatch 派发异步任务\r\n    store.commit(); // commit 修改store数据\r\n\r\n    let category = computed(() => store.state.home.currentCagegory\r\n    return { category }\r\n}\r\n\r\n```\r\n\r\n## vue-vite 搭建项目\r\n\r\n::: tip\r\n\r\n```javascript\r\n# 初始化项目\r\nnpm init vite-app vue3-composition-api-demo\r\n# 进入目录\r\ncd vue3-composition-api-demo\r\n# 安装依赖\r\nnpm install\r\n# 运行项目\r\nnpm run dev\r\n\r\n```\r\n\r\n:::\r\n\r\n### 五、setup()\r\n\r\n::: tip\r\nsetup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.\r\n\r\n```javascript\r\nsetup(props, context) {\r\n  // Attributes (Non-reactive object)\r\n  console.log(context.attrs)\r\n\r\n  // Slots (Non-reactive object)\r\n  console.log(context.slots)\r\n\r\n  // Emit Events (Method)\r\n  console.log(context.emit)\r\n}\r\n\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n## 日后再更新。\r\n',contentRendered:'<p><strong>阅读本文大概需要10分钟</strong></p>\n\x3c!-- more --\x3e\n<p><strong>先认识代码变动和部分新特性</strong></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="认识重要-api" tabindex="-1"><a class="header-anchor" href="#认识重要-api" aria-hidden="true">#</a> 认识重要 API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp<span class="token punctuation">,</span>\t\t<span class="token comment">// 创建一个APP实例</span>\n    onMounted<span class="token punctuation">,</span>\t\t<span class="token comment">// 生命周期写法变了</span>\n    computed<span class="token punctuation">,</span>\t\t<span class="token comment">// 方法变了</span>\n    watch<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 同上</span>\n    watchEffect<span class="token punctuation">,</span>\t<span class="token comment">// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行</span>\n    reactive<span class="token punctuation">,</span>\t\t<span class="token comment">// 传入一个普通对象返回一个响应式对象</span>\n    ref<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用</span>\n    toRef<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 为一个reactive对象的属性创建一个ref</span>\n    toRefs<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp" aria-hidden="true">#</a> <em>createApp</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span>\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> <em>onMounted</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用需要放在setup()里面</span>\n    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"冲冲冲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <em>computed</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象</span>\n<span class="token comment">// 对象的话，是不是对象.value就很好理解下面为什么这样写了？</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> <em>watch</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//reactive 接受一个普通对象，返回一个响应式对象</span>\n<span class="token comment">// state已经是一个响应式对象了，所以取值就是对象.count</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// todo</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="reactive-单独使用情况" tabindex="-1"><a class="header-anchor" href="#reactive-单独使用情况" aria-hidden="true">#</a> ⭐ <em>reactive 单独使用情况</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\na<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="返回给组件形式一" tabindex="-1"><a class="header-anchor" href="#返回给组件形式一" aria-hidden="true">#</a> 🌟 返回给组件形式一</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 组件</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 逻辑</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="返回组件形式二-torefs" tabindex="-1"><a class="header-anchor" href="#返回组件形式二-torefs" aria-hidden="true">#</a> <em>🌟返回组件形式二 &amp; toRefs</em></h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">></span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> toRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRefs把响应式对象转为普通对象</span>\n    <span class="token comment">// 再解析一下就是，toRefs是一个解封过程，reactive是封装过程</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <em>ref</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// ref 接受一个参数，并返回一个响应式且可以改变的对象。</span>\n<span class="token comment">// 同时ref拥有一个指向内部值得单一属性.value</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="toref" tabindex="-1"><a class="header-anchor" href="#toref" aria-hidden="true">#</a> <em>toRef</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">cow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">bug</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"cow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 相当于 const count = ref(0)</span>\n    <span class="token comment">// count 已经是cow的响应式对象了，所以值是不是该？</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 这时a.cow已经被改变了</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>cow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n    <span class="token comment">// 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？</span>\n\n    a<span class="token punctuation">.</span>cow<span class="token operator">++</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n    <span class="token comment">// 这里是不是能理解ref传递了？</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><hr>\n<h1 id="vue3-整体纵览" tabindex="-1"><a class="header-anchor" href="#vue3-整体纵览" aria-hidden="true">#</a> Vue3 整体纵览</h1>\n<h3 id="一、setup-函数" tabindex="-1"><a class="header-anchor" href="#一、setup-函数" aria-hidden="true">#</a> 一、setup 函数</h3>\n<p>​ <strong>setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法</strong></p>\n<p>​ <strong>Vue3 去掉了 data 返回的格式，统一再 setup 返回</strong></p>\n<p>​</p>\n<h3 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期" aria-hidden="true">#</a> 二、生命周期</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>setup() {\n    onMounted(() => {\n      console.log(\'组件挂载\');\n    });\n\n    onUnmounted(() => {\n      console.log(\'组件卸载\');\n    });\n\n    onUpdated(() => {\n      console.log(\'组件更新\');\n    });\n\n    onBeforeUpdate(() => {\n      console.log(\'组件将要更新\');\n    });\n\n    onActivated(() => {\n      console.log(\'keepAlive 组件 激活\');\n    });\n\n    onDeactivated(() => {\n      console.log(\'keepAlive 组件 非激活\');\n    });\n    return {};\n  },\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="三、vue-router" tabindex="-1"><a class="header-anchor" href="#三、vue-router" aria-hidden="true">#</a> 三、vue-router</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$route</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$router</span>\n\n<span class="token comment">// route   用于获取当前路由数据</span>\n<span class="token comment">// router  用于路由跳转</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="四、vuex" tabindex="-1"><a class="header-anchor" href="#四、vuex" aria-hidden="true">#</a> 四、vuex</h3>\n<p>​ <strong>注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2中的 this.$store</span>\n    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过store对象来dispatch 派发异步任务</span>\n    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// commit 修改store数据</span>\n\n    <span class="token keyword">let</span> category <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>currentCagegory\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> category <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="vue-vite-搭建项目" tabindex="-1"><a class="header-anchor" href="#vue-vite-搭建项目" aria-hidden="true">#</a> vue-vite 搭建项目</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code># 初始化项目\nnpm init vite<span class="token operator">-</span>app vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 进入目录\ncd vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 安装依赖\nnpm install\n# 运行项目\nnpm run dev\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h3 id="五、setup" tabindex="-1"><a class="header-anchor" href="#五、setup" aria-hidden="true">#</a> 五、setup()</h3>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>setup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Attributes (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>\n\n  <span class="token comment">// Slots (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>\n\n  <span class="token comment">// Emit Events (Method)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><hr>\n<h2 id="日后再更新。" tabindex="-1"><a class="header-anchor" href="#日后再更新。" aria-hidden="true">#</a> 日后再更新。</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3-notes-1.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3笔记"},slug:"Vue3-notes-1",filePath:"/root/blog/blogs/Vue3/Vue3-notes-1.md",filePathRelative:"blogs/Vue3/Vue3-notes-1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFileChunkName:"v-2b8dfb6e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.js",dataFileChunkName:"v-2b8dfb6e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3-notes-1.html",htmlFilePathRelative:"blogs/Vue3/Vue3-notes-1.html"}],label:"Vue3"}},layout:"Categories"},tags:{pagination:10,extendedPages:[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],items:{suanfa:{length:2,pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}],label:"算法"},Algorithm:{length:2,pages:[{data:{key:"v-f6ced18c",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],git:{},filePathRelative:"blogs/Algorithm/算法基础.md"},key:"v-f6ced18c",path:"/blogs/Algorithm/suanfajichu.html",title:"算法基础",lang:"en-US",frontmatter:{title:"算法基础",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[{level:2,title:"枚举",slug:"枚举",children:[{level:3,title:"要点",slug:"要点",children:[]},{level:3,title:"给出解空间",slug:"给出解空间",children:[]},{level:3,title:"减少枚举的空间",slug:"减少枚举的空间",children:[]},{level:3,title:"选择合适的枚举顺序",slug:"选择合适的枚举顺序",children:[]},{level:3,title:"例题",slug:"例题",children:[]}]},{level:2,title:"递归&分治",slug:"递归-分治",children:[{level:3,title:"递归",slug:"递归",children:[]}]}],content:"\r\n\r\n\r\n## 枚举\r\n\r\n枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。\r\n\r\n枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。\r\n\r\n### 要点\r\n\r\n### **给出解空间**\r\n\r\n**建立简洁的数学模型**\r\n\r\n**枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？**\r\n\r\n### 减少枚举的空间\r\n\r\n**枚举的范围是什么？是所有的内容都需要枚举吗？**\r\n\r\n**再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。**\r\n\r\n### 选择合适的枚举顺序\r\n\r\n**根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。**\r\n\r\n### 例题\r\n\r\n一个数组中的数互不相同，求其中和为 0的数对的个数\r\n\r\n-------------------------------------------------------------------------------\r\n\r\n枚举两个数的代码很容易就可以写出来。\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < n; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 `(a, b)` 是答案，那么 `(b, a)` 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。\r\n\r\n不妨要求第一个数要出现在靠前的位置。代码如下：\r\n\r\n```c++\r\nfor (int i = 0; i < n; ++i)\r\n  for (int j = 0; j < i; ++j)\r\n    if (a[i] + a[j] == 0) ++ans;\r\n```\r\n\r\n不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。\r\n\r\n然而这并不是最优的结果。\r\n\r\n两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。\r\n\r\n```c++\r\n// 要求 a 数组中的数的绝对值都小于 MAXN\r\nbool met[MAXN * 2];\r\n// 初始化 met 数组为 0；\r\nmemset(met, 0, sizeof(met));\r\nfor (int i = 0; i < n; ++i) {\r\n  if (met[MAXN - a[i]]) ++ans;\r\n  // 为了避免负数下标\r\n  met[a[i] + MAXN] = 1;\r\n}\r\n```\r\n\r\n**PS:我也没想明白咋优化的，提示：当a是桶数组**\r\n\r\n-----------------------------------\r\n\r\n## 递归&分治\r\n\r\n**递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。**\r\n\r\n**分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。**\r\n\r\n### 递归\r\n\r\n> 要理解递归，就得先理解什么是递归。\r\n\r\n递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。\r\n\r\n```c++\r\nint func(传入数值) {\r\n  if (终止条件) return 最小子问题解;\r\n  return func(缩小规模);\r\n}\r\n```\r\n\r\n```c++\r\n//不使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a) {\r\n  int n = a.size();\r\n  for (int seg = 1; seg < n; seg = seg + seg)\r\n    for (int start = 0; start < n - seg; start += seg + seg)\r\n      merge(a, start, start + seg - 1, std::min(start + seg + seg - 1, n - 1));\r\n}\r\n\r\n//使用递归的归并排序算法\r\ntemplate <typename T>\r\nvoid merge_sort(vector<T> a, int front, int end) {\r\n  if (front >= end) return;\r\n  int mid = front + (end - front) / 2;\r\n  merge_sort(a, front, mid);\r\n  merge_sort(a, mid + 1, end);\r\n  merge(a, front, mid, end);\r\n}\r\n```\r\n\r\n#### 缺点\r\n\r\n在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 **栈溢出** 的后果。\r\n\r\n显然有时候递归处理是高效的，比如归并排序；**有时候是低效的**，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：\r\n\r\n```c++\r\n// 典型的递推遍历框架\r\nint size(Node *head) {\r\n  int size = 0;\r\n  for (Node *p = head; p != nullptr; p = p->next) size++;\r\n  return size;\r\n}\r\n\r\n// 我就是要写递归，递归天下第一\r\nint size_recurison(Node *head) {\r\n  if (head == nullptr) return 0;\r\n  return size_recurison(head->next) + 1;\r\n}\r\n```\r\n\r\n#### 递归优化\r\n\r\n主页面：[搜索优化](https://oi-wiki.org/search/opt/) 和 [记忆化搜索](https://oi-wiki.org/dp/memo/)\r\n\r\n比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。\r\n\r\n#### 分治算法\r\n\r\n大概的流程可以分为三步：分解 -> 解决 -> 合并。\r\n\r\n1. 分解原问题为结构相同的子问题。\r\n2. 分解到某个容易求解的边界之后，进行递归求解。\r\n3. 将子问题的解合并成原问题的解。\r\n\r\n分治法能解决的问题一般有如下特征：\r\n\r\n- 该问题的规模缩小到一定的程度就可以容易地解决。\r\n- 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。\r\n- 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。\r\n\r\n> 如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 [动态规划](https://oi-wiki.org/dp/basic/) 较好。\r\n\r\n以归并排序为例。假设实现归并排序的函数名为 `merge_sort`。明确该函数的职责，即 **对传入的一个数组排序**。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。\r\n\r\n```c++\r\nvoid merge_sort(一个数组) {\r\n  if (可以很容易处理) return;\r\n  merge_sort(左半个数组);\r\n  merge_sort(右半个数组);\r\n  merge(左半个数组, 右半个数组);\r\n}\r\n```\r\n\r\n传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，`merge_sort` 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 **分解 -> 解决（触底）-> 合并（回溯）**，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。\r\n\r\n#### 要点\r\n\r\n##### 写递归的要点\r\n\r\n**明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，** 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。\r\n\r\n以遍历二叉树为例\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  traverse(root->left);\r\n  traverse(root->right);\r\n}\r\n```\r\n\r\n这几行代码就足以遍历任何一棵二叉树了。对于递归函数 `traverse(root)`，只要相信给它一个根节点 `root`，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。\r\n\r\n同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。\r\n\r\n```c++\r\nvoid traverse(TreeNode* root) {\r\n  if (root == nullptr) return;\r\n  for (child : root->children) traverse(child);\r\n}\r\n```\r\n\r\n#### 区别\r\n\r\n##### 递归与枚举的区别\r\n\r\n递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。\r\n\r\n##### 递归与分治的区别\r\n\r\n递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。\r\n\r\n#### 例题\r\n\r\n::: tip\r\n\r\n给定一个二叉树，它的每个结点都存放着一个整数值。\r\n\r\n找出路径和等于给定数值的路径总数。\r\n\r\n路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。\r\n\r\n二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。\r\n\r\n```\r\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\r\n\r\n      10\r\n     /  \\\r\n    5   -3\r\n   / \\    \\\r\n  3   2   11\r\n / \\   \\\r\n3  -2   1\r\n\r\n返回 3。和等于 8 的路径有：\r\n\r\n1.  5 -> 3\r\n2.  5 -> 2 -> 1\r\n3. -3 -> 11\r\n```\r\n\r\n```\r\n/**\r\n * 二叉树结点的定义\r\n * struct TreeNode {\r\n *     int val;\r\n *     TreeNode *left;\r\n *     TreeNode *right;\r\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n * };\r\n */\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n参考代码\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  return count(root, sum) + pathSum(root->left, sum) +\r\n         pathSum(root->right, sum);\r\n}\r\n\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  return (node->val == sum) + count(node->left, sum - node->val) +\r\n         count(node->right, sum - node->val);\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n题目看起来很复杂，不过代码却极其简洁。\r\n\r\n首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。\r\n\r\n按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：\r\n\r\n`PathSum` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。\r\n\r\n`count` 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。\r\n\r\n```c++\r\nint pathSum(TreeNode *root, int sum) {\r\n  if (root == nullptr) return 0;\r\n  int pathImLeading = count(root, sum);  // 自己为开头的路径数\r\n  int leftPathSum = pathSum(root->left, sum);  // 左边路径总数（相信它能算出来）\r\n  int rightPathSum =\r\n      pathSum(root->right, sum);  // 右边路径总数（相信它能算出来）\r\n  return leftPathSum + rightPathSum + pathImLeading;\r\n}\r\nint count(TreeNode *node, int sum) {\r\n  if (node == nullptr) return 0;\r\n  // 能不能作为一条单独的路径呢？\r\n  int isMe = (node->val == sum) ? 1 : 0;\r\n  // 左边的，你那边能凑几个 sum - node.val ？\r\n  int leftNode = count(node->left, sum - node->val);\r\n  // 右边的，你那边能凑几个 sum - node.val ？\r\n  int rightNode = count(node->right, sum - node->val);\r\n  return isMe + leftNode + rightNode;  // 我这能凑这么多个\r\n}\r\n```\r\n\r\n还是那句话，**明白每个函数能做的事，并相信它们能够完成。**\r\n\r\n总结下，`PathSum` 函数提供了二叉树遍历框架，在遍历中对每个节点调用 `count` 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。`count` 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。\r\n\r\n:::\r\n\r\n",contentRendered:'<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h2>\n<p>枚举（英语：Enumerate）是基于已有知识来猜测答案的一种问题求解策略。</p>\n<p>枚举的思想是不断地猜测，从可能的集合中一一尝试，然后再判断题目的条件是否成立。</p>\n<h3 id="要点" tabindex="-1"><a class="header-anchor" href="#要点" aria-hidden="true">#</a> 要点</h3>\n<h3 id="给出解空间" tabindex="-1"><a class="header-anchor" href="#给出解空间" aria-hidden="true">#</a> <strong>给出解空间</strong></h3>\n<p><strong>建立简洁的数学模型</strong></p>\n<p><strong>枚举的适合要想清楚：可能的情况是什么？枚举哪些要素？</strong></p>\n<h3 id="减少枚举的空间" tabindex="-1"><a class="header-anchor" href="#减少枚举的空间" aria-hidden="true">#</a> 减少枚举的空间</h3>\n<p><strong>枚举的范围是什么？是所有的内容都需要枚举吗？</strong></p>\n<p><strong>再用枚举法解决问题的适合，一定要想清楚这两件事，否者会带来不必要的开销。</strong></p>\n<h3 id="选择合适的枚举顺序" tabindex="-1"><a class="header-anchor" href="#选择合适的枚举顺序" aria-hidden="true">#</a> 选择合适的枚举顺序</h3>\n<p><strong>根据题目判断。比如例题中要求的是最大的符合条件的素数，那自然是从小到大枚举比较合适。</strong></p>\n<h3 id="例题" tabindex="-1"><a class="header-anchor" href="#例题" aria-hidden="true">#</a> 例题</h3>\n<p>一个数组中的数互不相同，求其中和为 0的数对的个数</p>\n<hr>\n<p>枚举两个数的代码很容易就可以写出来。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>来看看枚举的范围如何优化。原问题的答案由两部分构成：两个数相等的情况和不相等的情况。相等的情况只需要枚举每一个数判断一下是否合法。至于不相等的情况，由于题中没要求数对是有序的，答案就是有序的情况的两倍（考虑如果 <code>(a, b)</code> 是答案，那么 <code>(b, a)</code> 也是答案）。对于这种情况，只需统计人为要求有顺序之后的答案，最后再乘上 2就好了。</p>\n<p>不妨要求第一个数要出现在靠前的位置。代码如下：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>不难发现这里已经减少了 的枚举范围，减少了这段代码的时间开销。</p>\n<p>然而这并不是最优的结果。</p>\n<p>两个数是否都一定要枚举出来呢？枚举其中一个数之后，题目的条件已经确定了其他的要素（另一个数），如果能找到一种方法直接判断题目要求的那个数是否存在，就可以省掉枚举后一个数的时间了。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 要求 a 数组中的数的绝对值都小于 MAXN</span>\nbool met<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// 初始化 met 数组为 0；</span>\n<span class="token function">memset</span><span class="token punctuation">(</span>met<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>met<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>met<span class="token punctuation">[</span>MAXN <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">++</span>ans<span class="token punctuation">;</span>\n  <span class="token comment">// 为了避免负数下标</span>\n  met<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> MAXN<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>PS:我也没想明白咋优化的，提示：当a是桶数组</strong></p>\n<hr>\n<h2 id="递归-分治" tabindex="-1"><a class="header-anchor" href="#递归-分治" aria-hidden="true">#</a> 递归&amp;分治</h2>\n<p><strong>递归（英语：Recursion），在数学和计算机科学中是指在函数的定义中使用函数自身的方法，在计算机科学中还额外指一种通过重复将问题分解为同类的子问题而解决问题的方法。</strong></p>\n<p><strong>分治（英语：Divide and Conquer），字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。</strong></p>\n<h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3>\n<blockquote>\n<p>要理解递归，就得先理解什么是递归。</p>\n</blockquote>\n<p>递归的基本思想是某个函数直接或者间接地调用自身，这样原问题的求解就转换为了许多性质相同但是规模更小的子问题。求解时只需要关注如何把原问题划分成符合条件的子问题，而不需要过分关注这个子问题是如何被解决的。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span>传入数值<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>终止条件<span class="token punctuation">)</span> <span class="token keyword">return</span> 最小子问题解<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span>缩小规模<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">//不使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> seg <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> seg <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> seg <span class="token operator">=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> start <span class="token operator">&lt;</span> n <span class="token operator">-</span> seg<span class="token punctuation">;</span> start <span class="token operator">+=</span> seg <span class="token operator">+</span> seg<span class="token punctuation">)</span>\n      <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> start<span class="token punctuation">,</span> start <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> std<span class="token operator">::</span><span class="token function">min</span><span class="token punctuation">(</span>start <span class="token operator">+</span> seg <span class="token operator">+</span> seg <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//使用递归的归并排序算法</span>\ntemplate <span class="token operator">&lt;</span>typename T<span class="token operator">></span>\n<span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>T<span class="token operator">></span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> front<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>front <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> mid <span class="token operator">=</span> front <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> front<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> front<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h4>\n<p>在程序执行中，递归是利用堆栈来实现的。每当进入一个函数调用，栈就会增加一层栈帧，每次函数返回，栈就会减少一层栈帧。而栈不是无限大的，当递归层数过多时，就会造成 <strong>栈溢出</strong> 的后果。</p>\n<p>显然有时候递归处理是高效的，比如归并排序；<strong>有时候是低效的</strong>，比如数孙悟空身上的毛，因为堆栈会消耗额外空间，而简单的递推不会消耗空间。比如这个例子，给一个链表头，计算它的长度：</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token comment">// 典型的递推遍历框架</span>\n<span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>Node <span class="token operator">*</span>p <span class="token operator">=</span> head<span class="token punctuation">;</span> p <span class="token operator">!=</span> nullptr<span class="token punctuation">;</span> p <span class="token operator">=</span> p<span class="token operator">-></span>next<span class="token punctuation">)</span> size<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 我就是要写递归，递归天下第一</span>\n<span class="token keyword">int</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>Node <span class="token operator">*</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">size_recurison</span><span class="token punctuation">(</span>head<span class="token operator">-></span>next<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="递归优化" tabindex="-1"><a class="header-anchor" href="#递归优化" aria-hidden="true">#</a> 递归优化</h4>\n<p>主页面：<a href="https://oi-wiki.org/search/opt/" target="_blank" rel="noopener noreferrer">搜索优化<ExternalLinkIcon/></a> 和 <a href="https://oi-wiki.org/dp/memo/" target="_blank" rel="noopener noreferrer">记忆化搜索<ExternalLinkIcon/></a></p>\n<p>比较初级的递归实现可能递归次数太多，容易超时。这时需要对递归进行优化。</p>\n<h4 id="分治算法" tabindex="-1"><a class="header-anchor" href="#分治算法" aria-hidden="true">#</a> 分治算法</h4>\n<p>大概的流程可以分为三步：分解 -&gt; 解决 -&gt; 合并。</p>\n<ol>\n<li>分解原问题为结构相同的子问题。</li>\n<li>分解到某个容易求解的边界之后，进行递归求解。</li>\n<li>将子问题的解合并成原问题的解。</li>\n</ol>\n<p>分治法能解决的问题一般有如下特征：</p>\n<ul>\n<li>该问题的规模缩小到一定的程度就可以容易地解决。</li>\n<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质，利用该问题分解出的子问题的解可以合并为该问题的解。</li>\n<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子问题。</li>\n</ul>\n<blockquote>\n<p>如果各子问题是不独立的，则分治法要重复地解公共的子问题，也就做了许多不必要的工作。此时虽然也可用分治法，但一般用 <a href="https://oi-wiki.org/dp/basic/" target="_blank" rel="noopener noreferrer">动态规划<ExternalLinkIcon/></a> 较好。</p>\n</blockquote>\n<p>以归并排序为例。假设实现归并排序的函数名为 <code>merge_sort</code>。明确该函数的职责，即 <strong>对传入的一个数组排序</strong>。这个问题显然可以分解。给一个数组排序等于给该数组的左右两半分别排序，然后合并成一个数组。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">merge_sort</span><span class="token punctuation">(</span>一个数组<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>可以很容易处理<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge_sort</span><span class="token punctuation">(</span>右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">merge</span><span class="token punctuation">(</span>左半个数组<span class="token punctuation">,</span> 右半个数组<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>传给它半个数组，那么处理完后这半个数组就已经被排好了。注意到，<code>merge_sort</code> 与二叉树的后序遍历模板极其相似。因为分治算法的套路是 <strong>分解 -&gt; 解决（触底）-&gt; 合并（回溯）</strong>，先左右分解，再处理合并，回溯就是在退栈，即相当于后序遍历。</p>\n<h4 id="要点-1" tabindex="-1"><a class="header-anchor" href="#要点-1" aria-hidden="true">#</a> 要点</h4>\n<h5 id="写递归的要点" tabindex="-1"><a class="header-anchor" href="#写递归的要点" aria-hidden="true">#</a> 写递归的要点</h5>\n<p><strong>明白一个函数的作用并相信它能完成这个任务，千万不要跳进这个函数里面企图探究更多细节，</strong> 否则就会陷入无穷的细节无法自拔，人脑能压几个栈啊。</p>\n<p>以遍历二叉树为例</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">traverse</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>这几行代码就足以遍历任何一棵二叉树了。对于递归函数 <code>traverse(root)</code>，只要相信给它一个根节点 <code>root</code>，它就能遍历这棵树。所以只需要把这个节点的左右节点再传给这个函数就行了。</p>\n<p>同样扩展到遍历一棵 N 叉树。与二叉树的写法一模一样。不过，对于 N 叉树，显然没有中序遍历。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">traverse</span><span class="token punctuation">(</span>TreeNode<span class="token operator">*</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token operator">:</span> root<span class="token operator">-></span>children<span class="token punctuation">)</span> <span class="token function">traverse</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h4>\n<h5 id="递归与枚举的区别" tabindex="-1"><a class="header-anchor" href="#递归与枚举的区别" aria-hidden="true">#</a> 递归与枚举的区别</h5>\n<p>递归和枚举的区别在于：枚举是横向地把问题划分，然后依次求解子问题；而递归是把问题逐级分解，是纵向的拆分。</p>\n<h5 id="递归与分治的区别" tabindex="-1"><a class="header-anchor" href="#递归与分治的区别" aria-hidden="true">#</a> 递归与分治的区别</h5>\n<p>递归是一种编程技巧，一种解决问题的思维方式；分治算法很大程度上是基于递归的，解决更具体问题的算法思想。</p>\n<h4 id="例题-1" tabindex="-1"><a class="header-anchor" href="#例题-1" aria-hidden="true">#</a> 例题</h4>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>给定一个二叉树，它的每个结点都存放着一个整数值。</p>\n<p>找出路径和等于给定数值的路径总数。</p>\n<p>路径不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。</p>\n<p>二叉树不超过 1000 个节点，且节点数值范围是[-1000000,1000000]的整数。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>root = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    5   -3\n   / \\    \\\n  3   2   11\n / \\   \\\n3  -2   1\n\n返回 3。和等于 8 的路径有：\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/**\n * 二叉树结点的定义\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>参考代码</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span> <span class="token operator">+</span>\n         <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>题目看起来很复杂，不过代码却极其简洁。</p>\n<p>首先明确，递归求解树的问题必然是要遍历整棵树的，所以二叉树的遍历框架（分别对左右子树递归调用函数本身）必然要出现在主函数 pathSum 中。那么对于每个节点，它们应该干什么呢？它们应该看看，自己和它们的子树包含多少条符合条件的路径。好了，这道题就结束了。</p>\n<p>按照前面说的技巧，根据刚才的分析来定义清楚每个递归函数应该做的事：</p>\n<p><code>PathSum</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，和为目标值的路径总数。</p>\n<p><code>count</code> 函数：给定一个节点和一个目标值，返回以这个节点为根的树中，能凑出几个以该节点为路径开头，和为目标值的路径总数。</p>\n<div class="language-c ext-c line-numbers-mode"><pre v-pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>root<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> pathImLeading <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 自己为开头的路径数</span>\n  <span class="token keyword">int</span> leftPathSum <span class="token operator">=</span> <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>left<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 左边路径总数（相信它能算出来）</span>\n  <span class="token keyword">int</span> rightPathSum <span class="token operator">=</span>\n      <span class="token function">pathSum</span><span class="token punctuation">(</span>root<span class="token operator">-></span>right<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 右边路径总数（相信它能算出来）</span>\n  <span class="token keyword">return</span> leftPathSum <span class="token operator">+</span> rightPathSum <span class="token operator">+</span> pathImLeading<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">count</span><span class="token punctuation">(</span>TreeNode <span class="token operator">*</span>node<span class="token punctuation">,</span> <span class="token keyword">int</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> nullptr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 能不能作为一条单独的路径呢？</span>\n  <span class="token keyword">int</span> isMe <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">-></span>val <span class="token operator">==</span> sum<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// 左边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> leftNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>left<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// 右边的，你那边能凑几个 sum - node.val ？</span>\n  <span class="token keyword">int</span> rightNode <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span>node<span class="token operator">-></span>right<span class="token punctuation">,</span> sum <span class="token operator">-</span> node<span class="token operator">-></span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> isMe <span class="token operator">+</span> leftNode <span class="token operator">+</span> rightNode<span class="token punctuation">;</span>  <span class="token comment">// 我这能凑这么多个</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>还是那句话，<strong>明白每个函数能做的事，并相信它们能够完成。</strong></p>\n<p>总结下，<code>PathSum</code> 函数提供了二叉树遍历框架，在遍历中对每个节点调用 <code>count</code> 函数（这里用的是先序遍历，不过中序遍历和后序遍历也可以）。<code>count</code> 函数也是一个二叉树遍历，用于寻找以该节点开头的目标值路径。</p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础"},slug:"算法基础",filePath:"/root/blog/blogs/Algorithm/算法基础.md",filePathRelative:"blogs/Algorithm/算法基础.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础.html.vue",componentFileChunkName:"v-f6ced18c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础.html.js",dataFileChunkName:"v-f6ced18c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础.html",htmlFilePathRelative:"blogs/Algorithm/算法基础.html"},{data:{key:"v-6a99b4ad",path:"/blogs/Algorithm/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%EF%BC%88%E4%BA%8C%EF%BC%89.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],git:{},filePathRelative:"blogs/Algorithm/算法基础（二）.md"},key:"v-6a99b4ad",path:"/blogs/Algorithm/suanfajichu（er）.html",title:"算法基础（二）",lang:"en-US",frontmatter:{title:"算法基础（二）",date:"2021/03/20",tags:["算法","Algorithm"],categories:["Algorithm"]},excerpt:"",headers:[],content:"\r\n# 算法基础（二）\r\n**有待更新**",contentRendered:'<h1 id="算法基础-二" tabindex="-1"><a class="header-anchor" href="#算法基础-二" aria-hidden="true">#</a> 算法基础（二）</h1>\n<p><strong>有待更新</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Algorithm/算法基础（二）.html",pathLocale:"/",permalink:null,routeMeta:{title:"算法基础（二）"},slug:"算法基础（二）",filePath:"/root/blog/blogs/Algorithm/算法基础（二）.md",filePathRelative:"blogs/Algorithm/算法基础（二）.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.vue",componentFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.vue",componentFileChunkName:"v-6a99b4ad",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Algorithm/算法基础（二）.html.js",dataFilePathRelative:"pages/blogs/Algorithm/算法基础（二）.html.js",dataFileChunkName:"v-6a99b4ad",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Algorithm/算法基础（二）.html",htmlFilePathRelative:"blogs/Algorithm/算法基础（二）.html"}],label:"Algorithm"},css:{pages:[{data:{key:"v-c8e1aa5a",path:"/blogs/CSS/%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],git:{},filePathRelative:"blogs/CSS/文本溢出.md"},key:"v-c8e1aa5a",path:"/blogs/CSS/wenbenyichu.html",title:"css文本溢出省略解决方法",lang:"en-US",frontmatter:{title:"css文本溢出省略解决方法",date:"2021/11/01",tags:["css"],categories:["CSS"]},excerpt:"",headers:[{level:2,title:"文本溢出样式解决方法",slug:"文本溢出样式解决方法",children:[]}],content:"\r\n## 文本溢出样式解决方法\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\noverflow: hidden；（文字长度超出限定宽度，则隐藏超出的内容）\r\n\r\nwhite-space: nowrap；（设置文字在一行显示，不能换行）\r\n\r\ntext-overflow: ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\r\n```\r\n\r\n**纯 CSS 实现方案**\r\n\r\n**核心 CSS 语句**\r\n\r\n```css\r\n-webkit-line-clamp: 2；（用来限制在一个块元素显示的文本的行数,2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\r\n\r\ndisplay: -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\r\n\r\n-webkit-box-orient: vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\r\n\r\noverflow: hidden；（文本溢出限定的宽度就隐藏内容）\r\n\r\ntext-overflow: ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本)\r\n```\r\n\r\n**优点**\r\n\r\n- 响应式截断\r\n- 文本溢出范围才显示省略号，否则不显示省略号\r\n- 省略号显示位置刚好\r\n\r\n  ![123](https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png)\r\n",contentRendered:'<h2 id="文本溢出样式解决方法" tabindex="-1"><a class="header-anchor" href="#文本溢出样式解决方法" aria-hidden="true">#</a> 文本溢出样式解决方法</h2>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文字长度超出限定宽度，则隐藏超出的内容）\n\n<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap；（设置文字在一行显示，不能换行）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（规定当文本溢出时，显示省略符号来代表被修剪的文本）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>纯 CSS 实现方案</strong></p>\n<p><strong>核心 CSS 语句</strong></p>\n<div class="language-css ext-css line-numbers-mode"><pre v-pre class="language-css"><code><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2；（用来限制在一个块元素显示的文本的行数<span class="token punctuation">,</span>2表示最多显示2行。 为了实现该效果，它需要组合其他的WebKit属性）\n\n<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box；（和1结合使用，将对象作为弹性伸缩盒子模型显示 ）\n\n<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical；（和1结合使用 ，设置或检索伸缩盒对象的子元素的排列方式 ）\n\n<span class="token property">overflow</span><span class="token punctuation">:</span> hidden；（文本溢出限定的宽度就隐藏内容）\n\n<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis；（多行文本的情况下，用省略号“…”隐藏溢出范围的文本<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>优点</strong></p>\n<ul>\n<li>\n<p>响应式截断</p>\n</li>\n<li>\n<p>文本溢出范围才显示省略号，否则不显示省略号</p>\n</li>\n<li>\n<p>省略号显示位置刚好</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210821154624.png" alt="123"></p>\n</li>\n</ul>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/CSS/文本溢出.html",pathLocale:"/",permalink:null,routeMeta:{title:"css文本溢出省略解决方法"},slug:"文本溢出",filePath:"/root/blog/blogs/CSS/文本溢出.md",filePathRelative:"blogs/CSS/文本溢出.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.vue",componentFilePathRelative:"pages/blogs/CSS/文本溢出.html.vue",componentFileChunkName:"v-c8e1aa5a",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/CSS/文本溢出.html.js",dataFilePathRelative:"pages/blogs/CSS/文本溢出.html.js",dataFileChunkName:"v-c8e1aa5a",htmlFilePath:"/root/blog/.vuepress/dist/blogs/CSS/文本溢出.html",htmlFilePathRelative:"blogs/CSS/文本溢出.html"}],length:1,label:"css"},NodeJS:{pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}],length:1,label:"NodeJS"},json:{pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}],length:1,label:"json"},excel:{pages:[{data:{key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"},key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],content:"\r\n## Parse excel to json\r\n\r\n```js\r\nimport xlsx from 'xlsx'\r\n\r\nconst parse = (filename) => {\r\n\tconst excelData = xlsx.readFile(filename)\r\n\treturn Object.keys(excelData.Sheets).map((name) => ({\r\n\t\tname,\r\n\t\tdata: xlsx.utils.sheet_to_json(excelData.Sheets[name]),\r\n\t}))\r\n}\r\nparse('./test.xlsx').forEach((item) => {\r\n\tconsole.log(item.data)\r\n})\r\n```\r\n\r\n**xlsx 是一个处理 excel 的库，是个好工具库。**\r\n\r\n**`read`/`write`是处理 buffer 流，`readFile`/`writeFile`处理文件（fs.readFileSync 读取）**\r\n\r\n```js\r\nvar buf = fs.readFileSync('sheetjs.xlsx')\r\nvar wb = XLSX.read(buf, { type: 'buffer' })\r\n// 等同于下面一句话\r\nvar wb = XLSX.readFile('sheetjs.xlsx')\r\n```\r\n\r\n**在项目中处理表单上传情况比较多**\r\n\r\n```js\r\nvar f = files[Object.keys(files)[0]]\r\nvar workbook = XLSX.readFile(f.path)\r\n```\r\n\r\n**如果有架设服务器，可以用 cURL 来上传文件测试**\r\n\r\n```bash\r\n# upload sheetjs.csv and update data\r\ncurl -X POST -F \"data=@sheetjs.csv\" http://localhost:7262/\r\n# download data in SYLK format\r\ncurl -X GET http://localhost:7262/?t=slk\r\n# read sheetjs.csv from the server directory\r\ncurl -X POST http://localhost:7262/?f=sheetjs.csv\r\n# write sheetjs.xlsb in the XLSB format\r\ncurl -X GET http://localhost:7262/?f=sheetjs.xlsb\r\n```\r\n",contentRendered:'<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">\'xlsx\'</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'./test.xlsx\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p>\n<p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'buffer\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">\'sheetjs.xlsx\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">"data=@sheetjs.csv"</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/NodeJS/excelTOjson.html",pathLocale:"/",permalink:null,routeMeta:{title:"NodeJs excel"},slug:"excelTOjson",filePath:"/root/blog/blogs/NodeJS/excelTOjson.md",filePathRelative:"blogs/NodeJS/excelTOjson.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.vue",componentFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.vue",componentFileChunkName:"v-c565c5e8",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/NodeJS/excelTOjson.html.js",dataFilePathRelative:"pages/blogs/NodeJS/excelTOjson.html.js",dataFileChunkName:"v-c565c5e8",htmlFilePath:"/root/blog/.vuepress/dist/blogs/NodeJS/excelTOjson.html",htmlFilePathRelative:"blogs/NodeJS/excelTOjson.html"}],length:1,label:"excel"},arduino:{pages:[{data:{key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],git:{},filePathRelative:"blogs/notes/Arduino_Libraries.md"},key:"v-7f956b1c",path:"/blogs/notes/Arduino_Libraries.html",title:"拥有Arduino自己的库",lang:"en-US",frontmatter:{title:"拥有Arduino自己的库",date:"2021/11/01",tags:["arduino"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"How to create a Arduino Libraries",slug:"how-to-create-a-arduino-libraries",children:[]}],content:'\r\n## How to create a Arduino Libraries\r\n\r\n1. 在`Arduino`目录下的`libraries`中新建一个自命名文件夹\r\n\r\n2. 添加同名`.cpp` `.h`文件\r\n\r\n   ```cpp\r\n   # My_libraries.h\r\n   #ifndef My_libraries\r\n   #include <Arduino.h>\r\n   void Test();\r\n   #endif\r\n   ```\r\n\r\n   ```cpp\r\n   # My_libraries.cpp\r\n   #include <Arduino.h>\r\n   void Test(){\r\n   \tSerial.println("Hello!");\r\n   \tdelay(1000);\r\n   }\r\n   ```\r\n\r\n3. （可选）创建`example`文件夹，再创建`example.ino`\r\n\r\n   ```cpp\r\n   #include <Arduino.h>\r\n   #include "My_libraries.h" // 引入自己的库\r\n\r\n   void setup(){\r\n       Serial.begin(115200);\r\n       Test();\r\n   }\r\n   void loop(){\r\n       Test();\r\n   }\r\n   ```\r\n\r\n**其余自行搜索，仅提供简单示例模板**\r\n',contentRendered:'<h2 id="how-to-create-a-arduino-libraries" tabindex="-1"><a class="header-anchor" href="#how-to-create-a-arduino-libraries" aria-hidden="true">#</a> How to create a Arduino Libraries</h2>\n<ol>\n<li>\n<p>在<code>Arduino</code>目录下的<code>libraries</code>中新建一个自命名文件夹</p>\n</li>\n<li>\n<p>添加同名<code>.cpp</code> <code>.h</code>文件</p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>h</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">My_libraries</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span> <span class="token expression">My_libraries<span class="token punctuation">.</span>cpp</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token keyword">void</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tSerial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n<li>\n<p>（可选）创建<code>example</code>文件夹，再创建<code>example.ino</code></p>\n<div class="language-cpp ext-cpp line-numbers-mode"><pre v-pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"My_libraries.h"</span> <span class="token comment">// 引入自己的库</span></span>\n\n<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ol>\n<p><strong>其余自行搜索，仅提供简单示例模板</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Arduino_Libraries.html",pathLocale:"/",permalink:null,routeMeta:{title:"拥有Arduino自己的库"},slug:"Arduino_Libraries",filePath:"/root/blog/blogs/notes/Arduino_Libraries.md",filePathRelative:"blogs/notes/Arduino_Libraries.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.vue",componentFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.vue",componentFileChunkName:"v-7f956b1c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Arduino_Libraries.html.js",dataFilePathRelative:"pages/blogs/notes/Arduino_Libraries.html.js",dataFileChunkName:"v-7f956b1c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Arduino_Libraries.html",htmlFilePathRelative:"blogs/notes/Arduino_Libraries.html"}],length:1,label:"arduino"},git:{pages:[{data:{key:"v-9e971e66",path:"/blogs/notes/%E8%B4%A1%E7%8C%AE%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],git:{},filePathRelative:"blogs/notes/贡献项目代码.md"},key:"v-9e971e66",path:"/blogs/notes/gongxianxiangmudaima.html",title:"贡献项目代码姿势",lang:"en-US",frontmatter:{title:"贡献项目代码姿势",date:"2021/11/01",tags:["git"],categories:["notes"]},excerpt:"",headers:[{level:2,title:"贡献项目代码",slug:"贡献项目代码",children:[{level:3,title:"Fork",slug:"fork",children:[]},{level:3,title:"Clone",slug:"clone",children:[]},{level:3,title:"Branch",slug:"branch",children:[]},{level:3,title:"Code",slug:"code",children:[]},{level:3,title:"git",slug:"git",children:[]},{level:3,title:"Pull Request",slug:"pull-request",children:[]}]}],content:'\r\n## 贡献项目代码\r\n\r\n### Fork\r\n\r\n`Fork`项目\r\n\r\n### Clone\r\n\r\n`git clone`项目\r\n\r\n### Branch\r\n\r\n`git checkout -b 你的branch名`\r\n\r\n### Code\r\n\r\n修改代码\r\n\r\n### git\r\n\r\n`git add .` `git commit -m "这次我修改了XX"` `git push origin 你的branch名`\r\n\r\n### Pull Request\r\n\r\n去自己 fork 的项目提交 pull request\r\n',contentRendered:'<h2 id="贡献项目代码" tabindex="-1"><a class="header-anchor" href="#贡献项目代码" aria-hidden="true">#</a> 贡献项目代码</h2>\n<h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> Fork</h3>\n<p><code>Fork</code>项目</p>\n<h3 id="clone" tabindex="-1"><a class="header-anchor" href="#clone" aria-hidden="true">#</a> Clone</h3>\n<p><code>git clone</code>项目</p>\n<h3 id="branch" tabindex="-1"><a class="header-anchor" href="#branch" aria-hidden="true">#</a> Branch</h3>\n<p><code>git checkout -b 你的branch名</code></p>\n<h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h3>\n<p>修改代码</p>\n<h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> git</h3>\n<p><code>git add .</code> <code>git commit -m &quot;这次我修改了XX&quot;</code> <code>git push origin 你的branch名</code></p>\n<h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request" aria-hidden="true">#</a> Pull Request</h3>\n<p>去自己 fork 的项目提交 pull request</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/贡献项目代码.html",pathLocale:"/",permalink:null,routeMeta:{title:"贡献项目代码姿势"},slug:"贡献项目代码",filePath:"/root/blog/blogs/notes/贡献项目代码.md",filePathRelative:"blogs/notes/贡献项目代码.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.vue",componentFilePathRelative:"pages/blogs/notes/贡献项目代码.html.vue",componentFileChunkName:"v-9e971e66",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/贡献项目代码.html.js",dataFilePathRelative:"pages/blogs/notes/贡献项目代码.html.js",dataFileChunkName:"v-9e971e66",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/贡献项目代码.html",htmlFilePathRelative:"blogs/notes/贡献项目代码.html"}],length:1,label:"git"},dockerfile:{length:2,pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"}],label:"dockerfile"},docker:{length:4,pages:[{data:{key:"v-0b25f91c",path:"/blogs/tech/DockerHub%E7%BB%93%E5%90%88actions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],git:{},filePathRelative:"blogs/tech/DockerHub结合actions.md"},key:"v-0b25f91c",path:"/blogs/tech/DockerHubjieheactions.html",title:"DockerHub结合actions",lang:"en-US",frontmatter:{title:"DockerHub结合actions",date:"2021/10/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要 3 分钟</strong></p>\n",headers:[{level:2,title:"DockerHub 结合 actions",slug:"dockerhub-结合-actions",children:[{level:3,title:"1.往仓库加两个 SECRET",slug:"_1-往仓库加两个-secret",children:[]},{level:3,title:"2. .github/workflows",slug:"_2-github-workflows",children:[]},{level:3,title:"3. 优化",slug:"_3-优化",children:[]}]}],content:"\r\n**本文阅读大概需要 3 分钟**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## DockerHub 结合 actions\r\n\r\n**如果你使用`Docker hub`平台来管理镜像，那么结合`git actions`来自动 CI 发布多是一件美事啊~**\r\n\r\n**默认前提都是公有 public 仓库**\r\n\r\n### 1.往仓库加两个 SECRET\r\n\r\n**分别是`DOCKER_HUB_USERNAME`， `DOCKER_HUB_ACCESS_TOKEN` [Token 这里生成](https://hub.docker.com/settings/security)**\r\n\r\n### 2. .github/workflows\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\nname: push to dockerhub\r\non:\r\n  push:\r\n    branches:\r\n      - master\r\n    tags:\r\n      - 'v*'\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      # pull the latest code\r\n      - name: Checkout\r\n        uses: actions/checkout@v2\r\n      - name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      - name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n\r\n      - name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          # Dockerfile所处的位置\r\n          context: ./Docker-main\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          # 修改下面的仓库名\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n      # 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。\r\n      - name: WeChat Work notification by text\r\n        uses: chf007/action-wechat-work@master\r\n        env:\r\n          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.WECHAT_WORK_BOT_WEBHOOK}}\r\n        with:\r\n          msgtype: text\r\n          content: action 完成！\r\n```\r\n\r\n### 3. 优化\r\n\r\n**推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理**\r\n\r\n```yaml\r\n# .github/workflows/ci.yml\r\n \t  -\r\n        name: Login to Docker Hub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKER_HUB_USERNAME }}\r\n          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}\r\n      -\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: ./\r\n          file: ./Dockerfile\r\n          builder: ${{ steps.buildx.outputs.name }}\r\n          push: true\r\n          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:latest\r\n          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache\r\n          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/你的仓库名:buildcache,mode=max\r\n```\r\n",contentRendered:'<p><strong>本文阅读大概需要 3 分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="dockerhub-结合-actions" tabindex="-1"><a class="header-anchor" href="#dockerhub-结合-actions" aria-hidden="true">#</a> DockerHub 结合 actions</h2>\n<p><strong>如果你使用<code>Docker hub</code>平台来管理镜像，那么结合<code>git actions</code>来自动 CI 发布多是一件美事啊~</strong></p>\n<p><strong>默认前提都是公有 public 仓库</strong></p>\n<h3 id="_1-往仓库加两个-secret" tabindex="-1"><a class="header-anchor" href="#_1-往仓库加两个-secret" aria-hidden="true">#</a> 1.往仓库加两个 SECRET</h3>\n<p><strong>分别是<code>DOCKER_HUB_USERNAME</code>， <code>DOCKER_HUB_ACCESS_TOKEN</code> <a href="https://hub.docker.com/settings/security" target="_blank" rel="noopener noreferrer">Token 这里生成<ExternalLinkIcon/></a></strong></p>\n<h3 id="_2-github-workflows" tabindex="-1"><a class="header-anchor" href="#_2-github-workflows" aria-hidden="true">#</a> 2. .github/workflows</h3>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n<span class="token key atrule">name</span><span class="token punctuation">:</span> push to dockerhub\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> master\n    <span class="token key atrule">tags</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token string">\'v*\'</span>\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token comment"># pull the latest code</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Docker Buildx\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/setup<span class="token punctuation">-</span>buildx<span class="token punctuation">-</span>action@v1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token comment"># Dockerfile所处的位置</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./Docker<span class="token punctuation">-</span>main\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token comment"># 修改下面的仓库名</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n      <span class="token comment"># 结合微信机器人推送成功消息(非必需)，如需，另加一个SECRET。</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> WeChat Work notification by text\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> chf007/action<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>work@master\n        <span class="token key atrule">env</span><span class="token punctuation">:</span>\n          <span class="token key atrule">WECHAT_WORK_BOT_WEBHOOK</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span>secrets.WECHAT_WORK_BOT_WEBHOOK<span class="token punctuation">}</span><span class="token punctuation">}</span>\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">msgtype</span><span class="token punctuation">:</span> text\n          <span class="token key atrule">content</span><span class="token punctuation">:</span> action 完成！\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_3-优化" tabindex="-1"><a class="header-anchor" href="#_3-优化" aria-hidden="true">#</a> 3. 优化</h3>\n<p><strong>推过一次后，我们希望能利用缓存，减少时间，便捷高效的处理</strong></p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token comment"># .github/workflows/ci.yml</span>\n \t  <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Login to Docker Hub\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@v1\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>\n      <span class="token punctuation">-</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@v2\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">context</span><span class="token punctuation">:</span> ./\n          <span class="token key atrule">file</span><span class="token punctuation">:</span> ./Dockerfile\n          <span class="token key atrule">builder</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.buildx.outputs.name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>latest\n          <span class="token key atrule">cache-from</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache\n          <span class="token key atrule">cache-to</span><span class="token punctuation">:</span> type=registry<span class="token punctuation">,</span>ref=$<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_HUB_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>/你的仓库名<span class="token punctuation">:</span>buildcache<span class="token punctuation">,</span>mode=max\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/DockerHub结合actions.html",pathLocale:"/",permalink:null,routeMeta:{title:"DockerHub结合actions"},slug:"DockerHub结合actions",filePath:"/root/blog/blogs/tech/DockerHub结合actions.md",filePathRelative:"blogs/tech/DockerHub结合actions.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.vue",componentFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.vue",componentFileChunkName:"v-0b25f91c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/DockerHub结合actions.html.js",dataFilePathRelative:"pages/blogs/tech/DockerHub结合actions.html.js",dataFileChunkName:"v-0b25f91c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/DockerHub结合actions.html",htmlFilePathRelative:"blogs/tech/DockerHub结合actions.html"},{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"},{data:{key:"v-5f4ca094",path:"/blogs/tech/Dockerfile%E5%AD%A6%E4%B9%A0.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],git:{},filePathRelative:"blogs/tech/Dockerfile学习.md"},key:"v-5f4ca094",path:"/blogs/tech/Dockerfilexuexi.html",title:"Dockerfile学习",lang:"en-US",frontmatter:{title:"Dockerfile学习",date:"2021/03/02",tags:["dockerfile","docker"],categories:["tech"]},excerpt:"<p><strong>阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"简单速度使用版",slug:"简单速度使用版",children:[]},{level:2,title:"Dockerfile？",slug:"dockerfile",children:[]},{level:2,title:"关于优化",slug:"关于优化",children:[]}],content:"\r\n**阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简单速度使用版\r\n\r\n**就是你下载了别人的dockerfile，且代码完备，在同一个根目录下**\r\n\r\n```\r\n.\r\n├── app\r\n│   └── main.py\r\n└── Dockerfile\r\n```\r\n\r\n```sh\r\n# 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file\r\ndocker build -t myimage .\r\n# -d 后台 -p 端口：意思你80的端口借给容器用\r\ndocker run -d --name mycontainer -p 80:80 myimage\r\n```\r\n\r\n\r\n\r\n## Dockerfile？\r\n\r\n**首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。**\r\n\r\n- 简单介绍流程\r\n\r\n  **Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile**\r\n\r\n- 简单例子，看完估计大部分情况都能解决了\r\n\r\n  ```sh\r\n  # 拉一个ubuntu镜像\r\n  FROM ubuntu\r\n  # 与Dockerfile同目录下的app文件夹复制进镜像\r\n  COPY ./app /app\r\n  # 镜像里更新源和装vim编辑器，随后你run一个容器就行了\r\n  RUN apt-get update && apt-get install vim\r\n  ```\r\n\r\n\r\n\r\n## 关于优化\r\n\r\n有一篇[文章](https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images)写的比较好，可以参考.\r\n\r\n**但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。**\r\n\r\n**最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]**",contentRendered:'<p><strong>阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简单速度使用版" tabindex="-1"><a class="header-anchor" href="#简单速度使用版" aria-hidden="true">#</a> 简单速度使用版</h2>\n<p><strong>就是你下载了别人的dockerfile，且代码完备，在同一个根目录下</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>.\n├── app\n│   └── main.py\n└── Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 网上没有这么直接的使用dockerfile的方法，千篇一律介绍怎么写file</span>\n<span class="token function">docker</span> build -t myimage <span class="token builtin class-name">.</span>\n<span class="token comment"># -d 后台 -p 端口：意思你80的端口借给容器用</span>\n<span class="token function">docker</span> run -d --name mycontainer -p <span class="token number">80</span>:80 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile？</h2>\n<p><strong>首先学习思维，外网的教学，<u>无外乎把Dockerfile制作容器的方法放在第一位，并且可能仅有这种方法</u>，目的就是先学好思维，避免学习上造无用轮子。</strong></p>\n<ul>\n<li>\n<p>简单介绍流程</p>\n<p><strong>Dockerfile是把拉镜像，增加所需（比如安装依赖，clone代码等）执行过程整合成一个文件也就是Dockerfile</strong></p>\n</li>\n<li>\n<p>简单例子，看完估计大部分情况都能解决了</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 拉一个ubuntu镜像</span>\nFROM ubuntu\n<span class="token comment"># 与Dockerfile同目录下的app文件夹复制进镜像</span>\nCOPY ./app /app\n<span class="token comment"># 镜像里更新源和装vim编辑器，随后你run一个容器就行了</span>\nRUN <span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li>\n</ul>\n<h2 id="关于优化" tabindex="-1"><a class="header-anchor" href="#关于优化" aria-hidden="true">#</a> 关于优化</h2>\n<p>有一篇<a href="https://www.infoq.cn/article/3-simple-tricks-for-smaller-docker-images" target="_blank" rel="noopener noreferrer">文章<ExternalLinkIcon/></a>写的比较好，可以参考.</p>\n<p><strong>但是对于python来说，使用Alpine版会出现很多莫名的bug，即使压缩节省了很多的空间，最终如果代码运行环境不稳定恶劣化，多牛逼的优化都算是鬼画符。</strong></p>\n<p><strong>最后。勤动手上网查，大佬提供的dockerfile都是挺好的，毕竟只有代码是自己的[Doge]</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Dockerfile学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"Dockerfile学习"},slug:"Dockerfile学习",filePath:"/root/blog/blogs/tech/Dockerfile学习.md",filePathRelative:"blogs/tech/Dockerfile学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.vue",componentFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.vue",componentFileChunkName:"v-5f4ca094",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Dockerfile学习.html.js",dataFilePathRelative:"pages/blogs/tech/Dockerfile学习.html.js",dataFileChunkName:"v-5f4ca094",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Dockerfile学习.html",htmlFilePathRelative:"blogs/tech/Dockerfile学习.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"}],label:"docker"},flask:{length:2,pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}],label:"flask"},fastapi:{length:2,pages:[{data:{key:"v-8fdebace",path:"/blogs/Python/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BC%83%E7%94%A8flask%E6%94%B9%E7%94%A8fastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],git:{},filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md"},key:"v-8fdebace",path:"/blogs/Python/weishimeqiyongflaskgaiyongfastapi.html",title:"弃用flask",lang:"en-US",frontmatter:{title:"弃用flask",date:"2021/08/08",tags:["flask","fastapi"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"为什么弃用flask改用fastapi",slug:"为什么弃用flask改用fastapi",children:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"开发中遇到的坑",slug:"开发中遇到的坑",children:[]}]}],content:"## 为什么弃用flask改用fastapi\r\n\r\n**原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。**\r\n\r\n### 简介\r\n\r\n- **快速**：可与 **NodeJS** 和 **Go** 比肩的极高性能（归功于 Starlette 和 Pydantic）。[最快的 Python web 框架之一](https://fastapi.tiangolo.com/zh/#_11)。\r\n- **高效编码**：提高功能开发速度约 200％ 至 300％。*\r\n- **更少 bug**：减少约 40％ 的人为（开发者）导致错误。*\r\n- **智能**：极佳的编辑器支持。处处皆可自动补全，减少调试时间。\r\n- **简单**：设计的易于使用和学习，阅读文档的时间更短。\r\n- **简短**：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。\r\n- **健壮**：生产可用级别的代码。还有自动生成的交互式文档。\r\n- **标准化**：基于（并完全兼容）API 的相关开放标准：[OpenAPI](https://github.com/OAI/OpenAPI-Specification) (以前被称为 Swagger) 和 [JSON Schema](https://json-schema.org/)。\r\n\r\n**拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？**\r\n\r\n### 开发中遇到的坑\r\n**无疑，官方api文档是最好的老师**\r\n1.养成静态文件交给服务器端的习惯\r\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别\r\n\r\n\r\n\r\n",contentRendered:'<h2 id="为什么弃用flask改用fastapi" tabindex="-1"><a class="header-anchor" href="#为什么弃用flask改用fastapi" aria-hidden="true">#</a> 为什么弃用flask改用fastapi</h2>\n<p><strong>原本我有一个上传视频的小工具，在网页端采用flask（基于WSGI）架设，但是知识不能拥有满足感，让人无意滞步不行，当了解到了fastapi后（基于ASGI），新的世界开启了。</strong></p>\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<ul>\n<li><strong>快速</strong>：可与 <strong>NodeJS</strong> 和 <strong>Go</strong> 比肩的极高性能（归功于 Starlette 和 Pydantic）。<a href="https://fastapi.tiangolo.com/zh/#_11" target="_blank" rel="noopener noreferrer">最快的 Python web 框架之一<ExternalLinkIcon/></a>。</li>\n<li><strong>高效编码</strong>：提高功能开发速度约 200％ 至 300％。*</li>\n<li><strong>更少 bug</strong>：减少约 40％ 的人为（开发者）导致错误。*</li>\n<li><strong>智能</strong>：极佳的编辑器支持。处处皆可自动补全，减少调试时间。</li>\n<li><strong>简单</strong>：设计的易于使用和学习，阅读文档的时间更短。</li>\n<li><strong>简短</strong>：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少。</li>\n<li><strong>健壮</strong>：生产可用级别的代码。还有自动生成的交互式文档。</li>\n<li><strong>标准化</strong>：基于（并完全兼容）API 的相关开放标准：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener noreferrer">OpenAPI<ExternalLinkIcon/></a> (以前被称为 Swagger) 和 <a href="https://json-schema.org/" target="_blank" rel="noopener noreferrer">JSON Schema<ExternalLinkIcon/></a>。</li>\n</ul>\n<p><strong>拥有一个自动生成文档+交互性更强+更快的框架 能不香吗？</strong></p>\n<h3 id="开发中遇到的坑" tabindex="-1"><a class="header-anchor" href="#开发中遇到的坑" aria-hidden="true">#</a> 开发中遇到的坑</h3>\n<p><strong>无疑，官方api文档是最好的老师</strong>\n1.养成静态文件交给服务器端的习惯\n2.该服务器端的操作就不要丢进程序内，开发环境与生产环境的区别</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/为什么弃用flask改用fastapi.html",pathLocale:"/",permalink:null,routeMeta:{title:"弃用flask"},slug:"为什么弃用flask改用fastapi",filePath:"/root/blog/blogs/Python/为什么弃用flask改用fastapi.md",filePathRelative:"blogs/Python/为什么弃用flask改用fastapi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.vue",componentFileChunkName:"v-8fdebace",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFilePathRelative:"pages/blogs/Python/为什么弃用flask改用fastapi.html.js",dataFileChunkName:"v-8fdebace",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/为什么弃用flask改用fastapi.html",htmlFilePathRelative:"blogs/Python/为什么弃用flask改用fastapi.html"},{data:{key:"v-66e05561",path:"/blogs/Python/%E9%87%8D%E6%9E%84%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],git:{},filePathRelative:"blogs/Python/重构项目记录(fastapi).md"},key:"v-66e05561",path:"/blogs/Python/zhonggouxiangmujilu(fastapi).html",title:"重构项目记录(fastapi)",lang:"en-US",frontmatter:{title:"重构项目记录(fastapi)",date:"2021/08/08",tags:["fastapi"],categories:["Python"]},excerpt:"<p><strong>从WSGI到ASGI</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"改造过程",slug:"改造过程",children:[]},{level:3,title:"总结",slug:"总结",children:[]}],content:'**从WSGI到ASGI**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n自从说了要从`Flask`到`Fastapi`转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。\r\n\r\n### 改造过程\r\n\r\n此次的实验项目是之前的[上传视频项目](https://github.com/googidaddy/bili_upload_tool)，由于是传统的`WSGI`架构，加上`Flask`是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)\r\n\r\n```\r\n--docker-compose.yaml\r\n--Docker-main\r\n----main.py\r\n----Dockerfile\r\n--nginx\r\n----nginx.conf\r\n----Dockerfile\r\n```\r\n\r\n\r\n\r\n#### Flask变Fastapi\r\n\r\n**对比来说，改动地方不多，**\r\n\r\n- 首先用pipenv配置好Fastapi相关环境\r\n\r\n- 把模板搭载放在了nginx，可以翻看**萌新nginx配置**那一篇。\r\n\r\n- 增加[请求验证](https://fastapi.tiangolo.com/tutorial/body/)\r\n\r\n  ```python\r\n  from pydantic import BaseModel\r\n  # 对数据有验证\r\n  class Item(BaseModel):\r\n      a: str\r\n      b: str\r\n      c: str\r\n      d: str\r\n  # 去掉__main__程序里uvicorn启动程序\r\n  ```\r\n\r\n- 原来的数据处理部分变更成异步async/await\r\n\r\n#### 增加nginx反向代理\r\n\r\n```dockerfile\r\nFROM nginx:alpine\r\n\r\nCOPY ./dist /usr/share/nginx/html/\r\n\r\nCOPY nginx.conf /etc/nginx/conf.d/\r\n```\r\n\r\n**解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。**\r\n\r\n> ps：nginx配置在那个教程\r\n\r\n#### 增加docker-compose\r\n\r\n使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。\r\n\r\n```yaml\r\nversion: "3.9"\r\nservices:\r\n  web:\r\n    build: nginx\r\n    ports:\r\n      - 8080:8080\r\n\r\n  api:\r\n    build: Docker-main\r\n    ports:\r\n    - 9090:9090\r\n```\r\n\r\n### 总结\r\n\r\n这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,**有些默认配置的坑(--host --port)**，\r\n\r\n',contentRendered:'<p><strong>从WSGI到ASGI</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>自从说了要从<code>Flask</code>到<code>Fastapi</code>转变，还要学习不同架构，ASGI作为非常优秀的异步框架，给我感觉就是如果你没学过python，那么建议你直接从python3直接学，而不是从python2开始...，本次是自底向上说明，方便理解。</p>\n<h3 id="改造过程" tabindex="-1"><a class="header-anchor" href="#改造过程" aria-hidden="true">#</a> 改造过程</h3>\n<p>此次的实验项目是之前的<a href="https://github.com/googidaddy/bili_upload_tool" target="_blank" rel="noopener noreferrer">上传视频项目<ExternalLinkIcon/></a>，由于是传统的<code>WSGI</code>架构，加上<code>Flask</code>是同步框架，调用上遇到异步的问题就头大。(思考要不要修改开发源代码...)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>--docker-compose.yaml\n--Docker-main\n----main.py\n----Dockerfile\n--nginx\n----nginx.conf\n----Dockerfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="flask变fastapi" tabindex="-1"><a class="header-anchor" href="#flask变fastapi" aria-hidden="true">#</a> Flask变Fastapi</h4>\n<p><strong>对比来说，改动地方不多，</strong></p>\n<ul>\n<li>\n<p>首先用pipenv配置好Fastapi相关环境</p>\n</li>\n<li>\n<p>把模板搭载放在了nginx，可以翻看<strong>萌新nginx配置</strong>那一篇。</p>\n</li>\n<li>\n<p>增加<a href="https://fastapi.tiangolo.com/tutorial/body/" target="_blank" rel="noopener noreferrer">请求验证<ExternalLinkIcon/></a></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token comment"># 对数据有验证</span>\n<span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    a<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    b<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    c<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    d<span class="token punctuation">:</span> <span class="token builtin">str</span>\n<span class="token comment"># 去掉__main__程序里uvicorn启动程序</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li>\n<li>\n<p>原来的数据处理部分变更成异步async/await</p>\n</li>\n</ul>\n<h4 id="增加nginx反向代理" tabindex="-1"><a class="header-anchor" href="#增加nginx反向代理" aria-hidden="true">#</a> 增加nginx反向代理</h4>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./dist /usr/share/nginx/html/</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> nginx.conf /etc/nginx/conf.d/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>解释一下，我这里只是轻度使用，Alpine不会造成啥影响，反而轻量更适合，静态文件copy到nginx docker的默认html文件夹，copy自定义nginx配置文件到conf.d，不同于网上大部分教程是因为避免配置规则约束(同时他们也不会说清楚这一点)，网上大部分教程是nginx首要配置文件，需要遵循一定规范才能运行，咱不上纲上线，能跑就行。</strong></p>\n<blockquote>\n<p>ps：nginx配置在那个教程</p>\n</blockquote>\n<h4 id="增加docker-compose" tabindex="-1"><a class="header-anchor" href="#增加docker-compose" aria-hidden="true">#</a> 增加docker-compose</h4>\n<p>使用docker-compose是一个 run container的一个更好替换，像配置nginx反向代理和api服务，应该隔离开两个容器。</p>\n<div class="language-yaml ext-yml line-numbers-mode"><pre v-pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.9"</span>\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> nginx\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>\n\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">build</span><span class="token punctuation">:</span> Docker<span class="token punctuation">-</span>main\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3>\n<p>这次卡壳的主要是nginx的配置，网上教程不靠谱，一个一个坑都要自己踩过来，最后使用上，也需要自己去翻看uvicorn部署,<strong>有些默认配置的坑(--host --port)</strong>，</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/重构项目记录(fastapi).html",pathLocale:"/",permalink:null,routeMeta:{title:"重构项目记录(fastapi)"},slug:"重构项目记录(fastapi)",filePath:"/root/blog/blogs/Python/重构项目记录(fastapi).md",filePathRelative:"blogs/Python/重构项目记录(fastapi).md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.vue",componentFileChunkName:"v-66e05561",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/重构项目记录(fastapi).html.js",dataFilePathRelative:"pages/blogs/Python/重构项目记录(fastapi).html.js",dataFileChunkName:"v-66e05561",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/重构项目记录(fastapi).html",htmlFilePathRelative:"blogs/Python/重构项目记录(fastapi).html"}],label:"fastapi"},nginx:{pages:[{data:{key:"v-fb3507ea",path:"/blogs/tech/%E8%90%8C%E6%96%B0nginx%E9%85%8D%E7%BD%AE.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],git:{},filePathRelative:"blogs/tech/萌新nginx配置.md"},key:"v-fb3507ea",path:"/blogs/tech/mengxinnginxpeizhi.html",title:"萌新nginx配置",lang:"en-US",frontmatter:{title:"萌新nginx配置",date:"2021/08/08",tags:["nginx"],categories:["tech"]},excerpt:"<p><strong>2分钟简单学习nginx配置。</strong></p>\n",headers:[{level:3,title:"配置",slug:"配置",children:[]}],content:'\r\n**2分钟简单学习nginx配置。**\r\n\x3c!-- more --\x3e\r\n\r\n### 配置\r\n\r\n简单直接跑起来\r\n\r\n```sh\r\nserver {\r\n\t# 监听8080端口,简单体验的话，写不写无所谓\r\n    listen 8080;\r\n    # 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.\r\n    server_name yourdomain.com;\r\n    # 配置静态文件,/表示根目录\r\n    location / {\r\n        root            /usr/share/nginx/html;\r\n        index           index.html;\r\n        try_files       $uri $uri/ /index.html;\r\n\r\n }\r\n\t# 访问yourdomian.com/upload 会转发域名到baidu.com\r\n\t# 剩下是配置请求头\r\n    #location /upload {\r\n    #    proxy_pass http://baidu.com;\r\n    #    add_header Access-Control-Allow-Origin *;\r\n    #    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";\r\n    #    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";\r\n    #    add_header Access-Control-Allow-Credentials true;\r\n#}\r\n}\r\n```\r\n\r\n',contentRendered:'<p><strong>2分钟简单学习nginx配置。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3>\n<p>简单直接跑起来</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>server <span class="token punctuation">{</span>\n\t<span class="token comment"># 监听8080端口,简单体验的话，写不写无所谓</span>\n    listen <span class="token number">8080</span><span class="token punctuation">;</span>\n    <span class="token comment"># 简单来说一般使用正则匹配,如果只是体验一下，不需要配置.</span>\n    server_name yourdomain.com<span class="token punctuation">;</span>\n    <span class="token comment"># 配置静态文件,/表示根目录</span>\n    location / <span class="token punctuation">{</span>\n        root            /usr/share/nginx/html<span class="token punctuation">;</span>\n        index           index.html<span class="token punctuation">;</span>\n        try_files       <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>\n\n <span class="token punctuation">}</span>\n\t<span class="token comment"># 访问yourdomian.com/upload 会转发域名到baidu.com</span>\n\t<span class="token comment"># 剩下是配置请求头</span>\n    <span class="token comment">#location /upload {</span>\n    <span class="token comment">#    proxy_pass http://baidu.com;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Origin *;</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";</span>\n    <span class="token comment">#    add_header Access-Control-Allow-Credentials true;</span>\n<span class="token comment">#}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/萌新nginx配置.html",pathLocale:"/",permalink:null,routeMeta:{title:"萌新nginx配置"},slug:"萌新nginx配置",filePath:"/root/blog/blogs/tech/萌新nginx配置.md",filePathRelative:"blogs/tech/萌新nginx配置.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.vue",componentFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.vue",componentFileChunkName:"v-fb3507ea",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/萌新nginx配置.html.js",dataFilePathRelative:"pages/blogs/tech/萌新nginx配置.html.js",dataFileChunkName:"v-fb3507ea",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/萌新nginx配置.html",htmlFilePathRelative:"blogs/tech/萌新nginx配置.html"}],length:1,label:"nginx"},pycharm:{pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"}],length:1,label:"pycharm"},yuanchengkaifa:{pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"}],length:1,label:"远程开发"},python:{length:5,pages:[{data:{key:"v-a782e0f0",path:"/blogs/Python/pycharm%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],git:{},filePathRelative:"blogs/Python/pycharm远程开发.md"},key:"v-a782e0f0",path:"/blogs/Python/pycharmyuanchengkaifa.html",title:"pycharm远程开发",lang:"en-US",frontmatter:{title:"pycharm远程开发",date:"2021/07/01",tags:["pycharm","远程开发","python"],categories:["Python"]},excerpt:"<p><strong>远程开发真的太好了</strong></p>\n",headers:[{level:3,title:"简介",slug:"简介",children:[]},{level:3,title:"配置docker",slug:"配置docker",children:[]},{level:3,title:"远程服务器ssh配置",slug:"远程服务器ssh配置",children:[]},{level:3,title:"Pycharm配置文件同步",slug:"pycharm配置文件同步",children:[]},{level:3,title:"配置远程编译器",slug:"配置远程编译器",children:[]}],content:"\r\n**远程开发真的太好了**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 简介\r\n\r\n一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受\r\n\r\n原理：利用SSH链接远程服务器交互数据\r\n\r\n流程\r\n\r\n- 在远程服务器创建docker container\r\n- 在远程服务器配置ssh\r\n- `Pycharm`链接远程服务器\r\n- `Pycharm`链接远程服务器的container\r\n\r\n### 配置docker\r\n\r\n安装好docker并且下载好相应的image，配置容器端口映射,**这里使用的是8022映射22**\r\n\r\n> -p 8022:22\r\n\r\n### 远程服务器ssh配置\r\n\r\n需要在远程服务器和远程服务器上的docker container都要安装上`openssh`\r\n\r\n```shell\r\napt update && apt install -y openssh-server\r\n```\r\n\r\n**配置ssh服务**\r\n\r\n```sh\r\n# 操作均在docker container中\r\nchpasswd\r\n# 这里使用你自己设置密码，但是一定要记住！(两次输入)\r\n\r\n# 这个命令是运行root身份登录\r\n# 记得打开/etc/ssh/sshd_config\r\n# 查看是否有PermitRootLogin yes (未被注释的)\r\nsed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\r\n\r\nsed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\r\n\r\necho \"export VISIBLE=now\" >> /etc/profile\r\n```\r\n\r\n**重启ssh服务**\r\n\r\n```sh\r\n# 在docker container中\r\nservice ssh restart\r\n```\r\n\r\n**测试container中ssh服务是否正常**\r\n\r\n```sh\r\n# 操作在远程服务器，不是在container\r\ndocker port 你容器id 8022\r\n# 正常会有以下内容\r\n0.0.0.0:8022\r\n\r\n# 测试是否能链接contanier\r\nssh root@你服务器的ip地址 -p 8022\r\n```\r\n\r\n### Pycharm配置文件同步\r\n\r\n在导航栏中 **Tools>Depolyment>Configuration**中添加配置SFTP。\r\n\r\n![asd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png)\r\n\r\n![asdd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png)\r\n\r\n![asdad](https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png)\r\n\r\n**选中这个，改动代码，服务器上的代码也会变动**\r\n\r\n![asdasd](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png)\r\n\r\n### 配置远程编译器\r\n\r\n在容器/服务器内找到python\r\n\r\n```sh\r\nwhereis python\r\n```\r\n\r\n![asdasdss](https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png)\r\n\r\n",contentRendered:'<p><strong>远程开发真的太好了</strong></p>\n\x3c!-- more --\x3e\n<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h3>\n<p>一般本地作为编写代码，需要调试或者运行代码时使用远程服务器的环境，电脑负荷少，是一种享受</p>\n<p>原理：利用SSH链接远程服务器交互数据</p>\n<p>流程</p>\n<ul>\n<li>在远程服务器创建docker container</li>\n<li>在远程服务器配置ssh</li>\n<li><code>Pycharm</code>链接远程服务器</li>\n<li><code>Pycharm</code>链接远程服务器的container</li>\n</ul>\n<h3 id="配置docker" tabindex="-1"><a class="header-anchor" href="#配置docker" aria-hidden="true">#</a> 配置docker</h3>\n<p>安装好docker并且下载好相应的image，配置容器端口映射,<strong>这里使用的是8022映射22</strong></p>\n<blockquote>\n<p>-p 8022:22</p>\n</blockquote>\n<h3 id="远程服务器ssh配置" tabindex="-1"><a class="header-anchor" href="#远程服务器ssh配置" aria-hidden="true">#</a> 远程服务器ssh配置</h3>\n<p>需要在远程服务器和远程服务器上的docker container都要安装上<code>openssh</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> -y openssh-server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>配置ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作均在docker container中</span>\nchpasswd\n<span class="token comment"># 这里使用你自己设置密码，但是一定要记住！(两次输入)</span>\n\n<span class="token comment"># 这个命令是运行root身份登录</span>\n<span class="token comment"># 记得打开/etc/ssh/sshd_config</span>\n<span class="token comment"># 查看是否有PermitRootLogin yes (未被注释的)</span>\n<span class="token function">sed</span> -i <span class="token string">\'s/PermitRootLogin prohibit-password/PermitRootLogin yes/\'</span> /etc/ssh/sshd_config\n\n<span class="token function">sed</span> <span class="token string">\'s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g\'</span> -i /etc/pam.d/sshd\n\n<span class="token builtin class-name">echo</span> <span class="token string">"export VISIBLE=now"</span> <span class="token operator">>></span> /etc/profile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>重启ssh服务</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在docker container中</span>\n<span class="token function">service</span> <span class="token function">ssh</span> restart\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>测试container中ssh服务是否正常</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 操作在远程服务器，不是在container</span>\n<span class="token function">docker</span> port 你容器id <span class="token number">8022</span>\n<span class="token comment"># 正常会有以下内容</span>\n<span class="token number">0.0</span>.0.0:8022\n\n<span class="token comment"># 测试是否能链接contanier</span>\n<span class="token function">ssh</span> root@你服务器的ip地址 -p <span class="token number">8022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pycharm配置文件同步" tabindex="-1"><a class="header-anchor" href="#pycharm配置文件同步" aria-hidden="true">#</a> Pycharm配置文件同步</h3>\n<p>在导航栏中 <strong>Tools&gt;Depolyment&gt;Configuration</strong>中添加配置SFTP。</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162011.png" alt="asd"></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162058.png" alt="asdd"></p>\n<p><img src="https://gitee.com/XiaoShenKeHeBen/Static/raw/master/image/202005/07/084933-744849.png" alt="asdad"></p>\n<p><strong>选中这个，改动代码，服务器上的代码也会变动</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162246.png" alt="asdasd"></p>\n<h3 id="配置远程编译器" tabindex="-1"><a class="header-anchor" href="#配置远程编译器" aria-hidden="true">#</a> 配置远程编译器</h3>\n<p>在容器/服务器内找到python</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">whereis</span> python\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/img/20210721162446.png" alt="asdasdss"></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/pycharm远程开发.html",pathLocale:"/",permalink:null,routeMeta:{title:"pycharm远程开发"},slug:"pycharm远程开发",filePath:"/root/blog/blogs/Python/pycharm远程开发.md",filePathRelative:"blogs/Python/pycharm远程开发.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.vue",componentFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.vue",componentFileChunkName:"v-a782e0f0",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/pycharm远程开发.html.js",dataFilePathRelative:"pages/blogs/Python/pycharm远程开发.html.js",dataFileChunkName:"v-a782e0f0",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/pycharm远程开发.html",htmlFilePathRelative:"blogs/Python/pycharm远程开发.html"},{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"},{data:{key:"v-2fb64b5c",path:"/blogs/Python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],git:{},filePathRelative:"blogs/Python/正则表达式.md"},key:"v-2fb64b5c",path:"/blogs/Python/zhengzebiaodashi.html",title:"正则表达式",lang:"en-US",frontmatter:{title:"正则表达式",date:"2021/07/01",tags:["python"],categories:["Python"]},excerpt:"",headers:[{level:2,title:"正则表达式",slug:"正则表达式",children:[{level:3,title:"按类型匹配",slug:"按类型匹配",children:[]},{level:3,title:"findall",slug:"findall",children:[]},{level:3,title:"如何巧妙的替换、分割字符串",slug:"如何巧妙的替换、分割字符串",children:[]},{level:3,title:"封装一个正则表达式",slug:"封装一个正则表达式",children:[]}]}],content:'## 正则表达式\r\n\r\n### 按类型匹配\r\n\r\n```python\r\n#按类型匹配\r\n\\d : 任何数字\r\n\\D : 不是数字\r\n\\s : 任何 white space, 如 [\\t\\n\\r\\f\\v]\r\n\\S : 不是 white space\r\n\\w : 任何大小写字母, 数字和 “” [a-zA-Z0-9]\r\n\\W : 不是 \\w\r\n\\b : 空白字符 (只在某个字的开头或结尾)\r\n\\B : 空白字符 (不在某个字的开头或结尾)\r\n\\\\ : 匹配 \\\r\n. : 匹配任何字符 (除了 \\n)\r\n^ : 匹配开头\r\n$ : 匹配结尾\r\n? : 前面的字符可有可无\r\n* : 重复零次或多次\r\n+ : 重复一次或多次\r\n{n, m} : 重复 n 至 m 次\r\n{n} : 重复 n 次\r\n```\r\n\r\n 如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r"^I" 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 `re.search()` 可以对每一行单独处理.  这个参数就是 `flags=re.M`, 或者这样写也行 `flags=re.MULTILINE`              \r\n\r\n```python\r\nstring = """\r\ndog runs to cat.\r\nI run to dog.\r\n"""\r\nprint(re.search(r"^I", string))                 # None\r\nprint(re.search(r"^I", string, flags=re.M))  \r\n# <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\r\n```\r\n\r\n```python\r\nmatch = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\r\nprint(match.group())                   # 021523, Date: Feb/12/2017\r\nprint(match.group(1))                  # 021523\r\nprint(match.group(2))                  # Date: Feb/12/2017\r\n我们甚至可以为找到的内容分组, 使用 () 能轻松实现这件事. \r\n通过分组, 我们能轻松定位所找到的内容. \r\n比如在这个 (\\d+) 组里, 需要找到的是一些数字, \r\n在 (.+) 这个组里, 我们会找到 “Date: “ 后面的所有内容. \r\n当使用 match.group() 时, 他会返回所有组里的内容, \r\n//group(1) 021523\r\n而如果给 .group(2) 里加一个数, 它就能定位你需要返回哪个组里的信息.\r\n```\r\n\r\n### findall\r\n\r\n```python\r\n# findall 找到所有项返回一个列表\r\nprint(re.findall(r"r[ua]n", "run ran ren"))    \r\n# [\'run\', \'ran\']\r\n\r\n# | : or\r\nprint(re.findall(r"(run|ran)", "run ran ren")) \r\n# [\'run\', \'ran\']\r\n```\r\n\r\n### 如何巧妙的替换、分割字符串\r\n\r\n```python\r\nprint(re.sub(r"r[au]ns", "catches", "dog runs to cat"))  \r\n# dog catches to cat\r\n\r\nprint(re.split(r"[,;\\.]", "a;b,c.d;e"))  \r\n# [\'a\', \'b\', \'c\', \'d\', \'e\']\r\n```\r\n\r\n### 封装一个正则表达式\r\n\r\n```python\r\ncompiled_re = re.compile(r"r[ua]n")\r\nprint(compiled_re.search("dog ran to cat")) \r\n# <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\r\n```\r\n\r\n',contentRendered:'<h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2>\n<h3 id="按类型匹配" tabindex="-1"><a class="header-anchor" href="#按类型匹配" aria-hidden="true">#</a> 按类型匹配</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment">#按类型匹配</span>\n\\d <span class="token punctuation">:</span> 任何数字\n\\D <span class="token punctuation">:</span> 不是数字\n\\s <span class="token punctuation">:</span> 任何 white space<span class="token punctuation">,</span> 如 <span class="token punctuation">[</span>\\t\\n\\r\\f\\v<span class="token punctuation">]</span>\n\\S <span class="token punctuation">:</span> 不是 white space\n\\w <span class="token punctuation">:</span> 任何大小写字母<span class="token punctuation">,</span> 数字和 “” <span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\n\\W <span class="token punctuation">:</span> 不是 \\w\n\\b <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>只在某个字的开头或结尾<span class="token punctuation">)</span>\n\\B <span class="token punctuation">:</span> 空白字符 <span class="token punctuation">(</span>不在某个字的开头或结尾<span class="token punctuation">)</span>\n\\\\ <span class="token punctuation">:</span> 匹配 \\\n<span class="token punctuation">.</span> <span class="token punctuation">:</span> 匹配任何字符 <span class="token punctuation">(</span>除了 \\n<span class="token punctuation">)</span>\n<span class="token operator">^</span> <span class="token punctuation">:</span> 匹配开头\n$ <span class="token punctuation">:</span> 匹配结尾\n? <span class="token punctuation">:</span> 前面的字符可有可无\n<span class="token operator">*</span> <span class="token punctuation">:</span> 重复零次或多次\n<span class="token operator">+</span> <span class="token punctuation">:</span> 重复一次或多次\n<span class="token punctuation">{</span>n<span class="token punctuation">,</span> m<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 至 m 次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span> <span class="token punctuation">:</span> 重复 n 次\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果一个字符串有很多行,  我们想使用 ^ 形式来匹配行开头的字符, 如果用通常的形式是不成功的.  比如下面的 “I” 出现在第二行开头, 但是使用 r&quot;^I&quot; 却匹配不到第二行, 这时候, 我们要使用 另外一个参数, 让 <code>re.search()</code> 可以对每一行单独处理.  这个参数就是 <code>flags=re.M</code>, 或者这样写也行 <code>flags=re.MULTILINE</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>string <span class="token operator">=</span> <span class="token triple-quoted-string string">"""\ndog runs to cat.\nI run to dog.\n"""</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment"># None</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"^I"</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> flags<span class="token operator">=</span>re<span class="token punctuation">.</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(18, 19), match=\'I\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"(\\d+), Date: (.+)"</span><span class="token punctuation">,</span> <span class="token string">"ID: 021523, Date: Feb/12/2017"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                   <span class="token comment"># 021523, Date: Feb/12/2017</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># 021523</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># Date: Feb/12/2017</span>\n我们甚至可以为找到的内容分组<span class="token punctuation">,</span> 使用 <span class="token punctuation">(</span><span class="token punctuation">)</span> 能轻松实现这件事<span class="token punctuation">.</span> \n通过分组<span class="token punctuation">,</span> 我们能轻松定位所找到的内容<span class="token punctuation">.</span> \n比如在这个 <span class="token punctuation">(</span>\\d<span class="token operator">+</span><span class="token punctuation">)</span> 组里<span class="token punctuation">,</span> 需要找到的是一些数字<span class="token punctuation">,</span> \n在 <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token operator">+</span><span class="token punctuation">)</span> 这个组里<span class="token punctuation">,</span> 我们会找到 “Date<span class="token punctuation">:</span> “ 后面的所有内容<span class="token punctuation">.</span> \n当使用 <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> 时<span class="token punctuation">,</span> 他会返回所有组里的内容<span class="token punctuation">,</span> \n<span class="token operator">//</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">021523</span>\n而如果给 <span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> 里加一个数<span class="token punctuation">,</span> 它就能定位你需要返回哪个组里的信息<span class="token punctuation">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="findall" tabindex="-1"><a class="header-anchor" href="#findall" aria-hidden="true">#</a> findall</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># findall 找到所有项返回一个列表</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    \n<span class="token comment"># [\'run\', \'ran\']</span>\n\n<span class="token comment"># | : or</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"(run|ran)"</span><span class="token punctuation">,</span> <span class="token string">"run ran ren"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># [\'run\', \'ran\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="如何巧妙的替换、分割字符串" tabindex="-1"><a class="header-anchor" href="#如何巧妙的替换、分割字符串" aria-hidden="true">#</a> 如何巧妙的替换、分割字符串</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"r[au]ns"</span><span class="token punctuation">,</span> <span class="token string">"catches"</span><span class="token punctuation">,</span> <span class="token string">"dog runs to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># dog catches to cat</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">r"[,;\\.]"</span><span class="token punctuation">,</span> <span class="token string">"a;b,c.d;e"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  \n<span class="token comment"># [\'a\', \'b\', \'c\', \'d\', \'e\']</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="封装一个正则表达式" tabindex="-1"><a class="header-anchor" href="#封装一个正则表达式" aria-hidden="true">#</a> 封装一个正则表达式</h3>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>compiled_re <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"r[ua]n"</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>compiled_re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">"dog ran to cat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token comment"># &lt;_sre.SRE_Match object; span=(4, 7), match=\'ran\'></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/正则表达式.html",pathLocale:"/",permalink:null,routeMeta:{title:"正则表达式"},slug:"正则表达式",filePath:"/root/blog/blogs/Python/正则表达式.md",filePathRelative:"blogs/Python/正则表达式.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.vue",componentFilePathRelative:"pages/blogs/Python/正则表达式.html.vue",componentFileChunkName:"v-2fb64b5c",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/正则表达式.html.js",dataFilePathRelative:"pages/blogs/Python/正则表达式.html.js",dataFileChunkName:"v-2fb64b5c",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/正则表达式.html",htmlFilePathRelative:"blogs/Python/正则表达式.html"},{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"}],label:"python"},pypi:{pages:[{data:{key:"v-05a30eba",path:"/blogs/Python/%E6%89%93%E5%8C%85%E8%87%AA%E5%B7%B1%E5%BA%93%E5%88%B0pypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],git:{},filePathRelative:"blogs/Python/打包自己库到pypi.md"},key:"v-05a30eba",path:"/blogs/Python/dabaozijikudaopypi.html",title:"打包自己的库到pypi",lang:"en-US",frontmatter:{title:"打包自己的库到pypi",date:"2021/07/01",tags:["pypi","python"],categories:["Python"]},excerpt:"<p><strong>维护自己一个库不好吗？</strong></p>\n",headers:[{level:3,title:"准备",slug:"准备",children:[]},{level:3,title:"步骤",slug:"步骤",children:[]}],content:'\r\n**维护自己一个库不好吗？**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 准备\r\n\r\n- 拥有一个[PYPI账号](https://pypi.org/)\r\n\r\n- 有一个正常使用的库/方法/项目\r\n\r\n- 安装好最新的`setuptools`, `wheel`, `twine`\r\n\r\n  ```\r\n  pip install setuptools wheel twine\r\n  ```\r\n\r\n  \r\n\r\n### 步骤\r\n\r\n**项目结构**\r\n\r\n```\r\n/项目\r\n /main\r\n \t__init__.py\r\n setup.py(在项目根目录)\r\n LICENSE(在项目根目录)\r\n README.md(在项目根目录)\r\n```\r\n\r\n编辑`__init__.py`文件\r\n\r\n```\r\nname = "main"\r\n```\r\n\r\n编辑`setup.py`\r\n\r\n```python\r\nimport setuptools\r\n\r\nwith open("README.md", "r") as fh:\r\n    long_description = fh.read()\r\n\r\nsetuptools.setup(\r\n    #name：决定你的pip install name\r\n    name="example-pkg-your-username",\r\n    version="0.0.1",\r\n    author="Example Author",\r\n    author_email="author@example.com",\r\n    description="A small example package",\r\n    # long_description 指项目详细描述放在了README.md中\r\n    long_description=long_description,\r\n    long_description_content_type="text/markdown",\r\n    # 这个url展示在介绍页\r\n    url="https://github.com/pypa/sampleproject",\r\n    packages=setuptools.find_packages(),\r\n    # 指定该库依赖项，例如实现代码的环境...\r\n    classifiers=[\r\n        "Programming Language :: Python :: 3",\r\n        "License :: OSI Approved :: MIT License",\r\n        "Operating System :: OS Independent",\r\n    ],\r\n)\r\n```\r\n\r\n编辑LICENSE(无后缀的文件)\r\n\r\n```\r\nMIT License\r\n\r\nCopyright (c) [year] [fullname]\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the "Software"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n\r\n编辑`README.md`\r\n\r\n```markdown\r\n# Example\r\n\r\nThis is a simple example package.\r\n```\r\n\r\n**开始打包**\r\n\r\n```\r\npython setup.py bdist_wheel\r\n```\r\n\r\n> 根目录下会生成`dist`目录，里面有一个文件\r\n\r\n**上传到`PYPI`**\r\n\r\n```\r\ntwine upload dist/*\r\n```\r\n\r\n> 会让你输入pypi的username以及密码\r\n\r\n**测试**\r\n\r\n```\r\npip install 你的库名\r\n```\r\n\r\n',contentRendered:'<p><strong>维护自己一个库不好吗？</strong></p>\n\x3c!-- more --\x3e\n<h3 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h3>\n<ul>\n<li>\n<p>拥有一个<a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">PYPI账号<ExternalLinkIcon/></a></p>\n</li>\n<li>\n<p>有一个正常使用的库/方法/项目</p>\n</li>\n<li>\n<p>安装好最新的<code>setuptools</code>, <code>wheel</code>, <code>twine</code></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install setuptools wheel twine\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n</ul>\n<h3 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤" aria-hidden="true">#</a> 步骤</h3>\n<p><strong>项目结构</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>/项目\n /main\n \t__init__.py\n setup.py(在项目根目录)\n LICENSE(在项目根目录)\n README.md(在项目根目录)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>编辑<code>__init__.py</code>文件</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>name = "main"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>编辑<code>setup.py</code></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">import</span> setuptools\n\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>\n    long_description <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nsetuptools<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>\n    <span class="token comment">#name：决定你的pip install name</span>\n    name<span class="token operator">=</span><span class="token string">"example-pkg-your-username"</span><span class="token punctuation">,</span>\n    version<span class="token operator">=</span><span class="token string">"0.0.1"</span><span class="token punctuation">,</span>\n    author<span class="token operator">=</span><span class="token string">"Example Author"</span><span class="token punctuation">,</span>\n    author_email<span class="token operator">=</span><span class="token string">"author@example.com"</span><span class="token punctuation">,</span>\n    description<span class="token operator">=</span><span class="token string">"A small example package"</span><span class="token punctuation">,</span>\n    <span class="token comment"># long_description 指项目详细描述放在了README.md中</span>\n    long_description<span class="token operator">=</span>long_description<span class="token punctuation">,</span>\n    long_description_content_type<span class="token operator">=</span><span class="token string">"text/markdown"</span><span class="token punctuation">,</span>\n    <span class="token comment"># 这个url展示在介绍页</span>\n    url<span class="token operator">=</span><span class="token string">"https://github.com/pypa/sampleproject"</span><span class="token punctuation">,</span>\n    packages<span class="token operator">=</span>setuptools<span class="token punctuation">.</span>find_packages<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment"># 指定该库依赖项，例如实现代码的环境...</span>\n    classifiers<span class="token operator">=</span><span class="token punctuation">[</span>\n        <span class="token string">"Programming Language :: Python :: 3"</span><span class="token punctuation">,</span>\n        <span class="token string">"License :: OSI Approved :: MIT License"</span><span class="token punctuation">,</span>\n        <span class="token string">"Operating System :: OS Independent"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>编辑LICENSE(无后缀的文件)</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>MIT License\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>编辑<code>README.md</code></p>\n<div class="language-markdown ext-md line-numbers-mode"><pre v-pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> Example</span>\n\nThis is a simple example package.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>开始打包</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python setup.py bdist_wheel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>根目录下会生成<code>dist</code>目录，里面有一个文件</p>\n</blockquote>\n<p><strong>上传到<code>PYPI</code></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>twine upload dist/*\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>会让你输入pypi的username以及密码</p>\n</blockquote>\n<p><strong>测试</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip install 你的库名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Python/打包自己库到pypi.html",pathLocale:"/",permalink:null,routeMeta:{title:"打包自己的库到pypi"},slug:"打包自己库到pypi",filePath:"/root/blog/blogs/Python/打包自己库到pypi.md",filePathRelative:"blogs/Python/打包自己库到pypi.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.vue",componentFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.vue",componentFileChunkName:"v-05a30eba",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Python/打包自己库到pypi.html.js",dataFilePathRelative:"pages/blogs/Python/打包自己库到pypi.html.js",dataFileChunkName:"v-05a30eba",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Python/打包自己库到pypi.html",htmlFilePathRelative:"blogs/Python/打包自己库到pypi.html"}],length:1,label:"pypi"},dockermingling:{pages:[{data:{key:"v-d8264f08",path:"/blogs/notes/Docker%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],git:{},filePathRelative:"blogs/notes/Docker命令合集.md"},key:"v-d8264f08",path:"/blogs/notes/Dockerminglingheji.html",title:"docker命令合集",lang:"en-US",frontmatter:{title:"docker命令合集",date:"2021/07/01",tags:["docker命令"],categories:["notes"]},excerpt:"<p>Docker以及Dockerfile命令合集-持续更新。</p>\n",headers:[{level:2,title:"Docker",slug:"docker",children:[]},{level:2,title:"如何优雅的退出容器但是不停止容器运行？",slug:"如何优雅的退出容器但是不停止容器运行",children:[]},{level:2,title:"Dockerfile",slug:"dockerfile",children:[]},{level:2,title:"Docker hub",slug:"docker-hub",children:[]}],content:'\r\nDocker以及Dockerfile命令合集-持续更新。\r\n\x3c!-- more --\x3e\r\n\r\n## Docker\r\n\r\n**build镜像(有Dockerfile)**\r\n\r\n```shell\r\ndocker build -t myimage --network host .\r\n```\r\n\r\n> myimage是自定义镜像名，可自行更改, -t [命名]\r\n>\r\n> 公司配备一般还要加上 --network host才能访问请求网络\r\n\r\n**实例化一个容器**\r\n\r\n```shell\r\ndocker run -d --name bili --network host --restart unless-stopped -p 9090:9090 -p 8022:22 myimage\r\n```\r\n\r\n> -d 在后台运行容器\r\n>\r\n> -p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p） \r\n>\r\n> myimage 镜像名字\r\n>\r\n> -it  i是保持输入，t是将日志绑定伪终端输出\r\n>\r\n> --restart unless-stopped 这个适用于自动重开容器\r\n\r\n**进入容器内部**\r\n\r\n```shell\r\ndocker exec -it 容器id/容器名字 bash\r\n```\r\n\r\n## 如何优雅的退出容器但是不停止容器运行？\r\n  `ctrl`+`P`+`Q` **切记，如果你有热键绑定，先取消**\r\n  然后`docker ps`就能看到你的容器在运行\r\n\r\n**查看镜像或者容器**\r\n\r\n```\r\n#镜像\r\ndocker images\r\n\r\n#容器(正在运行的)\r\ndocker ps\r\n\r\n#容器(所有)\r\ndocker ps -a\r\n```\r\n\r\n**删除容器**\r\n\r\n```\r\ndocker stop 容器id && docker rm 容器id\r\n```\r\n\r\n> 如果容器实例没有运行，执行后半句,容器id也可以是名字\r\n\r\n**删除镜像**\r\n\r\n```\r\ndocker rmi 镜像id/镜像名字\r\n#如果提示无法删除，有attach其他镜像，则执行下面语句\r\ndocker rmi -f 镜像id/镜像名字\r\n```\r\n\r\n> 先要暂停和删除该镜像下的所有容器才能删除镜像\r\n\r\n**查看容器运行失败日志**\r\n\r\n很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息\r\n\r\n```\r\n# 获取日志地址\r\ndocker inspect --format \'{{.LogPath}}\' 容器id\r\n# 这时会打印一串地址，复制\r\n# 通过cat命令查看日志\r\ncat 刚刚复制的地址\r\n\r\n```\r\n\r\n**查看容器运行时日志**\r\n\r\n```\r\n# 适用日志不多，因为是把全部日志输出(打印实时log)\r\ndocker logs -f 容器名字\r\n\r\n# 输出最近10条日志\r\ndocker logs --tail 10 容器名字\r\n\r\n# 筛选log(查找“error”)\r\ndocker logs | grep error\r\n```\r\n\r\n**如果进入了虚拟终端`-it`，使用`ctrl`+`P` `Q`(一起按) 达成退出但不停止容器运行**\r\n\r\n## Dockerfile\r\n\r\n**Dockerfile：一个文件命名为Dockerfile，无后缀**\r\n\r\n```dockerfile\r\nFROM python\r\n# FROM 指定基础镜像\r\n\r\nCOPY ./app /app\r\n# COPY [文件1/文件夹1] [路径]\r\n# 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径\r\n\r\nWORKDIR /app\r\n# 指定工作目录\r\n\r\nRUN apt-get update -y && \\\r\n\tapt-get install -y vim && \\\r\n\tpip3 install -r requirements.txt\r\n# RUN 执行命令，务必命令使用&&连起来(\\：意思换行)\r\n\r\nCMD ["python3","main.py"]\r\n# CMD 容器启动时执行的命令\r\n\r\nEXPOSE 9090\r\n# 声明暴露指定端口，并不是真的暴露，帮助理解\r\n```\r\n\r\n## Docker hub\r\n\r\n现有一个`docker hub`账号和新建一个公开仓库\r\n\r\n```shell\r\n# 1\r\ndocker tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\r\n\r\n# 2 \r\ndocker login\r\n\r\n# 3 \r\ndocker push 目标仓库名字/用户名:tag\r\n```\r\n\r\n',contentRendered:'<p>Docker以及Dockerfile命令合集-持续更新。</p>\n\x3c!-- more --\x3e\n<h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h2>\n<p><strong>build镜像(有Dockerfile)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> build -t myimage --network <span class="token function">host</span> <span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>myimage是自定义镜像名，可自行更改, -t [命名]</p>\n<p>公司配备一般还要加上 --network host才能访问请求网络</p>\n</blockquote>\n<p><strong>实例化一个容器</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name bili --network <span class="token function">host</span> --restart unless-stopped -p <span class="token number">9090</span>:9090 -p <span class="token number">8022</span>:22 myimage\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>-d 在后台运行容器</p>\n<p>-p [容器端口]:[宿主机端口], 可以指定多个端口（多个-p）</p>\n<p>myimage 镜像名字</p>\n<p>-it  i是保持输入，t是将日志绑定伪终端输出</p>\n<p>--restart unless-stopped 这个适用于自动重开容器</p>\n</blockquote>\n<p><strong>进入容器内部</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it 容器id/容器名字 <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="如何优雅的退出容器但是不停止容器运行" tabindex="-1"><a class="header-anchor" href="#如何优雅的退出容器但是不停止容器运行" aria-hidden="true">#</a> 如何优雅的退出容器但是不停止容器运行？</h2>\n<p><code>ctrl</code>+<code>P</code>+<code>Q</code> <strong>切记，如果你有热键绑定，先取消</strong>\n然后<code>docker ps</code>就能看到你的容器在运行</p>\n<p><strong>查看镜像或者容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>#镜像\ndocker images\n\n#容器(正在运行的)\ndocker ps\n\n#容器(所有)\ndocker ps -a\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>删除容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker stop 容器id &amp;&amp; docker rm 容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote>\n<p>如果容器实例没有运行，执行后半句,容器id也可以是名字</p>\n</blockquote>\n<p><strong>删除镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rmi 镜像id/镜像名字\n#如果提示无法删除，有attach其他镜像，则执行下面语句\ndocker rmi -f 镜像id/镜像名字\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>\n<p>先要暂停和删除该镜像下的所有容器才能删除镜像</p>\n</blockquote>\n<p><strong>查看容器运行失败日志</strong></p>\n<p>很多人运行容器几秒内就自动退出，也不知道哪里查看日志信息</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 获取日志地址\ndocker inspect --format \'{{.LogPath}}\' 容器id\n# 这时会打印一串地址，复制\n# 通过cat命令查看日志\ncat 刚刚复制的地址\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>查看容器运行时日志</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 适用日志不多，因为是把全部日志输出(打印实时log)\ndocker logs -f 容器名字\n\n# 输出最近10条日志\ndocker logs --tail 10 容器名字\n\n# 筛选log(查找“error”)\ndocker logs | grep error\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>如果进入了虚拟终端<code>-it</code>，使用<code>ctrl</code>+<code>P</code> <code>Q</code>(一起按) 达成退出但不停止容器运行</strong></p>\n<h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2>\n<p><strong>Dockerfile：一个文件命名为Dockerfile，无后缀</strong></p>\n<div class="language-docker ext-docker line-numbers-mode"><pre v-pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> python</span>\n<span class="token comment"># FROM 指定基础镜像</span>\n\n<span class="token instruction"><span class="token keyword">COPY</span> ./app /app</span>\n<span class="token comment"># COPY [文件1/文件夹1] [路径]</span>\n<span class="token comment"># 意思将宿主机的[文件1/文件夹1]复制到镜像的新一层内的目标路径</span>\n\n<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>\n<span class="token comment"># 指定工作目录</span>\n\n<span class="token instruction"><span class="token keyword">RUN</span> apt-get update -y &amp;&amp; <span class="token operator">\\</span>\n\tapt-get install -y vim &amp;&amp; <span class="token operator">\\</span>\n\tpip3 install -r requirements.txt</span>\n<span class="token comment"># RUN 执行命令，务必命令使用&amp;&amp;连起来(\\：意思换行)</span>\n\n<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"python3"</span>,<span class="token string">"main.py"</span>]</span>\n<span class="token comment"># CMD 容器启动时执行的命令</span>\n\n<span class="token instruction"><span class="token keyword">EXPOSE</span> 9090</span>\n<span class="token comment"># 声明暴露指定端口，并不是真的暴露，帮助理解</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub" aria-hidden="true">#</a> Docker hub</h2>\n<p>现有一个<code>docker hub</code>账号和新建一个公开仓库</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 1</span>\n<span class="token function">docker</span> tag 要推送的镜像名字:tag 目标仓库名字/用户名:tag\n\n<span class="token comment"># 2 </span>\n<span class="token function">docker</span> login\n\n<span class="token comment"># 3 </span>\n<span class="token function">docker</span> push 目标仓库名字/用户名:tag\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/Docker命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker命令合集"},slug:"Docker命令合集",filePath:"/root/blog/blogs/notes/Docker命令合集.md",filePathRelative:"blogs/notes/Docker命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/Docker命令合集.html.vue",componentFileChunkName:"v-d8264f08",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/Docker命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/Docker命令合集.html.js",dataFileChunkName:"v-d8264f08",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/Docker命令合集.html",htmlFilePathRelative:"blogs/notes/Docker命令合集.html"}],length:1,label:"docker命令"},gitignore:{pages:[{data:{key:"v-60868ce6",path:"/blogs/notes/gitignore%E6%95%99%E5%AD%A6.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/notes/gitignore教学.md"},key:"v-60868ce6",path:"/blogs/notes/gitignorejiaoxue.html",title:"gitignore教学",lang:"en-US",frontmatter:{title:"gitignore教学",date:"2021/07/01",tags:["gitignore"],categories:["notes"]},excerpt:"<p><strong>.gitignore是一个好东西</strong></p>\n",headers:[],content:'\r\n**.gitignore是一个好东西**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n**.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件**\r\n\r\n**Q：我写了规则在里面，怎么上传的时候没有生效**\r\n\r\n**A：git缓存需要清除**\r\n\r\n```sh\r\n# solution\r\ngit rm -r --cached .\r\ngit add .\r\ngit commit -m "update .gitignore"\r\n```\r\n\r\n**Pycharm的.gitignore**\r\n\r\n```sh\r\n# Created by .ignore support plugin (hsz.mobi)\r\n### Python template\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\n# 如果有前端打包的项目这里要去掉 dist/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n### VirtualEnv template\r\n# Virtualenv\r\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\r\n.Python\r\n[Bb]in\r\n[Ii]nclude\r\n[Ll]ib\r\n[Ll]ib64\r\n[Ll]ocal\r\n[Ss]cripts\r\npyvenv.cfg\r\n.venv\r\npip-selfcheck.json\r\n### JetBrains template\r\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\r\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\r\n\r\n# User-specific stuff:\r\n.idea/workspace.xml\r\n.idea/tasks.xml\r\n.idea/dictionaries\r\n.idea/vcs.xml\r\n.idea/jsLibraryMappings.xml\r\n\r\n# Sensitive or high-churn files:\r\n.idea/dataSources.ids\r\n.idea/dataSources.xml\r\n.idea/dataSources.local.xml\r\n.idea/sqlDataSources.xml\r\n.idea/dynamic.xml\r\n.idea/uiDesigner.xml\r\n\r\n# Gradle:\r\n.idea/gradle.xml\r\n.idea/libraries\r\n\r\n# Mongo Explorer plugin:\r\n.idea/mongoSettings.xml\r\n\r\n.idea/\r\n\r\n## File-based project format:\r\n*.iws\r\n\r\n## Plugin-specific files:\r\n\r\n# IntelliJ\r\n/out/\r\n\r\n# mpeltonen/sbt-idea plugin\r\n.idea_modules/\r\n\r\n# JIRA plugin\r\natlassian-ide-plugin.xml\r\n\r\n# Crashlytics plugin (for Android Studio and IntelliJ)\r\ncom_crashlytics_export_strings.xml\r\ncrashlytics.properties\r\ncrashlytics-build.properties\r\nfabric.properties\r\n```\r\n\r\n',contentRendered:'<p><strong>.gitignore是一个好东西</strong></p>\n\x3c!-- more --\x3e\n<p><strong>.gitignore文件存在是为了告诉git在上传代码时，要忽略哪些文件</strong></p>\n<p><strong>Q：我写了规则在里面，怎么上传的时候没有生效</strong></p>\n<p><strong>A：git缓存需要清除</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># solution</span>\n<span class="token function">git</span> <span class="token function">rm</span> -r --cached <span class="token builtin class-name">.</span>\n<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>\n<span class="token function">git</span> commit -m <span class="token string">"update .gitignore"</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Pycharm的.gitignore</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># Created by .ignore support plugin (hsz.mobi)</span>\n<span class="token comment">### Python template</span>\n<span class="token comment"># Byte-compiled / optimized / DLL files</span>\n__pycache__/\n*.py<span class="token punctuation">[</span>cod<span class="token punctuation">]</span>\n*<span class="token variable">$py</span>.class\n\n<span class="token comment"># C extensions</span>\n*.so\n\n<span class="token comment"># Distribution / packaging</span>\n.Python\nenv/\nbuild/\ndevelop-eggs/\n<span class="token comment"># 如果有前端打包的项目这里要去掉 dist/</span>\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n<span class="token comment"># PyInstaller</span>\n<span class="token comment">#  Usually these files are written by a python script from a template</span>\n<span class="token comment">#  before PyInstaller builds the exe, so as to inject date/other infos into it.</span>\n*.manifest\n*.spec\n\n<span class="token comment"># Installer logs</span>\npip-log.txt\npip-delete-this-directory.txt\n\n<span class="token comment"># Unit test / coverage reports</span>\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n<span class="token comment"># Translations</span>\n*.mo\n*.pot\n\n<span class="token comment"># Django stuff:</span>\n*.log\nlocal_settings.py\n\n<span class="token comment"># Flask stuff:</span>\ninstance/\n.webassets-cache\n\n<span class="token comment"># Scrapy stuff:</span>\n.scrapy\n\n<span class="token comment"># Sphinx documentation</span>\ndocs/_build/\n\n<span class="token comment"># PyBuilder</span>\ntarget/\n\n<span class="token comment"># IPython Notebook</span>\n.ipynb_checkpoints\n\n<span class="token comment"># pyenv</span>\n.python-version\n\n<span class="token comment"># celery beat schedule file</span>\ncelerybeat-schedule\n\n<span class="token comment"># dotenv</span>\n.env\n\n<span class="token comment"># virtualenv</span>\nvenv/\nENV/\n\n<span class="token comment"># Spyder project settings</span>\n.spyderproject\n\n<span class="token comment"># Rope project settings</span>\n.ropeproject\n<span class="token comment">### VirtualEnv template</span>\n<span class="token comment"># Virtualenv</span>\n<span class="token comment"># http://iamzed.com/2009/05/07/a-primer-on-virtualenv/</span>\n.Python\n<span class="token punctuation">[</span>Bb<span class="token punctuation">]</span>in\n<span class="token punctuation">[</span>Ii<span class="token punctuation">]</span>nclude\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ib64\n<span class="token punctuation">[</span>Ll<span class="token punctuation">]</span>ocal\n<span class="token punctuation">[</span>Ss<span class="token punctuation">]</span>cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n<span class="token comment">### JetBrains template</span>\n<span class="token comment"># Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm</span>\n<span class="token comment"># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span>\n\n<span class="token comment"># User-specific stuff:</span>\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/dictionaries\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n\n<span class="token comment"># Sensitive or high-churn files:</span>\n.idea/dataSources.ids\n.idea/dataSources.xml\n.idea/dataSources.local.xml\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n<span class="token comment"># Gradle:</span>\n.idea/gradle.xml\n.idea/libraries\n\n<span class="token comment"># Mongo Explorer plugin:</span>\n.idea/mongoSettings.xml\n\n.idea/\n\n<span class="token comment">## File-based project format:</span>\n*.iws\n\n<span class="token comment">## Plugin-specific files:</span>\n\n<span class="token comment"># IntelliJ</span>\n/out/\n\n<span class="token comment"># mpeltonen/sbt-idea plugin</span>\n.idea_modules/\n\n<span class="token comment"># JIRA plugin</span>\natlassian-ide-plugin.xml\n\n<span class="token comment"># Crashlytics plugin (for Android Studio and IntelliJ)</span>\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/gitignore教学.html",pathLocale:"/",permalink:null,routeMeta:{title:"gitignore教学"},slug:"gitignore教学",filePath:"/root/blog/blogs/notes/gitignore教学.md",filePathRelative:"blogs/notes/gitignore教学.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.vue",componentFilePathRelative:"pages/blogs/notes/gitignore教学.html.vue",componentFileChunkName:"v-60868ce6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/gitignore教学.html.js",dataFilePathRelative:"pages/blogs/notes/gitignore教学.html.js",dataFileChunkName:"v-60868ce6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/gitignore教学.html",htmlFilePathRelative:"blogs/notes/gitignore教学.html"}],length:1,label:"gitignore"},pipenv:{pages:[{data:{key:"v-3cc188f4",path:"/blogs/notes/pipenv%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],git:{},filePathRelative:"blogs/notes/pipenv命令合集.md"},key:"v-3cc188f4",path:"/blogs/notes/pipenvminglingheji.html",title:"pipenv命令合集",lang:"en-US",frontmatter:{title:"pipenv命令合集",date:"2021/07/01",tags:["pipenv"],categories:["notes"]},excerpt:"<p>pipenv命令合集。</p>\n",headers:[{level:2,title:"pipenv指南",slug:"pipenv指南",children:[{level:3,title:"特点",slug:"特点",children:[]},{level:3,title:"安装",slug:"安装",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]}]}],content:"\r\npipenv命令合集。\r\n\r\n\x3c!-- more --\x3e\r\n\r\n## pipenv指南\r\n\r\n### 特点\r\n\r\n- 不需要再维护requirements.txt，用pipfile和pipfile.lock\r\n- 兼容多个python版本\r\n\r\n### 安装\r\n\r\n```sh\r\npip install pipenv\r\n```\r\n\r\n### 常用命令\r\n\r\n```\r\n# 安装包\r\npipenv install\r\n# pipenv install flask\r\n\r\n# 激活当前项目的虚拟环境\r\npipenv shell\r\n\r\n# 安装开发依赖包\r\npipenv install pytest --dev\r\n\r\n# 图形显示包依赖关系\r\npipenv graph\r\n\r\n# 生成lockfile\r\npipenv lock\r\n\r\n# 删除所有的安装包\r\npipenv uninstall --all\r\n```\r\n\r\n",contentRendered:'<p>pipenv命令合集。</p>\n\x3c!-- more --\x3e\n<h2 id="pipenv指南" tabindex="-1"><a class="header-anchor" href="#pipenv指南" aria-hidden="true">#</a> pipenv指南</h2>\n<h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3>\n<ul>\n<li>不需要再维护requirements.txt，用pipfile和pipfile.lock</li>\n<li>兼容多个python版本</li>\n</ul>\n<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>pip <span class="token function">install</span> pipenv\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code># 安装包\npipenv install\n# pipenv install flask\n\n# 激活当前项目的虚拟环境\npipenv shell\n\n# 安装开发依赖包\npipenv install pytest --dev\n\n# 图形显示包依赖关系\npipenv graph\n\n# 生成lockfile\npipenv lock\n\n# 删除所有的安装包\npipenv uninstall --all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/pipenv命令合集.html",pathLocale:"/",permalink:null,routeMeta:{title:"pipenv命令合集"},slug:"pipenv命令合集",filePath:"/root/blog/blogs/notes/pipenv命令合集.md",filePathRelative:"blogs/notes/pipenv命令合集.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.vue",componentFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.vue",componentFileChunkName:"v-3cc188f4",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/pipenv命令合集.html.js",dataFilePathRelative:"pages/blogs/notes/pipenv命令合集.html.js",dataFileChunkName:"v-3cc188f4",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/pipenv命令合集.html",htmlFilePathRelative:"blogs/notes/pipenv命令合集.html"}],length:1,label:"pipenv"},Eslint:{pages:[{data:{key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],git:{},filePathRelative:"blogs/tech/Eslint.md"},key:"v-21adab26",path:"/blogs/tech/Eslint.html",title:"Eslint项目配置",lang:"en-US",frontmatter:{title:"Eslint项目配置",date:"2021/07/01",tags:["Eslint"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"ESlint",slug:"eslint",children:[{level:3,title:"配置",slug:"配置",children:[]}]}],content:"## ESlint\r\n\r\n**ESlint有很多种安装方式，不过我建议大家是采用`npm`方式来熟悉**\r\n\r\n**当然不止ESlint这一种静态分析工具，各有所爱罢了**\r\n\r\n### **配置**\r\n\r\nESlint不是项目的必要依赖项，**仅仅是开发环境需要用到.**\r\n\r\n```shell\r\nnpm install eslint --save-dev\r\n\r\n// 安装成功后，初始化默认的ESlint\r\nnode_modules/.bin/eslint --init\r\n```\r\n\r\n该配置会保存到`.eslintrc.js`文件\r\n\r\n```javascript\r\nmodule.exports = {\r\n    'env': {\r\n        'commonjs': true,\r\n        'es2021': true,\r\n        'node': true\r\n    },\r\n    'extends': 'eslint:recommended',\r\n    'parserOptions': {\r\n        'ecmaVersion': 12\r\n    },\r\n    'rules': {\r\n        'indent': [\r\n            'error',\r\n            4\r\n        ],\r\n        'linebreak-style': [\r\n            'error',\r\n            'unix'\r\n        ],\r\n        'quotes': [\r\n            'error',\r\n            'single'\r\n        ],\r\n        'semi': [\r\n            'error',\r\n            'never'\r\n        ],\r\n        'eqeqeq': 'error',\r\n        'no-trailing-spaces': 'error',\r\n        'object-curly-spacing': [\r\n            'error', 'always'\r\n        ],\r\n        'arrow-spacing': [\r\n            'error', { 'before': true, 'after': true }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n**更改缩进级别为两个空格**\r\n\r\n```json\r\n\"indent\": [\r\n    \"error\",\r\n    2\r\n],\r\n```\r\n\r\n**使用`ESlint`检查可以用以下命令或者配置一个`npm`脚本**\r\n\r\n```\r\nnode_modules/.bin/eslint index.js\r\n```\r\n\r\n脚本\r\n\r\n```json\r\n{\r\n  // ...\r\n  \"scripts\": {\r\n    \"start\": \"node index.js\",\r\n    // ...\r\n    \"lint\": \"eslint .\"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n`npm run build`会检查项目中的每一个文件，**我们并不希望一些文件被检查**\r\n\r\n**根目录新建一个`.eslintignore`文件**\r\n\r\n```shell\r\nbuild\r\n// 或者不需要检查的\r\n```\r\n\r\n**我们配置好之后自然是完善一套规则**\r\n\r\n**增加`eqeqeq`规则，除了三个相等号之外，相等要被检查。规则在`rules`字段下添加**\r\n\r\n```json\r\n{\r\n  // ...\r\n  'rules': {\r\n    // ...\r\n   'eqeqeq': 'error',\r\n    // 比如避免不必要的拖尾空格，大括号之间有一个空格等等\r\n      'no-trailing-spaces': 'error',\r\n    'object-curly-spacing': [\r\n        'error', 'always'\r\n    ],\r\n    'arrow-spacing': [\r\n        'error', { 'before': true, 'after': true }\r\n    ]\r\n  },\r\n    // 警告不出现在控制台。\r\n    'no-console': 0\r\n}\r\n```\r\n\r\n**还有其他的流行规则风范比如[Airbnb](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb)**\r\n\r\n",contentRendered:'<h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> ESlint</h2>\n<p><strong>ESlint有很多种安装方式，不过我建议大家是采用<code>npm</code>方式来熟悉</strong></p>\n<p><strong>当然不止ESlint这一种静态分析工具，各有所爱罢了</strong></p>\n<h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> <strong>配置</strong></h3>\n<p>ESlint不是项目的必要依赖项，<strong>仅仅是开发环境需要用到.</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev\n\n// 安装成功后，初始化默认的ESlint\nnode_modules/.bin/eslint --init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>该配置会保存到<code>.eslintrc.js</code>文件</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'env\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'commonjs\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'es2021\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'node\'</span><span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'extends\'</span><span class="token operator">:</span> <span class="token string">\'eslint:recommended\'</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'parserOptions\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'ecmaVersion\'</span><span class="token operator">:</span> <span class="token number">12</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token string-property property">\'rules\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'indent\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token number">4</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'linebreak-style\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'unix\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'quotes\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'single\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'semi\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n            <span class="token string">\'never\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'eqeqeq\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'no-trailing-spaces\'</span><span class="token operator">:</span> <span class="token string">\'error\'</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'object-curly-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token string">\'always\'</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string-property property">\'arrow-spacing\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n            <span class="token string">\'error\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">\'before\'</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string-property property">\'after\'</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>更改缩进级别为两个空格</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token property">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"error"</span><span class="token punctuation">,</span>\n    <span class="token number">2</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>使用<code>ESlint</code>检查可以用以下命令或者配置一个<code>npm</code>脚本</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>node_modules/.bin/eslint index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>脚本</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"node index.js"</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n    <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"eslint ."</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>npm run build</code>会检查项目中的每一个文件，<strong>我们并不希望一些文件被检查</strong></p>\n<p><strong>根目录新建一个<code>.eslintignore</code>文件</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>build\n// 或者不需要检查的\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>我们配置好之后自然是完善一套规则</strong></p>\n<p><strong>增加<code>eqeqeq</code>规则，除了三个相等号之外，相等要被检查。规则在<code>rules</code>字段下添加</strong></p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  \'rules\'<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n   \'eqeqeq\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    <span class="token comment">// 比如避免不必要的拖尾空格，大括号之间有一个空格等等</span>\n      \'no-trailing-spaces\'<span class="token operator">:</span> \'error\'<span class="token punctuation">,</span>\n    \'object-curly-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> \'always\'\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \'arrow-spacing\'<span class="token operator">:</span> <span class="token punctuation">[</span>\n        \'error\'<span class="token punctuation">,</span> <span class="token punctuation">{</span> \'before\'<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> \'after\'<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 警告不出现在控制台。</span>\n    \'no-console\'<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>还有其他的流行规则风范比如<a href="https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb" target="_blank" rel="noopener noreferrer">Airbnb<ExternalLinkIcon/></a></strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/Eslint.html",pathLocale:"/",permalink:null,routeMeta:{title:"Eslint项目配置"},slug:"Eslint",filePath:"/root/blog/blogs/tech/Eslint.md",filePathRelative:"blogs/tech/Eslint.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.vue",componentFilePathRelative:"pages/blogs/tech/Eslint.html.vue",componentFileChunkName:"v-21adab26",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/Eslint.html.js",dataFilePathRelative:"pages/blogs/tech/Eslint.html.js",dataFileChunkName:"v-21adab26",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/Eslint.html",htmlFilePathRelative:"blogs/tech/Eslint.html"}],length:1,label:"Eslint"},npm:{pages:[{data:{key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],git:{},filePathRelative:"blogs/tech/npm.md"},key:"v-008bc010",path:"/blogs/tech/npm.html",title:"npm基础",lang:"en-US",frontmatter:{title:"npm基础",date:"2021/07/01",tags:["npm"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"NodeJS",slug:"nodejs",children:[{level:3,title:"Init",slug:"init",children:[]},{level:3,title:"nodemon",slug:"nodemon",children:[]}]}],content:'## NodeJS\r\n\r\n几乎所有的JavaScript项目都是使用node包管理器定义的，也就是`npm`\r\n\r\n使用`npm`的一个明确说明是位于项目根目录的`package.json`\r\n\r\n```shell\r\nnpm install axios\r\nnpm install json-server --save-dev\r\n```\r\n\r\n**参数间有差别，`axios`被安装为应用的运行时依赖项`--save`,程序本身需要库的存在，另一个`json-server`是作为开发依赖项`--save-dev`,程序本身不需要它。**\r\n\r\n### Init\r\n\r\n```shell\r\nnpm init\r\n// 定义\r\n{\r\n  // ...\r\n  "scripts": {\r\n    "start": "node index.js",\r\n    "test": "echo \\"Error: no test specified\\" && exit 1"\r\n  },\r\n  // ...\r\n}\r\n```\r\n\r\n> 生成`package.json`文件\r\n\r\n```shell\r\n"express": "^4.17.1"\r\n// ^:安装版本至少为4.17.1\r\n```\r\n\r\n### nodemon\r\n\r\n```\r\nnpm install --save-dev nodemon\r\n```\r\n\r\n**热加载,同时在`package.json`中添加一个`dev`命令`nodemon xxx.js`**\r\n\r\n`npm run dev`\r\n\r\n',contentRendered:'<h2 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> NodeJS</h2>\n<p>几乎所有的JavaScript项目都是使用node包管理器定义的，也就是<code>npm</code></p>\n<p>使用<code>npm</code>的一个明确说明是位于项目根目录的<code>package.json</code></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios\n<span class="token function">npm</span> <span class="token function">install</span> json-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>参数间有差别，<code>axios</code>被安装为应用的运行时依赖项<code>--save</code>,程序本身需要库的存在，另一个<code>json-server</code>是作为开发依赖项<code>--save-dev</code>,程序本身不需要它。</strong></p>\n<h3 id="init" tabindex="-1"><a class="header-anchor" href="#init" aria-hidden="true">#</a> Init</h3>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> init\n// 定义\n<span class="token punctuation">{</span>\n  // <span class="token punctuation">..</span>.\n  <span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"start"</span><span class="token builtin class-name">:</span> <span class="token string">"node index.js"</span>,\n    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"echo <span class="token entity" title="\\&quot;">\\"</span>Error: no test specified<span class="token entity" title="\\&quot;">\\"</span> &amp;&amp; exit 1"</span>\n  <span class="token punctuation">}</span>,\n  // <span class="token punctuation">..</span>.\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote>\n<p>生成<code>package.json</code>文件</p>\n</blockquote>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token string">"express"</span><span class="token builtin class-name">:</span> <span class="token string">"^4.17.1"</span>\n// ^:安装版本至少为4.17.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm install --save-dev nodemon\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>热加载,同时在<code>package.json</code>中添加一个<code>dev</code>命令<code>nodemon xxx.js</code></strong></p>\n<p><code>npm run dev</code></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/npm.html",pathLocale:"/",permalink:null,routeMeta:{title:"npm基础"},slug:"npm",filePath:"/root/blog/blogs/tech/npm.md",filePathRelative:"blogs/tech/npm.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.vue",componentFilePathRelative:"pages/blogs/tech/npm.html.vue",componentFileChunkName:"v-008bc010",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/npm.html.js",dataFilePathRelative:"pages/blogs/tech/npm.html.js",dataFileChunkName:"v-008bc010",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/npm.html",htmlFilePathRelative:"blogs/tech/npm.html"}],length:1,label:"npm"},githubdaili:{pages:[{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"}],length:1,label:"github代理"},dailipeizhi:{pages:[{data:{key:"v-d246bc92",path:"/blogs/notes/OpenSSL%20SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],git:{},filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md"},key:"v-d246bc92",path:"/blogs/notes/OpenSSL SSL_connect443.html",title:"git配置代理",lang:"en-US",frontmatter:{title:"git配置代理",date:"2021/06/07",tags:["github代理","代理配置"],categories:["notes"]},excerpt:"<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n",headers:[{level:3,title:"场景",slug:"场景",children:[]},{level:3,title:"方案",slug:"方案",children:[]}],content:"\r\n\r\n**OpenSSL SSL_connect: Connection was reset in connection to github.com:443**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### 场景\r\n\r\n**我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头**\r\n\r\n### 方案\r\n\r\n**如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)**\r\n\r\n```shell\r\ngit config --global http.proxy 127.0.0.1:7890\r\ngit config --global https.proxy 127.0.0.1:7890\r\n```\r\n\r\n**如果之前设置过，那么请重置**\r\n\r\n```shell\r\ngit config --global --unset http.proxy\r\ngit config --global --unset https.proxy\r\n```\r\n\r\n**配上几个常用的git配置查看命令**\r\n\r\n```shell\r\ngit config --global http.proxy #查看git的http代理配置\r\ngit config --global https.proxy #查看git的https代理配置\r\ngit config --global -l #查看git的所有配置\r\n```\r\n\r\n",contentRendered:'<p><strong>OpenSSL SSL_connect: Connection was reset in connection to github.com:443</strong></p>\n\x3c!-- more --\x3e\n<h3 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h3>\n<p><strong>我常年挂着clash，但是这个问题时常出现，之前有搜索过，今天又碰到了，所以决心测查一遍源头</strong></p>\n<h3 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h3>\n<p><strong>如果你跟我一样，挂了梯子，那么在git bash中输入一下命令即可(端口因人而异)</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token number">127.0</span>.0.1:7890\n<span class="token function">git</span> config --global https.proxy <span class="token number">127.0</span>.0.1:7890\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果之前设置过，那么请重置</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global --unset http.proxy\n<span class="token function">git</span> config --global --unset https.proxy\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>配上几个常用的git配置查看命令</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">git</span> config --global http.proxy <span class="token comment">#查看git的http代理配置</span>\n<span class="token function">git</span> config --global https.proxy <span class="token comment">#查看git的https代理配置</span>\n<span class="token function">git</span> config --global -l <span class="token comment">#查看git的所有配置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/OpenSSL SSL_connect443.html",pathLocale:"/",permalink:null,routeMeta:{title:"git配置代理"},slug:"OpenSSL SSL_connect443",filePath:"/root/blog/blogs/notes/OpenSSL SSL_connect443.md",filePathRelative:"blogs/notes/OpenSSL SSL_connect443.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.vue",componentFileChunkName:"v-d246bc92",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFilePathRelative:"pages/blogs/notes/OpenSSL SSL_connect443.html.js",dataFileChunkName:"v-d246bc92",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/OpenSSL SSL_connect443.html",htmlFilePathRelative:"blogs/notes/OpenSSL SSL_connect443.html"}],length:1,label:"代理配置"},guoxingPS5:{pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"}],length:1,label:"国行PS5"},fanqiang:{pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"}],length:1,label:"翻墙"},clash:{length:2,pages:[{data:{key:"v-28d7a341",path:"/blogs/tech/%E7%BB%99%E4%BD%A0%E7%9A%84%E5%9B%BD%E8%A1%8CPS5%E4%B8%8A%E6%A2%AF%E5%AD%90.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],git:{},filePathRelative:"blogs/tech/给你的国行PS5上梯子.md"},key:"v-28d7a341",path:"/blogs/tech/geinideguoxingPS5shangtizi.html",title:"国行PS5配置代理",lang:"en-US",frontmatter:{title:"国行PS5配置代理",date:"2021/06/07",tags:["国行PS5","翻墙","clash"],categories:["tech"]},excerpt:"<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n",headers:[{level:3,title:"set up",slug:"set-up",children:[]},{level:3,title:"验证",slug:"验证",children:[]}],content:"\r\n\r\n**解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。**\r\n\r\n\x3c!-- more --\x3e\r\n\r\n### set up\r\n\r\n**自备机场，安装好[clash](https://github.com/Fndroid/clash_for_windows_pkg/releases)，添加好你的clash节点profile（一般机场自带有订阅）**\r\n\r\n**Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）**\r\n\r\n![image-20210607145825903](https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png)\r\n\r\n**打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，**\r\n\r\n### 验证\r\n\r\n**打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。**",contentRendered:'<p><strong>解决在宿舍不可用路由器、不会刷路由器、不想买主机盒子，同时有笔记本但想国行PS5上外网的方法。</strong></p>\n\x3c!-- more --\x3e\n<h3 id="set-up" tabindex="-1"><a class="header-anchor" href="#set-up" aria-hidden="true">#</a> set up</h3>\n<p><strong>自备机场，安装好<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">clash<ExternalLinkIcon/></a>，添加好你的clash节点profile（一般机场自带有订阅）</strong></p>\n<p><strong>Allow LAN 开启，记录以太网IP地址和7890端口（如果你改了，请更换，一般默认不会改）</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210607145825903.png" alt="image-20210607145825903"></p>\n<p><strong>打开电脑开启热点，PS5连接该热点WiFi，在网络详细设定中，设置Proxy，把以太网IP和端口填上，</strong></p>\n<h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3>\n<p><strong>打开Twitch，如果能看直播，那就代表成功了。失败请检查自己的步骤。</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/给你的国行PS5上梯子.html",pathLocale:"/",permalink:null,routeMeta:{title:"国行PS5配置代理"},slug:"给你的国行PS5上梯子",filePath:"/root/blog/blogs/tech/给你的国行PS5上梯子.md",filePathRelative:"blogs/tech/给你的国行PS5上梯子.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.vue",componentFileChunkName:"v-28d7a341",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFilePathRelative:"pages/blogs/tech/给你的国行PS5上梯子.html.js",dataFileChunkName:"v-28d7a341",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/给你的国行PS5上梯子.html",htmlFilePathRelative:"blogs/tech/给你的国行PS5上梯子.html"},{data:{key:"v-54860d63",path:"/blogs/notes/clash%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],git:{},filePathRelative:"blogs/notes/clash使用技巧.md"},key:"v-54860d63",path:"/blogs/notes/clashshiyongjiqiao.html",title:"clash使用技巧",lang:"en-US",frontmatter:{title:"clash使用技巧",date:"2021/03/20",tags:["clash"],categories:["notes"]},excerpt:"<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"Tips",slug:"tips",children:[]},{level:2,title:"最后",slug:"最后",children:[]}],content:'\r\n**clash基本操作指南，（~~基于有机场的~~）阅读本文1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## install\r\n\r\n[官方下载连接](https://github.com/Fndroid/clash_for_windows_pkg/releases)\r\n\r\n**下载好后，打开clash**\r\n\r\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\r\n\r\n**建议下载你~~机场~~的profile，然后import导入，点一下profile启用**\r\n\r\n## Tips\r\n\r\n![profile](https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png)\r\n\r\n**国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode->rule**\r\n\r\n**或者**\r\n\r\n![open](https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png)\r\n\r\n**我不建议把其他流量设置为国外流量，我会解释为什么这样做**\r\n\r\n**[谷歌商店搜索安装switchyomega](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon)**\r\n\r\n**比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png)\r\n\r\n**回到我们clash的Profiles界面，选择下图这个**\r\n\r\n![profiles](https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png)\r\n\r\n- 选择添加ADD\r\n\r\n  ![add](https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png)\r\n\r\n- content 写入`hupu.com`,  type选择 `DOMAIN-SUFFIX` , Proxy选择 `Direct`\r\n\r\n**当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择`Direct`，如果遇到别的网站需要代理的，选择`国外流量`即可**\r\n\r\n![hupu](https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png)\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**最后最后记得点`save`保存，刷新页面即可生效**\r\n\r\n**如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理**\r\n\r\n## 最后\r\n\r\n**为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的**',contentRendered:'<p><strong>clash基本操作指南，（<s>基于有机场的</s>）阅读本文1分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>\n<p><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases" target="_blank" rel="noopener noreferrer">官方下载连接<ExternalLinkIcon/></a></p>\n<p><strong>下载好后，打开clash</strong></p>\n<img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215618.png" alt="main" style="zoom:67%;" />\n<p><strong>建议下载你<s>机场</s>的profile，然后import导入，点一下profile启用</strong></p>\n<h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326215847.png" alt="profile"></p>\n<p><strong>国外流量选择一个适合的稳定的，右键桌面右下角的小黑猫，system proxy on和proxy mode-&gt;rule</strong></p>\n<p><strong>或者</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220436.png" alt="open"></p>\n<p><strong>我不建议把其他流量设置为国外流量，我会解释为什么这样做</strong></p>\n<p><strong><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-ntp-icon" target="_blank" rel="noopener noreferrer">谷歌商店搜索安装switchyomega<ExternalLinkIcon/></a></strong></p>\n<p><strong>比如我打开虎扑，但是加载可能不全，这时候switchyomega会显示出来</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220655.png" alt="hupu"></p>\n<p><strong>回到我们clash的Profiles界面，选择下图这个</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220856.png" alt="profiles"></p>\n<ul>\n<li>\n<p>选择添加ADD</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326220953.png" alt="add"></p>\n</li>\n<li>\n<p>content 写入<code>hupu.com</code>,  type选择 <code>DOMAIN-SUFFIX</code> , Proxy选择 <code>Direct</code></p>\n</li>\n</ul>\n<p><strong>当然，根据情况选择，虎扑是可以直连访问的，所以我们不需要去代理，选择<code>Direct</code>，如果遇到别的网站需要代理的，选择<code>国外流量</code>即可</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/20210326221243.png" alt="hupu"></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>最后最后记得点<code>save</code>保存，刷新页面即可生效</strong></p>\n<p><strong>如何判别一个网站需要直连还是代理，看clash的connection，如果direct无法访问就需要上面的方式添加代理</strong></p>\n<h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2>\n<p><strong>为什么要这样折腾每个网站？因为你全局代理所有的网站，不一定有你分配的好，图片往往会裂开，所以勤动手，一次就好，日后可以导入到软路由等，属于越用越好用的</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/clash使用技巧.html",pathLocale:"/",permalink:null,routeMeta:{title:"clash使用技巧"},slug:"clash使用技巧",filePath:"/root/blog/blogs/notes/clash使用技巧.md",filePathRelative:"blogs/notes/clash使用技巧.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.vue",componentFilePathRelative:"pages/blogs/notes/clash使用技巧.html.vue",componentFileChunkName:"v-54860d63",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/clash使用技巧.html.js",dataFilePathRelative:"pages/blogs/notes/clash使用技巧.html.js",dataFileChunkName:"v-54860d63",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/clash使用技巧.html",htmlFilePathRelative:"blogs/notes/clash使用技巧.html"}],label:"clash"},ziti:{pages:[{data:{key:"v-7f7426c5",path:"/blogs/tech/%E6%8D%A2%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8F%8B%E5%A5%BD%E7%9A%84%E5%AD%97%E4%BD%93.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],git:{},filePathRelative:"blogs/tech/换一个程序员友好的字体.md"},key:"v-7f7426c5",path:"/blogs/tech/huanyigechengxuyuanyouhaodeziti.html",title:"对程序员友好的字体",lang:"en-US",frontmatter:{title:"对程序员友好的字体",date:"2021/04/05",tags:["字体"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"JetBrains Mono",slug:"jetbrains-mono",children:[]},{level:2,title:"Cascadia Code",slug:"cascadia-code",children:[]}],content:"\r\n**介绍一个对程序员比较舒服的字体**\r\n\r\n## 使用\r\n\r\n先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装\r\n\r\n然后开启IDE（比如VS CODE）调到设置或者`ctrl + ,`快捷打开设置 \r\n\r\n![image-20210328231737883](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png)\r\n\r\n**添加完没有生效，请重新打开IDE**\r\n\r\n## JetBrains Mono \r\n\r\n**一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的**\r\n\r\n**当然对于一些视力或者别的爱好~~粗~~的人选择Extra Bold**\r\n\r\n![image-20210328231517174](https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png)\r\n\r\n## Cascadia Code\r\n\r\n具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点",contentRendered:'<p><strong>介绍一个对程序员比较舒服的字体</strong></p>\n<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>先去搜索自己喜欢的字体，下载后，将ttf文件移到windows（本人只有windows）字体安装</p>\n<p>然后开启IDE（比如VS CODE）调到设置或者<code>ctrl + ,</code>快捷打开设置</p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231737883.png" alt="image-20210328231737883"></p>\n<p><strong>添加完没有生效，请重新打开IDE</strong></p>\n<h2 id="jetbrains-mono" tabindex="-1"><a class="header-anchor" href="#jetbrains-mono" aria-hidden="true">#</a> JetBrains Mono</h2>\n<p><strong>一般来说选Regular更普众一点，JetBrains全家桶出来的东西绝对是可以的</strong></p>\n<p><strong>当然对于一些视力或者别的爱好<s>粗</s>的人选择Extra Bold</strong></p>\n<p><img src="https://raw.githubusercontent.com/googidaddy/img/master/image-20210328231517174.png" alt="image-20210328231517174"></p>\n<h2 id="cascadia-code" tabindex="-1"><a class="header-anchor" href="#cascadia-code" aria-hidden="true">#</a> Cascadia Code</h2>\n<p>具体样式我没有截图，可以上官网看看，跟Mono差不多，看个人第一眼缘，我是更喜欢Mono一点</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/换一个程序员友好的字体.html",pathLocale:"/",permalink:null,routeMeta:{title:"对程序员友好的字体"},slug:"换一个程序员友好的字体",filePath:"/root/blog/blogs/tech/换一个程序员友好的字体.md",filePathRelative:"blogs/tech/换一个程序员友好的字体.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.vue",componentFileChunkName:"v-7f7426c5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/换一个程序员友好的字体.html.js",dataFilePathRelative:"pages/blogs/tech/换一个程序员友好的字体.html.js",dataFileChunkName:"v-7f7426c5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/换一个程序员友好的字体.html",htmlFilePathRelative:"blogs/tech/换一个程序员友好的字体.html"}],length:1,label:"字体"},hongmiAC2100shuaji:{pages:[{data:{key:"v-08e31ac5",path:"/blogs/tech/%E7%BA%A2%E7%B1%B3AC2100%E5%88%B7%E6%9C%BA.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],git:{},filePathRelative:"blogs/tech/红米AC2100刷机.md"},key:"v-08e31ac5",path:"/blogs/tech/hongmiAC2100shuaji.html",title:"红米AC2100刷机",lang:"en-US",frontmatter:{title:"红米AC2100刷机",date:"2021/04/05",tags:["红米AC2100刷机"],categories:["tech"]},excerpt:"",headers:[{level:2,title:"前期准备",slug:"前期准备",children:[]},{level:2,title:"开始",slug:"开始",children:[]}],content:"\r\n**从恩山那里学习总结过来的，单刀直入。[感谢大大](http://openwrt.ink:88/archives/s-breed)**\r\n\r\n\r\n\r\n## 前期准备\r\n\r\n[红米AC2100-2.0.7固件](http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin)\r\n\r\n[Padavan固件-下载redmi211.trx](http://openwrt.ink:8666/Padavan/)\r\n\r\nXShell（自行下载）\r\n\r\n> **如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代**\r\n\r\n**红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了**\r\n\r\n**本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪**\r\n\r\n\r\n\r\n## 开始\r\n\r\n综合步骤如果看不懂可以参考[此视频](https://www.bilibili.com/video/BV1Zf4y1v74o)\r\n\r\n**首先登录进[路由器管理地址](192.168.31.1)**\r\n\r\n**点系统状态，手动升级，升级红米ac2100-2.0.7固件**\r\n\r\n**等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址**\r\n\r\n**此时地址会变为**`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/web/home#router`\r\n\r\n复制下来`<STOK>`\r\n\r\n替换stok`http://192.168.31.1/cgi-bin/luci/;stok=<STOK>/api/misystem/set_config_iotdev?bssid=Xiaomi&user_id=longdike&ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20's%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B` \r\n\r\n**然后将网址复制下来粘贴网页打开，会显示`\"code\":0`代表成功**\r\n\r\n打开xshell，连接`192.168.31.1` 用户名为`root` 密码`admin`\r\n\r\n**直接输入一下命令刷入Breed，并等待20s**\r\n\r\n```\r\ncd /tmp && wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n\r\n或者下面命令：\r\ncd /tmp && wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin && mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\r\n```\r\n\r\n**正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）**\r\n\r\n**路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入`192.168.1.1`进入breed**\r\n\r\n**找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存**\r\n\r\n**点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面**\r\n\r\n**开启5G频道->160HZ，冲冲冲**\r\n\r\n",contentRendered:'<p><strong>从恩山那里学习总结过来的，单刀直入。<a href="http://openwrt.ink:88/archives/s-breed" target="_blank" rel="noopener noreferrer">感谢大大<ExternalLinkIcon/></a></strong></p>\n<h2 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h2>\n<p><a href="http://openwrt.ink:8666/%E5%AE%98%E6%96%B9%E5%B7%A5%E5%85%B7%E5%8C%85/%E5%B0%8F%E7%B1%B3AC2100/%E5%AE%98%E6%96%B9%E5%9B%BA%E4%BB%B6/miwifi_r2100_firmware_64288_2.0.376.bin" target="_blank" rel="noopener noreferrer">红米AC2100-2.0.7固件<ExternalLinkIcon/></a></p>\n<p><a href="http://openwrt.ink:8666/Padavan/" target="_blank" rel="noopener noreferrer">Padavan固件-下载redmi211.trx<ExternalLinkIcon/></a></p>\n<p>XShell（自行下载）</p>\n<blockquote>\n<p><strong>如果说你有比较好的老毛子(Padavan)固件什么的，可以自行替代</strong></p>\n</blockquote>\n<p><strong>红米ac2100闪存分为晶豪（欧皇）和东芝两种，一般有坏块3-4个（不是太多）也无妨，刷机代码已经规避了</strong></p>\n<p><strong>本人到手也是是东芝，检测有坏块，然后去换了，成功到手晶豪</strong></p>\n<h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始" aria-hidden="true">#</a> 开始</h2>\n<p>综合步骤如果看不懂可以参考<a href="https://www.bilibili.com/video/BV1Zf4y1v74o" target="_blank" rel="noopener noreferrer">此视频<ExternalLinkIcon/></a></p>\n<p><strong>首先登录进<a href="192.168.31.1">路由器管理地址</a></strong></p>\n<p><strong>点系统状态，手动升级，升级红米ac2100-2.0.7固件</strong></p>\n<p><strong>等待升级重启完毕，路由器灯会变成正常的蓝色，再次打开路由器管理地址</strong></p>\n<p><strong>此时地址会变为</strong><code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/web/home#router</code></p>\n<p>复制下来<code>&lt;STOK&gt;</code></p>\n<p>替换stok<code>http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20\'s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg\'%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</code></p>\n<p><strong>然后将网址复制下来粘贴网页打开，会显示<code>&quot;code&quot;:0</code>代表成功</strong></p>\n<p>打开xshell，连接<code>192.168.31.1</code> 用户名为<code>root</code> 密码<code>admin</code></p>\n<p><strong>直接输入一下命令刷入Breed，并等待20s</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>cd /tmp &amp;&amp; wget https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n\n或者下面命令：\ncd /tmp &amp;&amp; wget http://openwrt.ink:8666/Breed/breed-mt7621-xiaomi-r3g.bin &amp;&amp; mtd -r write breed-mt7621-xiaomi-r3g.bin Bootloader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>正常结束后是会显示reboot，然后断开与ssh连接，（自己尝试能不能输入东西就知道了）</strong></p>\n<p><strong>路由器断电，找个针戳住路由器背后的reset小孔并插电，记得是戳住，等路由器灯一直闪烁后，浏览器输入<code>192.168.1.1</code>进入breed</strong></p>\n<p><strong>找到环境变量，增加:xiaomi.r3g.bootfw 值：2 然后保存</strong></p>\n<p><strong>点击更新固件，上传padavan固件包，等待更新完成，然后就可以进入padavan路由器管理界面</strong></p>\n<p><strong>开启5G频道-&gt;160HZ，冲冲冲</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/红米AC2100刷机.html",pathLocale:"/",permalink:null,routeMeta:{title:"红米AC2100刷机"},slug:"红米AC2100刷机",filePath:"/root/blog/blogs/tech/红米AC2100刷机.md",filePathRelative:"blogs/tech/红米AC2100刷机.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.vue",componentFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.vue",componentFileChunkName:"v-08e31ac5",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/红米AC2100刷机.html.js",dataFilePathRelative:"pages/blogs/tech/红米AC2100刷机.html.js",dataFileChunkName:"v-08e31ac5",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/红米AC2100刷机.html",htmlFilePathRelative:"blogs/tech/红米AC2100刷机.html"}],length:1,label:"红米AC2100刷机"},v2ray:{pages:[{data:{key:"v-38a1fedd",path:"/blogs/tech/docker%E9%83%A8%E7%BD%B2v2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],git:{},filePathRelative:"blogs/tech/docker部署v2ray.md"},key:"v-38a1fedd",path:"/blogs/tech/dockerbushuv2ray.html",title:"docker部署v2ray",lang:"en-US",frontmatter:{title:"docker部署v2ray",date:"2021/03/26",tags:["v2ray","docker"],categories:["tech"]},excerpt:"<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n",headers:[{level:2,title:"pull images",slug:"pull-images",children:[]},{level:2,title:"create-config.json",slug:"create-config-json",children:[]},{level:2,title:"run container",slug:"run-container",children:[]},{level:2,title:"use tutorial",slug:"use-tutorial",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],content:'\r\n\r\n**部署v2ray-docker，~~官方文档写的不明不白~~，阅读本文需要1.5分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## pull images\r\n\r\n**拉取镜像**\r\n\r\n```sh\r\ndocker pull v2fly/v2fly-core\r\n```\r\n\r\n\r\n\r\n## create-config.json\r\n\r\n**容器需要挂载配置文件才能运行**\r\n\r\n```sh\r\ncd /etc\r\nmkdir v2ray\r\ncd v2ray\r\nvim config.json\r\n```\r\n\r\n**提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）**\r\n\r\n**注：出口使用了http伪装（知道或不知道也无所谓）**\r\n\r\n```\r\n{\r\n  "log" : {\r\n    "access": "/var/log/v2ray/access.log",\r\n    "error": "/var/log/v2ray/error.log",\r\n    "loglevel": "warning"\r\n  },\r\n  "inbounds": [\r\n    {\r\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\r\n      "protocol": "vmess",\r\n      "settings": {\r\n        "clients": [\r\n          {\r\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\r\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \r\n            "level": 1,\r\n            "alterId": 64 // 不改也没关系\r\n          }\r\n        ]\r\n      },\r\n      "streamSettings": {\r\n        "network": "tcp",\r\n        "tcpSettings": {\r\n          "header": { \r\n            "type": "http",\r\n            "response": {\r\n              "version": "1.1",\r\n              "status": "200",\r\n              "reason": "OK",\r\n              "headers": {\r\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\r\n                "Transfer-Encoding": ["chunked"],\r\n                "Connection": ["keep-alive"],\r\n                "Pragma": "no-cache"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  "outbounds": [\r\n    {\r\n      "protocol": "freedom",\r\n      "settings": {}\r\n    },\r\n    {\r\n      "protocol": "blackhole",\r\n      "settings": {},\r\n      "tag": "blocked"\r\n    }\r\n  ],\r\n  "routing": {\r\n    "strategy": "rules",\r\n    "settings": {\r\n      "rules": [\r\n        {\r\n          "type": "field",\r\n          "ip": [\r\n            "geoip:private"\r\n          ],\r\n          "outboundTag": "blocked"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n## run container\r\n\r\n**就一条命令就可以走起来，安装流程走，100%成功**\r\n\r\n```sh\r\ndocker run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p 80:80 v2fly/v2fly-core v2ray -config=/etc/v2ray/config.json\r\n```\r\n\r\n- `-d` 指在后台运行，`--name v2ray` 指容器取名`v2ray`  \r\n\r\n- `-v` mount（挂载）文件, `-p` 开放端口(配置文件中有提到)\r\n- 剩下的是镜像名`v2fly...` 和`v2ray - ...` 使用配置文件\r\n\r\n\r\n\r\n## use tutorial\r\n\r\n**使用就很简单了，举个例子（卑微IOS用户）**\r\n\r\n**打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了**\r\n\r\n\r\n\r\n## summary\r\n\r\n~~官方文档~~\r\n\r\n**没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，**\r\n\r\n**第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好~~况且还做了什么新手上路，那直接翻车了~~**\r\n\r\n**第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上**\r\n\r\n**最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config**\r\n\r\n',contentRendered:'<p><strong>部署v2ray-docker，<s>官方文档写的不明不白</s>，阅读本文需要1.5分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="pull-images" tabindex="-1"><a class="header-anchor" href="#pull-images" aria-hidden="true">#</a> pull images</h2>\n<p><strong>拉取镜像</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> pull v2fly/v2fly-core\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="create-config-json" tabindex="-1"><a class="header-anchor" href="#create-config-json" aria-hidden="true">#</a> create-config.json</h2>\n<p><strong>容器需要挂载配置文件才能运行</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc\n<span class="token function">mkdir</span> v2ray\n<span class="token builtin class-name">cd</span> v2ray\n<span class="token function">vim</span> config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>提供参考模板（大概能供5个人左右使用的负载），记得删除注释使用（无特殊注释部分，可以不改）</strong></p>\n<p><strong>注：出口使用了http伪装（知道或不知道也无所谓）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>{\n  "log" : {\n    "access": "/var/log/v2ray/access.log",\n    "error": "/var/log/v2ray/error.log",\n    "loglevel": "warning"\n  },\n  "inbounds": [\n    {\n      "port": 80, // 要部署的端口，后面会提及到，不改也没关系\n      "protocol": "vmess",\n      "settings": {\n        "clients": [\n          {\n          \t// id是uuid,改不改无所谓，要改就搜索一下uuid生成器\n            "id": "ff07909e-5177-f595-2d6b-bc3815b18c5a", \n            "level": 1,\n            "alterId": 64 // 不改也没关系\n          }\n        ]\n      },\n      "streamSettings": {\n        "network": "tcp",\n        "tcpSettings": {\n          "header": { \n            "type": "http",\n            "response": {\n              "version": "1.1",\n              "status": "200",\n              "reason": "OK",\n              "headers": {\n                "Content-Type": ["application/octet-stream", "application/x-msdownload", "text/html", "application/x-shockwave-flash"],\n                "Transfer-Encoding": ["chunked"],\n                "Connection": ["keep-alive"],\n                "Pragma": "no-cache"\n              }\n            }\n          }\n        }\n      }\n    }\n  ],\n  "outbounds": [\n    {\n      "protocol": "freedom",\n      "settings": {}\n    },\n    {\n      "protocol": "blackhole",\n      "settings": {},\n      "tag": "blocked"\n    }\n  ],\n  "routing": {\n    "strategy": "rules",\n    "settings": {\n      "rules": [\n        {\n          "type": "field",\n          "ip": [\n            "geoip:private"\n          ],\n          "outboundTag": "blocked"\n        }\n      ]\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="run-container" tabindex="-1"><a class="header-anchor" href="#run-container" aria-hidden="true">#</a> run container</h2>\n<p><strong>就一条命令就可以走起来，安装流程走，100%成功</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">docker</span> run -d --name v2ray -v /etc/v2ray:/etc/v2ray -p <span class="token number">80</span>:80 v2fly/v2fly-core v2ray -config<span class="token operator">=</span>/etc/v2ray/config.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul>\n<li>\n<p><code>-d</code> 指在后台运行，<code>--name v2ray</code> 指容器取名<code>v2ray</code></p>\n</li>\n<li>\n<p><code>-v</code> mount（挂载）文件, <code>-p</code> 开放端口(配置文件中有提到)</p>\n</li>\n<li>\n<p>剩下的是镜像名<code>v2fly...</code> 和<code>v2ray - ...</code> 使用配置文件</p>\n</li>\n</ul>\n<h2 id="use-tutorial" tabindex="-1"><a class="header-anchor" href="#use-tutorial" aria-hidden="true">#</a> use tutorial</h2>\n<p><strong>使用就很简单了，举个例子（卑微IOS用户）</strong></p>\n<p><strong>打开shadowrocket,右上角加号，添加vmess，IP写你服务器ip，端口80(配置文件和容器配置一致的)，id（uuid-ff079xxx），alterid-64，然后就可以使用了</strong></p>\n<h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> summary</h2>\n<p><s>官方文档</s></p>\n<p><strong>没有用上花里胡哨的BBR加速等，我只是想做一个混淆的实验，过去一直都是一键脚本搭建的，但是看到了脚本留有后门，恰巧服务器有运行比较重要的程序，于是就索性自己读了一下官方文档，</strong></p>\n<p><strong>第一官方文档写的简易上手流程，太多没有说清楚的概念，点击详细的配置，仅仅介绍了参数（哪些非必要和必要都没有说），对新人不友好<s>况且还做了什么新手上路，那直接翻车了</s></strong></p>\n<p><strong>第二网上一堆的教程都是差不多过时的，想要加自己所需的功能是要不停琢磨那些坑（去不停实验那些参数），相当于文档白写，浪费时间在搭建上</strong></p>\n<p><strong>最后，希望官方文档能更新，毕竟太久没更新过了，个人对网络一窍不通，总算弄明白了，折腾来折腾去就in&amp;out两个大参数里面自定义内容，或者说不想详细教大家，那么可以提供一些及时更新的模板，直接copy改一下运行所需的参数就行（多删少补自己决定），毕竟搭建完，鬼还去怀念config</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker部署v2ray.html",pathLocale:"/",permalink:null,routeMeta:{title:"docker部署v2ray"},slug:"docker部署v2ray",filePath:"/root/blog/blogs/tech/docker部署v2ray.md",filePathRelative:"blogs/tech/docker部署v2ray.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.vue",componentFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.vue",componentFileChunkName:"v-38a1fedd",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker部署v2ray.html.js",dataFilePathRelative:"pages/blogs/tech/docker部署v2ray.html.js",dataFileChunkName:"v-38a1fedd",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker部署v2ray.html",htmlFilePathRelative:"blogs/tech/docker部署v2ray.html"}],length:1,label:"v2ray"},centos:{length:3,pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"},{data:{key:"v-018d38e6",path:"/blogs/tech/centos-python%E5%AE%89%E8%A3%85.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],git:{},filePathRelative:"blogs/tech/centos-python安装.md"},key:"v-018d38e6",path:"/blogs/tech/centos-pythonanzhuang.html",title:"centos7安装python3.9",lang:"en-US",frontmatter:{title:"centos7安装python3.9",date:"2021/02/16",tags:["centos","python"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n",headers:[{level:2,title:"安装步骤",slug:"安装步骤",children:[]},{level:2,title:"1.准备依赖",slug:"_1-准备依赖",children:[]},{level:2,title:"2.下载python3.9",slug:"_2-下载python3-9",children:[]},{level:2,title:"3.安装python3.9",slug:"_3-安装python3-9",children:[]},{level:2,title:"4.验证python安装是否成功",slug:"_4-验证python安装是否成功",children:[]}],content:"\r\n**阅读本文大概需要4分钟**\r\n\r\n**如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！**\r\n\r\n**假如有条件选择别的linux系统，请搜索`Ubuntu 安装python3`，然后可以关闭此网页**\r\n\r\n**centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u>**\r\n\x3c!-- more --\x3e\r\n\r\n------\r\n\r\n## 安装步骤\r\n\r\n## 1.准备依赖\r\n\r\npython3的安装需要一定的依赖，**务必使用root权限安装（sudo）**。\r\n\r\n```\r\nyum update -y\r\nyum groupinstall -y 'Development Tools'\r\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\r\n```\r\n\r\n\r\n\r\n## 2.下载python3.9\r\n\r\n**确保执行无缺漏依赖（也就是不要error导致中断）**\r\n\r\n```\r\nwget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\r\ncd /tmp && tar zxf Python-3.9.0.tgz\r\ncd Python-3.9.0\r\n```\r\n\r\n\r\n\r\n## 3.安装python3.9\r\n\r\n安装是需要等一会\r\n\r\n```\r\n./configure prefix=/usr/local/python3\r\nmake && make install\r\nexport PATH=$PATH:/usr/local/python3/bin/\r\n```\r\n\r\n建立python软连接（也就是把python路径添加到path）\r\n\r\n```\r\nln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\r\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\r\n```\r\n\r\n\r\n\r\n## 4.验证python安装是否成功\r\n\r\n```\r\npython3\r\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\r\n>>>\r\n```\r\n\r\n```\r\npip3 -V\r\n# 会显示pip命令详细使用tips\r\n# 不放心可以再试一试安装一个库\r\npip3 install requests\r\n# 安装成功之后会提示你一段代码'xx upgrade pip' ，你复制运行就可以更新pip3\r\n```\r\n------\r\n\r\n",contentRendered:'<p><strong>阅读本文大概需要4分钟</strong></p>\n<p><strong>如果真的条件只有centos系统，那么你还是看完吧，我已经顺利的安装完了！</strong></p>\n<p><strong>假如有条件选择别的linux系统，请搜索<code>Ubuntu 安装python3</code>，然后可以关闭此网页</strong></p>\n<p><strong>centos7本身自带有python2（yum就是python写的），所以你安装python3，是需要设置python路径，<u>并且需要设置pip的路径和yum本身的路径</u></strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="安装步骤" tabindex="-1"><a class="header-anchor" href="#安装步骤" aria-hidden="true">#</a> 安装步骤</h2>\n<h2 id="_1-准备依赖" tabindex="-1"><a class="header-anchor" href="#_1-准备依赖" aria-hidden="true">#</a> 1.准备依赖</h2>\n<p>python3的安装需要一定的依赖，<strong>务必使用root权限安装（sudo）</strong>。</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yum update -y\nyum groupinstall -y \'Development Tools\'\nyum install -y gcc openssl-devel bzip2-devel libffi-devel wget\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_2-下载python3-9" tabindex="-1"><a class="header-anchor" href="#_2-下载python3-9" aria-hidden="true">#</a> 2.下载python3.9</h2>\n<p><strong>确保执行无缺漏依赖（也就是不要error导致中断）</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz -O /tmp/Python-3.9.0.tgz\ncd /tmp &amp;&amp; tar zxf Python-3.9.0.tgz\ncd Python-3.9.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_3-安装python3-9" tabindex="-1"><a class="header-anchor" href="#_3-安装python3-9" aria-hidden="true">#</a> 3.安装python3.9</h2>\n<p>安装是需要等一会</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>./configure prefix=/usr/local/python3\nmake &amp;&amp; make install\nexport PATH=$PATH:/usr/local/python3/bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>建立python软连接（也就是把python路径添加到path）</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ln -s /usr/local/python3/bin/python3.9 /usr/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/bin/pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_4-验证python安装是否成功" tabindex="-1"><a class="header-anchor" href="#_4-验证python安装是否成功" aria-hidden="true">#</a> 4.验证python安装是否成功</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>python3\n# 显示已省略，反正可以看到python3.x和>>>，ctrl + D 退出\n>>>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>pip3 -V\n# 会显示pip命令详细使用tips\n# 不放心可以再试一试安装一个库\npip3 install requests\n# 安装成功之后会提示你一段代码\'xx upgrade pip\' ，你复制运行就可以更新pip3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/centos-python安装.html",pathLocale:"/",permalink:null,routeMeta:{title:"centos7安装python3.9"},slug:"centos-python安装",filePath:"/root/blog/blogs/tech/centos-python安装.md",filePathRelative:"blogs/tech/centos-python安装.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.vue",componentFilePathRelative:"pages/blogs/tech/centos-python安装.html.vue",componentFileChunkName:"v-018d38e6",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/centos-python安装.html.js",dataFilePathRelative:"pages/blogs/tech/centos-python安装.html.js",dataFileChunkName:"v-018d38e6",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/centos-python安装.html",htmlFilePathRelative:"blogs/tech/centos-python安装.html"}],label:"centos"},SSL:{pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"}],length:1,label:"SSL"},ubuntu:{length:2,pages:[{data:{key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],git:{},filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md"},key:"v-759e9f85",path:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",title:"服务器安装ssl证书",lang:"en-US",frontmatter:{title:"服务器安装ssl证书",date:"2021/03/20",tags:["centos","SSL","ubuntu"],categories:["notes"]},excerpt:"<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n",headers:[{level:2,title:"Linux",slug:"linux",children:[]},{level:2,title:"windows",slug:"windows",children:[]}],content:"\r\n\r\n\r\n**近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X**\r\n\x3c!-- more --\x3e\r\n```\r\n(caused by URLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)')))\r\n```\r\n\r\n**解决办法:**\r\n\r\n## Linux\r\n\r\n请搜索`linux install certificates.command`\r\n\r\n我的Ubuntu`apt-get install install ca-certificates`\r\n\r\ncentos `yum install ca-certificates`\r\n\r\n## windows\r\n\r\n请搜索(最好是pycharm)\r\n\r\n`windows install certificates.command`\r\n\r\n**pycharm可以在目录下一键安装**\r\n\r\n",contentRendered:'<p><strong>近期弄了一点爬虫并且部署到了服务器镜像里，但是镜像竟然报错了，于是乎折腾了5分钟（宝贵的生命X</strong></p>\n\x3c!-- more --\x3e\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>(caused by URLError(SSLCertVerificationError(1, \'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1108)\')))\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>解决办法:</strong></p>\n<h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2>\n<p>请搜索<code>linux install certificates.command</code></p>\n<p>我的Ubuntu<code>apt-get install install ca-certificates</code></p>\n<p>centos <code>yum install ca-certificates</code></p>\n<h2 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> windows</h2>\n<p>请搜索(最好是pycharm)</p>\n<p><code>windows install certificates.command</code></p>\n<p><strong>pycharm可以在目录下一键安装</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",pathLocale:"/",permalink:null,routeMeta:{title:"服务器安装ssl证书"},slug:"SSLCERTIFICATE_VERIFY_FAILED",filePath:"/root/blog/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",filePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.vue",componentFileChunkName:"v-759e9f85",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFilePathRelative:"pages/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html.js",dataFileChunkName:"v-759e9f85",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html",htmlFilePathRelative:"blogs/notes/SSLCERTIFICATE_VERIFY_FAILED.html"},{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"}],label:"ubuntu"},qianduanhuanjingpeizhi:{pages:[{data:{key:"v-f3c15a18",path:"/blogs/tech/ubuntu%E9%85%8D%E7%BD%AE%E5%89%8D%E7%AB%AF%E7%8E%AF%E5%A2%83.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],git:{},filePathRelative:"blogs/tech/ubuntu配置前端环境.md"},key:"v-f3c15a18",path:"/blogs/tech/ubuntupeizhiqianduanhuanjing.html",title:"ubuntu配置前端环境",lang:"en-US",frontmatter:{title:"ubuntu配置前端环境",date:"2021/03/05",tags:["ubuntu","前端环境配置"],categories:["tech"]},excerpt:"",headers:[{level:3,title:"安装node&yarn",slug:"安装node-yarn",children:[]},{level:3,title:"赋予目录权限",slug:"赋予目录权限",children:[]}],content:'> **新MacBook到了展现生产力的时候了！！**  \n> 操作均在`vscode remote ssh`Ubuntu环境下  \n\n### 安装node&yarn\n更新依赖\n`sudo apt update`\n获取node\n`curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -`\n安装node\n`sudo apt install nodejs`\n验证node安装，安装node会顺带把npm安装\n`node —version`\n- - - -\nYarn就简单了\n```\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n```\n\n### 赋予目录权限\n不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n`sudo chmod -R 777 .`\n> .是指相对路径的当前目录  ',contentRendered:'<blockquote>\n<p><strong>新MacBook到了展现生产力的时候了！！</strong><br>\n操作均在<code>vscode remote ssh</code>Ubuntu环境下</p>\n</blockquote>\n<h3 id="安装node-yarn" tabindex="-1"><a class="header-anchor" href="#安装node-yarn" aria-hidden="true">#</a> 安装node&amp;yarn</h3>\n<p>更新依赖\n<code>sudo apt update</code>\n获取node\n<code>curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code>\n安装node\n<code>sudo apt install nodejs</code>\n验证node安装，安装node会顺带把npm安装\n<code>node —version</code></p>\n<hr>\n<p>Yarn就简单了</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\n\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\n\nsudo apt update\n\nsudo apt install yarn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="赋予目录权限" tabindex="-1"><a class="header-anchor" href="#赋予目录权限" aria-hidden="true">#</a> 赋予目录权限</h3>\n<p>不要因为写入、执行等权限问题把自己的时间和兴致磨灭了\n<code>sudo chmod -R 777 .</code></p>\n<blockquote>\n<p>.是指相对路径的当前目录</p>\n</blockquote>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/ubuntu配置前端环境.html",pathLocale:"/",permalink:null,routeMeta:{title:"ubuntu配置前端环境"},slug:"ubuntu配置前端环境",filePath:"/root/blog/blogs/tech/ubuntu配置前端环境.md",filePathRelative:"blogs/tech/ubuntu配置前端环境.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.vue",componentFileChunkName:"v-f3c15a18",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/ubuntu配置前端环境.html.js",dataFilePathRelative:"pages/blogs/tech/ubuntu配置前端环境.html.js",dataFileChunkName:"v-f3c15a18",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/ubuntu配置前端环境.html",htmlFilePathRelative:"blogs/tech/ubuntu配置前端环境.html"}],length:1,label:"前端环境配置"},Vue3:{length:2,pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"},{data:{key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-notes-1.md"},key:"v-2b8dfb6e",path:"/blogs/Vue3/Vue3-notes-1.html",title:"Vue3笔记",lang:"en-US",frontmatter:{title:"Vue3笔记",date:"2020/12/11",tags:["Vue3"],categories:["Vue3"]},excerpt:"<p><strong>阅读本文大概需要10分钟</strong></p>\n",headers:[{level:3,title:"认识重要 API",slug:"认识重要-api",children:[]},{level:3,title:"createApp",slug:"createapp",children:[]},{level:3,title:"onMounted",slug:"onmounted",children:[]},{level:3,title:"computed",slug:"computed",children:[]},{level:3,title:"watch",slug:"watch",children:[]},{level:3,title:"⭐ reactive 单独使用情况",slug:"reactive-单独使用情况",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"toRef",slug:"toref",children:[]},{level:3,title:"一、setup 函数",slug:"一、setup-函数",children:[]},{level:3,title:"二、生命周期",slug:"二、生命周期",children:[]},{level:3,title:"三、vue-router",slug:"三、vue-router",children:[]},{level:3,title:"四、vuex",slug:"四、vuex",children:[]},{level:2,title:"vue-vite 搭建项目",slug:"vue-vite-搭建项目",children:[{level:3,title:"五、setup()",slug:"五、setup",children:[]}]},{level:2,title:"日后再更新。",slug:"日后再更新。",children:[]}],content:'\r\n**阅读本文大概需要10分钟**\r\n\x3c!-- more --\x3e\r\n\r\n**先认识代码变动和部分新特性**\r\n\r\n::: tip\r\n\r\n### 认识重要 API\r\n\r\n```javascript\r\nimport {\r\n    createApp,\t\t// 创建一个APP实例\r\n    onMounted,\t\t// 生命周期写法变了\r\n    computed,\t\t// 方法变了\r\n    watch,\t\t\t// 同上\r\n    watchEffect,\t// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行\r\n    reactive,\t\t// 传入一个普通对象返回一个响应式对象\r\n    ref,\t\t\t// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用\r\n    toRef,\t\t\t// 为一个reactive对象的属性创建一个ref\r\n    toRefs,\t\t\t// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)\r\n}\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _createApp_\r\n\r\n```javascript\r\nimport { createApp } from "vue";\r\nimport App from "./App.vue";\r\ncreateApp(App).mount("#app");\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _onMounted_\r\n\r\n```javascript\r\nimport { onMounted, defineComponent } from "vue";\r\nexport default defineComponent({\r\n  setup() {\r\n    // 使用需要放在setup()里面\r\n    onMounted(() => {\r\n      console.log("冲冲冲");\r\n    });\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _computed_\r\n\r\n```javascript\r\nimport { computed, ref } from "vue";\r\n\r\nconst count = ref(1);\r\nconst result = computed(() => count.value + 1);\r\n// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象\r\n// 对象的话，是不是对象.value就很好理解下面为什么这样写了？\r\nconsole.log(result.value); // 2\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _watch_\r\n\r\n```javascript\r\nimport { reactive, watch } from "vue";\r\n\r\nconst state = reactive({ count: 0 });\r\n//reactive 接受一个普通对象，返回一个响应式对象\r\n// state已经是一个响应式对象了，所以取值就是对象.count\r\nwatch(\r\n  () => state.count,\r\n  (count, prevCount) => {\r\n    // todo\r\n  }\r\n);\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### :star: _reactive 单独使用情况_\r\n\r\n```javascript\r\nimport { reactive } from "vue";\r\n\r\nconst a = reactive({ count: 0 });\r\na.count++;\r\nconsole.log(a.count); // 1\r\n```\r\n\r\n#### :star2: 返回给组件形式一\r\n\r\n```javascript\r\n// 组件\r\n<template>\r\n    <p> {{ a.count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\n// 逻辑\r\nimport { reactive, defineComponent } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    return { a };\r\n  },\r\n});\r\n```\r\n\r\n#### _:star2:返回组件形式二 & toRefs_\r\n\r\n```javascript\r\n<template>\r\n  <p> {{ count }} </p>\r\n</template>\r\n```\r\n\r\n```javascript\r\nimport { reactive, defineComponent, toRefs } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({ count: 0 });\r\n    // toRefs把响应式对象转为普通对象\r\n    // 再解析一下就是，toRefs是一个解封过程，reactive是封装过程\r\n    return { ...toRefs(a) };\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _ref_\r\n\r\n```javascript\r\n// ref 接受一个参数，并返回一个响应式且可以改变的对象。\r\n// 同时ref拥有一个指向内部值得单一属性.value\r\n\r\nconst count = ref(0);\r\nconsole.log(count.value); // 0\r\n\r\ncount.value++;\r\nconsole.log(count.value); // 1\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n### _toRef_\r\n\r\n```javascript\r\nimport { defineComponent, toRef, reactive } from "vue";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const a = reactive({\r\n      cow: 0,\r\n      bug: 1,\r\n    });\r\n    // toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)\r\n    const count = toRef(a, "cow");\r\n    // 相当于 const count = ref(0)\r\n    // count 已经是cow的响应式对象了，所以值是不是该？\r\n    count.value++; // 这时a.cow已经被改变了\r\n    console.log(a.cow); // 1\r\n    // 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？\r\n\r\n    a.cow++;\r\n    console.log(count.value); // 2\r\n    // 这里是不是能理解ref传递了？\r\n  },\r\n});\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n# Vue3 整体纵览\r\n\r\n### 一、setup 函数\r\n\r\n​ **setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法**\r\n\r\n​ **Vue3 去掉了 data 返回的格式，统一再 setup 返回**\r\n\r\n​\r\n\r\n### 二、生命周期\r\n\r\n```\r\nsetup() {\r\n    onMounted(() => {\r\n      console.log(\'组件挂载\');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      console.log(\'组件卸载\');\r\n    });\r\n\r\n    onUpdated(() => {\r\n      console.log(\'组件更新\');\r\n    });\r\n\r\n    onBeforeUpdate(() => {\r\n      console.log(\'组件将要更新\');\r\n    });\r\n\r\n    onActivated(() => {\r\n      console.log(\'keepAlive 组件 激活\');\r\n    });\r\n\r\n    onDeactivated(() => {\r\n      console.log(\'keepAlive 组件 非激活\');\r\n    });\r\n    return {};\r\n  },\r\n\r\n```\r\n\r\n### 三、vue-router\r\n\r\n```javascript\r\nimport { useRoute, useRouter } from "vue-router";\r\n\r\nconst route = useRoute(); // 相当于 vue2 中的this.$route\r\nconst router = useRouter(); // 相当于 vue2 中的this.$router\r\n\r\n// route   用于获取当前路由数据\r\n// router  用于路由跳转\r\n```\r\n\r\n### 四、vuex\r\n\r\n​ **注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应**\r\n\r\n```javascript\r\nimport {useStore} from \'vuex\'\r\n\r\nsetup(){\r\n    const store = useStore(); // 相当于 vue2中的 this.$store\r\n    store.dispatch(); // 通过store对象来dispatch 派发异步任务\r\n    store.commit(); // commit 修改store数据\r\n\r\n    let category = computed(() => store.state.home.currentCagegory\r\n    return { category }\r\n}\r\n\r\n```\r\n\r\n## vue-vite 搭建项目\r\n\r\n::: tip\r\n\r\n```javascript\r\n# 初始化项目\r\nnpm init vite-app vue3-composition-api-demo\r\n# 进入目录\r\ncd vue3-composition-api-demo\r\n# 安装依赖\r\nnpm install\r\n# 运行项目\r\nnpm run dev\r\n\r\n```\r\n\r\n:::\r\n\r\n### 五、setup()\r\n\r\n::: tip\r\nsetup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.\r\n\r\n```javascript\r\nsetup(props, context) {\r\n  // Attributes (Non-reactive object)\r\n  console.log(context.attrs)\r\n\r\n  // Slots (Non-reactive object)\r\n  console.log(context.slots)\r\n\r\n  // Emit Events (Method)\r\n  console.log(context.emit)\r\n}\r\n\r\n```\r\n\r\n:::\r\n\r\n---\r\n\r\n## 日后再更新。\r\n',contentRendered:'<p><strong>阅读本文大概需要10分钟</strong></p>\n\x3c!-- more --\x3e\n<p><strong>先认识代码变动和部分新特性</strong></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="认识重要-api" tabindex="-1"><a class="header-anchor" href="#认识重要-api" aria-hidden="true">#</a> 认识重要 API</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    createApp<span class="token punctuation">,</span>\t\t<span class="token comment">// 创建一个APP实例</span>\n    onMounted<span class="token punctuation">,</span>\t\t<span class="token comment">// 生命周期写法变了</span>\n    computed<span class="token punctuation">,</span>\t\t<span class="token comment">// 方法变了</span>\n    watch<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 同上</span>\n    watchEffect<span class="token punctuation">,</span>\t<span class="token comment">// 新增，立即执行传入一个函数，并响应式追踪依赖，依赖更新，函数重新运行</span>\n    reactive<span class="token punctuation">,</span>\t\t<span class="token comment">// 传入一个普通对象返回一个响应式对象</span>\n    ref<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 接受一个参数值，返回一个响应式且可以改变的ref对象。值需要.value引用</span>\n    toRef<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 为一个reactive对象的属性创建一个ref</span>\n    toRefs<span class="token punctuation">,</span>\t\t\t<span class="token comment">// 把一个响应式对象变成普通对象，转换完可以...解构 (...语法)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="createapp" tabindex="-1"><a class="header-anchor" href="#createapp" aria-hidden="true">#</a> <em>createApp</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">"./App.vue"</span><span class="token punctuation">;</span>\n<span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="onmounted" tabindex="-1"><a class="header-anchor" href="#onmounted" aria-hidden="true">#</a> <em>onMounted</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 使用需要放在setup()里面</span>\n    <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"冲冲冲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> <em>computed</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> count<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 因为count是经过ref处理，ref接受参数1返回一个响应式并可以改变的对象</span>\n<span class="token comment">// 对象的话，是不是对象.value就很好理解下面为什么这样写了？</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> <em>watch</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//reactive 接受一个普通对象，返回一个响应式对象</span>\n<span class="token comment">// state已经是一个响应式对象了，所以取值就是对象.count</span>\n<span class="token function">watch</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>count<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span><span class="token parameter">count<span class="token punctuation">,</span> prevCount</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// todo</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="reactive-单独使用情况" tabindex="-1"><a class="header-anchor" href="#reactive-单独使用情况" aria-hidden="true">#</a> ⭐ <em>reactive 单独使用情况</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\na<span class="token punctuation">.</span>count<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="返回给组件形式一" tabindex="-1"><a class="header-anchor" href="#返回给组件形式一" aria-hidden="true">#</a> 🌟 返回给组件形式一</h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 组件</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> a<span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// 逻辑</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> a <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="返回组件形式二-torefs" tabindex="-1"><a class="header-anchor" href="#返回组件形式二-torefs" aria-hidden="true">#</a> <em>🌟返回组件形式二 &amp; toRefs</em></h4>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">></span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> count <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> toRefs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRefs把响应式对象转为普通对象</span>\n    <span class="token comment">// 再解析一下就是，toRefs是一个解封过程，reactive是封装过程</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token function">toRefs</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> <em>ref</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// ref 接受一个参数，并返回一个响应式且可以改变的对象。</span>\n<span class="token comment">// 同时ref拥有一个指向内部值得单一属性.value</span>\n\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>\n\ncount<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><h3 id="toref" tabindex="-1"><a class="header-anchor" href="#toref" aria-hidden="true">#</a> <em>toRef</em></h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> toRef<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">cow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">bug</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// toRef 为一个reactive对象的属性创建一个ref(响应式对象,能够被传递)</span>\n    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">toRef</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token string">"cow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// 相当于 const count = ref(0)</span>\n    <span class="token comment">// count 已经是cow的响应式对象了，所以值是不是该？</span>\n    count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// 这时a.cow已经被改变了</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>cow<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>\n    <span class="token comment">// 上面这些是不是如果精简一点，就可以不用繁琐的声明再去改变？</span>\n\n    a<span class="token punctuation">.</span>cow<span class="token operator">++</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>\n    <span class="token comment">// 这里是不是能理解ref传递了？</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><hr>\n<h1 id="vue3-整体纵览" tabindex="-1"><a class="header-anchor" href="#vue3-整体纵览" aria-hidden="true">#</a> Vue3 整体纵览</h1>\n<h3 id="一、setup-函数" tabindex="-1"><a class="header-anchor" href="#一、setup-函数" aria-hidden="true">#</a> 一、setup 函数</h3>\n<p>​ <strong>setup 函数是 vue3 所有 api 的入口和出口,setup 函数只执行一次，在生命周期函数前执行，所以在 setup 函数中拿不到当前实例 this，不能用 this 来调用 vue2 写法中定义的方法</strong></p>\n<p>​ <strong>Vue3 去掉了 data 返回的格式，统一再 setup 返回</strong></p>\n<p>​</p>\n<h3 id="二、生命周期" tabindex="-1"><a class="header-anchor" href="#二、生命周期" aria-hidden="true">#</a> 二、生命周期</h3>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>setup() {\n    onMounted(() => {\n      console.log(\'组件挂载\');\n    });\n\n    onUnmounted(() => {\n      console.log(\'组件卸载\');\n    });\n\n    onUpdated(() => {\n      console.log(\'组件更新\');\n    });\n\n    onBeforeUpdate(() => {\n      console.log(\'组件将要更新\');\n    });\n\n    onActivated(() => {\n      console.log(\'keepAlive 组件 激活\');\n    });\n\n    onDeactivated(() => {\n      console.log(\'keepAlive 组件 非激活\');\n    });\n    return {};\n  },\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="三、vue-router" tabindex="-1"><a class="header-anchor" href="#三、vue-router" aria-hidden="true">#</a> 三、vue-router</h3>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute<span class="token punctuation">,</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$route</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2 中的this.$router</span>\n\n<span class="token comment">// route   用于获取当前路由数据</span>\n<span class="token comment">// router  用于路由跳转</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="四、vuex" tabindex="-1"><a class="header-anchor" href="#四、vuex" aria-hidden="true">#</a> 四、vuex</h3>\n<p>​ <strong>注意：vuex 取值时，必须要用 computed 进行包装，这样才能响应</strong></p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>useStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vuex\'</span>\n\n<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 相当于 vue2中的 this.$store</span>\n    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 通过store对象来dispatch 派发异步任务</span>\n    store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// commit 修改store数据</span>\n\n    <span class="token keyword">let</span> category <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>currentCagegory\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> category <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="vue-vite-搭建项目" tabindex="-1"><a class="header-anchor" href="#vue-vite-搭建项目" aria-hidden="true">#</a> vue-vite 搭建项目</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code># 初始化项目\nnpm init vite<span class="token operator">-</span>app vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 进入目录\ncd vue3<span class="token operator">-</span>composition<span class="token operator">-</span>api<span class="token operator">-</span>demo\n# 安装依赖\nnpm install\n# 运行项目\nnpm run dev\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h3 id="五、setup" tabindex="-1"><a class="header-anchor" href="#五、setup" aria-hidden="true">#</a> 五、setup()</h3>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>setup()方法接受 2 个参数，第一个参数 props，顾名思义就是 Vue 的 props。setup()执行时还没有 vue 实例，所以在 setup()函数体内拿不到 data、computed 和 methods，所以需要借助第二个参数 context 拿到 vue 实例相关的数据，其中包含 attrs、slots 和 emit.</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// Attributes (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span>\n\n  <span class="token comment">// Slots (Non-reactive object)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>slots<span class="token punctuation">)</span>\n\n  <span class="token comment">// Emit Events (Method)</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>emit<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><hr>\n<h2 id="日后再更新。" tabindex="-1"><a class="header-anchor" href="#日后再更新。" aria-hidden="true">#</a> 日后再更新。</h2>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3-notes-1.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3笔记"},slug:"Vue3-notes-1",filePath:"/root/blog/blogs/Vue3/Vue3-notes-1.md",filePathRelative:"blogs/Vue3/Vue3-notes-1.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.vue",componentFileChunkName:"v-2b8dfb6e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3-notes-1.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3-notes-1.html.js",dataFileChunkName:"v-2b8dfb6e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3-notes-1.html",htmlFilePathRelative:"blogs/Vue3/Vue3-notes-1.html"}],label:"Vue3"},axios:{pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}],length:1,label:"axios"},"Element-plus":{pages:[{data:{key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+Flask%E6%9E%84%E5%BB%BASPA%E5%BA%94%E7%94%A8.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md"},key:"v-1bfb8d41",path:"/blogs/Vue3/Vue3+FlaskgoujianSPAyingyong.html",title:"Vue3+Flask构建SPA应用",lang:"en-US",frontmatter:{title:"Vue3+Flask构建SPA应用",date:"2021/03/01",tags:["Vue3","flask","axios","Element-plus"],categories:["Vue3"]},excerpt:"<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n",headers:[{level:2,title:"安装所需环境",slug:"安装所需环境",children:[]},{level:2,title:"前端",slug:"前端",children:[]},{level:2,title:"启动测试",slug:"启动测试",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:'\r\n\r\n**快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 安装所需环境\r\n\r\n1. **用[Vite](https://v3.cn.vuejs.org/guide/installation.html#vite)初始化Vue3**\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   $ npm init @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ npm install\r\n   # 下面这一步仅测试\r\n   $ npm run dev\r\n   ```\r\n\r\n   yarn:\r\n\r\n   ```sh\r\n   $ yarn create @vitejs/app 你的项目名字\r\n   $ cd 你的项目名字\r\n   $ yarn\r\n   $ yarn dev\r\n   ```\r\n\r\n2. 添加[Element-plus](https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus)作为组件UI，引用方法为全局，添加axios。\r\n\r\n   npm:\r\n\r\n   ```sh\r\n   npm install element-plus --save\r\n   npm install axios -S\r\n   ```\r\n\r\n   在main.js中写入以下内容\r\n\r\n   ```javascript\r\n   import { createApp } from \'vue\'\r\n   import ElementPlus from \'element-plus\';\r\n   import \'element-plus/lib/theme-chalk/index.css\';\r\n   import axios from "axios";\r\n   import App from \'./App.vue\';\r\n   \r\n   const app = createApp(App)\r\n   app.config.globalProperties.$axios = axios;\r\n   app.use(ElementPlus)\r\n   app.mount(\'#app\')\r\n   ```\r\n\r\n3. 在这个根目录下创建一个main.py文件，准备所需环境\r\n\r\n   ```python\r\n   # 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用\r\n   pipenv install\r\n   pipenv shell\r\n   pipenv install Flask\r\n   ```\r\n\r\n   在main.py文件中写入\r\n\r\n   ```python\r\n   from flask import Flask, render_template,request\r\n   \r\n   app = Flask(__name__, static_folder=\'./dist/assets\', template_folder=\'./dist\')\r\n   \r\n   @app.route(\'/\')\r\n   def index():\r\n       return render_template("index.html")\r\n   \r\n   @app.route(\'/upload\',methods=["POST"])\r\n   def upload():\r\n       data = json.loads(request.data)  \r\n       return \'上传ok\'\r\n   \r\n   if __name__ == \'__main__\':\r\n       # 调试模式\r\n       app.run(debug=True)\r\n   ```\r\n\r\n   **到此，准备工作和flask代码编写的任务算结束了**\r\n\r\n\r\n\r\n## 前端\r\n\r\n任务算是很简单，仅改变小部分代码\r\n\r\n1. App.vue\r\n\r\n```javascript\r\n// <template>代码如下\r\n\r\n<template>\r\n    // 这个容器模块相当于把页面分为了header和main上下两个区域\r\n  <el-container>\r\n    <el-header><img alt="logo" src="./assets/logo.png" /></el-header>\r\n    <el-main class="main">\r\n        // main里藏着我们的小组件\r\n      <defineComponent />\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n```\r\n\r\n```javascript\r\n<script setup>\r\nimport defineComponent from "./components/default.vue";\r\n<\/script>\r\n\r\n<style>\r\n    ...\r\n\t// 这里main的样式仅是居中罢了\r\n\t.main {\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n```\r\n\r\n 2. src/components/有一个hello？.vue，我把它改名成了default.vue\r\n\r\n    ```javascript\r\n    // template代码\r\n    <template>\r\n        // el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列\r\n        // 说白了就是这一行的组件居中\r\n        <el-row :gutter="20">\r\n        <el-col :span="12" :offset="6">\r\n            <el-button type="primary" @click="onSubmit">上传</el-button>\r\n          </el-col>\r\n      </el-row>\r\n    </template>\r\n    ```\r\n\r\n    ```javascript\r\n    <script>\r\n    import { defineComponent, ref } from "vue";\r\n    import { ElMessage } from "element-plus";\r\n    export default defineComponent({\r\n     methods: {\r\n        onSubmit() {\r\n            // 全局引用axios\r\n          this.$axios\r\n            // 发送post请求到flask建立的api\r\n            .post("http://127.0.0.1:5000/upload")\r\n            .then((res) => {\r\n              // 把flask的响应数据通过控制台log出来\r\n              console.log(res.data);\r\n              // 弹窗success\r\n              ElMessage.success({\r\n                message: "恭喜你，这是一条成功消息" + res.data,\r\n                type: "success",\r\n              });\r\n            });\r\n        },\r\n      },\r\n    \r\n    })\r\n    <\/script>\r\n    ```\r\n\r\n    3. **打包build**\r\n\r\n       ```sh\r\n       npm run build\r\n       ```\r\n\r\n       **执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了**\r\n\r\n\r\n\r\n## 启动测试\r\n\r\n\r\n\r\n1. 使用虚拟环境运行main.py\r\n\r\n   ```sh\r\n   # 在pipenv shell\r\n   python3 main.py\r\n   ```\r\n\r\n   **看到开启debug和并且网站在[127.0.0.1](http://127.0.0.1)中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标**\r\n\r\n\r\n\r\n## 小结\r\n\r\n这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，**然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书**',contentRendered:'<p><strong>快速搭建一个简单的由Vue3提供的frontend和flask提供后端的SPA(单页面应用)，用vscode即可完成，有任何问题可以邮箱或者其他联系方式提问，评论区等有空再弄。</strong></p>\n\x3c!-- more --\x3e\n<h2 id="安装所需环境" tabindex="-1"><a class="header-anchor" href="#安装所需环境" aria-hidden="true">#</a> 安装所需环境</h2>\n<ol>\n<li>\n<p><strong>用<a href="https://v3.cn.vuejs.org/guide/installation.html#vite" target="_blank" rel="noopener noreferrer">Vite<ExternalLinkIcon/></a>初始化Vue3</strong></p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">npm</span> init @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">npm</span> <span class="token function">install</span>\n<span class="token comment"># 下面这一步仅测试</span>\n$ <span class="token function">npm</span> run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>yarn:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>$ <span class="token function">yarn</span> create @vitejs/app 你的项目名字\n$ <span class="token builtin class-name">cd</span> 你的项目名字\n$ <span class="token function">yarn</span>\n$ <span class="token function">yarn</span> dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li>\n<li>\n<p>添加<a href="https://element-plus.org/#/zh-CN/component/quickstart#yin-ru-element-plus" target="_blank" rel="noopener noreferrer">Element-plus<ExternalLinkIcon/></a>作为组件UI，引用方法为全局，添加axios。</p>\n<p>npm:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> element-plus --save\n<span class="token function">npm</span> <span class="token function">install</span> axios -S\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在main.js中写入以下内容</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'vue\'</span>\n<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">\'element-plus\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'element-plus/lib/theme-chalk/index.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">"axios"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">\'./App.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$axios <span class="token operator">=</span> axios<span class="token punctuation">;</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">\'#app\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n<li>\n<p>在这个根目录下创建一个main.py文件，准备所需环境</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token comment"># 强烈建议使用pipenv，在虚拟环境中安装依赖，下面是在虚拟环境中使用</span>\npipenv install\npipenv shell\npipenv install Flask\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在main.py文件中写入</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span>request\n\napp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">,</span> static_folder<span class="token operator">=</span><span class="token string">\'./dist/assets\'</span><span class="token punctuation">,</span> template_folder<span class="token operator">=</span><span class="token string">\'./dist\'</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span>\n\n<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">\'/upload\'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"POST"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>request<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  \n    <span class="token keyword">return</span> <span class="token string">\'上传ok\'</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">\'__main__\'</span><span class="token punctuation">:</span>\n    <span class="token comment"># 调试模式</span>\n    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>到此，准备工作和flask代码编写的任务算结束了</strong></p>\n</li>\n</ol>\n<h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端" aria-hidden="true">#</a> 前端</h2>\n<p>任务算是很简单，仅改变小部分代码</p>\n<ol>\n<li>App.vue</li>\n</ol>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// &lt;template>代码如下</span>\n\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// 这个容器模块相当于把页面分为了header和main上下两个区域</span>\n  <span class="token operator">&lt;</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>header<span class="token operator">></span><span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"logo"</span> src<span class="token operator">=</span><span class="token string">"./assets/logo.png"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>header<span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"main"</span><span class="token operator">></span>\n        <span class="token comment">// main里藏着我们的小组件</span>\n      <span class="token operator">&lt;</span>defineComponent <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>main<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>container<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">></span>\n<span class="token keyword">import</span> defineComponent <span class="token keyword">from</span> <span class="token string">"./components/default.vue"</span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n\n<span class="token operator">&lt;</span>style<span class="token operator">></span>\n    <span class="token operator">...</span>\n\t<span class="token comment">// 这里main的样式仅是居中罢了</span>\n\t<span class="token punctuation">.</span>main <span class="token punctuation">{</span>\n  <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol start="2">\n<li>\n<p>src/components/有一个hello？.vue，我把它改名成了default.vue</p>\n<div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token comment">// template代码</span>\n<span class="token operator">&lt;</span>template<span class="token operator">></span>\n    <span class="token comment">// el-row 行，el-col列，一共24列，参数：意思占12列，左右间隔6列</span>\n    <span class="token comment">// 说白了就是这一行的组件居中</span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>row <span class="token operator">:</span>gutter<span class="token operator">=</span><span class="token string">"20"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>el<span class="token operator">-</span>col <span class="token operator">:</span>span<span class="token operator">=</span><span class="token string">"12"</span> <span class="token operator">:</span>offset<span class="token operator">=</span><span class="token string">"6"</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>el<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> @click<span class="token operator">=</span><span class="token string">"onSubmit"</span><span class="token operator">></span>上传<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>col<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>row<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre v-pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"element-plus"</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 全局引用axios</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$axios\n        <span class="token comment">// 发送post请求到flask建立的api</span>\n        <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:5000/upload"</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// 把flask的响应数据通过控制台log出来</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token comment">// 弹窗success</span>\n          ElMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">"恭喜你，这是一条成功消息"</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="3">\n<li>\n<p><strong>打包build</strong></p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token function">npm</span> run build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>执行后项目目录会多出来一个dist文件夹，请确保main.py文件是和dist文件夹同一级目录,前端就算是完成任务了</strong></p>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id="启动测试" tabindex="-1"><a class="header-anchor" href="#启动测试" aria-hidden="true">#</a> 启动测试</h2>\n<ol>\n<li>\n<p>使用虚拟环境运行main.py</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code><span class="token comment"># 在pipenv shell</span>\npython3 main.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>看到开启debug和并且网站在<a href="http://127.0.0.1" target="_blank" rel="noopener noreferrer">127.0.0.1<ExternalLinkIcon/></a>中运行，在页面中点击按钮，此时main.py程序收到访问，并且页面出现success弹窗，F12控制台能看到日志，恭喜大家完成一个小目标</strong></p>\n</li>\n</ol>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>这个项目很基础很基础，相当于前后端分离的一个小项目，大家可以自己多琢磨，添加不同的东西，这样子才是学习的动力，<strong>然后本篇中，详细解释的地方很少，节约时间，节约生命，毕竟我不能当大家的教科书</strong></p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/Vue3/Vue3+Flask构建SPA应用.html",pathLocale:"/",permalink:null,routeMeta:{title:"Vue3+Flask构建SPA应用"},slug:"Vue3+Flask构建SPA应用",filePath:"/root/blog/blogs/Vue3/Vue3+Flask构建SPA应用.md",filePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.vue",componentFileChunkName:"v-1bfb8d41",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFilePathRelative:"pages/blogs/Vue3/Vue3+Flask构建SPA应用.html.js",dataFileChunkName:"v-1bfb8d41",htmlFilePath:"/root/blog/.vuepress/dist/blogs/Vue3/Vue3+Flask构建SPA应用.html",htmlFilePathRelative:"blogs/Vue3/Vue3+Flask构建SPA应用.html"}],length:1,label:"Element-plus"},loguru:{pages:[{data:{key:"v-1882f77b",path:"/blogs/tech/loguru%E6%97%A5%E5%BF%97%E5%AD%A6%E4%B9%A0.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],git:{},filePathRelative:"blogs/tech/loguru日志学习.md"},key:"v-1882f77b",path:"/blogs/tech/logururizhixuexi.html",title:"更加人性化的python日志记录工具-loguru",lang:"en-US",frontmatter:{title:"更加人性化的python日志记录工具-loguru",date:"2021/02/26",tags:["python","loguru"],categories:["tech"]},excerpt:"<p><strong>本文阅读大概需要3分钟</strong></p>\n",headers:[{level:2,title:"简介",slug:"简介",children:[]},{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"使用",slug:"使用",children:[]},{level:2,title:"小结",slug:"小结",children:[]}],content:"\r\n**本文阅读大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n## 简介\r\n\r\n[loguru](https://github.com/Delgan/loguru)是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。\r\n\r\n\r\n\r\n## 安装\r\n\r\n**强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离**\r\n\r\n``````python\r\npip install loguru\r\n``````\r\n\r\n\r\n\r\n\r\n\r\n## 使用\r\n\r\n初步体验：\r\n\r\n**loguru封装好了logger，全局使用**\r\n\r\n``````python\r\nfrom loguru import logger\r\nlogger.info(\"可以用了!\")\r\n``````\r\n\r\n**进阶设置:**\r\n\r\n日志想必要有文件记录，而不是像`print`打印出来就完事，所以要设置入口规范，**一次设置，轻松简便**\r\n\r\n```python\r\nfrom loguru import logger\r\nlogger.add('error.txt',roration='10MB',encoding='utf-8',enqueue=True, compression='zip')\r\n\r\nlogger.debug('调试消息')\r\nlogger.info('普通消息')\r\nlogger.warning('警告消息')\r\nlogger.error('错误消息')\r\nlogger.critical('严重错误消息')\r\nlogger.success('成功调用')\r\n```\r\n\r\n![样式](https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png)\r\n\r\n- `roration`限制日志的大小或者以时间单位更新\r\n\r\n  ```python\r\n  logger.add(\"file_1.log\", rotation=\"500 MB\")  # 自动循环过大的文件\r\n  logger.add(\"file_2.log\", rotation=\"12:00\")  # 每天中午创建新文件\r\n  logger.add(\"file_3.log\", rotation=\"1 week\")  # 一旦文件太旧进行循环\r\n  ```\r\n\r\n- `encoding` 编码形式\r\n\r\n- `enqueue=True` 运行异步\r\n\r\n- `compression` 压缩形式支持zip、tar、gz，对于linux友好\r\n\r\n- **`比较重要的filter`**\r\n\r\n  ```python\r\n  from loguru import logger\r\n  \r\n  logger.add(\"logs/jobs-info-{time:YYYY-MM-DD}.log\", filter=lambda record: \"INFO\" in record['level'].name)\r\n  logger.add(\"logs/jobs-error-{time:YYYY-MM-DD}.log\", filter=lambda record: \"ERROR\" in record['level'].name)\r\n  ```\r\n\r\n  INFO 级别的日志会存入 `logs/jobs-info-2021-02-22.log` 文件\r\n  ERROR 级别的文件则会存入 `logs/jobs-error-2021-02-22.log` 文件\r\n\r\n- 时间格式\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  logger.add('file.log', format='{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}', encoding='utf-8')\r\n  logger.debug('调试消息')\r\n  ```\r\n\r\n  ```\r\n  2021-02-22 17:18:08 | DEBUG | 调试消息\r\n  ```\r\n\r\n- 装饰器\r\n\r\n  ```\r\n  from loguru import logger\r\n  \r\n  \r\n  @logger.catch\r\n  def func(x, y, z):\r\n      return 1 / (x + y + z)\r\n  \r\n  \r\n  if __name__ == '__main__':\r\n      func(0, 1, -1)\r\n  ```\r\n\r\n  \r\n\r\n## 小结\r\n\r\nloguru规范好，还是很好用和维护的。",contentRendered:'<p><strong>本文阅读大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2>\n<p><a href="https://github.com/Delgan/loguru" target="_blank" rel="noopener noreferrer">loguru<ExternalLinkIcon/></a>是比较人性化的python日志记录工具，没有那么多繁琐的配置，整体上设置好入口规范就可以轻松使用。</p>\n<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>\n<p><strong>强烈要求大家使用pipenv等虚拟环境来管理依赖，达成依赖隔离</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>pip install loguru\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2>\n<p>初步体验：</p>\n<p><strong>loguru封装好了logger，全局使用</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"可以用了!"</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>进阶设置:</strong></p>\n<p>日志想必要有文件记录，而不是像<code>print</code>打印出来就完事，所以要设置入口规范，<strong>一次设置，轻松简便</strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">\'error.txt\'</span><span class="token punctuation">,</span>roration<span class="token operator">=</span><span class="token string">\'10MB\'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">\'utf-8\'</span><span class="token punctuation">,</span>enqueue<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> compression<span class="token operator">=</span><span class="token string">\'zip\'</span><span class="token punctuation">)</span>\n\nlogger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">\'调试消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">\'普通消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string">\'警告消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">\'错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>critical<span class="token punctuation">(</span><span class="token string">\'严重错误消息\'</span><span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string">\'成功调用\'</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="https://raw.githubusercontent.com/googidaddy/img/master/loguru_sample.png" alt="样式"></p>\n<ul>\n<li>\n<p><code>roration</code>限制日志的大小或者以时间单位更新</p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code>logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_1.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"500 MB"</span><span class="token punctuation">)</span>  <span class="token comment"># 自动循环过大的文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_2.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"12:00"</span><span class="token punctuation">)</span>  <span class="token comment"># 每天中午创建新文件</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"file_3.log"</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token string">"1 week"</span><span class="token punctuation">)</span>  <span class="token comment"># 一旦文件太旧进行循环</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p><code>encoding</code> 编码形式</p>\n</li>\n<li>\n<p><code>enqueue=True</code> 运行异步</p>\n</li>\n<li>\n<p><code>compression</code> 压缩形式支持zip、tar、gz，对于linux友好</p>\n</li>\n<li>\n<p><strong><code>比较重要的filter</code></strong></p>\n<div class="language-python ext-py line-numbers-mode"><pre v-pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger\n\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-info-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"INFO"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\nlogger<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"logs/jobs-error-{time:YYYY-MM-DD}.log"</span><span class="token punctuation">,</span> <span class="token builtin">filter</span><span class="token operator">=</span><span class="token keyword">lambda</span> record<span class="token punctuation">:</span> <span class="token string">"ERROR"</span> <span class="token keyword">in</span> record<span class="token punctuation">[</span><span class="token string">\'level\'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>INFO 级别的日志会存入 <code>logs/jobs-info-2021-02-22.log</code> 文件\nERROR 级别的文件则会存入 <code>logs/jobs-error-2021-02-22.log</code> 文件</p>\n</li>\n<li>\n<p>时间格式</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\nlogger.add(\'file.log\', format=\'{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}\', encoding=\'utf-8\')\nlogger.debug(\'调试消息\')\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>2021-02-22 17:18:08 | DEBUG | 调试消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li>\n<li>\n<p>装饰器</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>from loguru import logger\n\n\n@logger.catch\ndef func(x, y, z):\n    return 1 / (x + y + z)\n\n\nif __name__ == \'__main__\':\n    func(0, 1, -1)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li>\n</ul>\n<h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2>\n<p>loguru规范好，还是很好用和维护的。</p>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/loguru日志学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"更加人性化的python日志记录工具-loguru"},slug:"loguru日志学习",filePath:"/root/blog/blogs/tech/loguru日志学习.md",filePathRelative:"blogs/tech/loguru日志学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.vue",componentFilePathRelative:"pages/blogs/tech/loguru日志学习.html.vue",componentFileChunkName:"v-1882f77b",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/loguru日志学习.html.js",dataFilePathRelative:"pages/blogs/tech/loguru日志学习.html.js",dataFileChunkName:"v-1882f77b",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/loguru日志学习.html",htmlFilePathRelative:"blogs/tech/loguru日志学习.html"}],length:1,label:"loguru"},redis:{pages:[{data:{key:"v-6a09dd9e",path:"/blogs/tech/docker%E5%AE%89%E8%A3%85redis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],git:{},filePathRelative:"blogs/tech/docker安装redis.md"},key:"v-6a09dd9e",path:"/blogs/tech/dockeranzhuangredis.html",title:"Docker安装Redis",lang:"en-US",frontmatter:{title:"Docker安装Redis",date:"2021/02/07",tags:["docker","redis","centos"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要6分钟</strong></p>\n",headers:[{level:2,title:"一、安装Docker(centos)",slug:"一、安装docker-centos",children:[]},{level:2,title:"二、实战安装Redis",slug:"二、实战安装redis",children:[]},{level:2,title:"三、Docker基本命令",slug:"三、docker基本命令",children:[]}],content:'\r\n**阅读本文大概需要6分钟**\r\n\x3c!-- more --\x3e\r\n\r\n\r\n## 一、安装Docker(centos)\r\n\r\n::: tip\r\n\r\n来自[官网](https://docs.docker.com/engine/install/centos/)的力量！\r\n\r\n1. 安装依赖包\r\n\r\n   ```sudo yum install -y yum-utils```\r\n\r\n2. 添加yum软件源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://download.docker.com/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n    （可选）国内源\r\n\r\n   ```sudo yum-config-manager \\\r\n   sudo yum-config-manager \\\r\n       --add-repo \\\r\n       https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\r\n   ```\r\n\r\n   \r\n\r\n3. 安装docker核心\r\n\r\n   ```sudo yum install docker-ce docker-ce-cli containerd.io```\r\n\r\n   \r\n\r\n4. 运行docker\r\n\r\n   设置开机自启动\r\n\r\n   ```sudo systemctl enable docker```\r\n\r\n   \r\n\r\n   运行docker\r\n\r\n   ```sudo systemctl start docker```\r\n\r\n   \r\n\r\n5. 测试docker是否安装好\r\n\r\n   下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。\r\n\r\n   ```sudo docker run hello-world```\r\n\r\n   \r\n\r\n:::\r\n\r\n\r\n\r\n## 二、实战安装Redis\r\n\r\n::: tip\r\n\r\n**个人十分建议以这种方式来安装Redis，没错！我在教你做事**\r\n\r\n1. **<u>下载镜像</u>**\r\n\r\n   ```docker pull redis```\r\n\r\n   \r\n\r\n2. **<u>执行镜像</u>**\r\n\r\n   创建一个容器来执行镜像，容器名字 指定端口和背景运行\r\n\r\n   ```docker run --name redis-lab -p 6379:6379 -d redis```\r\n\r\n3. <u>**检查容器**</u>\r\n\r\n   ```docker ps```\r\n\r\n   **从镜像到容器的过程.**\r\n\r\n   ![container](https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png)\r\n\r\n4. **<u>测试redis</u>**\r\n\r\n   经过`docker ps`查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开\r\n\r\n   ```\r\n   docker exec -it e819 bash\r\n   ```\r\n\r\n   ```\r\n   // 测试\r\n   redis-cli\r\n   // 系统会进入到127.0.0.1:6379内\r\n   ```\r\n\r\n   ```\r\n   ping\r\n   //pong\r\n   ```\r\n\r\n   ```\r\n   // 测试get/set\r\n   set test "hello world"\r\n   ```\r\n\r\n   ```\r\n   get test\r\n   // hello world\r\n   ```\r\n\r\n   **完整测试过程**\r\n\r\n   ![test_redis](https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png)\r\n\r\n\r\n\r\n:::\r\n\r\n## 三、Docker基本命令\r\n\r\n**对于初学者来说，docker用到的命令并不多，遵循着不变的启动->暂停->删除 or 恢复启动**\r\n\r\n1. 镜像操作(包含容器)\r\n\r\n   **拉取镜像**\r\n\r\n   `docker pull 某镜像`\r\n\r\n   **查看镜像**\r\n\r\n   `docker images`\r\n\r\n   **删除镜像**\r\n\r\n   **先查看目前拥有的镜像记好id**\r\n\r\n   **一步一步来**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   **假如你有容器在运行这个镜像**\r\n\r\n   ```\r\n   // 查看在运行容器\r\n   docker ps\r\n   ```\r\n\r\n   **有在运行的容器，需要先暂停**\r\n\r\n   ```\r\n    [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\r\n   ```\r\n\r\n   **删除该容器（记录容器前四位id**\r\n\r\n   ```\r\n   [[email protected] dock]# docker rm 28c8\r\n   28c8\r\n   ```\r\n\r\n   **没有在运行的容器**\r\n\r\n   ```\r\n   docker ps -a\r\n   //查看所有的容器（包括没有运行\r\n   ```\r\n\r\n   ```\r\n   docker rm 有要删除的镜像的容器id\r\n   ```\r\n\r\n   **确保确保删光了有该镜像的容器**\r\n\r\n   **<u>再来删除镜像</u>**\r\n\r\n   ```\r\n   // 确定你一个容器都没有\r\n   docker rmi 镜像id\r\n   ```\r\n\r\n   \r\n\r\n',contentRendered:'<p><strong>阅读本文大概需要6分钟</strong></p>\n\x3c!-- more --\x3e\n<h2 id="一、安装docker-centos" tabindex="-1"><a class="header-anchor" href="#一、安装docker-centos" aria-hidden="true">#</a> 一、安装Docker(centos)</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>来自<a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">官网<ExternalLinkIcon/></a>的力量！</p>\n<ol>\n<li>\n<p>安装依赖包</p>\n<p><code>sudo yum install -y yum-utils</code></p>\n</li>\n<li>\n<p>添加yum软件源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>（可选）国内源</p>\n<div class="language-sudo ext-sudo line-numbers-mode"><pre v-pre class="language-sudo"><code>sudo yum-config-manager \\\n    --add-repo \\\n    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>\n<li>\n<p>安装docker核心</p>\n<p><code>sudo yum install docker-ce docker-ce-cli containerd.io</code></p>\n</li>\n<li>\n<p>运行docker</p>\n<p>设置开机自启动</p>\n<p><code>sudo systemctl enable docker</code></p>\n<p>运行docker</p>\n<p><code>sudo systemctl start docker</code></p>\n</li>\n<li>\n<p>测试docker是否安装好</p>\n<p>下面这个命令会拉一遍helloworld这个仓库，成功的结果大家能知道的。</p>\n<p><code>sudo docker run hello-world</code></p>\n</li>\n</ol>\n</div><h2 id="二、实战安装redis" tabindex="-1"><a class="header-anchor" href="#二、实战安装redis" aria-hidden="true">#</a> 二、实战安装Redis</h2>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>个人十分建议以这种方式来安装Redis，没错！我在教你做事</strong></p>\n<ol>\n<li>\n<p><strong><u>下载镜像</u></strong></p>\n<p><code>docker pull redis</code></p>\n</li>\n<li>\n<p><strong><u>执行镜像</u></strong></p>\n<p>创建一个容器来执行镜像，容器名字 指定端口和背景运行</p>\n<p><code>docker run --name redis-lab -p 6379:6379 -d redis</code></p>\n</li>\n<li>\n<p><u><strong>检查容器</strong></u></p>\n<p><code>docker ps</code></p>\n<p><strong>从镜像到容器的过程.</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/CIT7YQ5GU2xScm6.png" alt="container"></p>\n</li>\n<li>\n<p><strong><u>测试redis</u></strong></p>\n<p>经过<code>docker ps</code>查询到容器的id，前四位，exec方式进入容器内部，bash命令行打开</p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker exec -it e819 bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试\nredis-cli\n// 系统会进入到127.0.0.1:6379内\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>ping\n//pong\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 测试get/set\nset test "hello world"\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>get test\n// hello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>完整测试过程</strong></p>\n<p><img src="https://i.loli.net/2021/02/07/Z8wfAak5uDo73Ee.png" alt="test_redis"></p>\n</li>\n</ol>\n</div><h2 id="三、docker基本命令" tabindex="-1"><a class="header-anchor" href="#三、docker基本命令" aria-hidden="true">#</a> 三、Docker基本命令</h2>\n<p><strong>对于初学者来说，docker用到的命令并不多，遵循着不变的启动-&gt;暂停-&gt;删除 or 恢复启动</strong></p>\n<ol>\n<li>\n<p>镜像操作(包含容器)</p>\n<p><strong>拉取镜像</strong></p>\n<p><code>docker pull 某镜像</code></p>\n<p><strong>查看镜像</strong></p>\n<p><code>docker images</code></p>\n<p><strong>删除镜像</strong></p>\n<p><strong>先查看目前拥有的镜像记好id</strong></p>\n<p><strong>一步一步来</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>假如你有容器在运行这个镜像</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 查看在运行容器\ndocker ps\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>有在运行的容器，需要先暂停</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code> [[email protected] dock]# docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES28c830652ec9        centos:latest       "/bin/bash"         25 minutes ago      Up 2 seconds                            thirsty_albattani   [[email protected] dock]# docker stop 28c828c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>删除该容器（记录容器前四位id</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>[[email protected] dock]# docker rm 28c8\n28c8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>没有在运行的容器</strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker ps -a\n//查看所有的容器（包括没有运行\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>docker rm 有要删除的镜像的容器id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>确保确保删光了有该镜像的容器</strong></p>\n<p><strong><u>再来删除镜像</u></strong></p>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>// 确定你一个容器都没有\ndocker rmi 镜像id\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li>\n</ol>\n',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/docker安装redis.html",pathLocale:"/",permalink:null,routeMeta:{title:"Docker安装Redis"},slug:"docker安装redis",filePath:"/root/blog/blogs/tech/docker安装redis.md",filePathRelative:"blogs/tech/docker安装redis.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.vue",componentFilePathRelative:"pages/blogs/tech/docker安装redis.html.vue",componentFileChunkName:"v-6a09dd9e",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/docker安装redis.html.js",dataFilePathRelative:"pages/blogs/tech/docker安装redis.html.js",dataFileChunkName:"v-6a09dd9e",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/docker安装redis.html",htmlFilePathRelative:"blogs/tech/docker安装redis.html"}],length:1,label:"redis"},npmdaili:{pages:[{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}],length:1,label:"npm代理"},yarndaili:{pages:[{data:{key:"v-6e0b52ce",path:"/blogs/notes/npm%E5%92%8Cyarn%E6%97%A0%E6%B3%95connect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],git:{},filePathRelative:"blogs/notes/npm和yarn无法connect.md"},key:"v-6e0b52ce",path:"/blogs/notes/npmheyarnwufaconnect.html",title:"关于npm和yarn代理配置",lang:"en-US",frontmatter:{title:"关于npm和yarn代理配置",date:"2021/01/27",tags:["npm代理","yarn代理"],categories:["notes"]},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n",headers:[{level:2,title:"关于安装依赖Connect ERROR",slug:"关于安装依赖connect-error",children:[]},{level:2,title:"npm更换源(淘宝源)",slug:"npm更换源-淘宝源",children:[]},{level:2,title:"yarn更换源(淘宝源)",slug:"yarn更换源-淘宝源",children:[]}],content:"\r\n**阅读本文大概需要1分钟**\r\n\x3c!-- more --\x3e\r\n\r\n***\r\n## 关于安装依赖Connect ERROR\r\n```\r\nconnect ECONNREFUSED xxx.xxx.xxx:443 \r\n```\r\n\r\n**这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的**\r\n<br>\r\n\r\n## npm更换源(淘宝源)\r\n```\r\nnpm config set registry https://registry.npm.taobao.org --global\r\n\r\nnpm config set disturl https://npm.taobao.org/dist --global\r\n```\r\n\r\n## yarn更换源(淘宝源)\r\n```\r\nyarn config set registry https://registry.npm.taobao.org --global\r\n\r\nyarn config set disturl https://npm.taobao.org/dist --global\r\n```",contentRendered:'<p><strong>阅读本文大概需要1分钟</strong></p>\n\x3c!-- more --\x3e\n<hr>\n<h2 id="关于安装依赖connect-error" tabindex="-1"><a class="header-anchor" href="#关于安装依赖connect-error" aria-hidden="true">#</a> 关于安装依赖Connect ERROR</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>connect ECONNREFUSED xxx.xxx.xxx:443 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>这个问题在国内一般搜来的问题基本都是让你更换npm配置，但是却不带上yarn的更换，所以这蛮坑人的</strong>\n<br></p>\n<h2 id="npm更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#npm更换源-淘宝源" aria-hidden="true">#</a> npm更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>npm config set registry https://registry.npm.taobao.org --global\n\nnpm config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="yarn更换源-淘宝源" tabindex="-1"><a class="header-anchor" href="#yarn更换源-淘宝源" aria-hidden="true">#</a> yarn更换源(淘宝源)</h2>\n<div class="language-text ext-text line-numbers-mode"><pre v-pre class="language-text"><code>yarn config set registry https://registry.npm.taobao.org --global\n\nyarn config set disturl https://npm.taobao.org/dist --global\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/notes/npm和yarn无法connect.html",pathLocale:"/",permalink:null,routeMeta:{title:"关于npm和yarn代理配置"},slug:"npm和yarn无法connect",filePath:"/root/blog/blogs/notes/npm和yarn无法connect.md",filePathRelative:"blogs/notes/npm和yarn无法connect.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.vue",componentFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.vue",componentFileChunkName:"v-6e0b52ce",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/notes/npm和yarn无法connect.html.js",dataFilePathRelative:"pages/blogs/notes/npm和yarn无法connect.html.js",dataFileChunkName:"v-6e0b52ce",htmlFilePath:"/root/blog/.vuepress/dist/blogs/notes/npm和yarn无法connect.html",htmlFilePathRelative:"blogs/notes/npm和yarn无法connect.html"}],length:1,label:"yarn代理"},"vuepress-reco/them-cli":{pages:[{data:{key:"v-e3b887da",path:"/blogs/tech/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],git:{},filePathRelative:"blogs/tech/第一篇博客学习.md"},key:"v-e3b887da",path:"/blogs/tech/diyipianbokexuexi.html",title:"第一篇踩坑@vuepress-reco/theme-cli",lang:"en-US",frontmatter:{title:"第一篇踩坑@vuepress-reco/theme-cli",date:"2020/12/06",tags:["vuepress-reco/them-cli"],categories:["tech"]},excerpt:"<p><strong>阅读本文大概需要3分钟</strong></p>\n",headers:[],content:'\r\n**阅读本文大概需要3分钟**\r\n\x3c!-- more --\x3e\r\n\r\n::: tip\r\n\r\n前期\r\n\r\n```json\r\n# 初始化 最好不要用全局安装（yarn 未收录)\r\nnpm install @vuepress-reco/theme-cli\r\ntheme-cli init\r\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\r\n# 然后是输入名字、描述、作者名字\r\n# 选择blog和doc无大区别我选择blog\r\n\r\n# 安装\r\nnpm install\r\n\r\n# 运行(等加载完,点开localhost那个链接就可以看到自己的网站，帅不帅？)\r\nnpm run dev\r\n```\r\n\r\n:::\r\n\r\n::: tip\r\n\r\n部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！\r\n\r\n\r\n```json\r\n# 创建github仓库,网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\r\n# 则不需要设置base属性，把.vuepress\\config.js的"dest":"public"删除\r\n# 删除的目的是：打包在默认的dist文件夹.\r\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\r\n\r\n"base":"/你仓库的名字/",\r\n\r\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\r\n\r\nnpm run build\r\n\r\n# 这时候.vuepress文件夹会多出一个dist文件夹\r\n\r\ncd .vuepress\\dist\r\n\r\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\r\n\r\ngit init\r\ngit add .\r\ngit commit -m "deploy"\r\ngit push\r\ngit remote add origin 你项目地址(https)\r\ngit push -u origin master -f\r\n# 这个push 会创建一个master分支，进入仓库 setting\r\n```\r\n\r\n然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了\r\n\r\n:::\r\n\r\n# 关于目录结构\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84.png)\r\n\r\n::: tip\r\n\r\n一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？\r\n\r\n> dist是运行了`npm run build`所产生的目录，没必要动它\r\n>\r\n> blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类\r\n\r\n![](https://cdn.jsdelivr.net/gh/googidaddy/img/img/%E4%BB%A3%E7%A0%81.png)\r\n\r\n> docs是导航栏的docs里面写的文章不用写类别会自动归类到docs\r\n\r\n**基本就这样了!**\r\n\r\n:::',contentRendered:'<p><strong>阅读本文大概需要3分钟</strong></p>\n\x3c!-- more --\x3e\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>前期</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 初始化 最好不要用全局安装（yarn 未收录)\nnpm install @vuepress-reco/theme-cli\ntheme-cli init\n# 上面这条打完之后第一个翻译是要不要新建一个文件夹，输入n（也就是不\n# 然后是输入名字、描述、作者名字\n# 选择blog和doc无大区别我选择blog\n\n# 安装\nnpm install\n\n# 运行(等加载完<span class="token punctuation">,</span>点开localhost那个链接就可以看到自己的网站，帅不帅？)\nnpm run dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>部署到 Github Pages 的方式有两种，一种是自动化，一种是打工人的灵魂（自己动手），当然！为了更好理解！</p>\n<div class="language-json ext-json line-numbers-mode"><pre v-pre class="language-json"><code># 创建github仓库<span class="token punctuation">,</span>网上有几种设置base的，如果你是用github用户名.github.io作为仓库名\n# 则不需要设置base属性，把.vuepress\\config.js的<span class="token property">"dest"</span><span class="token operator">:</span><span class="token string">"public"</span>删除\n# 删除的目的是：打包在默认的dist文件夹.\n# 如果是起一个名字作为仓库，同样删除这个public一行，还需要另外加上\n\n<span class="token property">"base"</span><span class="token operator">:</span><span class="token string">"/你仓库的名字/"</span><span class="token punctuation">,</span>\n\n# 部署(不需要提前拉仓库，拉了仓库到本地也没事，包括你项目就在仓库本地)\n\nnpm run build\n\n# 这时候.vuepress文件夹会多出一个dist文件夹\n\ncd .vuepress\\dist\n\n# Github Pages是通过你push这个dist才能识别的。每次push都记得cd到这个dist，这个dist文件夹是生产环境！如果你的项目就是在仓库就不需要第四行代码建立关系，后续会填加上自动脚本，手动先体验灵魂，\n\ngit init\ngit add .\ngit commit -m <span class="token string">"deploy"</span>\ngit push\ngit remote add origin 你项目地址(https)\ngit push -u origin master -f\n# 这个push 会创建一个master分支，进入仓库 setting\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>然后滚轮滚到下面，找到 GitHub Pages 选择 master 分支然后 save 就行了</p>\n</div><h1 id="关于目录结构" tabindex="-1"><a class="header-anchor" href="#关于目录结构" aria-hidden="true">#</a> 关于目录结构</h1>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/项目结构.png" alt=""></p>\n<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>一般搜索的网络教学关于目录结构都是通篇给一个结构树图，能有几个一眼看懂不疑惑？</p>\n<blockquote>\n<p>dist是运行了<code>npm run build</code>所产生的目录，没必要动它</p>\n<p>blogs目录放你想写的.md文件，随意新建文件夹自己分类别，文章里tags或者categories写好就会自行分类</p>\n</blockquote>\n<p><img src="https://cdn.jsdelivr.net/gh/googidaddy/img/img/代码.png" alt=""></p>\n<blockquote>\n<p>docs是导航栏的docs里面写的文章不用写类别会自动归类到docs</p>\n</blockquote>\n<p><strong>基本就这样了!</strong></p>\n</div>',date:"0000-00-00",deps:[],hoistedTags:[],links:[],pathInferred:"/blogs/tech/第一篇博客学习.html",pathLocale:"/",permalink:null,routeMeta:{title:"第一篇踩坑@vuepress-reco/theme-cli"},slug:"第一篇博客学习",filePath:"/root/blog/blogs/tech/第一篇博客学习.md",filePathRelative:"blogs/tech/第一篇博客学习.md",componentFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.vue",componentFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.vue",componentFileChunkName:"v-e3b887da",dataFilePath:"/root/blog/.vuepress/.temp/pages/blogs/tech/第一篇博客学习.html.js",dataFilePathRelative:"pages/blogs/tech/第一篇博客学习.html.js",dataFileChunkName:"v-e3b887da",htmlFilePath:"/root/blog/.vuepress/dist/blogs/tech/第一篇博客学习.html",htmlFilePathRelative:"blogs/tech/第一篇博客学习.html"}],length:1,label:"vuepress-reco/them-cli"}},layout:"Categories"}},i=(0,t.vW)((async({app:n})=>{const s=(0,a.Fl)((()=>o)),e=(0,a.Fl)((()=>p)),t=(0,a.Fl)((()=>l));n.provide(r.kv,s),n.provide(r.Mv,t),n.provide(r.kL,e)}))},7270:(n,s,e)=>{"use strict";e.d(s,{kv:()=>r,Mv:()=>o,kL:()=>p,Vi:()=>l});var a=e(6252),t=e(2119);const r=Symbol(""),o=Symbol(""),p=Symbol("");function l(){const n=(0,a.f3)(o),s=(0,a.f3)(p),e=(0,a.f3)(r);if(!p)throw new Error("useSiteLocaleData() is called without provider.");const{currentRoute:l}=(0,t.tv)();return{classificationPosts:(0,a.Fl)((()=>e.value[l.value.path]||{})),classificationSummary:n,posts:s}}},8652:(n,s,e)=>{"use strict";e.d(s,{Z:()=>u});var a=e(6252),t=e(2262),r=e(3577),o=e(6333);const p={handleImage:n=>`<img style="${n.style||""}" src="${n.src}" />`,handleText:n=>`<div style="${n.style||""}">${n.content}</div>`,handleTitle:n=>`<h5 style="${n.style||""}">${n.content}</h5>`,handleButton:n=>`<a style="${n.style||""}" class="btn" href="${n.link}">${n.text}</a>`,handleButtongroup:n=>`<div class="btn-group">${(n.children||[]).reduce(((s,e)=>s+`<a style="${e.style||n.style||""}" class="btn" href="${e.link}">${e.text}</a>`),"")}</div>`,handleHr:n=>"<hr />"},l={class:"bulletin-title"},i=[(0,a._)("svg",{t:"1573745677073",class:"icon",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"4448",width:"22",height:"22"},[(0,a._)("path",{d:"M512 34.133333a486.4 486.4 0 1 0 486.4 486.4A486.4 486.4 0 0 0 512 34.133333z m209.4848 632.8064l-55.6032 55.466667-151.517867-151.125333-151.517866 151.1168-55.6032-55.466667 151.517866-151.108267L307.242667 364.714667l55.6032-55.466667 151.517866 151.125333 151.517867-151.1168 55.6032 55.466667-151.517867 151.099733z m0 0","p-id":"4449"})],-1)],c=["innerHTML"],u=(0,a.aZ)({setup(n){const{visible:s,closeBulletinPopover:e}=function(){const n=(0,o.X6)(),s=(0,t.iH)(!1),e="__CLOSE_BULLETIN_POPOVER__";return(0,a.bv)((()=>{var a,t;const r=sessionStorage.getItem(e);s.value="true"!==r&&!!(null===(t=null===(a=null==n?void 0:n.value)||void 0===a?void 0:a.bulletin)||void 0===t?void 0:t.body)})),{visible:s,closeBulletinPopover:()=>{s.value=!1,sessionStorage.setItem(e,"true")}}}(),{bodyNodes:u}=function(){const n=(0,o.X6)();function s(n){if(Array.isArray(n))return n.map((n=>s(n)));{let s=n.type;return s=s.slice(0,1).toUpperCase()+s.slice(1),p[`handle${s}`](n)}}return{bodyNodes:(0,a.Fl)((()=>{var e,a;return s(null===(a=null===(e=null==n?void 0:n.value)||void 0===e?void 0:e.bulletin)||void 0===a?void 0:a.body).join("")})),handleNode:s}}();return(n,o)=>{var p,d,h,g;const m=(0,a.up)("Xicons");return(0,t.SU)(s)?((0,a.wg)(),(0,a.iD)("div",{key:0,class:"bulletin-wrapper",style:(0,r.j5)({width:(null==(d=null==(p=n.bulletin)?void 0:p.value)?void 0:d.width)||"300px"})},[(0,a._)("div",l,[(0,a.Wm)(m,{icon:"Bulb","icon-size":"28","icon-color":"#fff",text:(null==(g=null==(h=n.bulletin)?void 0:h.value)?void 0:g.title)||"公告","text-color":"#fff","text-size":"16"},null,8,["text"]),(0,a._)("i",{class:"btn-close",onClick:o[0]||(o[0]=(...n)=>(0,t.SU)(e)&&(0,t.SU)(e)(...n))},i)]),(0,a._)("div",{class:"bulletin-content",innerHTML:(0,t.SU)(u)},null,8,c)],4)):(0,a.kq)("",!0)}}})},5698:(n,s,e)=>{"use strict";var a=e(6633),t=e(3718),r=e(2868),o=e(5214),p=e(2456),l=e(480),i=e(9963),c=e(6252),u=e(2119),d=e(4546),h=e(3447),g=e(2412);const m=i.vr,k=u.PO;(async()=>{const n=m({name:"VuepressApp",setup(){(0,d.BK)();for(const n of r.l)n();return()=>[(0,c.h)(u.MA),...t.p.map((n=>(0,c.h)(n)))]}}),s=(0,u.p7)({history:k((0,l.U1)(d.HM.value.base)),routes:p.g,scrollBehavior:(n,s,e)=>e||(n.hash?{el:n.hash}:{top:0})});s.beforeResolve((async(n,s)=>{var e;n.path===s.path&&s!==u.AJ||([d.Xp.value]=await Promise.all([(0,d.C4)(n.name),null===(e=o.b[n.name])||void 0===e?void 0:e.__asyncLoader()]))})),((n,s)=>{const e=(0,c.Fl)((()=>(0,d.S)(d.HM.value.locales,s.currentRoute.value.path))),a=(0,c.Fl)((()=>(0,d.kY)(d.HM.value,e.value))),t=(0,c.Fl)((()=>(0,d.hN)(d.Xp.value))),r=(0,c.Fl)((()=>(0,d.lp)(d.Xp.value,a.value))),o=(0,c.Fl)((()=>(0,d.nl)(r.value,t.value,a.value))),p=(0,c.Fl)((()=>(0,d.Vo)(d.Xp.value)));n.provide(d.C3,e),n.provide(d.AE,a),n.provide(d.PY,t),n.provide(d.et,r),n.provide(d.VV,o),n.provide(d.b5,p),Object.defineProperties(n.config.globalProperties,{$frontmatter:{get:()=>t.value},$headTitle:{get:()=>r.value},$lang:{get:()=>p.value},$page:{get:()=>d.Xp.value},$routeLocale:{get:()=>e.value},$site:{get:()=>d.HM.value},$siteLocale:{get:()=>a.value},$withBase:{get:()=>h.pJ}})})(n,s),(n=>{n.component("ClientOnly",g.qx),n.component("Content",g.VY)})(n);for(const e of a.g)await e({app:n,router:s,siteData:d.HM});return n.use(s),{app:n,router:s}})().then((({app:n,router:s})=>{s.isReady().then((()=>{n.mount("#app")}))}))},4802:(n,s,e)=>{"use strict";e.d(s,{Y:()=>p});var a=e(3513),t=e(480),r=e(6252),o=e(4546);const p=(0,r.aZ)({name:"Vuepress",setup(){const n=(0,o.Vi)(),s=(0,r.Fl)((()=>{let s;if(n.value.path){const e=n.value.frontmatter.layout;s=(0,t.HD)(e)?e:"Layout"}else s="404";return a.Z[s]||(0,r.up)(s,!1)}));return()=>(0,r.h)(s.value)}})},2412:(n,s,e)=>{"use strict";e.d(s,{qx:()=>r,VY:()=>l});var a=e(6252),t=e(2262);const r=(0,a.aZ)({setup(n,s){const e=(0,t.iH)(!1);return(0,a.bv)((()=>{e.value=!0})),()=>{var n,a;return e.value?null===(a=(n=s.slots).default)||void 0===a?void 0:a.call(n):null}}});var o=e(5214),p=e(4546);const l=n=>{let s;s=n.pageKey?n.pageKey:(0,p.Vi)().value.key;const e=o.b[s];return e?(0,a.h)(e):(0,a.h)("div","404 Not Found")};l.displayName="Content",l.props={pageKey:{type:String,required:!1}},e(4802)},4546:(n,s,e)=>{"use strict";e.d(s,{Xp:()=>p,PY:()=>u,VV:()=>m,et:()=>b,b5:()=>w,C4:()=>i,hN:()=>h,nl:()=>k,lp:()=>v,Vo:()=>x,S:()=>M,kY:()=>j,C3:()=>f,BK:()=>R,HM:()=>C,AE:()=>E,Vi:()=>l,I2:()=>d,I:()=>y,WF:()=>S,I5:()=>P});var a=e(2262),t=e(5719);const r=(0,a.iH)(t.T),o=(0,a.OT)({key:"",path:"",title:"",lang:"",frontmatter:{},excerpt:"",headers:[]}),p=(0,a.iH)(o),l=()=>p,i=async n=>{const s=r.value[n];if(!s)return o;const e=await s();return null!=e?e:o};var c=e(6252);const u=Symbol(""),d=()=>{const n=(0,c.f3)(u);if(!n)throw new Error("usePageFrontmatter() is called without provider.");return n},h=n=>n.frontmatter;var g=e(480);const m=Symbol(""),k=(n,s,e)=>{const a=(0,g.HD)(s.description)?s.description:e.description,t=[...(0,g.kJ)(s.head)?s.head:[],...e.head,["title",{},n],["meta",{name:"description",content:a}]];return(0,g.H7)(t)},b=Symbol(""),v=(n,s)=>`${n.title?`${n.title} | `:""}${s.title}`,w=Symbol(""),x=n=>n.lang||"en",f=Symbol(""),y=()=>{const n=(0,c.f3)(f);if(!n)throw new Error("useRouteLocale() is called without provider.");return n},M=(n,s)=>(0,g.gb)(n,s);var _=e(4995);const C=(0,a.iH)(_.H),S=()=>C,E=Symbol(""),P=()=>{const n=(0,c.f3)(E);if(!n)throw new Error("useSiteLocaleData() is called without provider.");return n},j=(n,s)=>({...n,...n.locales[s]});var A=e(2119);const D=Symbol(""),R=()=>{const n=(0,A.yj)(),s=(()=>{const n=(0,c.f3)(m);if(!n)throw new Error("usePageHead() is called without provider.");return n})(),e=(()=>{const n=(0,c.f3)(w);if(!n)throw new Error("usePageLang() is called without provider.");return n})(),t=(0,a.iH)([]),r=()=>{document.documentElement.lang=e.value,t.value.forEach((n=>{n.parentNode===document.head&&document.head.removeChild(n)})),t.value.splice(0,t.value.length),s.value.forEach((n=>{const s=B(n);null!==s&&(document.head.appendChild(s),t.value.push(s))}))};(0,c.JJ)(D,r),(0,c.bv)((()=>{s.value.forEach((n=>{const s=F(n);s&&t.value.push(s)})),r(),(0,c.YP)((()=>n.path),(()=>r()))}))},F=([n,s,e=""])=>{const a=`head > ${n}${Object.entries(s).map((([n,s])=>(0,g.HD)(s)?`[${n}="${s}"]`:!0===s?`[${n}]`:"")).join("")}`;return Array.from(document.querySelectorAll(a)).find((n=>n.innerText===e))||null},B=([n,s,e])=>{if(!(0,g.HD)(n))return null;const a=document.createElement(n);return(0,g.PO)(s)&&Object.entries(s).forEach((([n,s])=>{(0,g.HD)(s)?a.setAttribute(n,s):!0===s&&a.setAttribute(n,"")})),(0,g.HD)(e)&&a.appendChild(document.createTextNode(e)),a}},7621:(n,s,e)=>{"use strict";e.d(s,{C3:()=>a.C3,Vi:()=>a.Vi,I2:()=>a.I2,I:()=>a.I,WF:()=>a.WF,I5:()=>a.I5,vW:()=>t.vW,F2:()=>t.F2,pJ:()=>t.pJ}),e(5698),e(2412);var a=e(4546),t=e(3447)},3447:(n,s,e)=>{"use strict";e.d(s,{vW:()=>a,F2:()=>t,pJ:()=>p});const a=n=>n,t=n=>n;var r=e(480),o=e(4546);const p=n=>(0,r.ak)(n)?n:`${(0,o.WF)().value.base}${(0,r.FY)(n)}`},1263:(n,s,e)=>{"use strict";e.d(s,{Z:()=>l});var a=e(7621),t=e(2938),r=e(6252),o=e(2119);const p=async(n,...s)=>{const{scrollBehavior:e}=n.options;n.options.scrollBehavior=void 0,await n.replace(...s).finally((()=>n.options.scrollBehavior=e))},l=(0,a.F2)((()=>{(({headerLinkSelector:n,headerAnchorSelector:s,delay:e,offset:l=5})=>{const i=(0,o.tv)(),c=(0,a.Vi)(),u=(0,t.D)((()=>{var e,a,t,r;const o=Array.from(document.querySelectorAll(n)),c=Array.from(document.querySelectorAll(s)).filter((n=>o.some((s=>s.hash===n.hash)))),u=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),d=window.innerHeight+u,h=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),g=Math.abs(h-d)<l;for(let n=0;n<c.length;n++){const s=c[n],o=c[n+1],d=0===n&&0===u,h=u>=(null!==(a=null===(e=s.parentElement)||void 0===e?void 0:e.offsetTop)&&void 0!==a?a:0)-l,m=!o||u<(null!==(r=null===(t=o.parentElement)||void 0===t?void 0:t.offsetTop)&&void 0!==r?r:0)-l;if(!(d||h&&m))continue;const k=decodeURIComponent(i.currentRoute.value.hash),b=decodeURIComponent(s.hash);if(k===b)return;if(g)for(let s=n+1;s<c.length;s++)if(k===decodeURIComponent(c[s].hash))return;return void p(i,{hash:b,force:!0})}}),e),d=()=>u();(0,r.bv)((()=>{u(),window.addEventListener("scroll",d)})),(0,r.Jd)((()=>{window.removeEventListener("scroll",d)})),(0,r.YP)((()=>c.value.path),(()=>d()))})({headerLinkSelector:"a.page-header-item",headerAnchorSelector:".header-anchor",delay:200,offset:5})}))},3051:(n,s,e)=>{"use strict";e.d(s,{Z:()=>i});var a=e(2938),t=e(6252),r=e(2262),o=e(9963);const p=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=()=>window.scrollTo({top:0,behavior:"smooth"}),i=(0,t.aZ)({name:"BackToTop",setup(){const n=(0,r.iH)(0),s=(0,t.Fl)((()=>n.value>300)),e=(0,a.D)((()=>{n.value=p()}),100);(0,t.bv)((()=>{n.value=p(),window.addEventListener("scroll",(()=>e()))}));const i=(0,t.h)("div",{class:"back-to-top",onClick:l});return()=>(0,t.h)(o.uT,{name:"back-to-top"},{default:()=>s.value?i:null})}})},7478:(n,s,e)=>{"use strict";e.d(s,{Z:()=>p});var a=e(7621),t=e(6252);const r=(0,t.h)("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[(0,t.h)("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),(0,t.h)("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),o=(n,{slots:s})=>{var e;return(0,t.h)("span",[r,null===(e=s.default)||void 0===e?void 0:e.call(s)])};o.displayName="ExternalLinkIcon";const p=(0,a.vW)((({app:n})=>{n.component("ExternalLinkIcon",o)}))},6243:(n,s,e)=>{"use strict";e.d(s,{Z:()=>p});var a=e(7621),t=e(4865),r=e(6252),o=e(2119);const p=(0,a.F2)((()=>{(0,r.bv)((()=>{const n=(0,o.tv)(),s=new Set;s.add(n.currentRoute.value.path),t.configure({showSpinner:!1}),n.beforeEach((n=>{s.has(n.path)||t.start()})),n.afterEach((n=>{s.add(n.path),t.done()}))}))}))},1843:(n,s,e)=>{"use strict";e.d(s,{Z:()=>m});var a=e(7621),t=e(6252),r=e(2262),o=e(2119),p=e(3503);const l=(0,r.iH)(p.D),i=/[^\x00-\x7F]/,c=n=>n.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),u=(n,s)=>{const e=s.join(" "),a=n.split(/\s+/g).map((n=>n.trim())).filter((n=>!!n));if(i.test(n))return a.some((n=>e.toLowerCase().indexOf(n)>-1));const t=n.endsWith(" ");return new RegExp(a.map(((n,s)=>a.length!==s+1||t?`(?=.*\\b${c(n)}\\b)`:`(?=.*\\b${c(n)})`)).join("")+".+","gi").test(e)},d=(0,t.aZ)({name:"SearchBox",props:{locales:{type:Object,required:!1,default:()=>({})},hotKeys:{type:Array,required:!1,default:()=>[]},maxSuggestions:{type:Number,required:!1,default:5}},setup(n){const{locales:s,hotKeys:e,maxSuggestions:p}=(0,r.BK)(n),i=(0,o.tv)(),c=(0,a.I)(),d=l,h=(0,r.iH)(null),g=(0,r.iH)(!1),m=(0,r.iH)(""),k=(0,t.Fl)((()=>{var n;return null!==(n=s.value[c.value])&&void 0!==n?n:{}})),b=(({searchIndex:n,routeLocale:s,query:e,maxSuggestions:a})=>{const r=(0,t.Fl)((()=>n.value.filter((n=>n.pathLocale===s.value))));return(0,t.Fl)((()=>{const n=e.value.trim().toLowerCase();if(!n)return[];const s=[],t=(e,r)=>{u(n,[r.title])&&s.push({link:`${e.path}#${r.slug}`,title:e.title,header:r.title});for(const n of r.children){if(s.length>=a.value)return;t(e,n)}};for(const e of r.value){if(s.length>=a.value)break;if(u(n,[e.title,...e.extraFields]))s.push({link:e.path,title:e.title});else for(const n of e.headers){if(s.length>=a.value)break;t(e,n)}}return s}))})({searchIndex:d,routeLocale:c,query:m,maxSuggestions:p}),{focusIndex:v,focusNext:w,focusPrev:x}=(n=>{const s=(0,r.iH)(0);return{focusIndex:s,focusNext:()=>{s.value<n.value.length-1?s.value+=1:s.value=0},focusPrev:()=>{s.value>0?s.value-=1:s.value=n.value.length-1}}})(b);(({input:n,hotKeys:s})=>{const e=e=>{n.value&&0!==s.value.length&&e.target===document.body&&s.value.includes(e.key)&&(n.value.focus(),e.preventDefault())};(0,t.bv)((()=>{document.addEventListener("keydown",e)})),(0,t.Jd)((()=>{document.removeEventListener("keydown",e)}))})({input:h,hotKeys:e});const f=(0,t.Fl)((()=>g.value&&!!b.value.length)),y=n=>{if(!f.value)return;const s=b.value[n];s&&i.push(s.link).then((()=>{m.value="",v.value=0}))};return()=>(0,t.h)("form",{class:"search-box",role:"search"},[(0,t.h)("input",{ref:h,type:"search",placeholder:k.value.placeholder,autocomplete:"off",spellcheck:!1,value:m.value,onFocus:()=>g.value=!0,onBlur:()=>g.value=!1,onInput:n=>m.value=n.target.value,onKeydown:n=>{switch(n.key){case"ArrowUp":f.value&&x();break;case"ArrowDown":f.value&&w();break;case"Enter":n.preventDefault(),y(v.value)}}}),f.value&&(0,t.h)("ul",{class:"suggestions",onMouseleave:()=>v.value=-1},b.value.map((({link:n,title:s,header:e},a)=>(0,t.h)("li",{class:["suggestion",{focus:v.value===a}],onMouseenter:()=>v.value=a,onMousedown:()=>y(a)},(0,t.h)("a",{href:n,onClick:n=>n.preventDefault()},[(0,t.h)("span",{class:"page-title"},s),e&&(0,t.h)("span",{class:"page-header"},`> ${e}`)])))))])}}),h={},g=["s","/"],m=(0,a.vW)((({app:n})=>{n.component("SearchBox",(n=>(0,t.h)(d,{locales:h,hotKeys:g,maxSuggestions:5,...n})))}))},1598:(n,s,e)=>{"use strict";e.d(s,{Z:()=>o});var a=e(7621),t=e(6252),r=e(3197);const o=(0,a.vW)((({app:n})=>{const s=(0,r.BV)(),e=n._context.provides[a.C3],o=(0,t.Fl)((()=>(0,r.g$)(s.value,e.value)));n.provide(r.ZS,o),Object.defineProperties(n.config.globalProperties,{$theme:{get:()=>s.value},$themeLocale:{get:()=>o.value}})}))},3197:(n,s,e)=>{"use strict";e.d(s,{g$:()=>i,ZS:()=>p,BV:()=>r,X6:()=>l});var a=e(8417);const t=(0,e(2262).iH)(a.f),r=()=>t;var o=e(6252);const p=Symbol(""),l=()=>{const n=(0,o.f3)(p);if(!n)throw new Error("useThemeLocaleData() is called without provider.");return n},i=(n,s)=>{var e;return{...n,...null===(e=n.locales)||void 0===e?void 0:e[s]}}},6333:(n,s,e)=>{"use strict";e.d(s,{X6:()=>a.X6});var a=e(3197)},480:(n,s,e)=>{"use strict";e.d(s,{H7:()=>t,kJ:()=>a.kJ,mf:()=>a.mf,ak:()=>r,B2:()=>o,R5:()=>p,PO:()=>l,HD:()=>a.HD,U1:()=>i,FY:()=>c,gb:()=>u});var a=e(3577);const t=n=>{const s=new Set,e=[];return n.forEach((n=>{const a=(([n,s,e])=>"meta"===n&&s.name?`${n}.${s.name}`:["title","base"].includes(n)?n:"template"===n&&s.id?`${n}.${s.id}`:JSON.stringify([n,s,e]))(n);s.has(a)||(s.add(a),e.push(n))})),e},r=n=>/^(https?:)?\/\//.test(n),o=n=>/^mailto:/.test(n),p=n=>/^tel:/.test(n),l=n=>"[object Object]"===Object.prototype.toString.call(n),i=n=>n.replace(/\/$/,""),c=n=>n.replace(/^\//,""),u=(n,s)=>{const e=Object.keys(n).sort(((n,s)=>{const e=s.split("/").length-n.split("/").length;return 0!==e?e:s.length-n.length}));for(const n of e)if(s.startsWith(n))return n;return"/"}},4865:function(n,s,e){var a,t;a=function(){var n,s,e={version:"0.2.0"},a=e.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function t(n,s,e){return n<s?s:n>e?e:n}function r(n){return 100*(-1+n)}e.configure=function(n){var s,e;for(s in n)void 0!==(e=n[s])&&n.hasOwnProperty(s)&&(a[s]=e);return this},e.status=null,e.set=function(n){var s=e.isStarted();n=t(n,a.minimum,1),e.status=1===n?null:n;var l=e.render(!s),i=l.querySelector(a.barSelector),c=a.speed,u=a.easing;return l.offsetWidth,o((function(s){""===a.positionUsing&&(a.positionUsing=e.getPositioningCSS()),p(i,function(n,s,e){var t;return(t="translate3d"===a.positionUsing?{transform:"translate3d("+r(n)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+r(n)+"%,0)"}:{"margin-left":r(n)+"%"}).transition="all "+s+"ms "+e,t}(n,c,u)),1===n?(p(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){p(l,{transition:"all "+c+"ms linear",opacity:0}),setTimeout((function(){e.remove(),s()}),c)}),c)):setTimeout(s,c)})),this},e.isStarted=function(){return"number"==typeof e.status},e.start=function(){e.status||e.set(0);var n=function(){setTimeout((function(){e.status&&(e.trickle(),n())}),a.trickleSpeed)};return a.trickle&&n(),this},e.done=function(n){return n||e.status?e.inc(.3+.5*Math.random()).set(1):this},e.inc=function(n){var s=e.status;return s?("number"!=typeof n&&(n=(1-s)*t(Math.random()*s,.1,.95)),s=t(s+n,0,.994),e.set(s)):e.start()},e.trickle=function(){return e.inc(Math.random()*a.trickleRate)},n=0,s=0,e.promise=function(a){return a&&"resolved"!==a.state()?(0===s&&e.start(),n++,s++,a.always((function(){0==--s?(n=0,e.done()):e.set((n-s)/n)})),this):this},e.render=function(n){if(e.isRendered())return document.getElementById("nprogress");i(document.documentElement,"nprogress-busy");var s=document.createElement("div");s.id="nprogress",s.innerHTML=a.template;var t,o=s.querySelector(a.barSelector),l=n?"-100":r(e.status||0),c=document.querySelector(a.parent);return p(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),a.showSpinner||(t=s.querySelector(a.spinnerSelector))&&d(t),c!=document.body&&i(c,"nprogress-custom-parent"),c.appendChild(s),s},e.remove=function(){c(document.documentElement,"nprogress-busy"),c(document.querySelector(a.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},e.isRendered=function(){return!!document.getElementById("nprogress")},e.getPositioningCSS=function(){var n=document.body.style,s="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return s+"Perspective"in n?"translate3d":s+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function s(){var e=n.shift();e&&e(s)}return function(e){n.push(e),1==n.length&&s()}}(),p=function(){var n=["Webkit","O","Moz","ms"],s={};function e(e){return e=e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,s){return s.toUpperCase()})),s[e]||(s[e]=function(s){var e=document.body.style;if(s in e)return s;for(var a,t=n.length,r=s.charAt(0).toUpperCase()+s.slice(1);t--;)if((a=n[t]+r)in e)return a;return s}(e))}function a(n,s,a){s=e(s),n.style[s]=a}return function(n,s){var e,t,r=arguments;if(2==r.length)for(e in s)void 0!==(t=s[e])&&s.hasOwnProperty(e)&&a(n,e,t);else a(n,r[1],r[2])}}();function l(n,s){return("string"==typeof n?n:u(n)).indexOf(" "+s+" ")>=0}function i(n,s){var e=u(n),a=e+s;l(e,s)||(n.className=a.substring(1))}function c(n,s){var e,a=u(n);l(n,s)&&(e=a.replace(" "+s+" "," "),n.className=e.substring(1,e.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return e},void 0===(t=a.call(s,e,s,n))||(n.exports=t)},2938:(n,s,e)=>{"use strict";function a(n,s,e){var a,t,r;void 0===s&&(s=50),void 0===e&&(e={});var o=null!=(a=e.isImmediate)&&a,p=null!=(t=e.callback)&&t,l=e.maxWait,i=Date.now(),c=[];function u(){if(void 0!==l){var n=Date.now()-i;if(n+s>=l)return l-n}return s}var d=function(){var s=[].slice.call(arguments),e=this;return new Promise((function(a,t){var l=o&&void 0===r;if(void 0!==r&&clearTimeout(r),r=setTimeout((function(){if(r=void 0,i=Date.now(),!o){var a=n.apply(e,s);p&&p(a),c.forEach((function(n){return(0,n.resolve)(a)})),c=[]}}),u()),l){var d=n.apply(e,s);return p&&p(d),a(d)}c.push({resolve:a,reject:t})}))};return d.cancel=function(n){void 0!==r&&clearTimeout(r),c.forEach((function(s){return(0,s.reject)(n)})),c=[]},d}e.d(s,{D:()=>a})},3744:(n,s)=>{"use strict";s.Z=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}},2119:(n,s,e)=>{"use strict";e.d(s,{MA:()=>Pn,AJ:()=>L,p7:()=>jn,PO:()=>F,yj:()=>Rn,tv:()=>Dn});var a=e(6252),t=e(2262);const r="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,o=n=>r?Symbol(n):"_vr_"+n,p=o("rvlm"),l=o("rvd"),i=o("r"),c=o("rl"),u=o("rvl"),d="undefined"!=typeof window,h=Object.assign;function g(n,s){const e={};for(const a in s){const t=s[a];e[a]=Array.isArray(t)?t.map(n):n(t)}return e}const m=()=>{},k=/\/$/;function b(n,s,e="/"){let a,t={},r="",o="";const p=s.indexOf("?"),l=s.indexOf("#",p>-1?p:0);return p>-1&&(a=s.slice(0,p),r=s.slice(p+1,l>-1?l:s.length),t=n(r)),l>-1&&(a=a||s.slice(0,l),o=s.slice(l,s.length)),a=function(n,s){if(n.startsWith("/"))return n;if(!n)return s;const e=s.split("/"),a=n.split("/");let t,r,o=e.length-1;for(t=0;t<a.length;t++)if(r=a[t],1!==o&&"."!==r){if(".."!==r)break;o--}return e.slice(0,o).join("/")+"/"+a.slice(t-(t===a.length?1:0)).join("/")}(null!=a?a:s,e),{fullPath:a+(r&&"?")+r+o,path:a,query:t,hash:o}}function v(n,s){return s&&n.toLowerCase().startsWith(s.toLowerCase())?n.slice(s.length)||"/":n}function w(n,s){return(n.aliasOf||n)===(s.aliasOf||s)}function x(n,s){if(Object.keys(n).length!==Object.keys(s).length)return!1;for(const e in n)if(!f(n[e],s[e]))return!1;return!0}function f(n,s){return Array.isArray(n)?y(n,s):Array.isArray(s)?y(s,n):n===s}function y(n,s){return Array.isArray(s)?n.length===s.length&&n.every(((n,e)=>n===s[e])):1===n.length&&n[0]===s}var M,_;!function(n){n.pop="pop",n.push="push"}(M||(M={})),function(n){n.back="back",n.forward="forward",n.unknown=""}(_||(_={}));const C=/^[^#]+#/;function S(n,s){return n.replace(C,"#")+s}const E=()=>({left:window.pageXOffset,top:window.pageYOffset});function P(n,s){return(history.state?history.state.position-s:-1)+n}const j=new Map;let A=()=>location.protocol+"//"+location.host;function D(n,s){const{pathname:e,search:a,hash:t}=s,r=n.indexOf("#");if(r>-1){let s=t.includes(n.slice(r))?n.slice(r).length:1,e=t.slice(s);return"/"!==e[0]&&(e="/"+e),v(e,"")}return v(e,n)+a+t}function R(n,s,e,a=!1,t=!1){return{back:n,current:s,forward:e,replaced:a,position:window.history.length,scroll:t?E():null}}function F(n){const s=function(n){const{history:s,location:e}=window,a={value:D(n,e)},t={value:s.state};function r(a,r,o){const p=n.indexOf("#"),l=p>-1?(e.host&&document.querySelector("base")?n:n.slice(p))+a:A()+n+a;try{s[o?"replaceState":"pushState"](r,"",l),t.value=r}catch(n){console.error(n),e[o?"replace":"assign"](l)}}return t.value||r(a.value,{back:null,current:a.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0),{location:a,state:t,push:function(n,e){const o=h({},t.value,s.state,{forward:n,scroll:E()});r(o.current,o,!0),r(n,h({},R(a.value,n,null),{position:o.position+1},e),!1),a.value=n},replace:function(n,e){r(n,h({},s.state,R(t.value.back,n,t.value.forward,!0),e,{position:t.value.position}),!0),a.value=n}}}(n=function(n){if(!n)if(d){const s=document.querySelector("base");n=(n=s&&s.getAttribute("href")||"/").replace(/^\w+:\/\/[^\/]+/,"")}else n="/";return"/"!==n[0]&&"#"!==n[0]&&(n="/"+n),n.replace(k,"")}(n)),e=function(n,s,e,a){let t=[],r=[],o=null;const p=({state:r})=>{const p=D(n,location),l=e.value,i=s.value;let c=0;if(r){if(e.value=p,s.value=r,o&&o===l)return void(o=null);c=i?r.position-i.position:0}else a(p);t.forEach((n=>{n(e.value,l,{delta:c,type:M.pop,direction:c?c>0?_.forward:_.back:_.unknown})}))};function l(){const{history:n}=window;n.state&&n.replaceState(h({},n.state,{scroll:E()}),"")}return window.addEventListener("popstate",p),window.addEventListener("beforeunload",l),{pauseListeners:function(){o=e.value},listen:function(n){t.push(n);const s=()=>{const s=t.indexOf(n);s>-1&&t.splice(s,1)};return r.push(s),s},destroy:function(){for(const n of r)n();r=[],window.removeEventListener("popstate",p),window.removeEventListener("beforeunload",l)}}}(n,s.state,s.location,s.replace),a=h({location:"",base:n,go:function(n,s=!0){s||e.pauseListeners(),history.go(n)},createHref:S.bind(null,n)},s,e);return Object.defineProperty(a,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(a,"state",{enumerable:!0,get:()=>s.state.value}),a}function B(n){return"string"==typeof n||"symbol"==typeof n}const L={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},T=o("nf");var I;function N(n,s){return h(new Error,{type:n,[T]:!0},s)}function O(n,s){return n instanceof Error&&T in n&&(null==s||!!(n.type&s))}!function(n){n[n.aborted=4]="aborted",n[n.cancelled=8]="cancelled",n[n.duplicated=16]="duplicated"}(I||(I={}));const V="[^/]+?",Z={sensitive:!1,strict:!1,start:!0,end:!0},H=/[.+*?^${}()[\]/\\]/g;function U(n,s){let e=0;for(;e<n.length&&e<s.length;){const a=s[e]-n[e];if(a)return a;e++}return n.length<s.length?1===n.length&&80===n[0]?-1:1:n.length>s.length?1===s.length&&80===s[0]?1:-1:0}function z(n,s){let e=0;const a=n.score,t=s.score;for(;e<a.length&&e<t.length;){const n=U(a[e],t[e]);if(n)return n;e++}return t.length-a.length}const q={type:0,value:""},$=/[a-zA-Z0-9_]/;function K(n,s,e){const a=function(n,s){const e=h({},Z,s),a=[];let t=e.start?"^":"";const r=[];for(const s of n){const n=s.length?[]:[90];e.strict&&!s.length&&(t+="/");for(let a=0;a<s.length;a++){const o=s[a];let p=40+(e.sensitive?.25:0);if(0===o.type)a||(t+="/"),t+=o.value.replace(H,"\\$&"),p+=40;else if(1===o.type){const{value:n,repeatable:e,optional:l,regexp:i}=o;r.push({name:n,repeatable:e,optional:l});const c=i||V;if(c!==V){p+=10;try{new RegExp(`(${c})`)}catch(s){throw new Error(`Invalid custom RegExp for param "${n}" (${c}): `+s.message)}}let u=e?`((?:${c})(?:/(?:${c}))*)`:`(${c})`;a||(u=l&&s.length<2?`(?:/${u})`:"/"+u),l&&(u+="?"),t+=u,p+=20,l&&(p+=-8),e&&(p+=-20),".*"===c&&(p+=-50)}n.push(p)}a.push(n)}if(e.strict&&e.end){const n=a.length-1;a[n][a[n].length-1]+=.7000000000000001}e.strict||(t+="/?"),e.end?t+="$":e.strict&&(t+="(?:/|$)");const o=new RegExp(t,e.sensitive?"":"i");return{re:o,score:a,keys:r,parse:function(n){const s=n.match(o),e={};if(!s)return null;for(let n=1;n<s.length;n++){const a=s[n]||"",t=r[n-1];e[t.name]=a&&t.repeatable?a.split("/"):a}return e},stringify:function(s){let e="",a=!1;for(const t of n){a&&e.endsWith("/")||(e+="/"),a=!1;for(const n of t)if(0===n.type)e+=n.value;else if(1===n.type){const{value:r,repeatable:o,optional:p}=n,l=r in s?s[r]:"";if(Array.isArray(l)&&!o)throw new Error(`Provided param "${r}" is an array but it is not repeatable (* or + modifiers)`);const i=Array.isArray(l)?l.join("/"):l;if(!i){if(!p)throw new Error(`Missing required param "${r}"`);t.length<2&&(e.endsWith("/")?e=e.slice(0,-1):a=!0)}e+=i}}return e}}}(function(n){if(!n)return[[]];if("/"===n)return[[q]];if(!n.startsWith("/"))throw new Error(`Invalid path "${n}"`);function s(n){throw new Error(`ERR (${e})/"${i}": ${n}`)}let e=0,a=e;const t=[];let r;function o(){r&&t.push(r),r=[]}let p,l=0,i="",c="";function u(){i&&(0===e?r.push({type:0,value:i}):1===e||2===e||3===e?(r.length>1&&("*"===p||"+"===p)&&s(`A repeatable param (${i}) must be alone in its segment. eg: '/:ids+.`),r.push({type:1,value:i,regexp:c,repeatable:"*"===p||"+"===p,optional:"*"===p||"?"===p})):s("Invalid state to consume buffer"),i="")}function d(){i+=p}for(;l<n.length;)if(p=n[l++],"\\"!==p||2===e)switch(e){case 0:"/"===p?(i&&u(),o()):":"===p?(u(),e=1):d();break;case 4:d(),e=a;break;case 1:"("===p?e=2:$.test(p)?d():(u(),e=0,"*"!==p&&"?"!==p&&"+"!==p&&l--);break;case 2:")"===p?"\\"==c[c.length-1]?c=c.slice(0,-1)+p:e=3:c+=p;break;case 3:u(),e=0,"*"!==p&&"?"!==p&&"+"!==p&&l--,c="";break;default:s("Unknown state")}else a=e,e=4;return 2===e&&s(`Unfinished custom RegExp for param "${i}"`),u(),o(),t}(n.path),e),t=h(a,{record:n,parent:s,children:[],alias:[]});return s&&!t.record.aliasOf==!s.record.aliasOf&&s.children.push(t),t}function Y(n){const s={},e=n.props||!1;if("component"in n)s.default=e;else for(const a in n.components)s[a]="boolean"==typeof e?e:e[a];return s}function W(n){for(;n;){if(n.record.aliasOf)return!0;n=n.parent}return!1}function G(n){return n.reduce(((n,s)=>h(n,s.meta)),{})}function J(n,s){const e={};for(const a in n)e[a]=a in s?s[a]:n[a];return e}const X=/#/g,Q=/&/g,nn=/\//g,sn=/=/g,en=/\?/g,an=/\+/g,tn=/%5B/g,rn=/%5D/g,on=/%5E/g,pn=/%60/g,ln=/%7B/g,cn=/%7C/g,un=/%7D/g,dn=/%20/g;function hn(n){return encodeURI(""+n).replace(cn,"|").replace(tn,"[").replace(rn,"]")}function gn(n){return hn(n).replace(an,"%2B").replace(dn,"+").replace(X,"%23").replace(Q,"%26").replace(pn,"`").replace(ln,"{").replace(un,"}").replace(on,"^")}function mn(n){return null==n?"":function(n){return hn(n).replace(X,"%23").replace(en,"%3F")}(n).replace(nn,"%2F")}function kn(n){try{return decodeURIComponent(""+n)}catch(n){}return""+n}function bn(n){const s={};if(""===n||"?"===n)return s;const e=("?"===n[0]?n.slice(1):n).split("&");for(let n=0;n<e.length;++n){const a=e[n].replace(an," "),t=a.indexOf("="),r=kn(t<0?a:a.slice(0,t)),o=t<0?null:kn(a.slice(t+1));if(r in s){let n=s[r];Array.isArray(n)||(n=s[r]=[n]),n.push(o)}else s[r]=o}return s}function vn(n){let s="";for(let e in n){const a=n[e];(e=gn(e).replace(sn,"%3D"),null!=a)?(Array.isArray(a)?a.map((n=>n&&gn(n))):[a&&gn(a)]).forEach((n=>{void 0!==n&&(s+=(s.length?"&":"")+e,null!=n&&(s+="="+n))})):void 0!==a&&(s+=(s.length?"&":"")+e)}return s}function wn(n){const s={};for(const e in n){const a=n[e];void 0!==a&&(s[e]=Array.isArray(a)?a.map((n=>null==n?null:""+n)):null==a?a:""+a)}return s}function xn(){let n=[];return{add:function(s){return n.push(s),()=>{const e=n.indexOf(s);e>-1&&n.splice(e,1)}},list:()=>n,reset:function(){n=[]}}}function fn(n,s,e,a,t){const r=a&&(a.enterCallbacks[t]=a.enterCallbacks[t]||[]);return()=>new Promise(((o,p)=>{const l=n=>{var l;!1===n?p(N(4,{from:e,to:s})):n instanceof Error?p(n):"string"==typeof(l=n)||l&&"object"==typeof l?p(N(2,{from:s,to:n})):(r&&a.enterCallbacks[t]===r&&"function"==typeof n&&r.push(n),o())},i=n.call(a&&a.instances[t],s,e,l);let c=Promise.resolve(i);n.length<3&&(c=c.then(l)),c.catch((n=>p(n)))}))}function yn(n,s,e,a){const t=[];for(const p of n)for(const n in p.components){let l=p.components[n];if("beforeRouteEnter"===s||p.instances[n])if("object"==typeof(o=l)||"displayName"in o||"props"in o||"__vccOpts"in o){const r=(l.__vccOpts||l)[s];r&&t.push(fn(r,e,a,p,n))}else{let o=l();t.push((()=>o.then((t=>{if(!t)return Promise.reject(new Error(`Couldn't resolve component "${n}" at "${p.path}"`));const o=(l=t).__esModule||r&&"Module"===l[Symbol.toStringTag]?t.default:t;var l;p.components[n]=o;const i=(o.__vccOpts||o)[s];return i&&fn(i,e,a,p,n)()}))))}}var o;return t}function Mn(n){const s=(0,a.f3)(i),e=(0,a.f3)(c),r=(0,a.Fl)((()=>s.resolve((0,t.SU)(n.to)))),o=(0,a.Fl)((()=>{const{matched:n}=r.value,{length:s}=n,a=n[s-1],t=e.matched;if(!a||!t.length)return-1;const o=t.findIndex(w.bind(null,a));if(o>-1)return o;const p=Cn(n[s-2]);return s>1&&Cn(a)===p&&t[t.length-1].path!==p?t.findIndex(w.bind(null,n[s-2])):o})),p=(0,a.Fl)((()=>o.value>-1&&function(n,s){for(const e in s){const a=s[e],t=n[e];if("string"==typeof a){if(a!==t)return!1}else if(!Array.isArray(t)||t.length!==a.length||a.some(((n,s)=>n!==t[s])))return!1}return!0}(e.params,r.value.params))),l=(0,a.Fl)((()=>o.value>-1&&o.value===e.matched.length-1&&x(e.params,r.value.params)));return{route:r,href:(0,a.Fl)((()=>r.value.href)),isActive:p,isExactActive:l,navigate:function(e={}){return function(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){const s=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return n.preventDefault&&n.preventDefault(),!0}}(e)?s[(0,t.SU)(n.replace)?"replace":"push"]((0,t.SU)(n.to)).catch(m):Promise.resolve()}}}const _n=(0,a.aZ)({name:"RouterLink",props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Mn,setup(n,{slots:s}){const e=(0,t.qj)(Mn(n)),{options:r}=(0,a.f3)(i),o=(0,a.Fl)((()=>({[Sn(n.activeClass,r.linkActiveClass,"router-link-active")]:e.isActive,[Sn(n.exactActiveClass,r.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive})));return()=>{const t=s.default&&s.default(e);return n.custom?t:(0,a.h)("a",{"aria-current":e.isExactActive?n.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:o.value},t)}}});function Cn(n){return n?n.aliasOf?n.aliasOf.path:n.path:""}const Sn=(n,s,e)=>null!=n?n:null!=s?s:e;function En(n,s){if(!n)return null;const e=n(s);return 1===e.length?e[0]:e}const Pn=(0,a.aZ)({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},setup(n,{attrs:s,slots:e}){const r=(0,a.f3)(u),o=(0,a.Fl)((()=>n.route||r.value)),i=(0,a.f3)(l,0),c=(0,a.Fl)((()=>o.value.matched[i]));(0,a.JJ)(l,i+1),(0,a.JJ)(p,c),(0,a.JJ)(u,o);const d=(0,t.iH)();return(0,a.YP)((()=>[d.value,c.value,n.name]),(([n,s,e],[a,t,r])=>{s&&(s.instances[e]=n,t&&t!==s&&n&&n===a&&(s.leaveGuards.size||(s.leaveGuards=t.leaveGuards),s.updateGuards.size||(s.updateGuards=t.updateGuards))),!n||!s||t&&w(s,t)&&a||(s.enterCallbacks[e]||[]).forEach((s=>s(n)))}),{flush:"post"}),()=>{const t=o.value,r=c.value,p=r&&r.components[n.name],l=n.name;if(!p)return En(e.default,{Component:p,route:t});const i=r.props[n.name],u=i?!0===i?t.params:"function"==typeof i?i(t):i:null,g=(0,a.h)(p,h({},u,s,{onVnodeUnmounted:n=>{n.component.isUnmounted&&(r.instances[l]=null)},ref:d}));return En(e.default,{Component:g,route:t})||g}}});function jn(n){const s=function(n,s){const e=[],a=new Map;function t(n,e,a){const p=!a,l=function(n){return{path:n.path,redirect:n.redirect,name:n.name,meta:n.meta||{},aliasOf:void 0,beforeEnter:n.beforeEnter,props:Y(n),children:n.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in n?n.components||{}:{default:n.component}}}(n);l.aliasOf=a&&a.record;const i=J(s,n),c=[l];if("alias"in n){const s="string"==typeof n.alias?[n.alias]:n.alias;for(const n of s)c.push(h({},l,{components:a?a.record.components:l.components,path:n,aliasOf:a?a.record:l}))}let u,d;for(const s of c){const{path:c}=s;if(e&&"/"!==c[0]){const n=e.record.path,a="/"===n[n.length-1]?"":"/";s.path=e.record.path+(c&&a+c)}if(u=K(s,e,i),a?a.alias.push(u):(d=d||u,d!==u&&d.alias.push(u),p&&n.name&&!W(u)&&r(n.name)),"children"in l){const n=l.children;for(let s=0;s<n.length;s++)t(n[s],u,a&&a.children[s])}a=a||u,o(u)}return d?()=>{r(d)}:m}function r(n){if(B(n)){const s=a.get(n);s&&(a.delete(n),e.splice(e.indexOf(s),1),s.children.forEach(r),s.alias.forEach(r))}else{const s=e.indexOf(n);s>-1&&(e.splice(s,1),n.record.name&&a.delete(n.record.name),n.children.forEach(r),n.alias.forEach(r))}}function o(n){let s=0;for(;s<e.length&&z(n,e[s])>=0;)s++;e.splice(s,0,n),n.record.name&&!W(n)&&a.set(n.record.name,n)}return s=J({strict:!1,end:!0,sensitive:!1},s),n.forEach((n=>t(n))),{addRoute:t,resolve:function(n,s){let t,r,o,p={};if("name"in n&&n.name){if(t=a.get(n.name),!t)throw N(1,{location:n});o=t.record.name,p=h(function(n,s){const e={};for(const a of s)a in n&&(e[a]=n[a]);return e}(s.params,t.keys.filter((n=>!n.optional)).map((n=>n.name))),n.params),r=t.stringify(p)}else if("path"in n)r=n.path,t=e.find((n=>n.re.test(r))),t&&(p=t.parse(r),o=t.record.name);else{if(t=s.name?a.get(s.name):e.find((n=>n.re.test(s.path))),!t)throw N(1,{location:n,currentLocation:s});o=t.record.name,p=h({},s.params,n.params),r=t.stringify(p)}const l=[];let i=t;for(;i;)l.unshift(i.record),i=i.parent;return{name:o,path:r,params:p,matched:l,meta:G(l)}},removeRoute:r,getRoutes:function(){return e},getRecordMatcher:function(n){return a.get(n)}}}(n.routes,n),e=n.parseQuery||bn,r=n.stringifyQuery||vn,o=n.history,p=xn(),l=xn(),k=xn(),v=(0,t.XI)(L);let f=L;d&&n.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const y=g.bind(null,(n=>""+n)),_=g.bind(null,mn),C=g.bind(null,kn);function S(n,a){if(a=h({},a||v.value),"string"==typeof n){const t=b(e,n,a.path),r=s.resolve({path:t.path},a),p=o.createHref(t.fullPath);return h(t,r,{params:C(r.params),hash:kn(t.hash),redirectedFrom:void 0,href:p})}let t;if("path"in n)t=h({},n,{path:b(e,n.path,a.path).path});else{const s=h({},n.params);for(const n in s)null==s[n]&&delete s[n];t=h({},n,{params:_(n.params)}),a.params=_(a.params)}const p=s.resolve(t,a),l=n.hash||"";p.params=y(C(p.params));const i=function(n,s){const e=s.query?n(s.query):"";return s.path+(e&&"?")+e+(s.hash||"")}(r,h({},n,{hash:(c=l,hn(c).replace(ln,"{").replace(un,"}").replace(on,"^")),path:p.path}));var c;const u=o.createHref(i);return h({fullPath:i,hash:l,query:r===vn?wn(n.query):n.query||{}},p,{redirectedFrom:void 0,href:u})}function A(n){return"string"==typeof n?b(e,n,v.value.path):h({},n)}function D(n,s){if(f!==n)return N(8,{from:s,to:n})}function R(n){return T(n)}function F(n){const s=n.matched[n.matched.length-1];if(s&&s.redirect){const{redirect:e}=s;let a="function"==typeof e?e(n):e;return"string"==typeof a&&(a=a.includes("?")||a.includes("#")?a=A(a):{path:a},a.params={}),h({query:n.query,hash:n.hash,params:n.params},a)}}function T(n,s){const e=f=S(n),a=v.value,t=n.state,o=n.force,p=!0===n.replace,l=F(e);if(l)return T(h(A(l),{state:t,force:o,replace:p}),s||e);const i=e;let c;return i.redirectedFrom=s,!o&&function(n,s,e){const a=s.matched.length-1,t=e.matched.length-1;return a>-1&&a===t&&w(s.matched[a],e.matched[t])&&x(s.params,e.params)&&n(s.query)===n(e.query)&&s.hash===e.hash}(r,a,e)&&(c=N(16,{to:i,from:a}),sn(a,a,!0,!1)),(c?Promise.resolve(c):V(i,a)).catch((n=>O(n)?n:Q(n,i,a))).then((n=>{if(n){if(O(n,2))return T(h(A(n.to),{state:t,force:o,replace:p}),s||i)}else n=H(i,a,!0,p,t);return Z(i,a,n),n}))}function I(n,s){const e=D(n,s);return e?Promise.reject(e):Promise.resolve()}function V(n,s){let e;const[a,t,r]=function(n,s){const e=[],a=[],t=[],r=Math.max(s.matched.length,n.matched.length);for(let o=0;o<r;o++){const r=s.matched[o];r&&(n.matched.find((n=>w(n,r)))?a.push(r):e.push(r));const p=n.matched[o];p&&(s.matched.find((n=>w(n,p)))||t.push(p))}return[e,a,t]}(n,s);e=yn(a.reverse(),"beforeRouteLeave",n,s);for(const t of a)t.leaveGuards.forEach((a=>{e.push(fn(a,n,s))}));const o=I.bind(null,n,s);return e.push(o),An(e).then((()=>{e=[];for(const a of p.list())e.push(fn(a,n,s));return e.push(o),An(e)})).then((()=>{e=yn(t,"beforeRouteUpdate",n,s);for(const a of t)a.updateGuards.forEach((a=>{e.push(fn(a,n,s))}));return e.push(o),An(e)})).then((()=>{e=[];for(const a of n.matched)if(a.beforeEnter&&!s.matched.includes(a))if(Array.isArray(a.beforeEnter))for(const t of a.beforeEnter)e.push(fn(t,n,s));else e.push(fn(a.beforeEnter,n,s));return e.push(o),An(e)})).then((()=>(n.matched.forEach((n=>n.enterCallbacks={})),e=yn(r,"beforeRouteEnter",n,s),e.push(o),An(e)))).then((()=>{e=[];for(const a of l.list())e.push(fn(a,n,s));return e.push(o),An(e)})).catch((n=>O(n,8)?n:Promise.reject(n)))}function Z(n,s,e){for(const a of k.list())a(n,s,e)}function H(n,s,e,a,t){const r=D(n,s);if(r)return r;const p=s===L,l=d?history.state:{};e&&(a||p?o.replace(n.fullPath,h({scroll:p&&l&&l.scroll},t)):o.push(n.fullPath,t)),v.value=n,sn(n,s,e,p),nn()}let U;let q,$=xn(),X=xn();function Q(n,s,e){nn(n);const a=X.list();return a.length?a.forEach((a=>a(n,s,e))):console.error(n),Promise.reject(n)}function nn(n){q||(q=!0,U=o.listen(((n,s,e)=>{const a=S(n),t=F(a);if(t)return void T(h(t,{replace:!0}),a).catch(m);f=a;const r=v.value;var p,l;d&&(p=P(r.fullPath,e.delta),l=E(),j.set(p,l)),V(a,r).catch((n=>O(n,12)?n:O(n,2)?(T(n.to,a).then((n=>{O(n,20)&&!e.delta&&e.type===M.pop&&o.go(-1,!1)})).catch(m),Promise.reject()):(e.delta&&o.go(-e.delta,!1),Q(n,a,r)))).then((n=>{(n=n||H(a,r,!1))&&(e.delta?o.go(-e.delta,!1):e.type===M.pop&&O(n,20)&&o.go(-1,!1)),Z(a,r,n)})).catch(m)})),$.list().forEach((([s,e])=>n?e(n):s())),$.reset())}function sn(s,e,t,r){const{scrollBehavior:o}=n;if(!d||!o)return Promise.resolve();const p=!t&&function(n){const s=j.get(n);return j.delete(n),s}(P(s.fullPath,0))||(r||!t)&&history.state&&history.state.scroll||null;return(0,a.Y3)().then((()=>o(s,e,p))).then((n=>n&&function(n){let s;if("el"in n){const e=n.el,a="string"==typeof e&&e.startsWith("#"),t="string"==typeof e?a?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!t)return;s=function(n,s){const e=document.documentElement.getBoundingClientRect(),a=n.getBoundingClientRect();return{behavior:s.behavior,left:a.left-e.left-(s.left||0),top:a.top-e.top-(s.top||0)}}(t,n)}else s=n;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(null!=s.left?s.left:window.pageXOffset,null!=s.top?s.top:window.pageYOffset)}(n))).catch((n=>Q(n,s,e)))}const en=n=>o.go(n);let an;const tn=new Set,rn={currentRoute:v,addRoute:function(n,e){let a,t;return B(n)?(a=s.getRecordMatcher(n),t=e):t=n,s.addRoute(t,a)},removeRoute:function(n){const e=s.getRecordMatcher(n);e&&s.removeRoute(e)},hasRoute:function(n){return!!s.getRecordMatcher(n)},getRoutes:function(){return s.getRoutes().map((n=>n.record))},resolve:S,options:n,push:R,replace:function(n){return R(h(A(n),{replace:!0}))},go:en,back:()=>en(-1),forward:()=>en(1),beforeEach:p.add,beforeResolve:l.add,afterEach:k.add,onError:X.add,isReady:function(){return q&&v.value!==L?Promise.resolve():new Promise(((n,s)=>{$.add([n,s])}))},install(n){n.component("RouterLink",_n),n.component("RouterView",Pn),n.config.globalProperties.$router=this,Object.defineProperty(n.config.globalProperties,"$route",{enumerable:!0,get:()=>(0,t.SU)(v)}),d&&!an&&v.value===L&&(an=!0,R(o.location).catch((n=>{})));const s={};for(const n in L)s[n]=(0,a.Fl)((()=>v.value[n]));n.provide(i,this),n.provide(c,(0,t.qj)(s)),n.provide(u,v);const e=n.unmount;tn.add(n),n.unmount=function(){tn.delete(n),tn.size<1&&(f=L,U&&U(),v.value=L,an=!1,q=!1),e()}}};return rn}function An(n){return n.reduce(((n,s)=>n.then((()=>s()))),Promise.resolve())}function Dn(){return(0,a.f3)(i)}function Rn(){return(0,a.f3)(c)}}}]);