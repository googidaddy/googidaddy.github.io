"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[9648],{1508:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-390f72ee",path:"/blogs/Vue3/Vue3-Team-configure.html",title:"Vue项目团队开发基本配置",lang:"en-US",frontmatter:{title:"Vue项目团队开发基本配置",date:"2020/01/27",tags:["Vue"],categories:["Vue3"],publish:!1},excerpt:"<p><strong>阅读本文大概需要1分钟</strong></p>\n<p><strong>现在大家都知道Vue迎来了3.0时代，但并不代表3.0以前的版本通通过时，公司项目并不是一味追求前瞻、新颖，水可载舟，亦能覆舟，在团队自己打造成熟的基础环境，无疑是团队的自身财产，从人员变动开发等都能带来便利，快速投入生产。</strong></p>\n",headers:[{level:2,title:"封装HTTP基本请求",slug:"封装http基本请求",children:[]},{level:2,title:"基本请求",slug:"基本请求",children:[]}],git:{},filePathRelative:"blogs/Vue3/Vue3-Team-configure.md"}},1718:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<p><strong>阅读本文大概需要1分钟</strong></p><p><strong>现在大家都知道Vue迎来了3.0时代，但并不代表3.0以前的版本通通过时，公司项目并不是一味追求前瞻、新颖，水可载舟，亦能覆舟，在团队自己打造成熟的基础环境，无疑是团队的自身财产，从人员变动开发等都能带来便利，快速投入生产。</strong></p><h2 id="封装http基本请求" tabindex="-1"><a class="header-anchor" href="#封装http基本请求" aria-hidden="true">#</a> 封装HTTP基本请求</h2><h2 id="基本请求" tabindex="-1"><a class="header-anchor" href="#基本请求" aria-hidden="true">#</a> 基本请求</h2><p>选用<code>axios</code> 当出现错误时，首先通过getEnv 获取当前的开发环境，如果是 dev(开发环境下) 只做一个简单的 console.log，非开发环境下，则是上报进行异常监听</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handleError</span> <span class="token punctuation">(</span> <span class="token parameter">error<span class="token punctuation">,</span> msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;dev&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    tools<span class="token punctuation">.</span>log<span class="token punctuation">.</span><span class="token function">danger</span><span class="token punctuation">(</span><span class="token string">&#39;&gt;&gt;&gt;&gt;&gt;&gt; HTTP Error &gt;&gt;&gt;&gt;&gt;&gt;&#39;</span><span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    Store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;logs/push&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">message</span><span class="token operator">:</span> msg<span class="token punctuation">,</span>\n      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;danger&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',6),e={},p=(0,a(3744).Z)(e,[["render",function(n,s){return t}]])}}]);