"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[7075],{1043:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-bf13fb12",path:"/blogs/notes/docker-compose%E5%91%BD%E4%BB%A4%E5%90%88%E9%9B%86.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"docker-compose命令合集",slug:"docker-compose命令合集",children:[{level:3,title:"运行相关",slug:"运行相关",children:[]},{level:3,title:"Sample",slug:"sample",children:[]}]}],git:{},filePathRelative:"blogs/notes/docker-compose命令合集.md"}},4458:(n,s,e)=>{e.r(s),e.d(s,{default:()=>l});const a=(0,e(6252).uE)('<h2 id="docker-compose命令合集" tabindex="-1"><a class="header-anchor" href="#docker-compose命令合集" aria-hidden="true">#</a> docker-compose命令合集</h2><h3 id="运行相关" tabindex="-1"><a class="header-anchor" href="#运行相关" aria-hidden="true">#</a> <strong>运行相关</strong></h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># dir\n|\n - docker-compose.yaml\n - /app\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose up -d\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>-d 后台运行</p><p>--no-recreate 只启动暂停状态的容器</p><p>--force-recreate 强制重新创建容器</p></blockquote><p><strong>如果我更改某项服务（Nginx），只想针对nginx重建容器</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose up nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>重构服务(一般用不着)</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose build service_name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p><code>--force-rm</code> 删除构建过程中的临时容器。</p><p><code>--no-cache</code> 构建镜像过程中不使用 cache（这将加长构建过程）。</p><p><code>--pull</code> 始终尝试通过 pull 来获取更新版本的镜像。</p></blockquote><p><strong>进入容器</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose exec service_name bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>日志</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>docker-compose logs service_name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>-f 实时日志</p></blockquote><h3 id="sample" tabindex="-1"><a class="header-anchor" href="#sample" aria-hidden="true">#</a> Sample</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>\n\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n  <span class="token key atrule">web</span><span class="token punctuation">:</span>\n    <span class="token key atrule">image</span><span class="token punctuation">:</span> helloworld<span class="token punctuation">:</span>latest\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>\n  <span class="token key atrule">api</span><span class="token punctuation">:</span>\n    <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>latest\n    <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> 9090<span class="token punctuation">:</span><span class="token number">9090</span>\n    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> ./.env<span class="token punctuation">:</span>/app/.env\n<span class="token comment"># Local Deployment</span>\n<span class="token comment"># services:</span>\n<span class="token comment">#   web:</span>\n<span class="token comment">#     build:</span>\n<span class="token comment">#\t\tcontext: ./dir</span>\n<span class="token comment">#       dockerfile: Dockerfile-alternate</span>\n<span class="token comment">#     ports:</span>\n<span class="token comment">#       - 3000:3000</span>\n<span class="token comment">#   api:</span>\n<span class="token comment">#     build: ./api</span>\n<span class="token comment">#     ports:</span>\n<span class="token comment">#       - 9090:9090</span>\n<span class="token comment">#     volumes:</span>\n<span class="token comment">#       - ./.env:/app/.env</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong><code>build</code>指定<code>Dockerfile</code>所在的文件夹，可以使用<code>context</code>指定所在文件夹路径和<code>dockerfile</code>指定<code>dockerfile</code>文件名</strong></p><p><strong><code>image</code>镜像名字或者id，本地不存在，会尝试pull</strong></p>',19),p={},l=(0,e(3744).Z)(p,[["render",function(n,s){return a}]])}}]);