"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[5042],{7060:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-c565c5e8",path:"/blogs/NodeJS/excelTOjson.html",title:"NodeJs excel",lang:"en-US",frontmatter:{title:"NodeJs excel",date:"2021/11/01",tags:["NodeJS","json","excel"],categories:["NodeJS"]},excerpt:"",headers:[{level:2,title:"Parse excel to json",slug:"parse-excel-to-json",children:[]}],git:{},filePathRelative:"blogs/NodeJS/excelTOjson.md"}},6819:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="parse-excel-to-json" tabindex="-1"><a class="header-anchor" href="#parse-excel-to-json" aria-hidden="true">#</a> Parse excel to json</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> xlsx <span class="token keyword">from</span> <span class="token string">&#39;xlsx&#39;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">parse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">const</span> excelData <span class="token operator">=</span> xlsx<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>\n\t<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\tname<span class="token punctuation">,</span>\n\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> xlsx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">sheet_to_json</span><span class="token punctuation">(</span>excelData<span class="token punctuation">.</span>Sheets<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;./test.xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>xlsx 是一个处理 excel 的库，是个好工具库。</strong></p><p><strong><code>read</code>/<code>write</code>是处理 buffer 流，<code>readFile</code>/<code>writeFile</code>处理文件（fs.readFileSync 读取）</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> buf <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;sheetjs.xlsx&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;buffer&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token comment">// 等同于下面一句话</span>\n<span class="token keyword">var</span> wb <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;sheetjs.xlsx&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>在项目中处理表单上传情况比较多</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> f <span class="token operator">=</span> files<span class="token punctuation">[</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token keyword">var</span> workbook <span class="token operator">=</span> <span class="token constant">XLSX</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>如果有架设服务器，可以用 cURL 来上传文件测试</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># upload sheetjs.csv and update data</span>\n<span class="token function">curl</span> -X POST -F <span class="token string">&quot;data=@sheetjs.csv&quot;</span> http://localhost:7262/\n<span class="token comment"># download data in SYLK format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?t<span class="token operator">=</span>slk\n<span class="token comment"># read sheetjs.csv from the server directory</span>\n<span class="token function">curl</span> -X POST http://localhost:7262/?f<span class="token operator">=</span>sheetjs.csv\n<span class="token comment"># write sheetjs.xlsb in the XLSB format</span>\n<span class="token function">curl</span> -X GET http://localhost:7262/?f<span class="token operator">=</span>sheetjs.xlsb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',9),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])}}]);